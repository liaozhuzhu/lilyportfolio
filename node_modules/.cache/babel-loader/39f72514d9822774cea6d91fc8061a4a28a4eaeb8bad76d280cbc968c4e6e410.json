{"ast":null,"code":"import\"core-js/modules/es.array.unshift.js\";import\"core-js/modules/es.array.push.js\";import\"core-js/modules/es.regexp.flags.js\";/**\n * @license\n * Video.js 8.0.4 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */import window$1 from'global/window';import document from'global/document';import keycode from'keycode';import safeParseTuple from'safe-json-parse/tuple';import XHR from'@videojs/xhr';import vtt from'videojs-vtt.js';import _resolveUrl from'@videojs/vhs-utils/es/resolve-url.js';import _extends from'@babel/runtime/helpers/extends';import{Parser}from'm3u8-parser';import{DEFAULT_VIDEO_CODEC,DEFAULT_AUDIO_CODEC,parseCodecs,muxerSupportsCodec,browserSupportsCodec,translateLegacyCodec,codecsFromDefault,isAudioCodec,getMimeForCodec}from'@videojs/vhs-utils/es/codecs.js';import{simpleTypeFromSourceType}from'@videojs/vhs-utils/es/media-types.js';import{isArrayBufferView,concatTypedArrays,stringToBytes,toUint8}from'@videojs/vhs-utils/es/byte-helpers';import{generateSidxKey,parseUTCTiming,parse,addSidxSegmentsToPlaylist}from'mpd-parser';import parseSidx from'mux.js/lib/tools/parse-sidx';import{getId3Offset}from'@videojs/vhs-utils/es/id3-helpers';import{detectContainerForBytes,isLikelyFmp4MediaSegment}from'@videojs/vhs-utils/es/containers';import{ONE_SECOND_IN_TS}from'mux.js/lib/utils/clock';var version$6=\"8.0.4\";/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */const hooks_={};/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */const hooks=function(type,fn){hooks_[type]=hooks_[type]||[];if(fn){hooks_[type]=hooks_[type].concat(fn);}return hooks_[type];};/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */const hook=function(type,fn){hooks(type,fn);};/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */const removeHook=function(type,fn){const index=hooks(type).indexOf(fn);if(index<=-1){return false;}hooks_[type]=hooks_[type].slice();hooks_[type].splice(index,1);return true;};/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */const hookOnce=function(type,fn){hooks(type,[].concat(fn).map(original=>{const wrapper=(...args)=>{removeHook(type,wrapper);return original(...args);};return wrapper;}));};/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n */ /**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */const FullscreenApi={prefixed:true};// browser API methods\nconst apiMap=[['requestFullscreen','exitFullscreen','fullscreenElement','fullscreenEnabled','fullscreenchange','fullscreenerror','fullscreen'],// WebKit\n['webkitRequestFullscreen','webkitExitFullscreen','webkitFullscreenElement','webkitFullscreenEnabled','webkitfullscreenchange','webkitfullscreenerror','-webkit-full-screen'],// Mozilla\n['mozRequestFullScreen','mozCancelFullScreen','mozFullScreenElement','mozFullScreenEnabled','mozfullscreenchange','mozfullscreenerror','-moz-full-screen'],// Microsoft\n['msRequestFullscreen','msExitFullscreen','msFullscreenElement','msFullscreenEnabled','MSFullscreenChange','MSFullscreenError','-ms-fullscreen']];const specApi=apiMap[0];let browserApi;// determine the supported set of functions\nfor(let i=0;i<apiMap.length;i++){// check for exitFullscreen function\nif(apiMap[i][1]in document){browserApi=apiMap[i];break;}}// map the browser API names to the spec API names\nif(browserApi){for(let i=0;i<browserApi.length;i++){FullscreenApi[specApi[i]]=browserApi[i];}FullscreenApi.prefixed=browserApi[0]!==specApi[0];}/**\n * @file create-logger.js\n * @module create-logger\n */ // This is the private tracking variable for the logging history.\nlet history=[];/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */const LogByTypeFactory=(name,log)=>(type,level,args)=>{const lvl=log.levels[level];const lvlRegExp=new RegExp(`^(${lvl})$`);if(type!=='log'){// Add the type to the front of the message when it's not \"log\".\nargs.unshift(type.toUpperCase()+':');}// Add console prefix after adding to history.\nargs.unshift(name+':');// Add a clone of the args at this point to history.\nif(history){history.push([].concat(args));// only store 1000 history entries\nconst splice=history.length-1000;history.splice(0,splice>0?splice:0);}// If there's no console then don't try to output messages, but they will\n// still be stored in history.\nif(!window$1.console){return;}// Was setting these once outside of this function, but containing them\n// in the function makes it easier to test cases where console doesn't exist\n// when the module is executed.\nlet fn=window$1.console[type];if(!fn&&type==='debug'){// Certain browsers don't have support for console.debug. For those, we\n// should default to the closest comparable log.\nfn=window$1.console.info||window$1.console.log;}// Bail out if there's no console or if this type is not allowed by the\n// current logging level.\nif(!fn||!lvl||!lvlRegExp.test(type)){return;}fn[Array.isArray(args)?'apply':'call'](window$1.console,args);};function createLogger$1(name){// This is the private tracking variable for logging level.\nlet level='info';// the curried logByType bound to the specific log and history\nlet logByType;/**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */const log=function(...args){logByType('log',level,args);};// This is the logByType helper that the logging methods below use\nlogByType=LogByTypeFactory(name,log);/**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */log.createLogger=subname=>createLogger$1(name+': '+subname);/**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */log.levels={all:'debug|log|warn|error',off:'',debug:'debug|log|warn|error',info:'log|warn|error',warn:'warn|error',error:'error',DEFAULT:level};/**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */log.level=lvl=>{if(typeof lvl==='string'){if(!log.levels.hasOwnProperty(lvl)){throw new Error(`\"${lvl}\" in not a valid log level`);}level=lvl;}return level;};/**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */log.history=()=>history?[].concat(history):[];/**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */log.history.filter=fname=>{return(history||[]).filter(historyItem=>{// if the first item in each historyItem includes `fname`, then it's a match\nreturn new RegExp(`.*${fname}.*`).test(historyItem[0]);});};/**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */log.history.clear=()=>{if(history){history.length=0;}};/**\n   * Disable history tracking if it is currently enabled.\n   */log.history.disable=()=>{if(history!==null){history.length=0;history=null;}};/**\n   * Enable history tracking if it is currently disabled.\n   */log.history.enable=()=>{if(history===null){history=[];}};/**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */log.error=(...args)=>logByType('error',level,args);/**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */log.warn=(...args)=>logByType('warn',level,args);/**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */log.debug=(...args)=>logByType('debug',level,args);return log;}/**\n * @file log.js\n * @module log\n */const log$1=createLogger$1('VIDEOJS');const createLogger=log$1.createLogger;/**\n * @file obj.js\n * @module obj\n */ /**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */ /**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */const toString=Object.prototype.toString;/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */const keys=function(object){return isObject(object)?Object.keys(object):[];};/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */function each(object,fn){keys(object).forEach(key=>fn(object[key],key));}/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */function reduce(object,fn,initial=0){return keys(object).reduce((accum,key)=>fn(accum,object[key],key),initial);}/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */function isObject(value){return!!value&&typeof value==='object';}/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */function isPlain(value){return isObject(value)&&toString.call(value)==='[object Object]'&&value.constructor===Object;}/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */function merge$1(...sources){const result={};sources.forEach(source=>{if(!source){return;}each(source,(value,key)=>{if(!isPlain(value)){result[key]=value;return;}if(!isPlain(result[key])){result[key]={};}result[key]=merge$1(result[key],value);});});return result;}/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it is retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter whether a setter should be allowed or not\n */function defineLazyProperty(obj,key,getValue,setter=true){const set=value=>Object.defineProperty(obj,key,{value,enumerable:true,writable:true});const options={configurable:true,enumerable:true,get(){const value=getValue();set(value);return value;}};if(setter){options.set=set;}return Object.defineProperty(obj,key,options);}var Obj=/*#__PURE__*/Object.freeze({__proto__:null,each:each,reduce:reduce,isObject:isObject,isPlain:isPlain,merge:merge$1,defineLazyProperty:defineLazyProperty});/**\n * @file browser.js\n * @module browser\n */ /**\n * Whether or not this device is an iPod.\n *\n * @static\n * @type {Boolean}\n */let IS_IPOD=false;/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @type {string|null}\n */let IOS_VERSION=null;/**\n * Whether or not this is an Android device.\n *\n * @static\n * @type {Boolean}\n */let IS_ANDROID=false;/**\n * The detected Android version - or `null` if not Android or indeterminable.\n *\n * @static\n * @type {number|string|null}\n */let ANDROID_VERSION;/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @type {Boolean}\n */let IS_FIREFOX=false;/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @type {Boolean}\n */let IS_EDGE=false;/**\n * Whether or not this is any Chromium Browser\n *\n * @static\n * @type {Boolean}\n */let IS_CHROMIUM=false;/**\n * Whether or not this is any Chromium browser that is not Edge.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * Depreacted, as the behaviour to not match Edge was to prevent Legacy Edge's UA matching.\n * IS_CHROMIUM should be used instead.\n * \"Chromium but not Edge\" could be explicitly tested with IS_CHROMIUM && !IS_EDGE\n *\n * @static\n * @deprecated\n * @type {Boolean}\n */let IS_CHROME=false;/**\n * The detected Chromium version - or `null`.\n *\n * @static\n * @type {number|null}\n */let CHROMIUM_VERSION=null;/**\n * The detected Google Chrome version - or `null`.\n * This has always been the _Chromium_ version, i.e. would return on Chromium Edge.\n * Depreacted, use CHROMIUM_VERSION instead.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */let CHROME_VERSION=null;/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */let IE_VERSION=null;/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @type {Boolean}\n */let IS_SAFARI=false;/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @type {Boolean}\n */let IS_WINDOWS=false;/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @type {Boolean}\n */let IS_IPAD=false;/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @type {Boolean}\n */ // The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nlet IS_IPHONE=false;/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */const TOUCH_ENABLED=Boolean(isReal()&&('ontouchstart'in window$1||window$1.navigator.maxTouchPoints||window$1.DocumentTouch&&window$1.document instanceof window$1.DocumentTouch));const UAD=window$1.navigator&&window$1.navigator.userAgentData;if(UAD){// If userAgentData is present, use it instead of userAgent to avoid warnings\n// Currently only implemented on Chromium\n// userAgentData does not expose Android version, so ANDROID_VERSION remains `null`\nIS_ANDROID=UAD.platform==='Android';IS_EDGE=Boolean(UAD.brands.find(b=>b.brand==='Microsoft Edge'));IS_CHROMIUM=Boolean(UAD.brands.find(b=>b.brand==='Chromium'));IS_CHROME=!IS_EDGE&&IS_CHROMIUM;CHROMIUM_VERSION=CHROME_VERSION=(UAD.brands.find(b=>b.brand==='Chromium')||{}).version||null;IS_WINDOWS=UAD.platform==='Windows';}// If the broser is not Chromium, either userAgentData is not present which could be an old Chromium browser,\n//  or it's a browser that has added userAgentData since that we don't have tests for yet. In either case,\n// the checks need to be made agiainst the regular userAgent string.\nif(!IS_CHROMIUM){const USER_AGENT=window$1.navigator&&window$1.navigator.userAgent||'';IS_IPOD=/iPod/i.test(USER_AGENT);IOS_VERSION=function(){const match=USER_AGENT.match(/OS (\\d+)_/i);if(match&&match[1]){return match[1];}return null;}();IS_ANDROID=/Android/i.test(USER_AGENT);ANDROID_VERSION=function(){// This matches Android Major.Minor.Patch versions\n// ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\nconst match=USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);if(!match){return null;}const major=match[1]&&parseFloat(match[1]);const minor=match[2]&&parseFloat(match[2]);if(major&&minor){return parseFloat(match[1]+'.'+match[2]);}else if(major){return major;}return null;}();IS_FIREFOX=/Firefox/i.test(USER_AGENT);IS_EDGE=/Edg/i.test(USER_AGENT);IS_CHROMIUM=/Chrome/i.test(USER_AGENT)||/CriOS/i.test(USER_AGENT);IS_CHROME=!IS_EDGE&&IS_CHROMIUM;CHROMIUM_VERSION=CHROME_VERSION=function(){const match=USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);if(match&&match[2]){return parseFloat(match[2]);}return null;}();IE_VERSION=function(){const result=/MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);let version=result&&parseFloat(result[1]);if(!version&&/Trident\\/7.0/i.test(USER_AGENT)&&/rv:11.0/.test(USER_AGENT)){// IE 11 has a different user agent string than other IE versions\nversion=11.0;}return version;}();IS_SAFARI=/Safari/i.test(USER_AGENT)&&!IS_CHROME&&!IS_ANDROID&&!IS_EDGE;IS_WINDOWS=/Windows/i.test(USER_AGENT);IS_IPAD=/iPad/i.test(USER_AGENT)||IS_SAFARI&&TOUCH_ENABLED&&!/iPhone/i.test(USER_AGENT);IS_IPHONE=/iPhone/i.test(USER_AGENT)&&!IS_IPAD;}/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */const IS_IOS=IS_IPHONE||IS_IPAD||IS_IPOD;/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */const IS_ANY_SAFARI=(IS_SAFARI||IS_IOS)&&!IS_CHROME;var browser=/*#__PURE__*/Object.freeze({__proto__:null,get IS_IPOD(){return IS_IPOD;},get IOS_VERSION(){return IOS_VERSION;},get IS_ANDROID(){return IS_ANDROID;},get ANDROID_VERSION(){return ANDROID_VERSION;},get IS_FIREFOX(){return IS_FIREFOX;},get IS_EDGE(){return IS_EDGE;},get IS_CHROMIUM(){return IS_CHROMIUM;},get IS_CHROME(){return IS_CHROME;},get CHROMIUM_VERSION(){return CHROMIUM_VERSION;},get CHROME_VERSION(){return CHROME_VERSION;},get IE_VERSION(){return IE_VERSION;},get IS_SAFARI(){return IS_SAFARI;},get IS_WINDOWS(){return IS_WINDOWS;},get IS_IPAD(){return IS_IPAD;},get IS_IPHONE(){return IS_IPHONE;},TOUCH_ENABLED:TOUCH_ENABLED,IS_IOS:IS_IOS,IS_ANY_SAFARI:IS_ANY_SAFARI});/**\n * @file dom.js\n * @module dom\n */ /**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */function isNonBlankString(str){// we use str.trim as it will trim any whitespace characters\n// from the front or back of non-whitespace characters. aka\n// Any string that contains non-whitespace characters will\n// still contain them after `trim` but whitespace only strings\n// will have a length of 0, failing this check.\nreturn typeof str==='string'&&Boolean(str.trim());}/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */function throwIfWhitespace(str){// str.indexOf instead of regex because str.indexOf is faster performance wise.\nif(str.indexOf(' ')>=0){throw new Error('class has illegal whitespace characters');}}/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */function isReal(){// Both document and window will never be undefined thanks to `global`.\nreturn document===window$1.document;}/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */function isEl(value){return isObject(value)&&value.nodeType===1;}/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */function isInFrame(){// We need a try/catch here because Safari will throw errors when attempting\n// to get either `parent` or `self`\ntry{return window$1.parent!==window$1.self;}catch(x){return true;}}/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */function createQuerier(method){return function(selector,context){if(!isNonBlankString(selector)){return document[method](null);}if(isNonBlankString(context)){context=document.querySelector(context);}const ctx=isEl(context)?context:document;return ctx[method]&&ctx[method](selector);};}/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */function createEl(tagName='div',properties={},attributes={},content){const el=document.createElement(tagName);Object.getOwnPropertyNames(properties).forEach(function(propName){const val=properties[propName];// Handle textContent since it's not supported everywhere and we have a\n// method for it.\nif(propName==='textContent'){textContent(el,val);}else if(el[propName]!==val||propName==='tabIndex'){el[propName]=val;}});Object.getOwnPropertyNames(attributes).forEach(function(attrName){el.setAttribute(attrName,attributes[attrName]);});if(content){appendContent(el,content);}return el;}/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */function textContent(el,text){if(typeof el.textContent==='undefined'){el.innerText=text;}else{el.textContent=text;}return el;}/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */function prependTo(child,parent){if(parent.firstChild){parent.insertBefore(child,parent.firstChild);}else{parent.appendChild(child);}}/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */function hasClass(element,classToCheck){throwIfWhitespace(classToCheck);return element.classList.contains(classToCheck);}/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {...string} classesToAdd\n *         One or more class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */function addClass(element,...classesToAdd){element.classList.add(...classesToAdd.reduce((prev,current)=>prev.concat(current.split(/\\s+/)),[]));return element;}/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {...string} classesToRemove\n *         One or more class name to remove.\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */function removeClass(element,...classesToRemove){// Protect in case the player gets disposed\nif(!element){log$1.warn(\"removeClass was called with an element that doesn't exist\");return null;}element.classList.remove(...classesToRemove.reduce((prev,current)=>prev.concat(current.split(/\\s+/)),[]));return element;}/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */ /**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */function toggleClass(element,classToToggle,predicate){if(typeof predicate==='function'){predicate=predicate(element,classToToggle);}if(typeof predicate!=='boolean'){predicate=undefined;}classToToggle.split(/\\s+/).forEach(className=>element.classList.toggle(className,predicate));return element;}/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */function setAttributes(el,attributes){Object.getOwnPropertyNames(attributes).forEach(function(attrName){const attrValue=attributes[attrName];if(attrValue===null||typeof attrValue==='undefined'||attrValue===false){el.removeAttribute(attrName);}else{el.setAttribute(attrName,attrValue===true?'':attrValue);}});}/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */function getAttributes(tag){const obj={};// known boolean attributes\n// we can check for matching boolean properties, but not all browsers\n// and not all tags know about these attributes, so, we still want to check them manually\nconst knownBooleans=','+'autoplay,controls,playsinline,loop,muted,default,defaultMuted'+',';if(tag&&tag.attributes&&tag.attributes.length>0){const attrs=tag.attributes;for(let i=attrs.length-1;i>=0;i--){const attrName=attrs[i].name;let attrVal=attrs[i].value;// check for known booleans\n// the matching element property will return a value for typeof\nif(typeof tag[attrName]==='boolean'||knownBooleans.indexOf(','+attrName+',')!==-1){// the value of an included boolean attribute is typically an empty\n// string ('') which would equal false if we just check for a false value.\n// we also don't want support bad code like autoplay='false'\nattrVal=attrVal!==null?true:false;}obj[attrName]=attrVal;}}return obj;}/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */function getAttribute(el,attribute){return el.getAttribute(attribute);}/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */function setAttribute(el,attribute,value){el.setAttribute(attribute,value);}/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */function removeAttribute(el,attribute){el.removeAttribute(attribute);}/**\n * Attempt to block the ability to select text.\n */function blockTextSelection(){document.body.focus();document.onselectstart=function(){return false;};}/**\n * Turn off text selection blocking.\n */function unblockTextSelection(){document.onselectstart=function(){return true;};}/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */function getBoundingClientRect(el){if(el&&el.getBoundingClientRect&&el.parentNode){const rect=el.getBoundingClientRect();const result={};['bottom','height','left','right','top','width'].forEach(k=>{if(rect[k]!==undefined){result[k]=rect[k];}});if(!result.height){result.height=parseFloat(computedStyle(el,'height'));}if(!result.width){result.width=parseFloat(computedStyle(el,'width'));}return result;}}/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */ /**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */function findPosition(el){if(!el||el&&!el.offsetParent){return{left:0,top:0,width:0,height:0};}const width=el.offsetWidth;const height=el.offsetHeight;let left=0;let top=0;while(el.offsetParent&&el!==document[FullscreenApi.fullscreenElement]){left+=el.offsetLeft;top+=el.offsetTop;el=el.offsetParent;}return{left,top,width,height};}/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */ /**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */function getPointerPosition(el,event){const translated={x:0,y:0};if(IS_IOS){let item=el;while(item&&item.nodeName.toLowerCase()!=='html'){const transform=computedStyle(item,'transform');if(/^matrix/.test(transform)){const values=transform.slice(7,-1).split(/,\\s/).map(Number);translated.x+=values[4];translated.y+=values[5];}else if(/^matrix3d/.test(transform)){const values=transform.slice(9,-1).split(/,\\s/).map(Number);translated.x+=values[12];translated.y+=values[13];}item=item.parentNode;}}const position={};const boxTarget=findPosition(event.target);const box=findPosition(el);const boxW=box.width;const boxH=box.height;let offsetY=event.offsetY-(box.top-boxTarget.top);let offsetX=event.offsetX-(box.left-boxTarget.left);if(event.changedTouches){offsetX=event.changedTouches[0].pageX-box.left;offsetY=event.changedTouches[0].pageY+box.top;if(IS_IOS){offsetX-=translated.x;offsetY-=translated.y;}}position.y=1-Math.max(0,Math.min(1,offsetY/boxH));position.x=Math.max(0,Math.min(1,offsetX/boxW));return position;}/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */function isTextNode(value){return isObject(value)&&value.nodeType===3;}/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */function emptyEl(el){while(el.firstChild){el.removeChild(el.firstChild);}return el;}/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */ /**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */function normalizeContent(content){// First, invoke content if it is a function. If it produces an array,\n// that needs to happen before normalization.\nif(typeof content==='function'){content=content();}// Next up, normalize to an array, so one or many items can be normalized,\n// filtered, and returned.\nreturn(Array.isArray(content)?content:[content]).map(value=>{// First, invoke value if it is a function to produce a new value,\n// which will be subsequently normalized to a Node of some kind.\nif(typeof value==='function'){value=value();}if(isEl(value)||isTextNode(value)){return value;}if(typeof value==='string'&&/\\S/.test(value)){return document.createTextNode(value);}}).filter(value=>value);}/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */function appendContent(el,content){normalizeContent(content).forEach(node=>el.appendChild(node));return el;}/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */function insertContent(el,content){return appendContent(emptyEl(el),content);}/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */function isSingleLeftClick(event){// Note: if you create something draggable, be sure to\n// call it on both `mousedown` and `mousemove` event,\n// otherwise `mousedown` should be enough for a button\nif(event.button===undefined&&event.buttons===undefined){// Why do we need `buttons` ?\n// Because, middle mouse sometimes have this:\n// e.button === 0 and e.buttons === 4\n// Furthermore, we want to prevent combination click, something like\n// HOLD middlemouse then left click, that would be\n// e.button === 0, e.buttons === 5\n// just `button` is not gonna work\n// Alright, then what this block does ?\n// this is for chrome `simulate mobile devices`\n// I want to support this as well\nreturn true;}if(event.button===0&&event.buttons===undefined){// Touch screen, sometimes on some specific device, `buttons`\n// doesn't have anything (safari on ios, blackberry...)\nreturn true;}// `mouseup` event on a single left click has\n// `button` and `buttons` equal to 0\nif(event.type==='mouseup'&&event.button===0&&event.buttons===0){return true;}if(event.button!==0||event.buttons!==1){// This is the reason we have those if else block above\n// if any special case we can catch and let it slide\n// we do it above, when get to here, this definitely\n// is-not-left-click\nreturn false;}return true;}/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */const $=createQuerier('querySelector');/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */const $$=createQuerier('querySelectorAll');/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */function computedStyle(el,prop){if(!el||!prop){return'';}if(typeof window$1.getComputedStyle==='function'){let computedStyleValue;try{computedStyleValue=window$1.getComputedStyle(el);}catch(e){return'';}return computedStyleValue?computedStyleValue.getPropertyValue(prop)||computedStyleValue[prop]:'';}return'';}var Dom=/*#__PURE__*/Object.freeze({__proto__:null,isReal:isReal,isEl:isEl,isInFrame:isInFrame,createEl:createEl,textContent:textContent,prependTo:prependTo,hasClass:hasClass,addClass:addClass,removeClass:removeClass,toggleClass:toggleClass,setAttributes:setAttributes,getAttributes:getAttributes,getAttribute:getAttribute,setAttribute:setAttribute,removeAttribute:removeAttribute,blockTextSelection:blockTextSelection,unblockTextSelection:unblockTextSelection,getBoundingClientRect:getBoundingClientRect,findPosition:findPosition,getPointerPosition:getPointerPosition,isTextNode:isTextNode,emptyEl:emptyEl,normalizeContent:normalizeContent,appendContent:appendContent,insertContent:insertContent,isSingleLeftClick:isSingleLeftClick,$:$,$$:$$,computedStyle:computedStyle});/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */let _windowLoaded=false;let videojs$1;/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */const autoSetup=function(){if(videojs$1.options.autoSetup===false){return;}const vids=Array.prototype.slice.call(document.getElementsByTagName('video'));const audios=Array.prototype.slice.call(document.getElementsByTagName('audio'));const divs=Array.prototype.slice.call(document.getElementsByTagName('video-js'));const mediaEls=vids.concat(audios,divs);// Check if any media elements exist\nif(mediaEls&&mediaEls.length>0){for(let i=0,e=mediaEls.length;i<e;i++){const mediaEl=mediaEls[i];// Check if element exists, has getAttribute func.\nif(mediaEl&&mediaEl.getAttribute){// Make sure this player hasn't already been set up.\nif(mediaEl.player===undefined){const options=mediaEl.getAttribute('data-setup');// Check if data-setup attr exists.\n// We only auto-setup if they've added the data-setup attr.\nif(options!==null){// Create new video.js instance.\nvideojs$1(mediaEl);}}// If getAttribute isn't defined, we need to wait for the DOM.\n}else{autoSetupTimeout(1);break;}}// No videos were found, so keep looping unless page is finished loading.\n}else if(!_windowLoaded){autoSetupTimeout(1);}};/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */function autoSetupTimeout(wait,vjs){// Protect against breakage in non-browser environments\nif(!isReal()){return;}if(vjs){videojs$1=vjs;}window$1.setTimeout(autoSetup,wait);}/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */function setWindowLoaded(){_windowLoaded=true;window$1.removeEventListener('load',setWindowLoaded);}if(isReal()){if(document.readyState==='complete'){setWindowLoaded();}else{/**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */window$1.addEventListener('load',setWindowLoaded);}}/**\n * @file stylesheet.js\n * @module stylesheet\n */ /**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */const createStyleElement=function(className){const style=document.createElement('style');style.className=className;return style;};/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */const setTextContent=function(el,content){if(el.styleSheet){el.styleSheet.cssText=content;}else{el.textContent=content;}};/**\n * @file dom-data.js\n * @module dom-data\n */ /**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */var DomData=new WeakMap();/**\n * @file guid.js\n * @module guid\n */ // Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nconst _initialGuid=3;/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */let _guid=_initialGuid;/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */function newGUID(){return _guid++;}/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */ /**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */function _cleanUpEvents(elem,type){if(!DomData.has(elem)){return;}const data=DomData.get(elem);// Remove the events of a particular type if there are none left\nif(data.handlers[type].length===0){delete data.handlers[type];// data.handlers[type] = null;\n// Setting to null was causing an error with data.handlers\n// Remove the meta-handler from the element\nif(elem.removeEventListener){elem.removeEventListener(type,data.dispatcher,false);}else if(elem.detachEvent){elem.detachEvent('on'+type,data.dispatcher);}}// Remove the events object if there are no types left\nif(Object.getOwnPropertyNames(data.handlers).length<=0){delete data.handlers;delete data.dispatcher;delete data.disabled;}// Finally remove the element data if there is no data left\nif(Object.getOwnPropertyNames(data).length===0){DomData.delete(elem);}}/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */function _handleMultipleEvents(fn,elem,types,callback){types.forEach(function(type){// Call the event method for each one of the types\nfn(elem,type,callback);});}/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */function fixEvent(event){if(event.fixed_){return event;}function returnTrue(){return true;}function returnFalse(){return false;}// Test if fixing up is needed\n// Used to check if !event.stopPropagation instead of isPropagationStopped\n// But native events return true for stopPropagation, but don't have\n// other expected methods like isPropagationStopped. Seems to be a problem\n// with the Javascript Ninja code. So we're just overriding all events now.\nif(!event||!event.isPropagationStopped||!event.isImmediatePropagationStopped){const old=event||window$1.event;event={};// Clone the old object so that we can modify the values event = {};\n// IE8 Doesn't like when you mess with native event properties\n// Firefox returns false for event.hasOwnProperty('type') and other props\n//  which makes copying more difficult.\n// TODO: Probably best to create a whitelist of event props\nfor(const key in old){// Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n// Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n// and webkitMovementX/Y\n// Lighthouse complains if Event.path is copied\nif(key!=='layerX'&&key!=='layerY'&&key!=='keyLocation'&&key!=='webkitMovementX'&&key!=='webkitMovementY'&&key!=='path'){// Chrome 32+ warns if you try to copy deprecated returnValue, but\n// we still want to if preventDefault isn't supported (IE8).\nif(!(key==='returnValue'&&old.preventDefault)){event[key]=old[key];}}}// The event occurred on this element\nif(!event.target){event.target=event.srcElement||document;}// Handle which other element the event is related to\nif(!event.relatedTarget){event.relatedTarget=event.fromElement===event.target?event.toElement:event.fromElement;}// Stop the default browser action\nevent.preventDefault=function(){if(old.preventDefault){old.preventDefault();}event.returnValue=false;old.returnValue=false;event.defaultPrevented=true;};event.defaultPrevented=false;// Stop the event from bubbling\nevent.stopPropagation=function(){if(old.stopPropagation){old.stopPropagation();}event.cancelBubble=true;old.cancelBubble=true;event.isPropagationStopped=returnTrue;};event.isPropagationStopped=returnFalse;// Stop the event from bubbling and executing other handlers\nevent.stopImmediatePropagation=function(){if(old.stopImmediatePropagation){old.stopImmediatePropagation();}event.isImmediatePropagationStopped=returnTrue;event.stopPropagation();};event.isImmediatePropagationStopped=returnFalse;// Handle mouse position\nif(event.clientX!==null&&event.clientX!==undefined){const doc=document.documentElement;const body=document.body;event.pageX=event.clientX+(doc&&doc.scrollLeft||body&&body.scrollLeft||0)-(doc&&doc.clientLeft||body&&body.clientLeft||0);event.pageY=event.clientY+(doc&&doc.scrollTop||body&&body.scrollTop||0)-(doc&&doc.clientTop||body&&body.clientTop||0);}// Handle key presses\nevent.which=event.charCode||event.keyCode;// Fix button for mouse clicks:\n// 0 == left; 1 == middle; 2 == right\nif(event.button!==null&&event.button!==undefined){// The following is disabled because it does not pass videojs-standard\n// and... yikes.\n/* eslint-disable */event.button=event.button&1?0:event.button&4?1:event.button&2?2:0;/* eslint-enable */}}event.fixed_=true;// Returns fixed-up instance\nreturn event;}/**\n * Whether passive event listeners are supported\n */let _supportsPassive;const supportsPassive=function(){if(typeof _supportsPassive!=='boolean'){_supportsPassive=false;try{const opts=Object.defineProperty({},'passive',{get(){_supportsPassive=true;}});window$1.addEventListener('test',null,opts);window$1.removeEventListener('test',null,opts);}catch(e){// disregard\n}}return _supportsPassive;};/**\n * Touch events Chrome expects to be passive\n */const passiveEvents=['touchstart','touchmove'];/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */function on(elem,type,fn){if(Array.isArray(type)){return _handleMultipleEvents(on,elem,type,fn);}if(!DomData.has(elem)){DomData.set(elem,{});}const data=DomData.get(elem);// We need a place to store all our handler data\nif(!data.handlers){data.handlers={};}if(!data.handlers[type]){data.handlers[type]=[];}if(!fn.guid){fn.guid=newGUID();}data.handlers[type].push(fn);if(!data.dispatcher){data.disabled=false;data.dispatcher=function(event,hash){if(data.disabled){return;}event=fixEvent(event);const handlers=data.handlers[event.type];if(handlers){// Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\nconst handlersCopy=handlers.slice(0);for(let m=0,n=handlersCopy.length;m<n;m++){if(event.isImmediatePropagationStopped()){break;}else{try{handlersCopy[m].call(elem,event,hash);}catch(e){log$1.error(e);}}}}};}if(data.handlers[type].length===1){if(elem.addEventListener){let options=false;if(supportsPassive()&&passiveEvents.indexOf(type)>-1){options={passive:true};}elem.addEventListener(type,data.dispatcher,options);}else if(elem.attachEvent){elem.attachEvent('on'+type,data.dispatcher);}}}/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */function off(elem,type,fn){// Don't want to add a cache object through getElData if not needed\nif(!DomData.has(elem)){return;}const data=DomData.get(elem);// If no events exist, nothing to unbind\nif(!data.handlers){return;}if(Array.isArray(type)){return _handleMultipleEvents(off,elem,type,fn);}// Utility function\nconst removeType=function(el,t){data.handlers[t]=[];_cleanUpEvents(el,t);};// Are we removing all bound events?\nif(type===undefined){for(const t in data.handlers){if(Object.prototype.hasOwnProperty.call(data.handlers||{},t)){removeType(elem,t);}}return;}const handlers=data.handlers[type];// If no handlers exist, nothing to unbind\nif(!handlers){return;}// If no listener was provided, remove all listeners for type\nif(!fn){removeType(elem,type);return;}// We're only removing a single handler\nif(fn.guid){for(let n=0;n<handlers.length;n++){if(handlers[n].guid===fn.guid){handlers.splice(n--,1);}}}_cleanUpEvents(elem,type);}/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */function trigger(elem,event,hash){// Fetches element data and a reference to the parent (for bubbling).\n// Don't want to add a data object to cache for every parent,\n// so checking hasElData first.\nconst elemData=DomData.has(elem)?DomData.get(elem):{};const parent=elem.parentNode||elem.ownerDocument;// type = event.type || event,\n// handler;\n// If an event name was passed as a string, creates an event out of it\nif(typeof event==='string'){event={type:event,target:elem};}else if(!event.target){event.target=elem;}// Normalizes the event properties.\nevent=fixEvent(event);// If the passed element has a dispatcher, executes the established handlers.\nif(elemData.dispatcher){elemData.dispatcher.call(elem,event,hash);}// Unless explicitly stopped or the event does not bubble (e.g. media events)\n// recursively calls this function to bubble the event up the DOM.\nif(parent&&!event.isPropagationStopped()&&event.bubbles===true){trigger.call(null,parent,event,hash);// If at the top of the DOM, triggers the default action unless disabled.\n}else if(!parent&&!event.defaultPrevented&&event.target&&event.target[event.type]){if(!DomData.has(event.target)){DomData.set(event.target,{});}const targetData=DomData.get(event.target);// Checks if the target has a default action for this event.\nif(event.target[event.type]){// Temporarily disables event dispatching on the target as we have already executed the handler.\ntargetData.disabled=true;// Executes the default action.\nif(typeof event.target[event.type]==='function'){event.target[event.type]();}// Re-enables event dispatching.\ntargetData.disabled=false;}}// Inform the triggerer if the default was prevented by returning false\nreturn!event.defaultPrevented;}/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */function one(elem,type,fn){if(Array.isArray(type)){return _handleMultipleEvents(one,elem,type,fn);}const func=function(){off(elem,type,func);fn.apply(this,arguments);};// copy the guid to the new function so it can removed using the original function's ID\nfunc.guid=fn.guid=fn.guid||newGUID();on(elem,type,func);}/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */function any(elem,type,fn){const func=function(){off(elem,type,func);fn.apply(this,arguments);};// copy the guid to the new function so it can removed using the original function's ID\nfunc.guid=fn.guid=fn.guid||newGUID();// multiple ons, but one off for everything\non(elem,type,func);}var Events=/*#__PURE__*/Object.freeze({__proto__:null,fixEvent:fixEvent,on:on,off:off,trigger:trigger,one:one,any:any});/**\n * @file fn.js\n * @module fn\n */const UPDATE_REFRESH_INTERVAL=30;/**\n * A private, internal-only function for changing the context of a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @private\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */const bind_=function(context,fn,uid){// Make sure the function has a unique ID\nif(!fn.guid){fn.guid=newGUID();}// Create the new function that changes the context\nconst bound=fn.bind(context);// Allow for the ability to individualize this function\n// Needed in the case where multiple objects might share the same prototype\n// IF both items add an event listener with the same function, then you try to remove just one\n// it will remove both because they both have the same guid.\n// when using this, you need to use the bind method when you remove the listener as well.\n// currently used in text tracks\nbound.guid=uid?uid+'_'+fn.guid:fn.guid;return bound;};/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */const throttle=function(fn,wait){let last=window$1.performance.now();const throttled=function(...args){const now=window$1.performance.now();if(now-last>=wait){fn(...args);last=now;}};return throttled;};/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */const debounce=function(func,wait,immediate,context=window$1){let timeout;const cancel=()=>{context.clearTimeout(timeout);timeout=null;};/* eslint-disable consistent-this */const debounced=function(){const self=this;const args=arguments;let later=function(){timeout=null;later=null;if(!immediate){func.apply(self,args);}};if(!timeout&&immediate){func.apply(self,args);}context.clearTimeout(timeout);timeout=context.setTimeout(later,wait);};/* eslint-enable consistent-this */debounced.cancel=cancel;return debounced;};var Fn=/*#__PURE__*/Object.freeze({__proto__:null,UPDATE_REFRESH_INTERVAL:UPDATE_REFRESH_INTERVAL,bind_:bind_,throttle:throttle,debounce:debounce});/**\n * @file src/js/event-target.js\n */let EVENT_MAP;/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */class EventTarget$2{/**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to call with `EventTarget`s\n   */on(type,fn){// Remove the addEventListener alias before calling Events.on\n// so we don't get into an infinite type loop\nconst ael=this.addEventListener;this.addEventListener=()=>{};on(this,type,fn);this.addEventListener=ael;}/**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to remove.\n   */off(type,fn){off(this,type,fn);}/**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to be called once for each event name.\n   */one(type,fn){// Remove the addEventListener aliasing Events.on\n// so we don't get into an infinite type loop\nconst ael=this.addEventListener;this.addEventListener=()=>{};one(this,type,fn);this.addEventListener=ael;}any(type,fn){// Remove the addEventListener aliasing Events.on\n// so we don't get into an infinite type loop\nconst ael=this.addEventListener;this.addEventListener=()=>{};any(this,type,fn);this.addEventListener=ael;}/**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */trigger(event){const type=event.type||event;// deprecation\n// In a future version we should default target to `this`\n// similar to how we default the target to `elem` in\n// `Events.trigger`. Right now the default `target` will be\n// `document` due to the `Event.fixEvent` call.\nif(typeof event==='string'){event={type};}event=fixEvent(event);if(this.allowedEvents_[type]&&this['on'+type]){this['on'+type](event);}trigger(this,event);}queueTrigger(event){// only set up EVENT_MAP if it'll be used\nif(!EVENT_MAP){EVENT_MAP=new Map();}const type=event.type||event;let map=EVENT_MAP.get(this);if(!map){map=new Map();EVENT_MAP.set(this,map);}const oldTimeout=map.get(type);map.delete(type);window$1.clearTimeout(oldTimeout);const timeout=window$1.setTimeout(()=>{map.delete(type);// if we cleared out all timeouts for the current target, delete its map\nif(map.size===0){map=null;EVENT_MAP.delete(this);}this.trigger(event);},0);map.set(type,timeout);}}/**\n * A Custom DOM event.\n *\n * @typedef {EventTarget} Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */ /**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */ /**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */EventTarget$2.prototype.allowedEvents_={};/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */EventTarget$2.prototype.addEventListener=EventTarget$2.prototype.on;/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */EventTarget$2.prototype.removeEventListener=EventTarget$2.prototype.off;/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */EventTarget$2.prototype.dispatchEvent=EventTarget$2.prototype.trigger;/**\n * @file mixins/evented.js\n * @module evented\n */const objName=obj=>{if(typeof obj.name==='function'){return obj.name();}if(typeof obj.name==='string'){return obj.name;}if(obj.name_){return obj.name_;}if(obj.constructor&&obj.constructor.name){return obj.constructor.name;}return typeof obj;};/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */const isEvented=object=>object instanceof EventTarget$2||!!object.eventBusEl_&&['on','one','off','trigger'].every(k=>typeof object[k]==='function');/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */const addEventedCallback=(target,callback)=>{if(isEvented(target)){callback();}else{if(!target.eventedCallbacks){target.eventedCallbacks=[];}target.eventedCallbacks.push(callback);}};/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */const isValidEventType=type=>// The regex here verifies that the `type` contains at least one non-\n// whitespace character.\ntypeof type==='string'&&/\\S/.test(type)||Array.isArray(type)&&!!type.length;/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */const validateTarget=(target,obj,fnName)=>{if(!target||!target.nodeName&&!isEvented(target)){throw new Error(`Invalid target for ${objName(obj)}#${fnName}; must be a DOM node or evented object.`);}};/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n *\n * @param  {Object} obj\n*         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */const validateEventType=(type,obj,fnName)=>{if(!isValidEventType(type)){throw new Error(`Invalid event type for ${objName(obj)}#${fnName}; must be a non-empty string or array.`);}};/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */const validateListener=(listener,obj,fnName)=>{if(typeof listener!=='function'){throw new Error(`Invalid listener for ${objName(obj)}#${fnName}; must be a function.`);}};/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */const normalizeListenArgs=(self,args,fnName)=>{// If the number of arguments is less than 3, the target is always the\n// evented object itself.\nconst isTargetingSelf=args.length<3||args[0]===self||args[0]===self.eventBusEl_;let target;let type;let listener;if(isTargetingSelf){target=self.eventBusEl_;// Deal with cases where we got 3 arguments, but we are still listening to\n// the evented object itself.\nif(args.length>=3){args.shift();}[type,listener]=args;}else{[target,type,listener]=args;}validateTarget(target,self,fnName);validateEventType(type,self,fnName);validateListener(listener,self,fnName);listener=bind_(self,listener);return{isTargetingSelf,target,type,listener};};/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */const listen=(target,method,type,listener)=>{validateTarget(target,target,method);if(target.nodeName){Events[method](target,type,listener);}else{target[method](type,listener);}};/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */const EventedMixin={/**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */on(...args){const{isTargetingSelf,target,type,listener}=normalizeListenArgs(this,args,'on');listen(target,'on',type,listener);// If this object is listening to another evented object.\nif(!isTargetingSelf){// If this object is disposed, remove the listener.\nconst removeListenerOnDispose=()=>this.off(target,type,listener);// Use the same function ID as the listener so we can remove it later it\n// using the ID of the original listener.\nremoveListenerOnDispose.guid=listener.guid;// Add a listener to the target's dispose event as well. This ensures\n// that if the target is disposed BEFORE this object, we remove the\n// removal listener that was just added. Otherwise, we create a memory leak.\nconst removeRemoverOnTargetDispose=()=>this.off('dispose',removeListenerOnDispose);// Use the same function ID as the listener so we can remove it later\n// it using the ID of the original listener.\nremoveRemoverOnTargetDispose.guid=listener.guid;listen(this,'on','dispose',removeListenerOnDispose);listen(target,'on','dispose',removeRemoverOnTargetDispose);}},/**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */one(...args){const{isTargetingSelf,target,type,listener}=normalizeListenArgs(this,args,'one');// Targeting this evented object.\nif(isTargetingSelf){listen(target,'one',type,listener);// Targeting another evented object.\n}else{// TODO: This wrapper is incorrect! It should only\n//       remove the wrapper for the event type that called it.\n//       Instead all listners are removed on the first trigger!\n//       see https://github.com/videojs/video.js/issues/5962\nconst wrapper=(...largs)=>{this.off(target,type,wrapper);listener.apply(null,largs);};// Use the same function ID as the listener so we can remove it later\n// it using the ID of the original listener.\nwrapper.guid=listener.guid;listen(target,'one',type,wrapper);}},/**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */any(...args){const{isTargetingSelf,target,type,listener}=normalizeListenArgs(this,args,'any');// Targeting this evented object.\nif(isTargetingSelf){listen(target,'any',type,listener);// Targeting another evented object.\n}else{const wrapper=(...largs)=>{this.off(target,type,wrapper);listener.apply(null,largs);};// Use the same function ID as the listener so we can remove it later\n// it using the ID of the original listener.\nwrapper.guid=listener.guid;listen(target,'any',type,wrapper);}},/**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */off(targetOrType,typeOrListener,listener){// Targeting this evented object.\nif(!targetOrType||isValidEventType(targetOrType)){off(this.eventBusEl_,targetOrType,typeOrListener);// Targeting another evented object.\n}else{const target=targetOrType;const type=typeOrListener;// Fail fast and in a meaningful way!\nvalidateTarget(target,this,'off');validateEventType(type,this,'off');validateListener(listener,this,'off');// Ensure there's at least a guid, even if the function hasn't been used\nlistener=bind_(this,listener);// Remove the dispose listener on this evented object, which was given\n// the same guid as the event listener in on().\nthis.off('dispose',listener);if(target.nodeName){off(target,type,listener);off(target,'dispose',listener);}else if(isEvented(target)){target.off(type,listener);target.off('dispose',listener);}}},/**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */trigger(event,hash){validateTarget(this.eventBusEl_,this,'trigger');const type=event&&typeof event!=='string'?event.type:event;if(!isValidEventType(type)){throw new Error(`Invalid event type for ${objName(this)}#trigger; `+'must be a non-empty string or object with a type key that has a non-empty value.');}return trigger(this.eventBusEl_,event,hash);}};/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */function evented(target,options={}){const{eventBusKey}=options;// Set or create the eventBusEl_.\nif(eventBusKey){if(!target[eventBusKey].nodeName){throw new Error(`The eventBusKey \"${eventBusKey}\" does not refer to an element.`);}target.eventBusEl_=target[eventBusKey];}else{target.eventBusEl_=createEl('span',{className:'vjs-event-bus'});}Object.assign(target,EventedMixin);if(target.eventedCallbacks){target.eventedCallbacks.forEach(callback=>{callback();});}// When any evented object is disposed, it removes all its listeners.\ntarget.on('dispose',()=>{target.off();[target,target.el_,target.eventBusEl_].forEach(function(val){if(val&&DomData.has(val)){DomData.delete(val);}});window$1.setTimeout(()=>{target.eventBusEl_=null;},0);});return target;}/**\n * @file mixins/stateful.js\n * @module stateful\n */ /**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */const StatefulMixin={/**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */state:{},/**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */setState(stateUpdates){// Support providing the `stateUpdates` state as a function.\nif(typeof stateUpdates==='function'){stateUpdates=stateUpdates();}let changes;each(stateUpdates,(value,key)=>{// Record the change if the value is different from what's in the\n// current state.\nif(this.state[key]!==value){changes=changes||{};changes[key]={from:this.state[key],to:value};}this.state[key]=value;});// Only trigger \"statechange\" if there were changes AND we have a trigger\n// function. This allows us to not require that the target object be an\n// evented object.\nif(changes&&isEvented(this)){/**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */this.trigger({changes,type:'statechanged'});}return changes;}};/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */function stateful(target,defaultState){Object.assign(target,StatefulMixin);// This happens after the mixing-in because we need to replace the `state`\n// added in that step.\ntarget.state=Object.assign({},target.state,defaultState);// Auto-bind the `handleStateChanged` method of the target object if it exists.\nif(typeof target.handleStateChanged==='function'&&isEvented(target)){target.on('statechanged',target.handleStateChanged);}return target;}/**\n * @file str.js\n * @module to-lower-case\n */ /**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */const toLowerCase=function(string){if(typeof string!=='string'){return string;}return string.replace(/./,w=>w.toLowerCase());};/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */const toTitleCase$1=function(string){if(typeof string!=='string'){return string;}return string.replace(/./,w=>w.toUpperCase());};/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */const titleCaseEquals=function(str1,str2){return toTitleCase$1(str1)===toTitleCase$1(str2);};var Str=/*#__PURE__*/Object.freeze({__proto__:null,toLowerCase:toLowerCase,toTitleCase:toTitleCase$1,titleCaseEquals:titleCaseEquals});/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */ /**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */class Component$1{/**\n   * A callback that is called when a component is ready. Does not have any\n   * parameters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */ /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of component options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */constructor(player,options,ready){// The component might be the player itself and we can't pass `this` to super\nif(!player&&this.play){this.player_=player=this;// eslint-disable-line\n}else{this.player_=player;}this.isDisposed_=false;// Hold the reference to the parent component via `addChild` method\nthis.parentComponent_=null;// Make a copy of prototype.options_ to protect against overriding defaults\nthis.options_=merge$1({},this.options_);// Updated options with supplied options\noptions=this.options_=merge$1(this.options_,options);// Get ID from options or options element if one is supplied\nthis.id_=options.id||options.el&&options.el.id;// If there was no ID from the options, generate one\nif(!this.id_){// Don't require the player ID function in the case of mock players\nconst id=player&&player.id&&player.id()||'no_player';this.id_=`${id}_component_${newGUID()}`;}this.name_=options.name||null;// Create element if one wasn't provided in options\nif(options.el){this.el_=options.el;}else if(options.createEl!==false){this.el_=this.createEl();}if(options.className&&this.el_){options.className.split(' ').forEach(c=>this.addClass(c));}// if evented is anything except false, we want to mixin in evented\nif(options.evented!==false){// Make this an evented object and use `el_`, if available, as its event bus\nevented(this,{eventBusKey:this.el_?'el_':null});this.handleLanguagechange=this.handleLanguagechange.bind(this);this.on(this.player_,'languagechange',this.handleLanguagechange);}stateful(this,this.constructor.defaultState);this.children_=[];this.childIndex_={};this.childNameIndex_={};this.setTimeoutIds_=new Set();this.setIntervalIds_=new Set();this.rafIds_=new Set();this.namedRafs_=new Map();this.clearingTimersOnDispose_=false;// Add any child components in options\nif(options.initChildren!==false){this.initChildren();}// Don't want to trigger ready here or it will go before init is actually\n// finished for all children that run this constructor\nthis.ready(ready);if(options.reportTouchActivity!==false){this.enableTouchActivity();}}/**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   *\n   * @param {Object} options\n   * @param {Element} options.originalEl element with which to replace player element\n   */dispose(options={}){// Bail out if the component has already been disposed.\nif(this.isDisposed_){return;}if(this.readyQueue_){this.readyQueue_.length=0;}/**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */this.trigger({type:'dispose',bubbles:false});this.isDisposed_=true;// Dispose all children.\nif(this.children_){for(let i=this.children_.length-1;i>=0;i--){if(this.children_[i].dispose){this.children_[i].dispose();}}}// Delete child references\nthis.children_=null;this.childIndex_=null;this.childNameIndex_=null;this.parentComponent_=null;if(this.el_){// Remove element from DOM\nif(this.el_.parentNode){if(options.restoreEl){this.el_.parentNode.replaceChild(options.restoreEl,this.el_);}else{this.el_.parentNode.removeChild(this.el_);}}this.el_=null;}// remove reference to the player after disposing of the element\nthis.player_=null;}/**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */isDisposed(){return Boolean(this.isDisposed_);}/**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */player(){return this.player_;}/**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:obj.merge}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */options(obj){if(!obj){return this.options_;}this.options_=merge$1(this.options_,obj);return this.options_;}/**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */el(){return this.el_;}/**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */createEl(tagName,properties,attributes){return createEl(tagName,properties,attributes);}/**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */localize(string,tokens,defaultValue=string){const code=this.player_.language&&this.player_.language();const languages=this.player_.languages&&this.player_.languages();const language=languages&&languages[code];const primaryCode=code&&code.split('-')[0];const primaryLang=languages&&languages[primaryCode];let localizedString=defaultValue;if(language&&language[string]){localizedString=language[string];}else if(primaryLang&&primaryLang[string]){localizedString=primaryLang[string];}if(tokens){localizedString=localizedString.replace(/\\{(\\d+)\\}/g,function(match,index){const value=tokens[index-1];let ret=value;if(typeof value==='undefined'){ret=match;}return ret;});}return localizedString;}/**\n   * Handles language change for the player in components. Should be overriden by sub-components.\n   *\n   * @abstract\n   */handleLanguagechange(){}/**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */contentEl(){return this.contentEl_||this.el_;}/**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */id(){return this.id_;}/**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */name(){return this.name_;}/**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */children(){return this.children_;}/**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */getChildById(id){return this.childIndex_[id];}/**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */getChild(name){if(!name){return;}return this.childNameIndex_[name];}/**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */getDescendant(...names){// flatten array argument into the main array\nnames=names.reduce((acc,n)=>acc.concat(n),[]);let currentChild=this;for(let i=0;i<names.length;i++){currentChild=currentChild.getChild(names[i]);if(!currentChild||!currentChild.getChild){return;}}return currentChild;}/**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */addChild(child,options={},index=this.children_.length){let component;let componentName;// If child is a string, create component with options\nif(typeof child==='string'){componentName=toTitleCase$1(child);const componentClassName=options.componentClass||componentName;// Set name through options\noptions.name=componentName;// Create a new object & element for this controls set\n// If there's no .player_, this is a player\nconst ComponentClass=Component$1.getComponent(componentClassName);if(!ComponentClass){throw new Error(`Component ${componentClassName} does not exist`);}// data stored directly on the videojs object may be\n// misidentified as a component to retain\n// backwards-compatibility with 4.x. check to make sure the\n// component class can be instantiated.\nif(typeof ComponentClass!=='function'){return null;}component=new ComponentClass(this.player_||this,options);// child is a component instance\n}else{component=child;}if(component.parentComponent_){component.parentComponent_.removeChild(component);}this.children_.splice(index,0,component);component.parentComponent_=this;if(typeof component.id==='function'){this.childIndex_[component.id()]=component;}// If a name wasn't used to create the component, check if we can use the\n// name function of the component\ncomponentName=componentName||component.name&&toTitleCase$1(component.name());if(componentName){this.childNameIndex_[componentName]=component;this.childNameIndex_[toLowerCase(componentName)]=component;}// Add the UI object's element to the container div (box)\n// Having an element is not required\nif(typeof component.el==='function'&&component.el()){// If inserting before a component, insert before that component's element\nlet refNode=null;if(this.children_[index+1]){// Most children are components, but the video tech is an HTML element\nif(this.children_[index+1].el_){refNode=this.children_[index+1].el_;}else if(isEl(this.children_[index+1])){refNode=this.children_[index+1];}}this.contentEl().insertBefore(component.el(),refNode);}// Return so it can stored on parent object if desired.\nreturn component;}/**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */removeChild(component){if(typeof component==='string'){component=this.getChild(component);}if(!component||!this.children_){return;}let childFound=false;for(let i=this.children_.length-1;i>=0;i--){if(this.children_[i]===component){childFound=true;this.children_.splice(i,1);break;}}if(!childFound){return;}component.parentComponent_=null;this.childIndex_[component.id()]=null;this.childNameIndex_[toTitleCase$1(component.name())]=null;this.childNameIndex_[toLowerCase(component.name())]=null;const compEl=component.el();if(compEl&&compEl.parentNode===this.contentEl()){this.contentEl().removeChild(component.el());}}/**\n   * Add and initialize default child `Component`s based upon options.\n   */initChildren(){const children=this.options_.children;if(children){// `this` is `parent`\nconst parentOptions=this.options_;const handleAdd=child=>{const name=child.name;let opts=child.opts;// Allow options for children to be set at the parent options\n// e.g. videojs(id, { controlBar: false });\n// instead of videojs(id, { children: { controlBar: false });\nif(parentOptions[name]!==undefined){opts=parentOptions[name];}// Allow for disabling default components\n// e.g. options['children']['posterImage'] = false\nif(opts===false){return;}// Allow options to be passed as a simple boolean if no configuration\n// is necessary.\nif(opts===true){opts={};}// We also want to pass the original player options\n// to each component as well so they don't need to\n// reach back into the player for options later.\nopts.playerOptions=this.options_.playerOptions;// Create and add the child component.\n// Add a direct reference to the child by name on the parent instance.\n// If two of the same component are used, different names should be supplied\n// for each\nconst newChild=this.addChild(name,opts);if(newChild){this[name]=newChild;}};// Allow for an array of children details to passed in the options\nlet workingChildren;const Tech=Component$1.getComponent('Tech');if(Array.isArray(children)){workingChildren=children;}else{workingChildren=Object.keys(children);}workingChildren// children that are in this.options_ but also in workingChildren  would\n// give us extra children we do not want. So, we want to filter them out.\n.concat(Object.keys(this.options_).filter(function(child){return!workingChildren.some(function(wchild){if(typeof wchild==='string'){return child===wchild;}return child===wchild.name;});})).map(child=>{let name;let opts;if(typeof child==='string'){name=child;opts=children[name]||this.options_[name]||{};}else{name=child.name;opts=child;}return{name,opts};}).filter(child=>{// we have to make sure that child.name isn't in the techOrder since\n// techs are registerd as Components but can't aren't compatible\n// See https://github.com/videojs/video.js/issues/2772\nconst c=Component$1.getComponent(child.opts.componentClass||toTitleCase$1(child.name));return c&&!Tech.isTech(c);}).forEach(handleAdd);}}/**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */buildCSSClass(){// Child classes can include a function that does:\n// return 'CLASS NAME' + this._super();\nreturn'';}/**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @param {Component~ReadyCallback} fn\n   *        Function that gets called when the `Component` is ready.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */ready(fn,sync=false){if(!fn){return;}if(!this.isReady_){this.readyQueue_=this.readyQueue_||[];this.readyQueue_.push(fn);return;}if(sync){fn.call(this);}else{// Call the function asynchronously by default for consistency\nthis.setTimeout(fn,1);}}/**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */triggerReady(){this.isReady_=true;// Ensure ready is triggered asynchronously\nthis.setTimeout(function(){const readyQueue=this.readyQueue_;// Reset Ready Queue\nthis.readyQueue_=[];if(readyQueue&&readyQueue.length>0){readyQueue.forEach(function(fn){fn.call(this);},this);}// Allow for using event listeners also\n/**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */this.trigger('ready');},1);}/**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */$(selector,context){return $(selector,context||this.contentEl());}/**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */$$(selector,context){return $$(selector,context||this.contentEl());}/**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */hasClass(classToCheck){return hasClass(this.el_,classToCheck);}/**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {...string} classesToAdd\n   *        One or more CSS class name to add.\n   */addClass(...classesToAdd){addClass(this.el_,...classesToAdd);}/**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {...string} classesToRemove\n   *        One or more CSS class name to remove.\n   */removeClass(...classesToRemove){removeClass(this.el_,...classesToRemove);}/**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */toggleClass(classToToggle,predicate){toggleClass(this.el_,classToToggle,predicate);}/**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */show(){this.removeClass('vjs-hidden');}/**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */hide(){this.addClass('vjs-hidden');}/**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */lockShowing(){this.addClass('vjs-lock-showing');}/**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */unlockShowing(){this.removeClass('vjs-lock-showing');}/**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */getAttribute(attribute){return getAttribute(this.el_,attribute);}/**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */setAttribute(attribute,value){setAttribute(this.el_,attribute,value);}/**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */removeAttribute(attribute){removeAttribute(this.el_,attribute);}/**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */width(num,skipListeners){return this.dimension('width',num,skipListeners);}/**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */height(num,skipListeners){return this.dimension('height',num,skipListeners);}/**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */dimensions(width,height){// Skip componentresize listeners on width for optimization\nthis.width(width,true);this.height(height);}/**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */dimension(widthOrHeight,num,skipListeners){if(num!==undefined){// Set to zero if null or literally NaN (NaN !== NaN)\nif(num===null||num!==num){num=0;}// Check if using css width/height (% or px) and adjust\nif((''+num).indexOf('%')!==-1||(''+num).indexOf('px')!==-1){this.el_.style[widthOrHeight]=num;}else if(num==='auto'){this.el_.style[widthOrHeight]='';}else{this.el_.style[widthOrHeight]=num+'px';}// skipListeners allows us to avoid triggering the resize event when setting both width and height\nif(!skipListeners){/**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */this.trigger('componentresize');}return;}// Not setting a value, so getting it\n// Make sure element exists\nif(!this.el_){return 0;}// Get dimension value from style\nconst val=this.el_.style[widthOrHeight];const pxIndex=val.indexOf('px');if(pxIndex!==-1){// Return the pixel value with no 'px'\nreturn parseInt(val.slice(0,pxIndex),10);}// No px so using % or no style was set, so falling back to offsetWidth/height\n// If component has display:none, offset will return 0\n// TODO: handle display:none and no dimension style using px\nreturn parseInt(this.el_['offset'+toTitleCase$1(widthOrHeight)],10);}/**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */currentDimension(widthOrHeight){let computedWidthOrHeight=0;if(widthOrHeight!=='width'&&widthOrHeight!=='height'){throw new Error('currentDimension only accepts width or height value');}computedWidthOrHeight=computedStyle(this.el_,widthOrHeight);// remove 'px' from variable and parse as integer\ncomputedWidthOrHeight=parseFloat(computedWidthOrHeight);// if the computed value is still 0, it's possible that the browser is lying\n// and we want to check the offset values.\n// This code also runs wherever getComputedStyle doesn't exist.\nif(computedWidthOrHeight===0||isNaN(computedWidthOrHeight)){const rule=`offset${toTitleCase$1(widthOrHeight)}`;computedWidthOrHeight=this.el_[rule];}return computedWidthOrHeight;}/**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */ /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */currentDimensions(){return{width:this.currentDimension('width'),height:this.currentDimension('height')};}/**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */currentWidth(){return this.currentDimension('width');}/**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */currentHeight(){return this.currentDimension('height');}/**\n   * Set the focus to this component\n   */focus(){this.el_.focus();}/**\n   * Remove the focus from this component\n   */blur(){this.el_.blur();}/**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */handleKeyDown(event){if(this.player_){// We only stop propagation here because we want unhandled events to fall\n// back to the browser. Exclude Tab for focus trapping.\nif(!keycode.isEventKey(event,'Tab')){event.stopPropagation();}this.player_.handleKeyDown(event);}}/**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */handleKeyPress(event){this.handleKeyDown(event);}/**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */emitTapEvents(){// Track the start time so we can determine how long the touch lasted\nlet touchStart=0;let firstTouch=null;// Maximum movement allowed during a touch event to still be considered a tap\n// Other popular libs use anywhere from 2 (hammer.js) to 15,\n// so 10 seems like a nice, round number.\nconst tapMovementThreshold=10;// The maximum length a touch can be while still being considered a tap\nconst touchTimeThreshold=200;let couldBeTap;this.on('touchstart',function(event){// If more than one finger, don't consider treating this as a click\nif(event.touches.length===1){// Copy pageX/pageY from the object\nfirstTouch={pageX:event.touches[0].pageX,pageY:event.touches[0].pageY};// Record start time so we can detect a tap vs. \"touch and hold\"\ntouchStart=window$1.performance.now();// Reset couldBeTap tracking\ncouldBeTap=true;}});this.on('touchmove',function(event){// If more than one finger, don't consider treating this as a click\nif(event.touches.length>1){couldBeTap=false;}else if(firstTouch){// Some devices will throw touchmoves for all but the slightest of taps.\n// So, if we moved only a small distance, this could still be a tap\nconst xdiff=event.touches[0].pageX-firstTouch.pageX;const ydiff=event.touches[0].pageY-firstTouch.pageY;const touchDistance=Math.sqrt(xdiff*xdiff+ydiff*ydiff);if(touchDistance>tapMovementThreshold){couldBeTap=false;}}});const noTap=function(){couldBeTap=false;};// TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\nthis.on('touchleave',noTap);this.on('touchcancel',noTap);// When the touch ends, measure how long it took and trigger the appropriate\n// event\nthis.on('touchend',function(event){firstTouch=null;// Proceed only if the touchmove/leave/cancel event didn't happen\nif(couldBeTap===true){// Measure how long the touch lasted\nconst touchTime=window$1.performance.now()-touchStart;// Make sure the touch was less than the threshold to be considered a tap\nif(touchTime<touchTimeThreshold){// Don't let browser turn this into a click\nevent.preventDefault();/**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */this.trigger('tap');// It may be good to copy the touchend event object and change the\n// type to tap, if the other event properties aren't exact after\n// Events.fixEvent runs (e.g. event.target)\n}}});}/**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */enableTouchActivity(){// Don't continue if the root player doesn't support reporting user activity\nif(!this.player()||!this.player().reportUserActivity){return;}// listener for reporting that the user is active\nconst report=bind_(this.player(),this.player().reportUserActivity);let touchHolding;this.on('touchstart',function(){report();// For as long as the they are touching the device or have their mouse down,\n// we consider them active even if they're not moving their finger or mouse.\n// So we want to continue to update that they are active\nthis.clearInterval(touchHolding);// report at the same interval as activityCheck\ntouchHolding=this.setInterval(report,250);});const touchEnd=function(event){report();// stop the interval that maintains activity if the touch is holding\nthis.clearInterval(touchHolding);};this.on('touchmove',report);this.on('touchend',touchEnd);this.on('touchcancel',touchEnd);}/**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */ /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */setTimeout(fn,timeout){// declare as variables so they are properly available in timeout function\n// eslint-disable-next-line\nvar timeoutId;fn=bind_(this,fn);this.clearTimersOnDispose_();timeoutId=window$1.setTimeout(()=>{if(this.setTimeoutIds_.has(timeoutId)){this.setTimeoutIds_.delete(timeoutId);}fn();},timeout);this.setTimeoutIds_.add(timeoutId);return timeoutId;}/**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */clearTimeout(timeoutId){if(this.setTimeoutIds_.has(timeoutId)){this.setTimeoutIds_.delete(timeoutId);window$1.clearTimeout(timeoutId);}return timeoutId;}/**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */setInterval(fn,interval){fn=bind_(this,fn);this.clearTimersOnDispose_();const intervalId=window$1.setInterval(fn,interval);this.setIntervalIds_.add(intervalId);return intervalId;}/**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */clearInterval(intervalId){if(this.setIntervalIds_.has(intervalId)){this.setIntervalIds_.delete(intervalId);window$1.clearInterval(intervalId);}return intervalId;}/**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */requestAnimationFrame(fn){this.clearTimersOnDispose_();// declare as variables so they are properly available in rAF function\n// eslint-disable-next-line\nvar id;fn=bind_(this,fn);id=window$1.requestAnimationFrame(()=>{if(this.rafIds_.has(id)){this.rafIds_.delete(id);}fn();});this.rafIds_.add(id);return id;}/**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */requestNamedAnimationFrame(name,fn){if(this.namedRafs_.has(name)){return;}this.clearTimersOnDispose_();fn=bind_(this,fn);const id=this.requestAnimationFrame(()=>{fn();if(this.namedRafs_.has(name)){this.namedRafs_.delete(name);}});this.namedRafs_.set(name,id);return name;}/**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */cancelNamedAnimationFrame(name){if(!this.namedRafs_.has(name)){return;}this.cancelAnimationFrame(this.namedRafs_.get(name));this.namedRafs_.delete(name);}/**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */cancelAnimationFrame(id){if(this.rafIds_.has(id)){this.rafIds_.delete(id);window$1.cancelAnimationFrame(id);}return id;}/**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */clearTimersOnDispose_(){if(this.clearingTimersOnDispose_){return;}this.clearingTimersOnDispose_=true;this.one('dispose',()=>{[['namedRafs_','cancelNamedAnimationFrame'],['rafIds_','cancelAnimationFrame'],['setTimeoutIds_','clearTimeout'],['setIntervalIds_','clearInterval']].forEach(([idName,cancelName])=>{// for a `Set` key will actually be the value again\n// so forEach((val, val) =>` but for maps we want to use\n// the key.\nthis[idName].forEach((val,key)=>this[cancelName](key));});this.clearingTimersOnDispose_=false;});}/**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */static registerComponent(name,ComponentToRegister){if(typeof name!=='string'||!name){throw new Error(`Illegal component name, \"${name}\"; must be a non-empty string.`);}const Tech=Component$1.getComponent('Tech');// We need to make sure this check is only done if Tech has been registered.\nconst isTech=Tech&&Tech.isTech(ComponentToRegister);const isComp=Component$1===ComponentToRegister||Component$1.prototype.isPrototypeOf(ComponentToRegister.prototype);if(isTech||!isComp){let reason;if(isTech){reason='techs must be registered using Tech.registerTech()';}else{reason='must be a Component subclass';}throw new Error(`Illegal component, \"${name}\"; ${reason}.`);}name=toTitleCase$1(name);if(!Component$1.components_){Component$1.components_={};}const Player=Component$1.getComponent('Player');if(name==='Player'&&Player&&Player.players){const players=Player.players;const playerNames=Object.keys(players);// If we have players that were disposed, then their name will still be\n// in Players.players. So, we must loop through and verify that the value\n// for each item is not null. This allows registration of the Player component\n// after all players have been disposed or before any were created.\nif(players&&playerNames.length>0&&playerNames.map(pname=>players[pname]).every(Boolean)){throw new Error('Can not register Player component after player has been created.');}}Component$1.components_[name]=ComponentToRegister;Component$1.components_[toLowerCase(name)]=ComponentToRegister;return ComponentToRegister;}/**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   */static getComponent(name){if(!name||!Component$1.components_){return;}return Component$1.components_[name];}}Component$1.registerComponent('Component',Component$1);/**\n * @file time.js\n * @module time\n */ /**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */ /**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */ /**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */function rangeCheck(fnName,index,maxIndex){if(typeof index!=='number'||index<0||index>maxIndex){throw new Error(`Failed to execute '${fnName}' on 'TimeRanges': The index provided (${index}) is non-numeric or out of bounds (0-${maxIndex}).`);}}/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */function getRange(fnName,valueIndex,ranges,rangeIndex){rangeCheck(fnName,rangeIndex,ranges.length-1);return ranges[rangeIndex][valueIndex];}/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */function createTimeRangesObj(ranges){let timeRangesObj;if(ranges===undefined||ranges.length===0){timeRangesObj={length:0,start(){throw new Error('This TimeRanges object is empty');},end(){throw new Error('This TimeRanges object is empty');}};}else{timeRangesObj={length:ranges.length,start:getRange.bind(null,'start',0,ranges),end:getRange.bind(null,'end',1,ranges)};}if(window$1.Symbol&&window$1.Symbol.iterator){timeRangesObj[window$1.Symbol.iterator]=()=>(ranges||[]).values();}return timeRangesObj;}/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */function createTimeRanges$1(start,end){if(Array.isArray(start)){return createTimeRangesObj(start);}else if(start===undefined||end===undefined){return createTimeRangesObj();}return createTimeRangesObj([[start,end]]);}/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */const defaultImplementation=function(seconds,guide){seconds=seconds<0?0:seconds;let s=Math.floor(seconds%60);let m=Math.floor(seconds/60%60);let h=Math.floor(seconds/3600);const gm=Math.floor(guide/60%60);const gh=Math.floor(guide/3600);// handle invalid times\nif(isNaN(seconds)||seconds===Infinity){// '-' is false for all relational operators (e.g. <, >=) so this setting\n// will add the minimum number of fields specified by the guide\nh=m=s='-';}// Check if we need to show hours\nh=h>0||gh>0?h+':':'';// If hours are showing, we may need to add a leading zero.\n// Always show at least one digit of minutes.\nm=((h||gm>=10)&&m<10?'0'+m:m)+':';// Check if leading zero is need for seconds\ns=s<10?'0'+s:s;return h+m+s;};// Internal pointer to the current implementation.\nlet implementation=defaultImplementation;/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */function setFormatTime(customImplementation){implementation=customImplementation;}/**\n * Resets formatTime to the default implementation.\n */function resetFormatTime(){implementation=defaultImplementation;}/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */function formatTime(seconds,guide=seconds){return implementation(seconds,guide);}var Time=/*#__PURE__*/Object.freeze({__proto__:null,createTimeRanges:createTimeRanges$1,createTimeRange:createTimeRanges$1,setFormatTime:setFormatTime,resetFormatTime:resetFormatTime,formatTime:formatTime});/**\n * @file buffer.js\n * @module buffer\n */ /**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */function bufferedPercent(buffered,duration){let bufferedDuration=0;let start;let end;if(!duration){return 0;}if(!buffered||!buffered.length){buffered=createTimeRanges$1(0,0);}for(let i=0;i<buffered.length;i++){start=buffered.start(i);end=buffered.end(i);// buffered end can be bigger than duration by a very small fraction\nif(end>duration){end=duration;}bufferedDuration+=end-start;}return bufferedDuration/duration;}/**\n * @file media-error.js\n */ /**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */function MediaError(value){// Allow redundant calls to this constructor to avoid having `instanceof`\n// checks peppered around the code.\nif(value instanceof MediaError){return value;}if(typeof value==='number'){this.code=value;}else if(typeof value==='string'){// default code is zero, so this is a custom error\nthis.message=value;}else if(isObject(value)){// We assign the `code` property manually because native `MediaError` objects\n// do not expose it as an own/enumerable property of the object.\nif(typeof value.code==='number'){this.code=value.code;}Object.assign(this,value);}if(!this.message){this.message=MediaError.defaultMessages[this.code]||'';}}/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */MediaError.prototype.code=0;/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */MediaError.prototype.message='';/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */MediaError.prototype.status=null;/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */MediaError.errorTypes=['MEDIA_ERR_CUSTOM','MEDIA_ERR_ABORTED','MEDIA_ERR_NETWORK','MEDIA_ERR_DECODE','MEDIA_ERR_SRC_NOT_SUPPORTED','MEDIA_ERR_ENCRYPTED'];/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */MediaError.defaultMessages={1:'You aborted the media playback',2:'A network error caused the media download to fail part-way.',3:'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',4:'The media could not be loaded, either because the server or network failed or because the format is not supported.',5:'The media is encrypted and we do not have the keys to decrypt it.'};// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor(let errNum=0;errNum<MediaError.errorTypes.length;errNum++){MediaError[MediaError.errorTypes[errNum]]=errNum;// values should be accessible on both the class and instance\nMediaError.prototype[MediaError.errorTypes[errNum]]=errNum;}/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */function isPromise(value){return value!==undefined&&value!==null&&typeof value.then==='function';}/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */function silencePromise(value){if(isPromise(value)){value.then(null,e=>{});}}/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */ /**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */const trackToJson_=function(track){const ret=['kind','label','language','id','inBandMetadataTrackDispatchType','mode','src'].reduce((acc,prop,i)=>{if(track[prop]){acc[prop]=track[prop];}return acc;},{cues:track.cues&&Array.prototype.map.call(track.cues,function(cue){return{startTime:cue.startTime,endTime:cue.endTime,text:cue.text,id:cue.id};})});return ret;};/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */const textTracksToJson=function(tech){const trackEls=tech.$$('track');const trackObjs=Array.prototype.map.call(trackEls,t=>t.track);const tracks=Array.prototype.map.call(trackEls,function(trackEl){const json=trackToJson_(trackEl.track);if(trackEl.src){json.src=trackEl.src;}return json;});return tracks.concat(Array.prototype.filter.call(tech.textTracks(),function(track){return trackObjs.indexOf(track)===-1;}).map(trackToJson_));};/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */const jsonToTextTracks=function(json,tech){json.forEach(function(track){const addedTrack=tech.addRemoteTextTrack(track).track;if(!track.src&&track.cues){track.cues.forEach(cue=>addedTrack.addCue(cue));}});return tech.textTracks();};var textTrackConverter={textTracksToJson,jsonToTextTracks,trackToJson_};/**\n * @file modal-dialog.js\n */const MODAL_CLASS_NAME='vjs-modal-dialog';/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */class ModalDialog extends Component$1{/**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */constructor(player,options){super(player,options);this.handleKeyDown_=e=>this.handleKeyDown(e);this.close_=e=>this.close(e);this.opened_=this.hasBeenOpened_=this.hasBeenFilled_=false;this.closeable(!this.options_.uncloseable);this.content(this.options_.content);// Make sure the contentEl is defined AFTER any children are initialized\n// because we only want the contents of the modal in the contentEl\n// (not the UI elements like the close button).\nthis.contentEl_=createEl('div',{className:`${MODAL_CLASS_NAME}-content`},{role:'document'});this.descEl_=createEl('p',{className:`${MODAL_CLASS_NAME}-description vjs-control-text`,id:this.el().getAttribute('aria-describedby')});textContent(this.descEl_,this.description());this.el_.appendChild(this.descEl_);this.el_.appendChild(this.contentEl_);}/**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */createEl(){return super.createEl('div',{className:this.buildCSSClass(),tabIndex:-1},{'aria-describedby':`${this.id()}_description`,'aria-hidden':'true','aria-label':this.label(),'role':'dialog'});}dispose(){this.contentEl_=null;this.descEl_=null;this.previouslyActiveEl_=null;super.dispose();}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){return`${MODAL_CLASS_NAME} vjs-hidden ${super.buildCSSClass()}`;}/**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */label(){return this.localize(this.options_.label||'Modal Window');}/**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */description(){let desc=this.options_.description||this.localize('This is a modal window.');// Append a universal closeability message if the modal is closeable.\nif(this.closeable()){desc+=' '+this.localize('This modal can be closed by pressing the Escape key or activating the close button.');}return desc;}/**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */open(){if(!this.opened_){const player=this.player();/**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */this.trigger('beforemodalopen');this.opened_=true;// Fill content if the modal has never opened before and\n// never been filled.\nif(this.options_.fillAlways||!this.hasBeenOpened_&&!this.hasBeenFilled_){this.fill();}// If the player was playing, pause it and take note of its previously\n// playing state.\nthis.wasPlaying_=!player.paused();if(this.options_.pauseOnOpen&&this.wasPlaying_){player.pause();}this.on('keydown',this.handleKeyDown_);// Hide controls and note if they were enabled.\nthis.hadControls_=player.controls();player.controls(false);this.show();this.conditionalFocus_();this.el().setAttribute('aria-hidden','false');/**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */this.trigger('modalopen');this.hasBeenOpened_=true;}}/**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */opened(value){if(typeof value==='boolean'){this[value?'open':'close']();}return this.opened_;}/**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */close(){if(!this.opened_){return;}const player=this.player();/**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */this.trigger('beforemodalclose');this.opened_=false;if(this.wasPlaying_&&this.options_.pauseOnOpen){player.play();}this.off('keydown',this.handleKeyDown_);if(this.hadControls_){player.controls(true);}this.hide();this.el().setAttribute('aria-hidden','true');/**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */this.trigger('modalclose');this.conditionalBlur_();if(this.options_.temporary){this.dispose();}}/**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */closeable(value){if(typeof value==='boolean'){const closeable=this.closeable_=!!value;let close=this.getChild('closeButton');// If this is being made closeable and has no close button, add one.\nif(closeable&&!close){// The close button should be a child of the modal - not its\n// content element, so temporarily change the content element.\nconst temp=this.contentEl_;this.contentEl_=this.el_;close=this.addChild('closeButton',{controlText:'Close Modal Dialog'});this.contentEl_=temp;this.on(close,'close',this.close_);}// If this is being made uncloseable and has a close button, remove it.\nif(!closeable&&close){this.off(close,'close',this.close_);this.removeChild(close);close.dispose();}}return this.closeable_;}/**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */fill(){this.fillWith(this.content());}/**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */fillWith(content){const contentEl=this.contentEl();const parentEl=contentEl.parentNode;const nextSiblingEl=contentEl.nextSibling;/**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */this.trigger('beforemodalfill');this.hasBeenFilled_=true;// Detach the content element from the DOM before performing\n// manipulation to avoid modifying the live DOM multiple times.\nparentEl.removeChild(contentEl);this.empty();insertContent(contentEl,content);/**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */this.trigger('modalfill');// Re-inject the re-filled content element.\nif(nextSiblingEl){parentEl.insertBefore(contentEl,nextSiblingEl);}else{parentEl.appendChild(contentEl);}// make sure that the close button is last in the dialog DOM\nconst closeButton=this.getChild('closeButton');if(closeButton){parentEl.appendChild(closeButton.el_);}}/**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */empty(){/**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */this.trigger('beforemodalempty');emptyEl(this.contentEl());/**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */this.trigger('modalempty');}/**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */content(value){if(typeof value!=='undefined'){this.content_=value;}return this.content_;}/**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */conditionalFocus_(){const activeEl=document.activeElement;const playerEl=this.player_.el_;this.previouslyActiveEl_=null;if(playerEl.contains(activeEl)||playerEl===activeEl){this.previouslyActiveEl_=activeEl;this.focus();}}/**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */conditionalBlur_(){if(this.previouslyActiveEl_){this.previouslyActiveEl_.focus();this.previouslyActiveEl_=null;}}/**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */handleKeyDown(event){// Do not allow keydowns to reach out of the modal dialog.\nevent.stopPropagation();if(keycode.isEventKey(event,'Escape')&&this.closeable()){event.preventDefault();this.close();return;}// exit early if it isn't a tab key\nif(!keycode.isEventKey(event,'Tab')){return;}const focusableEls=this.focusableEls_();const activeEl=this.el_.querySelector(':focus');let focusIndex;for(let i=0;i<focusableEls.length;i++){if(activeEl===focusableEls[i]){focusIndex=i;break;}}if(document.activeElement===this.el_){focusIndex=0;}if(event.shiftKey&&focusIndex===0){focusableEls[focusableEls.length-1].focus();event.preventDefault();}else if(!event.shiftKey&&focusIndex===focusableEls.length-1){focusableEls[0].focus();event.preventDefault();}}/**\n   * get all focusable elements\n   *\n   * @private\n   */focusableEls_(){const allChildren=this.el_.querySelectorAll('*');return Array.prototype.filter.call(allChildren,child=>{return(child instanceof window$1.HTMLAnchorElement||child instanceof window$1.HTMLAreaElement)&&child.hasAttribute('href')||(child instanceof window$1.HTMLInputElement||child instanceof window$1.HTMLSelectElement||child instanceof window$1.HTMLTextAreaElement||child instanceof window$1.HTMLButtonElement)&&!child.hasAttribute('disabled')||child instanceof window$1.HTMLIFrameElement||child instanceof window$1.HTMLObjectElement||child instanceof window$1.HTMLEmbedElement||child.hasAttribute('tabindex')&&child.getAttribute('tabindex')!==-1||child.hasAttribute('contenteditable');});}}/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */ModalDialog.prototype.options_={pauseOnOpen:true,temporary:true};Component$1.registerComponent('ModalDialog',ModalDialog);/**\n * @file track-list.js\n */ /**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */class TrackList extends EventTarget$2{/**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */constructor(tracks=[]){super();this.tracks_=[];/**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */Object.defineProperty(this,'length',{get(){return this.tracks_.length;}});for(let i=0;i<tracks.length;i++){this.addTrack(tracks[i]);}}/**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */addTrack(track){const index=this.tracks_.length;if(!(''+index in this)){Object.defineProperty(this,index,{get(){return this.tracks_[index];}});}// Do not add duplicate tracks\nif(this.tracks_.indexOf(track)===-1){this.tracks_.push(track);/**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */this.trigger({track,type:'addtrack',target:this});}/**\n     * Triggered when a track label is changed.\n     *\n     * @event TrackList#addtrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was added.\n     */track.labelchange_=()=>{this.trigger({track,type:'labelchange',target:this});};if(isEvented(track)){track.addEventListener('labelchange',track.labelchange_);}}/**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */removeTrack(rtrack){let track;for(let i=0,l=this.length;i<l;i++){if(this[i]===rtrack){track=this[i];if(track.off){track.off();}this.tracks_.splice(i,1);break;}}if(!track){return;}/**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */this.trigger({track,type:'removetrack',target:this});}/**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */getTrackById(id){let result=null;for(let i=0,l=this.length;i<l;i++){const track=this[i];if(track.id===id){result=track;break;}}return result;}}/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */ /**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */TrackList.prototype.allowedEvents_={change:'change',addtrack:'addtrack',removetrack:'removetrack',labelchange:'labelchange'};// emulate attribute EventHandler support to allow for feature detection\nfor(const event in TrackList.prototype.allowedEvents_){TrackList.prototype['on'+event]=null;}/**\n * @file audio-track-list.js\n */ /**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */const disableOthers$1=function(list,track){for(let i=0;i<list.length;i++){if(!Object.keys(list[i]).length||track.id===list[i].id){continue;}// another audio track is enabled, disable it\nlist[i].enabled=false;}};/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */class AudioTrackList extends TrackList{/**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */constructor(tracks=[]){// make sure only 1 track is enabled\n// sorted from last index to first index\nfor(let i=tracks.length-1;i>=0;i--){if(tracks[i].enabled){disableOthers$1(tracks,tracks[i]);break;}}super(tracks);this.changing_=false;}/**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */addTrack(track){if(track.enabled){disableOthers$1(this,track);}super.addTrack(track);// native tracks don't have this\nif(!track.addEventListener){return;}track.enabledChange_=()=>{// when we are disabling other tracks (since we don't support\n// more than one track at a time) we will set changing_\n// to true so that we don't trigger additional change events\nif(this.changing_){return;}this.changing_=true;disableOthers$1(this,track);this.changing_=false;this.trigger('change');};/**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */track.addEventListener('enabledchange',track.enabledChange_);}removeTrack(rtrack){super.removeTrack(rtrack);if(rtrack.removeEventListener&&rtrack.enabledChange_){rtrack.removeEventListener('enabledchange',rtrack.enabledChange_);rtrack.enabledChange_=null;}}}/**\n * @file video-track-list.js\n */ /**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */const disableOthers=function(list,track){for(let i=0;i<list.length;i++){if(!Object.keys(list[i]).length||track.id===list[i].id){continue;}// another video track is enabled, disable it\nlist[i].selected=false;}};/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */class VideoTrackList extends TrackList{/**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */constructor(tracks=[]){// make sure only 1 track is enabled\n// sorted from last index to first index\nfor(let i=tracks.length-1;i>=0;i--){if(tracks[i].selected){disableOthers(tracks,tracks[i]);break;}}super(tracks);this.changing_=false;/**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */Object.defineProperty(this,'selectedIndex',{get(){for(let i=0;i<this.length;i++){if(this[i].selected){return i;}}return-1;},set(){}});}/**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */addTrack(track){if(track.selected){disableOthers(this,track);}super.addTrack(track);// native tracks don't have this\nif(!track.addEventListener){return;}track.selectedChange_=()=>{if(this.changing_){return;}this.changing_=true;disableOthers(this,track);this.changing_=false;this.trigger('change');};/**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */track.addEventListener('selectedchange',track.selectedChange_);}removeTrack(rtrack){super.removeTrack(rtrack);if(rtrack.removeEventListener&&rtrack.selectedChange_){rtrack.removeEventListener('selectedchange',rtrack.selectedChange_);rtrack.selectedChange_=null;}}}/**\n * @file text-track-list.js\n */ /**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */class TextTrackList extends TrackList{/**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */addTrack(track){super.addTrack(track);if(!this.queueChange_){this.queueChange_=()=>this.queueTrigger('change');}if(!this.triggerSelectedlanguagechange){this.triggerSelectedlanguagechange_=()=>this.trigger('selectedlanguagechange');}/**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */track.addEventListener('modechange',this.queueChange_);const nonLanguageTextTrackKind=['metadata','chapters'];if(nonLanguageTextTrackKind.indexOf(track.kind)===-1){track.addEventListener('modechange',this.triggerSelectedlanguagechange_);}}removeTrack(rtrack){super.removeTrack(rtrack);// manually remove the event handlers we added\nif(rtrack.removeEventListener){if(this.queueChange_){rtrack.removeEventListener('modechange',this.queueChange_);}if(this.selectedlanguagechange_){rtrack.removeEventListener('modechange',this.triggerSelectedlanguagechange_);}}}}/**\n * @file html-track-element-list.js\n */ /**\n * The current list of {@link HtmlTrackElement}s.\n */class HtmlTrackElementList{/**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */constructor(trackElements=[]){this.trackElements_=[];/**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */Object.defineProperty(this,'length',{get(){return this.trackElements_.length;}});for(let i=0,length=trackElements.length;i<length;i++){this.addTrackElement_(trackElements[i]);}}/**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */addTrackElement_(trackElement){const index=this.trackElements_.length;if(!(''+index in this)){Object.defineProperty(this,index,{get(){return this.trackElements_[index];}});}// Do not add duplicate elements\nif(this.trackElements_.indexOf(trackElement)===-1){this.trackElements_.push(trackElement);}}/**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */getTrackElementByTrack_(track){let trackElement_;for(let i=0,length=this.trackElements_.length;i<length;i++){if(track===this.trackElements_[i].track){trackElement_=this.trackElements_[i];break;}}return trackElement_;}/**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */removeTrackElement_(trackElement){for(let i=0,length=this.trackElements_.length;i<length;i++){if(trackElement===this.trackElements_[i]){if(this.trackElements_[i].track&&typeof this.trackElements_[i].track.off==='function'){this.trackElements_[i].track.off();}if(typeof this.trackElements_[i].off==='function'){this.trackElements_[i].off();}this.trackElements_.splice(i,1);break;}}}}/**\n * @file text-track-cue-list.js\n */ /**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */ /**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */class TextTrackCueList{/**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */constructor(cues){TextTrackCueList.prototype.setCues_.call(this,cues);/**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */Object.defineProperty(this,'length',{get(){return this.length_;}});}/**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */setCues_(cues){const oldLength=this.length||0;let i=0;const l=cues.length;this.cues_=cues;this.length_=cues.length;const defineProp=function(index){if(!(''+index in this)){Object.defineProperty(this,''+index,{get(){return this.cues_[index];}});}};if(oldLength<l){i=oldLength;for(;i<l;i++){defineProp.call(this,i);}}}/**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */getCueById(id){let result=null;for(let i=0,l=this.length;i<l;i++){const cue=this[i];if(cue.id===id){result=cue;break;}}return result;}}/**\n * @file track-kinds.js\n */ /**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */const VideoTrackKind={alternative:'alternative',captions:'captions',main:'main',sign:'sign',subtitles:'subtitles',commentary:'commentary'};/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */const AudioTrackKind={'alternative':'alternative','descriptions':'descriptions','main':'main','main-desc':'main-desc','translation':'translation','commentary':'commentary'};/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */const TextTrackKind={subtitles:'subtitles',captions:'captions',descriptions:'descriptions',chapters:'chapters',metadata:'metadata'};/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */const TextTrackMode={disabled:'disabled',hidden:'hidden',showing:'showing'};/**\n * @file track.js\n */ /**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */class Track extends EventTarget$2{/**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */constructor(options={}){super();const trackProps={id:options.id||'vjs_track_'+newGUID(),kind:options.kind||'',language:options.language||''};let label=options.label||'';/**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */ /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */ /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */for(const key in trackProps){Object.defineProperty(this,key,{get(){return trackProps[key];},set(){}});}/**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @fires Track#labelchange\n     */Object.defineProperty(this,'label',{get(){return label;},set(newLabel){if(newLabel!==label){label=newLabel;/**\n           * An event that fires when label changes on this track.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event Track#labelchange\n           * @type {EventTarget~Event}\n           */this.trigger('labelchange');}}});}}/**\n * @file url.js\n * @module url\n */ /**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */ /**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */const parseUrl=function(url){// This entire method can be replace with URL once we are able to drop IE11\nconst props=['protocol','hostname','port','pathname','search','hash','host'];// add the url to an anchor and let the browser parse the URL\nconst a=document.createElement('a');a.href=url;// Copy the specific URL properties to a new object\n// This is also needed for IE because the anchor loses its\n// properties when it's removed from the dom\nconst details={};for(let i=0;i<props.length;i++){details[props[i]]=a[props[i]];}// IE adds the port to the host property unlike everyone else. If\n// a port identifier is added for standard ports, strip it.\nif(details.protocol==='http:'){details.host=details.host.replace(/:80$/,'');}if(details.protocol==='https:'){details.host=details.host.replace(/:443$/,'');}if(!details.protocol){details.protocol=window$1.location.protocol;}/* istanbul ignore if */if(!details.host){details.host=window$1.location.host;}return details;};/**\n * Get absolute version of relative URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */const getAbsoluteURL=function(url){// Check if absolute URL\nif(!url.match(/^https?:\\/\\//)){// Add the url to an anchor and let the browser parse it to convert to an absolute url\nconst a=document.createElement('a');a.href=url;url=a.href;}return url;};/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */const getFileExtension=function(path){if(typeof path==='string'){const splitPathRe=/^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;const pathParts=splitPathRe.exec(path);if(pathParts){return pathParts.pop().toLowerCase();}}return'';};/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */const isCrossOrigin=function(url,winLoc=window$1.location){const urlInfo=parseUrl(url);// IE8 protocol relative urls will return ':' for protocol\nconst srcProtocol=urlInfo.protocol===':'?winLoc.protocol:urlInfo.protocol;// Check if url is for another domain/origin\n// IE8 doesn't know location.origin, so we won't rely on it here\nconst crossOrigin=srcProtocol+urlInfo.host!==winLoc.protocol+winLoc.host;return crossOrigin;};var Url=/*#__PURE__*/Object.freeze({__proto__:null,parseUrl:parseUrl,getAbsoluteURL:getAbsoluteURL,getFileExtension:getFileExtension,isCrossOrigin:isCrossOrigin});/**\n * @file text-track.js\n */ /**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */const parseCues=function(srcContent,track){const parser=new window$1.WebVTT.Parser(window$1,window$1.vttjs,window$1.WebVTT.StringDecoder());const errors=[];parser.oncue=function(cue){track.addCue(cue);};parser.onparsingerror=function(error){errors.push(error);};parser.onflush=function(){track.trigger({type:'loadeddata',target:track});};parser.parse(srcContent);if(errors.length>0){if(window$1.console&&window$1.console.groupCollapsed){window$1.console.groupCollapsed(`Text Track parsing errors for ${track.src}`);}errors.forEach(error=>log$1.error(error));if(window$1.console&&window$1.console.groupEnd){window$1.console.groupEnd();}}parser.flush();};/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */const loadTrack=function(src,track){const opts={uri:src};const crossOrigin=isCrossOrigin(src);if(crossOrigin){opts.cors=crossOrigin;}const withCredentials=track.tech_.crossOrigin()==='use-credentials';if(withCredentials){opts.withCredentials=withCredentials;}XHR(opts,bind_(this,function(err,response,responseBody){if(err){return log$1.error(err,response);}track.loaded_=true;// Make sure that vttjs has loaded, otherwise, wait till it finished loading\n// NOTE: this is only used for the alt/video.novtt.js build\nif(typeof window$1.WebVTT!=='function'){if(track.tech_){// to prevent use before define eslint error, we define loadHandler\n// as a let here\ntrack.tech_.any(['vttjsloaded','vttjserror'],event=>{if(event.type==='vttjserror'){log$1.error(`vttjs failed to load, stopping trying to process ${track.src}`);return;}return parseCues(responseBody,track);});}}else{parseCues(responseBody,track);}}));};/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */class TextTrack extends Track{/**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */constructor(options={}){if(!options.tech){throw new Error('A tech was not provided.');}const settings=merge$1(options,{kind:TextTrackKind[options.kind]||'subtitles',language:options.language||options.srclang||''});let mode=TextTrackMode[settings.mode]||'disabled';const default_=settings.default;if(settings.kind==='metadata'||settings.kind==='chapters'){mode='hidden';}super(settings);this.tech_=settings.tech;this.cues_=[];this.activeCues_=[];this.preload_=this.tech_.preloadTextTracks!==false;const cues=new TextTrackCueList(this.cues_);const activeCues=new TextTrackCueList(this.activeCues_);let changed=false;this.timeupdateHandler=bind_(this,function(event={}){if(this.tech_.isDisposed()){return;}if(!this.tech_.isReady_){if(event.type!=='timeupdate'){this.rvf_=this.tech_.requestVideoFrameCallback(this.timeupdateHandler);}return;}// Accessing this.activeCues for the side-effects of updating itself\n// due to its nature as a getter function. Do not remove or cues will\n// stop updating!\n// Use the setter to prevent deletion from uglify (pure_getters rule)\nthis.activeCues=this.activeCues;if(changed){this.trigger('cuechange');changed=false;}if(event.type!=='timeupdate'){this.rvf_=this.tech_.requestVideoFrameCallback(this.timeupdateHandler);}});const disposeHandler=()=>{this.stopTracking();};this.tech_.one('dispose',disposeHandler);if(mode!=='disabled'){this.startTracking();}Object.defineProperties(this,{/**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */default:{get(){return default_;},set(){}},/**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */mode:{get(){return mode;},set(newMode){if(!TextTrackMode[newMode]){return;}if(mode===newMode){return;}mode=newMode;if(!this.preload_&&mode!=='disabled'&&this.cues.length===0){// On-demand load.\nloadTrack(this.src,this);}this.stopTracking();if(mode!=='disabled'){this.startTracking();}/**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */this.trigger('modechange');}},/**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */cues:{get(){if(!this.loaded_){return null;}return cues;},set(){}},/**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */activeCues:{get(){if(!this.loaded_){return null;}// nothing to do\nif(this.cues.length===0){return activeCues;}const ct=this.tech_.currentTime();const active=[];for(let i=0,l=this.cues.length;i<l;i++){const cue=this.cues[i];if(cue.startTime<=ct&&cue.endTime>=ct){active.push(cue);}}changed=false;if(active.length!==this.activeCues_.length){changed=true;}else{for(let i=0;i<active.length;i++){if(this.activeCues_.indexOf(active[i])===-1){changed=true;}}}this.activeCues_=active;activeCues.setCues_(this.activeCues_);return activeCues;},// /!\\ Keep this setter empty (see the timeupdate handler above)\nset(){}}});if(settings.src){this.src=settings.src;if(!this.preload_){// Tracks will load on-demand.\n// Act like we're loaded for other purposes.\nthis.loaded_=true;}if(this.preload_||settings.kind!=='subtitles'&&settings.kind!=='captions'){loadTrack(this.src,this);}}else{this.loaded_=true;}}startTracking(){// More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\nthis.rvf_=this.tech_.requestVideoFrameCallback(this.timeupdateHandler);// Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\nthis.tech_.on('timeupdate',this.timeupdateHandler);}stopTracking(){if(this.rvf_){this.tech_.cancelVideoFrameCallback(this.rvf_);this.rvf_=undefined;}this.tech_.off('timeupdate',this.timeupdateHandler);}/**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */addCue(originalCue){let cue=originalCue;if(window$1.vttjs&&!(originalCue instanceof window$1.vttjs.VTTCue)){cue=new window$1.vttjs.VTTCue(originalCue.startTime,originalCue.endTime,originalCue.text);for(const prop in originalCue){if(!(prop in cue)){cue[prop]=originalCue[prop];}}// make sure that `id` is copied over\ncue.id=originalCue.id;cue.originalCue_=originalCue;}const tracks=this.tech_.textTracks();for(let i=0;i<tracks.length;i++){if(tracks[i]!==this){tracks[i].removeCue(cue);}}this.cues_.push(cue);this.cues.setCues_(this.cues_);}/**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */removeCue(removeCue){let i=this.cues_.length;while(i--){const cue=this.cues_[i];if(cue===removeCue||cue.originalCue_&&cue.originalCue_===removeCue){this.cues_.splice(i,1);this.cues.setCues_(this.cues_);break;}}}}/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */TextTrack.prototype.allowedEvents_={cuechange:'cuechange'};/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */class AudioTrack extends Track{/**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */constructor(options={}){const settings=merge$1(options,{kind:AudioTrackKind[options.kind]||''});super(settings);let enabled=false;/**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */Object.defineProperty(this,'enabled',{get(){return enabled;},set(newEnabled){// an invalid or unchanged value\nif(typeof newEnabled!=='boolean'||newEnabled===enabled){return;}enabled=newEnabled;/**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */this.trigger('enabledchange');}});// if the user sets this track to selected then\n// set selected to that true value otherwise\n// we keep it false\nif(settings.enabled){this.enabled=settings.enabled;}this.loaded_=true;}}/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */class VideoTrack extends Track{/**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */constructor(options={}){const settings=merge$1(options,{kind:VideoTrackKind[options.kind]||''});super(settings);let selected=false;/**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */Object.defineProperty(this,'selected',{get(){return selected;},set(newSelected){// an invalid or unchanged value\nif(typeof newSelected!=='boolean'||newSelected===selected){return;}selected=newSelected;/**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */this.trigger('selectedchange');}});// if the user sets this track to selected then\n// set selected to that true value otherwise\n// we keep it false\nif(settings.selected){this.selected=settings.selected;}}}/**\n * @file html-track-element.js\n */ /**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */class HTMLTrackElement extends EventTarget$2{/**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */constructor(options={}){super();let readyState;const track=new TextTrack(options);this.kind=track.kind;this.src=track.src;this.srclang=track.language;this.label=track.label;this.default=track.default;Object.defineProperties(this,{/**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */readyState:{get(){return readyState;}},/**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */track:{get(){return track;}}});readyState=HTMLTrackElement.NONE;/**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */track.addEventListener('loadeddata',()=>{readyState=HTMLTrackElement.LOADED;this.trigger({type:'load',target:this});});}}HTMLTrackElement.prototype.allowedEvents_={load:'load'};/**\n * The text track not loaded state.\n *\n * @type {number}\n * @static\n */HTMLTrackElement.NONE=0;/**\n * The text track loading state.\n *\n * @type {number}\n * @static\n */HTMLTrackElement.LOADING=1;/**\n * The text track loaded state.\n *\n * @type {number}\n * @static\n */HTMLTrackElement.LOADED=2;/**\n * The text track failed to load state.\n *\n * @type {number}\n * @static\n */HTMLTrackElement.ERROR=3;/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */const NORMAL={audio:{ListClass:AudioTrackList,TrackClass:AudioTrack,capitalName:'Audio'},video:{ListClass:VideoTrackList,TrackClass:VideoTrack,capitalName:'Video'},text:{ListClass:TextTrackList,TrackClass:TextTrack,capitalName:'Text'}};Object.keys(NORMAL).forEach(function(type){NORMAL[type].getterName=`${type}Tracks`;NORMAL[type].privateName=`${type}Tracks_`;});const REMOTE={remoteText:{ListClass:TextTrackList,TrackClass:TextTrack,capitalName:'RemoteText',getterName:'remoteTextTracks',privateName:'remoteTextTracks_'},remoteTextEl:{ListClass:HtmlTrackElementList,TrackClass:HTMLTrackElement,capitalName:'RemoteTextTrackEls',getterName:'remoteTextTrackEls',privateName:'remoteTextTrackEls_'}};const ALL=Object.assign({},NORMAL,REMOTE);REMOTE.names=Object.keys(REMOTE);NORMAL.names=Object.keys(NORMAL);ALL.names=[].concat(REMOTE.names).concat(NORMAL.names);/**\n * @file tech.js\n */ /**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */ /**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */function createTrackHelper(self,kind,label,language,options={}){const tracks=self.textTracks();options.kind=kind;if(label){options.label=label;}if(language){options.language=language;}options.tech=self;const track=new ALL.text.TrackClass(options);tracks.addTrack(track);return track;}/**\n * This is the base class for media playback technology controllers, such as\n * {@link HTML5}\n *\n * @extends Component\n */class Tech extends Component$1{/**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */constructor(options={},ready=function(){}){// we don't want the tech to report user activity automatically.\n// This is done manually in addControlsListeners\noptions.reportTouchActivity=false;super(null,options,ready);this.onDurationChange_=e=>this.onDurationChange(e);this.trackProgress_=e=>this.trackProgress(e);this.trackCurrentTime_=e=>this.trackCurrentTime(e);this.stopTrackingCurrentTime_=e=>this.stopTrackingCurrentTime(e);this.disposeSourceHandler_=e=>this.disposeSourceHandler(e);this.queuedHanders_=new Set();// keep track of whether the current source has played at all to\n// implement a very limited played()\nthis.hasStarted_=false;this.on('playing',function(){this.hasStarted_=true;});this.on('loadstart',function(){this.hasStarted_=false;});ALL.names.forEach(name=>{const props=ALL[name];if(options&&options[props.getterName]){this[props.privateName]=options[props.getterName];}});// Manually track progress in cases where the browser/tech doesn't report it.\nif(!this.featuresProgressEvents){this.manualProgressOn();}// Manually track timeupdates in cases where the browser/tech doesn't report it.\nif(!this.featuresTimeupdateEvents){this.manualTimeUpdatesOn();}['Text','Audio','Video'].forEach(track=>{if(options[`native${track}Tracks`]===false){this[`featuresNative${track}Tracks`]=false;}});if(options.nativeCaptions===false||options.nativeTextTracks===false){this.featuresNativeTextTracks=false;}else if(options.nativeCaptions===true||options.nativeTextTracks===true){this.featuresNativeTextTracks=true;}if(!this.featuresNativeTextTracks){this.emulateTextTracks();}this.preloadTextTracks=options.preloadTextTracks!==false;this.autoRemoteTextTracks_=new ALL.text.ListClass();this.initTrackListeners();// Turn on component tap events only if not using native controls\nif(!options.nativeControlsForTouch){this.emitTapEvents();}if(this.constructor){this.name_=this.constructor.name||'Unknown Tech';}}/**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */triggerSourceset(src){if(!this.isReady_){// on initial ready we have to trigger source set\n// 1ms after ready so that player can watch for it.\nthis.one('ready',()=>this.setTimeout(()=>this.triggerSourceset(src),1));}/**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */this.trigger({src,type:'sourceset'});}/* Fallbacks for unsupported event types\n  ================================================================================ */ /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */manualProgressOn(){this.on('durationchange',this.onDurationChange_);this.manualProgress=true;// Trigger progress watching when a source begins loading\nthis.one('ready',this.trackProgress_);}/**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */manualProgressOff(){this.manualProgress=false;this.stopTrackingProgress();this.off('durationchange',this.onDurationChange_);}/**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */trackProgress(event){this.stopTrackingProgress();this.progressInterval=this.setInterval(bind_(this,function(){// Don't trigger unless buffered amount is greater than last time\nconst numBufferedPercent=this.bufferedPercent();if(this.bufferedPercent_!==numBufferedPercent){/**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */this.trigger('progress');}this.bufferedPercent_=numBufferedPercent;if(numBufferedPercent===1){this.stopTrackingProgress();}}),500);}/**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */onDurationChange(event){this.duration_=this.duration();}/**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */buffered(){return createTimeRanges$1(0,0);}/**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */bufferedPercent(){return bufferedPercent(this.buffered(),this.duration_);}/**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */stopTrackingProgress(){this.clearInterval(this.progressInterval);}/**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */manualTimeUpdatesOn(){this.manualTimeUpdates=true;this.on('play',this.trackCurrentTime_);this.on('pause',this.stopTrackingCurrentTime_);}/**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */manualTimeUpdatesOff(){this.manualTimeUpdates=false;this.stopTrackingCurrentTime();this.off('play',this.trackCurrentTime_);this.off('pause',this.stopTrackingCurrentTime_);}/**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */trackCurrentTime(){if(this.currentTimeInterval){this.stopTrackingCurrentTime();}this.currentTimeInterval=this.setInterval(function(){/**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */this.trigger({type:'timeupdate',target:this,manuallyTriggered:true});// 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n},250);}/**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */stopTrackingCurrentTime(){this.clearInterval(this.currentTimeInterval);// #1002 - if the video ends right before the next timeupdate would happen,\n// the progress bar won't make it all the way to the end\nthis.trigger({type:'timeupdate',target:this,manuallyTriggered:true});}/**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */dispose(){// clear out all tracks because we can't reuse them between techs\nthis.clearTracks(NORMAL.names);// Turn off any manual progress or timeupdate tracking\nif(this.manualProgress){this.manualProgressOff();}if(this.manualTimeUpdates){this.manualTimeUpdatesOff();}super.dispose();}/**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */clearTracks(types){types=[].concat(types);// clear out all tracks because we can't reuse them between techs\ntypes.forEach(type=>{const list=this[`${type}Tracks`]()||[];let i=list.length;while(i--){const track=list[i];if(type==='text'){this.removeRemoteTextTrack(track);}list.removeTrack(track);}});}/**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */cleanupAutoTextTracks(){const list=this.autoRemoteTextTracks_||[];let i=list.length;while(i--){const track=list[i];this.removeRemoteTextTrack(track);}}/**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */reset(){}/**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */crossOrigin(){}/**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */setCrossOrigin(){}/**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */error(err){if(err!==undefined){this.error_=new MediaError(err);this.trigger('error');}return this.error_;}/**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */played(){if(this.hasStarted_){return createTimeRanges$1(0,0);}return createTimeRanges$1();}/**\n   * Start playback\n   *\n   * @abstract\n   *\n   * @see {Html5#play}\n   */play(){}/**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#setScrubbing}\n   */setScrubbing(){}/**\n   * Get whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#scrubbing}\n   */scrubbing(){}/**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */setCurrentTime(){// improve the accuracy of manual timeupdates\nif(this.manualTimeUpdates){/**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */this.trigger({type:'timeupdate',target:this,manuallyTriggered:true});}}/**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */initTrackListeners(){/**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */ /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */ /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */NORMAL.names.forEach(name=>{const props=NORMAL[name];const trackListChanges=()=>{this.trigger(`${name}trackchange`);};const tracks=this[props.getterName]();tracks.addEventListener('removetrack',trackListChanges);tracks.addEventListener('addtrack',trackListChanges);this.on('dispose',()=>{tracks.removeEventListener('removetrack',trackListChanges);tracks.removeEventListener('addtrack',trackListChanges);});});}/**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */addWebVttScript_(){if(window$1.WebVTT){return;}// Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n// signals that the Tech is ready at which point Tech.el_ is part of the DOM\n// before inserting the WebVTT script\nif(document.body.contains(this.el())){// load via require if available and vtt.js script location was not passed in\n// as an option. novtt builds will turn the above require call into an empty object\n// which will cause this if check to always fail.\nif(!this.options_['vtt.js']&&isPlain(vtt)&&Object.keys(vtt).length>0){this.trigger('vttjsloaded');return;}// load vtt.js via the script location option or the cdn of no location was\n// passed in\nconst script=document.createElement('script');script.src=this.options_['vtt.js']||'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';script.onload=()=>{/**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */this.trigger('vttjsloaded');};script.onerror=()=>{/**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */this.trigger('vttjserror');};this.on('dispose',()=>{script.onload=null;script.onerror=null;});// but have not loaded yet and we set it to true before the inject so that\n// we don't overwrite the injected window.WebVTT if it loads right away\nwindow$1.WebVTT=true;this.el().parentNode.appendChild(script);}else{this.ready(this.addWebVttScript_);}}/**\n   * Emulate texttracks\n   *\n   */emulateTextTracks(){const tracks=this.textTracks();const remoteTracks=this.remoteTextTracks();const handleAddTrack=e=>tracks.addTrack(e.track);const handleRemoveTrack=e=>tracks.removeTrack(e.track);remoteTracks.on('addtrack',handleAddTrack);remoteTracks.on('removetrack',handleRemoveTrack);this.addWebVttScript_();const updateDisplay=()=>this.trigger('texttrackchange');const textTracksChanges=()=>{updateDisplay();for(let i=0;i<tracks.length;i++){const track=tracks[i];track.removeEventListener('cuechange',updateDisplay);if(track.mode==='showing'){track.addEventListener('cuechange',updateDisplay);}}};textTracksChanges();tracks.addEventListener('change',textTracksChanges);tracks.addEventListener('addtrack',textTracksChanges);tracks.addEventListener('removetrack',textTracksChanges);this.on('dispose',function(){remoteTracks.off('addtrack',handleAddTrack);remoteTracks.off('removetrack',handleRemoveTrack);tracks.removeEventListener('change',textTracksChanges);tracks.removeEventListener('addtrack',textTracksChanges);tracks.removeEventListener('removetrack',textTracksChanges);for(let i=0;i<tracks.length;i++){const track=tracks[i];track.removeEventListener('cuechange',updateDisplay);}});}/**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */addTextTrack(kind,label,language){if(!kind){throw new Error('TextTrack kind is required but was not provided');}return createTrackHelper(this,kind,label,language);}/**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */createRemoteTextTrack(options){const track=merge$1(options,{tech:this});return new REMOTE.remoteTextEl.TrackClass(track);}/**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=false]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   */addRemoteTextTrack(options={},manualCleanup){const htmlTrackElement=this.createRemoteTextTrack(options);if(typeof manualCleanup!=='boolean'){manualCleanup=false;}// store HTMLTrackElement and TextTrack to remote list\nthis.remoteTextTrackEls().addTrackElement_(htmlTrackElement);this.remoteTextTracks().addTrack(htmlTrackElement.track);if(manualCleanup===false){// create the TextTrackList if it doesn't exist\nthis.ready(()=>this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));}return htmlTrackElement;}/**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */removeRemoteTextTrack(track){const trackElement=this.remoteTextTrackEls().getTrackElementByTrack_(track);// remove HTMLTrackElement and TextTrack from remote list\nthis.remoteTextTrackEls().removeTrackElement_(trackElement);this.remoteTextTracks().removeTrack(track);this.autoRemoteTextTracks_.removeTrack(track);}/**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */getVideoPlaybackQuality(){return{};}/**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */requestPictureInPicture(){return Promise.reject();}/**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */disablePictureInPicture(){return true;}/**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */setDisablePictureInPicture(){}/**\n   * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n   *\n   * @param {function} cb\n   * @return {number} request id\n   */requestVideoFrameCallback(cb){const id=newGUID();if(!this.isReady_||this.paused()){this.queuedHanders_.add(id);this.one('playing',()=>{if(this.queuedHanders_.has(id)){this.queuedHanders_.delete(id);cb();}});}else{this.requestNamedAnimationFrame(id,cb);}return id;}/**\n   * A fallback implementation of cancelVideoFrameCallback\n   *\n   * @param {number} id id of callback to be cancelled\n   */cancelVideoFrameCallback(id){if(this.queuedHanders_.has(id)){this.queuedHanders_.delete(id);}else{this.cancelNamedAnimationFrame(id);}}/**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */setPoster(){}/**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */playsinline(){}/**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */setPlaysinline(){}/**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */overrideNativeAudioTracks(){}/**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */overrideNativeVideoTracks(){}/*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */canPlayType(){return'';}/**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */static canPlayType(){return'';}/**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */static canPlaySource(srcObj,options){return Tech.canPlayType(srcObj.type);}/*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */static isTech(component){return component.prototype instanceof Tech||component instanceof Tech||component===Tech;}/**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */static registerTech(name,tech){if(!Tech.techs_){Tech.techs_={};}if(!Tech.isTech(tech)){throw new Error(`Tech ${name} must be a Tech`);}if(!Tech.canPlayType){throw new Error('Techs must have a static canPlayType method on them');}if(!Tech.canPlaySource){throw new Error('Techs must have a static canPlaySource method on them');}name=toTitleCase$1(name);Tech.techs_[name]=tech;Tech.techs_[toLowerCase(name)]=tech;if(name!=='Tech'){// camel case the techName for use in techOrder\nTech.defaultTechOrder_.push(name);}return tech;}/**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */static getTech(name){if(!name){return;}if(Tech.techs_&&Tech.techs_[name]){return Tech.techs_[name];}name=toTitleCase$1(name);if(window$1&&window$1.videojs&&window$1.videojs[name]){log$1.warn(`The ${name} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);return window$1.videojs[name];}}}/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */ /**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */ /**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */ /**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */ /**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */ALL.names.forEach(function(name){const props=ALL[name];Tech.prototype[props.getterName]=function(){this[props.privateName]=this[props.privateName]||new props.ListClass();return this[props.privateName];};});/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */ /**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */ /**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */ /**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */Tech.prototype.featuresVolumeControl=true;/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */Tech.prototype.featuresMuteControl=true;/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */Tech.prototype.featuresFullscreenResize=false;/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */Tech.prototype.featuresPlaybackRate=false;/**\n * Boolean indicating whether the `Tech` supports the `progress` event.\n * This will be used to determine if {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */Tech.prototype.featuresProgressEvents=false;/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */Tech.prototype.featuresSourceset=false;/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event.\n * This will be used to determine if {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */Tech.prototype.featuresTimeupdateEvents=false;/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */Tech.prototype.featuresNativeTextTracks=false;/**\n * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n *\n * @type {boolean}\n * @default\n */Tech.prototype.featuresVideoFrameCallback=false;/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */Tech.withSourceHandlers=function(_Tech){/**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */_Tech.registerSourceHandler=function(handler,index){let handlers=_Tech.sourceHandlers;if(!handlers){handlers=_Tech.sourceHandlers=[];}if(index===undefined){// add to the end of the list\nindex=handlers.length;}handlers.splice(index,0,handler);};/**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */_Tech.canPlayType=function(type){const handlers=_Tech.sourceHandlers||[];let can;for(let i=0;i<handlers.length;i++){can=handlers[i].canPlayType(type);if(can){return can;}}return'';};/**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */_Tech.selectSourceHandler=function(source,options){const handlers=_Tech.sourceHandlers||[];let can;for(let i=0;i<handlers.length;i++){can=handlers[i].canHandleSource(source,options);if(can){return handlers[i];}}return null;};/**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */_Tech.canPlaySource=function(srcObj,options){const sh=_Tech.selectSourceHandler(srcObj,options);if(sh){return sh.canHandleSource(srcObj,options);}return'';};/**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */const deferrable=['seekable','seeking','duration'];/**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */ /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */deferrable.forEach(function(fnName){const originalFn=this[fnName];if(typeof originalFn!=='function'){return;}this[fnName]=function(){if(this.sourceHandler_&&this.sourceHandler_[fnName]){return this.sourceHandler_[fnName].apply(this.sourceHandler_,arguments);}return originalFn.apply(this,arguments);};},_Tech.prototype);/**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */_Tech.prototype.setSource=function(source){let sh=_Tech.selectSourceHandler(source,this.options_);if(!sh){// Fall back to a native source hander when unsupported sources are\n// deliberately set\nif(_Tech.nativeSourceHandler){sh=_Tech.nativeSourceHandler;}else{log$1.error('No source handler found for the current source.');}}// Dispose any existing source handler\nthis.disposeSourceHandler();this.off('dispose',this.disposeSourceHandler_);if(sh!==_Tech.nativeSourceHandler){this.currentSource_=source;}this.sourceHandler_=sh.handleSource(source,this,this.options_);this.one('dispose',this.disposeSourceHandler_);};/**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */_Tech.prototype.disposeSourceHandler=function(){// if we have a source and get another one\n// then we are loading something new\n// than clear all of our current tracks\nif(this.currentSource_){this.clearTracks(['audio','video']);this.currentSource_=null;}// always clean up auto-text tracks\nthis.cleanupAutoTextTracks();if(this.sourceHandler_){if(this.sourceHandler_.dispose){this.sourceHandler_.dispose();}this.sourceHandler_=null;}};};// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent$1.registerComponent('Tech',Tech);Tech.registerTech('Tech',Tech);/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */Tech.defaultTechOrder_=[];/**\n * @file middleware.js\n * @module middleware\n */const middlewares={};const middlewareInstances={};const TERMINATOR={};/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */ /**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */ /**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */function use(type,middleware){middlewares[type]=middlewares[type]||[];middlewares[type].push(middleware);}/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */function setSource(player,src,next){player.setTimeout(()=>setSourceHelper(src,middlewares[src.type],next,player),1);}/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */function setTech(middleware,tech){middleware.forEach(mw=>mw.setTech&&mw.setTech(tech));}/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */function get(middleware,tech,method){return middleware.reduceRight(middlewareIterator(method),tech[method]());}/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */function set(middleware,tech,method,arg){return tech[method](middleware.reduce(middlewareIterator(method),arg));}/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */function mediate(middleware,tech,method,arg=null){const callMethod='call'+toTitleCase$1(method);const middlewareValue=middleware.reduce(middlewareIterator(callMethod),arg);const terminated=middlewareValue===TERMINATOR;// deprecated. The `null` return value should instead return TERMINATOR to\n// prevent confusion if a techs method actually returns null.\nconst returnValue=terminated?null:tech[method](middlewareValue);executeRight(middleware,method,returnValue,terminated);return returnValue;}/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */const allowedGetters={buffered:1,currentTime:1,duration:1,muted:1,played:1,paused:1,seekable:1,volume:1,ended:1};/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */const allowedSetters={setCurrentTime:1,setMuted:1,setVolume:1};/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */const allowedMediators={play:1,pause:1};function middlewareIterator(method){return(value,mw)=>{// if the previous middleware terminated, pass along the termination\nif(value===TERMINATOR){return TERMINATOR;}if(mw[method]){return mw[method](value);}return value;};}function executeRight(mws,method,value,terminated){for(let i=mws.length-1;i>=0;i--){const mw=mws[i];if(mw[method]){mw[method](terminated,value);}}}/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */function clearCacheForPlayer(player){middlewareInstances[player.id()]=null;}/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */function getOrCreateFactory(player,mwFactory){const mws=middlewareInstances[player.id()];let mw=null;if(mws===undefined||mws===null){mw=mwFactory(player);middlewareInstances[player.id()]=[[mwFactory,mw]];return mw;}for(let i=0;i<mws.length;i++){const[mwf,mwi]=mws[i];if(mwf!==mwFactory){continue;}mw=mwi;}if(mw===null){mw=mwFactory(player);mws.push([mwFactory,mw]);}return mw;}function setSourceHelper(src={},middleware=[],next,player,acc=[],lastRun=false){const[mwFactory,...mwrest]=middleware;// if mwFactory is a string, then we're at a fork in the road\nif(typeof mwFactory==='string'){setSourceHelper(src,middlewares[mwFactory],next,player,acc,lastRun);// if we have an mwFactory, call it with the player to get the mw,\n// then call the mw's setSource method\n}else if(mwFactory){const mw=getOrCreateFactory(player,mwFactory);// if setSource isn't present, implicitly select this middleware\nif(!mw.setSource){acc.push(mw);return setSourceHelper(src,mwrest,next,player,acc,lastRun);}mw.setSource(Object.assign({},src),function(err,_src){// something happened, try the next middleware on the current level\n// make sure to use the old src\nif(err){return setSourceHelper(src,mwrest,next,player,acc,lastRun);}// we've succeeded, now we need to go deeper\nacc.push(mw);// if it's the same type, continue down the current chain\n// otherwise, we want to go down the new chain\nsetSourceHelper(_src,src.type===_src.type?mwrest:middlewares[_src.type],next,player,acc,lastRun);});}else if(mwrest.length){setSourceHelper(src,mwrest,next,player,acc,lastRun);}else if(lastRun){next(src,acc);}else{setSourceHelper(src,middlewares['*'],next,player,acc,true);}}/**\n * Mimetypes\n *\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n * @typedef Mimetypes~Kind\n * @enum\n */const MimetypesKind={opus:'video/ogg',ogv:'video/ogg',mp4:'video/mp4',mov:'video/mp4',m4v:'video/mp4',mkv:'video/x-matroska',m4a:'audio/mp4',mp3:'audio/mpeg',aac:'audio/aac',caf:'audio/x-caf',flac:'audio/flac',oga:'audio/ogg',wav:'audio/wav',m3u8:'application/x-mpegURL',mpd:'application/dash+xml',jpg:'image/jpeg',jpeg:'image/jpeg',gif:'image/gif',png:'image/png',svg:'image/svg+xml',webp:'image/webp'};/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */const getMimetype=function(src=''){const ext=getFileExtension(src);const mimetype=MimetypesKind[ext.toLowerCase()];return mimetype||'';};/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */const findMimetype=(player,src)=>{if(!src){return'';}// 1. check for the type in the `source` cache\nif(player.cache_.source.src===src&&player.cache_.source.type){return player.cache_.source.type;}// 2. see if we have this source in our `currentSources` cache\nconst matchingSources=player.cache_.sources.filter(s=>s.src===src);if(matchingSources.length){return matchingSources[0].type;}// 3. look for the src url in source elements and use the type there\nconst sources=player.$$('source');for(let i=0;i<sources.length;i++){const s=sources[i];if(s.type&&s.src&&s.src===src){return s.type;}}// 4. finally fallback to our list of mime types based on src url extension\nreturn getMimetype(src);};/**\n * @module filter-source\n */ /**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */const filterSource=function(src){// traverse array\nif(Array.isArray(src)){let newsrc=[];src.forEach(function(srcobj){srcobj=filterSource(srcobj);if(Array.isArray(srcobj)){newsrc=newsrc.concat(srcobj);}else if(isObject(srcobj)){newsrc.push(srcobj);}});src=newsrc;}else if(typeof src==='string'&&src.trim()){// convert string into object\nsrc=[fixSource({src})];}else if(isObject(src)&&typeof src.src==='string'&&src.src&&src.src.trim()){// src is already valid\nsrc=[fixSource(src)];}else{// invalid source, turn it into an empty array\nsrc=[];}return src;};/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */function fixSource(src){if(!src.type){const mimetype=getMimetype(src.src);if(mimetype){src.type=mimetype;}}return src;}/**\n * @file loader.js\n */ /**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */class MediaLoader extends Component$1{/**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */constructor(player,options,ready){// MediaLoader has no element\nconst options_=merge$1({createEl:false},options);super(player,options_,ready);// If there are no sources when the player is initialized,\n// load the first supported playback technology.\nif(!options.playerOptions.sources||options.playerOptions.sources.length===0){for(let i=0,j=options.playerOptions.techOrder;i<j.length;i++){const techName=toTitleCase$1(j[i]);let tech=Tech.getTech(techName);// Support old behavior of techs being registered as components.\n// Remove once that deprecated behavior is removed.\nif(!techName){tech=Component$1.getComponent(techName);}// Check if the browser supports this technology\nif(tech&&tech.isSupported()){player.loadTech_(techName);break;}}}else{// Loop through playback technologies (e.g. HTML5) and check for support.\n// Then load the best source.\n// A few assumptions here:\n//   All playback technologies respect preload false.\nplayer.src(options.playerOptions.sources);}}}Component$1.registerComponent('MediaLoader',MediaLoader);/**\n * @file clickable-component.js\n */ /**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */class ClickableComponent extends Component$1{/**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of component options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   *\n   * @param  {string} [options.controlText]\n   *         The text to set on the button\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   */constructor(player,options){super(player,options);if(this.options_.controlText){this.controlText(this.options_.controlText);}this.handleMouseOver_=e=>this.handleMouseOver(e);this.handleMouseOut_=e=>this.handleMouseOut(e);this.handleClick_=e=>this.handleClick(e);this.handleKeyDown_=e=>this.handleKeyDown(e);this.emitTapEvents();this.enable();}/**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */createEl(tag='div',props={},attributes={}){props=Object.assign({className:this.buildCSSClass(),tabIndex:0},props);if(tag==='button'){log$1.error(`Creating a ClickableComponent with an HTML element of ${tag} is not supported; use a Button instead.`);}// Add ARIA attributes for clickable element which is not a native HTML button\nattributes=Object.assign({role:'button'},attributes);this.tabIndex_=props.tabIndex;const el=createEl(tag,props,attributes);el.appendChild(createEl('span',{className:'vjs-icon-placeholder'},{'aria-hidden':true}));this.createControlTextEl(el);return el;}dispose(){// remove controlTextEl_ on dispose\nthis.controlTextEl_=null;super.dispose();}/**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */createControlTextEl(el){this.controlTextEl_=createEl('span',{className:'vjs-control-text'},{// let the screen reader user know that the text of the element may change\n'aria-live':'polite'});if(el){el.appendChild(this.controlTextEl_);}this.controlText(this.controlText_,el);return this.controlTextEl_;}/**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */controlText(text,el=this.el()){if(text===undefined){return this.controlText_||'Need Text';}const localizedText=this.localize(text);/** @protected */this.controlText_=text;textContent(this.controlTextEl_,localizedText);if(!this.nonIconControl&&!this.player_.options_.noUITitleAttributes){// Set title attribute if only an icon is shown\nel.setAttribute('title',localizedText);}}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){return`vjs-control vjs-button ${super.buildCSSClass()}`;}/**\n   * Enable this `ClickableComponent`\n   */enable(){if(!this.enabled_){this.enabled_=true;this.removeClass('vjs-disabled');this.el_.setAttribute('aria-disabled','false');if(typeof this.tabIndex_!=='undefined'){this.el_.setAttribute('tabIndex',this.tabIndex_);}this.on(['tap','click'],this.handleClick_);this.on('keydown',this.handleKeyDown_);}}/**\n   * Disable this `ClickableComponent`\n   */disable(){this.enabled_=false;this.addClass('vjs-disabled');this.el_.setAttribute('aria-disabled','true');if(typeof this.tabIndex_!=='undefined'){this.el_.removeAttribute('tabIndex');}this.off('mouseover',this.handleMouseOver_);this.off('mouseout',this.handleMouseOut_);this.off(['tap','click'],this.handleClick_);this.off('keydown',this.handleKeyDown_);}/**\n   * Handles language change in ClickableComponent for the player in components\n   *\n   *\n   */handleLanguagechange(){this.controlText(this.controlText_);}/**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */handleClick(event){if(this.options_.clickHandler){this.options_.clickHandler.call(this,arguments);}}/**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */handleKeyDown(event){// Support Space or Enter key operation to fire a click event. Also,\n// prevent the event from propagating through the DOM and triggering\n// Player hotkeys.\nif(keycode.isEventKey(event,'Space')||keycode.isEventKey(event,'Enter')){event.preventDefault();event.stopPropagation();this.trigger('click');}else{// Pass keypress handling up for unsupported keys\nsuper.handleKeyDown(event);}}}Component$1.registerComponent('ClickableComponent',ClickableComponent);/**\n * @file poster-image.js\n */ /**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */class PosterImage extends ClickableComponent{/**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);this.update();this.update_=e=>this.update(e);player.on('posterchange',this.update_);}/**\n   * Clean up and dispose of the `PosterImage`.\n   */dispose(){this.player().off('posterchange',this.update_);super.dispose();}/**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */createEl(){const el=createEl('picture',{className:'vjs-poster',// Don't want poster to be tabbable.\ntabIndex:-1},{},createEl('img',{loading:'lazy',crossOrigin:this.crossOrigin()},{alt:''}));return el;}/**\n   * Get or set the `PosterImage`'s crossOrigin option.\n   *\n   * @param {string|null} [value]\n   *        The value to set the crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */crossOrigin(value){// `null` can be set to unset a value\nif(typeof value==='undefined'){if(this.el_){// If the poster's element exists, give its value\nreturn this.el_.querySelector('img').crossOrigin;}else if(this.player_.tech_&&this.player_.tech_.isReady_){// If not but the tech is ready, query the tech\nreturn this.player_.crossOrigin();}// Otherwise check options as the  poster is usually set before the state of crossorigin\n// can be retrieved by the getter\nreturn this.player_.options_.crossOrigin||this.player_.options_.crossorigin||null;}if(value!==null&&value!=='anonymous'&&value!=='use-credentials'){this.player_.log.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);return;}this.el_.querySelector('img').crossOrigin=value;return;}/**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */update(event){const url=this.player().poster();this.setSrc(url);// If there's no poster source we should display:none on this component\n// so it's not still clickable or right-clickable\nif(url){this.show();}else{this.hide();}}/**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */setSrc(url){this.el_.querySelector('img').src=url;}/**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */handleClick(event){// We don't want a click to trigger playback when controls are disabled\nif(!this.player_.controls()){return;}if(this.player_.tech(true)){this.player_.tech(true).focus();}if(this.player_.paused()){silencePromise(this.player_.play());}else{this.player_.pause();}}}/**\n * Get or set the `PosterImage`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<img>` tag to control the CORS\n * behavior.\n *\n * @param {string|null} [value]\n *        The value to set the `PosterImages`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|null|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */PosterImage.prototype.crossorigin=PosterImage.prototype.crossOrigin;Component$1.registerComponent('PosterImage',PosterImage);/**\n * @file text-track-display.js\n */const darkGray='#222';const lightGray='#ccc';const fontMap={monospace:'monospace',sansSerif:'sans-serif',serif:'serif',monospaceSansSerif:'\"Andale Mono\", \"Lucida Console\", monospace',monospaceSerif:'\"Courier New\", monospace',proportionalSansSerif:'sans-serif',proportionalSerif:'serif',casual:'\"Comic Sans MS\", Impact, fantasy',script:'\"Monotype Corsiva\", cursive',smallcaps:'\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'};/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */function constructColor(color,opacity){let hex;if(color.length===4){// color looks like \"#f0e\"\nhex=color[1]+color[1]+color[2]+color[2]+color[3]+color[3];}else if(color.length===7){// color looks like \"#f604e2\"\nhex=color.slice(1);}else{throw new Error('Invalid color code provided, '+color+'; must be formatted as e.g. #f0e or #f604e2.');}return'rgba('+parseInt(hex.slice(0,2),16)+','+parseInt(hex.slice(2,4),16)+','+parseInt(hex.slice(4,6),16)+','+opacity+')';}/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */function tryUpdateStyle(el,style,rule){try{el.style[style]=rule;}catch(e){// Satisfies linter.\nreturn;}}/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */class TextTrackDisplay extends Component$1{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */constructor(player,options,ready){super(player,options,ready);const updateDisplayHandler=e=>this.updateDisplay(e);player.on('loadstart',e=>this.toggleDisplay(e));player.on('texttrackchange',updateDisplayHandler);player.on('loadedmetadata',e=>this.preselectTrack(e));// This used to be called during player init, but was causing an error\n// if a track should show by default and the display hadn't loaded yet.\n// Should probably be moved to an external track loader when we support\n// tracks that don't need a display.\nplayer.ready(bind_(this,function(){if(player.tech_&&player.tech_.featuresNativeTextTracks){this.hide();return;}player.on('fullscreenchange',updateDisplayHandler);player.on('playerresize',updateDisplayHandler);const screenOrientation=window$1.screen.orientation||window$1;const changeOrientationEvent=window$1.screen.orientation?'change':'orientationchange';screenOrientation.addEventListener(changeOrientationEvent,updateDisplayHandler);player.on('dispose',()=>screenOrientation.removeEventListener(changeOrientationEvent,updateDisplayHandler));const tracks=this.options_.playerOptions.tracks||[];for(let i=0;i<tracks.length;i++){this.player_.addRemoteTextTrack(tracks[i],true);}this.preselectTrack();}));}/**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */preselectTrack(){const modes={captions:1,subtitles:1};const trackList=this.player_.textTracks();const userPref=this.player_.cache_.selectedLanguage;let firstDesc;let firstCaptions;let preferredTrack;for(let i=0;i<trackList.length;i++){const track=trackList[i];if(userPref&&userPref.enabled&&userPref.language&&userPref.language===track.language&&track.kind in modes){// Always choose the track that matches both language and kind\nif(track.kind===userPref.kind){preferredTrack=track;// or choose the first track that matches language\n}else if(!preferredTrack){preferredTrack=track;}// clear everything if offTextTrackMenuItem was clicked\n}else if(userPref&&!userPref.enabled){preferredTrack=null;firstDesc=null;firstCaptions=null;}else if(track.default){if(track.kind==='descriptions'&&!firstDesc){firstDesc=track;}else if(track.kind in modes&&!firstCaptions){firstCaptions=track;}}}// The preferredTrack matches the user preference and takes\n// precedence over all the other tracks.\n// So, display the preferredTrack before the first default track\n// and the subtitles/captions track before the descriptions track\nif(preferredTrack){preferredTrack.mode='showing';}else if(firstCaptions){firstCaptions.mode='showing';}else if(firstDesc){firstDesc.mode='showing';}}/**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */toggleDisplay(){if(this.player_.tech_&&this.player_.tech_.featuresNativeTextTracks){this.hide();}else{this.show();}}/**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){return super.createEl('div',{className:'vjs-text-track-display'},{'translate':'yes','aria-live':'off','aria-atomic':'true'});}/**\n   * Clear all displayed {@link TextTrack}s.\n   */clearDisplay(){if(typeof window$1.WebVTT==='function'){window$1.WebVTT.processCues(window$1,[],this.el_);}}/**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */updateDisplay(){const tracks=this.player_.textTracks();const allowMultipleShowingTracks=this.options_.allowMultipleShowingTracks;this.clearDisplay();if(allowMultipleShowingTracks){const showingTracks=[];for(let i=0;i<tracks.length;++i){const track=tracks[i];if(track.mode!=='showing'){continue;}showingTracks.push(track);}this.updateForTrack(showingTracks);return;}//  Track display prioritization model: if multiple tracks are 'showing',\n//  display the first 'subtitles' or 'captions' track which is 'showing',\n//  otherwise display the first 'descriptions' track which is 'showing'\nlet descriptionsTrack=null;let captionsSubtitlesTrack=null;let i=tracks.length;while(i--){const track=tracks[i];if(track.mode==='showing'){if(track.kind==='descriptions'){descriptionsTrack=track;}else{captionsSubtitlesTrack=track;}}}if(captionsSubtitlesTrack){if(this.getAttribute('aria-live')!=='off'){this.setAttribute('aria-live','off');}this.updateForTrack(captionsSubtitlesTrack);}else if(descriptionsTrack){if(this.getAttribute('aria-live')!=='assertive'){this.setAttribute('aria-live','assertive');}this.updateForTrack(descriptionsTrack);}}/**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */updateDisplayState(track){const overrides=this.player_.textTrackSettings.getValues();const cues=track.activeCues;let i=cues.length;while(i--){const cue=cues[i];if(!cue){continue;}const cueDiv=cue.displayState;if(overrides.color){cueDiv.firstChild.style.color=overrides.color;}if(overrides.textOpacity){tryUpdateStyle(cueDiv.firstChild,'color',constructColor(overrides.color||'#fff',overrides.textOpacity));}if(overrides.backgroundColor){cueDiv.firstChild.style.backgroundColor=overrides.backgroundColor;}if(overrides.backgroundOpacity){tryUpdateStyle(cueDiv.firstChild,'backgroundColor',constructColor(overrides.backgroundColor||'#000',overrides.backgroundOpacity));}if(overrides.windowColor){if(overrides.windowOpacity){tryUpdateStyle(cueDiv,'backgroundColor',constructColor(overrides.windowColor,overrides.windowOpacity));}else{cueDiv.style.backgroundColor=overrides.windowColor;}}if(overrides.edgeStyle){if(overrides.edgeStyle==='dropshadow'){cueDiv.firstChild.style.textShadow=`2px 2px 3px ${darkGray}, 2px 2px 4px ${darkGray}, 2px 2px 5px ${darkGray}`;}else if(overrides.edgeStyle==='raised'){cueDiv.firstChild.style.textShadow=`1px 1px ${darkGray}, 2px 2px ${darkGray}, 3px 3px ${darkGray}`;}else if(overrides.edgeStyle==='depressed'){cueDiv.firstChild.style.textShadow=`1px 1px ${lightGray}, 0 1px ${lightGray}, -1px -1px ${darkGray}, 0 -1px ${darkGray}`;}else if(overrides.edgeStyle==='uniform'){cueDiv.firstChild.style.textShadow=`0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}`;}}if(overrides.fontPercent&&overrides.fontPercent!==1){const fontSize=window$1.parseFloat(cueDiv.style.fontSize);cueDiv.style.fontSize=fontSize*overrides.fontPercent+'px';cueDiv.style.height='auto';cueDiv.style.top='auto';}if(overrides.fontFamily&&overrides.fontFamily!=='default'){if(overrides.fontFamily==='small-caps'){cueDiv.firstChild.style.fontVariant='small-caps';}else{cueDiv.firstChild.style.fontFamily=fontMap[overrides.fontFamily];}}}}/**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */updateForTrack(tracks){if(!Array.isArray(tracks)){tracks=[tracks];}if(typeof window$1.WebVTT!=='function'||tracks.every(track=>{return!track.activeCues;})){return;}const cues=[];// push all active track cues\nfor(let i=0;i<tracks.length;++i){const track=tracks[i];for(let j=0;j<track.activeCues.length;++j){cues.push(track.activeCues[j]);}}// removes all cues before it processes new ones\nwindow$1.WebVTT.processCues(window$1,cues,this.el_);// add unique class to each language text track & add settings styling if necessary\nfor(let i=0;i<tracks.length;++i){const track=tracks[i];for(let j=0;j<track.activeCues.length;++j){const cueEl=track.activeCues[j].displayState;addClass(cueEl,'vjs-text-track-cue','vjs-text-track-cue-'+(track.language?track.language:i));if(track.language){setAttribute(cueEl,'lang',track.language);}}if(this.player_.textTrackSettings){this.updateDisplayState(track);}}}}Component$1.registerComponent('TextTrackDisplay',TextTrackDisplay);/**\n * @file loading-spinner.js\n */ /**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */class LoadingSpinner extends Component$1{/**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */createEl(){const isAudio=this.player_.isAudio();const playerType=this.localize(isAudio?'Audio Player':'Video Player');const controlText=createEl('span',{className:'vjs-control-text',textContent:this.localize('{1} is loading.',[playerType])});const el=super.createEl('div',{className:'vjs-loading-spinner',dir:'ltr'});el.appendChild(controlText);return el;}}Component$1.registerComponent('LoadingSpinner',LoadingSpinner);/**\n * @file button.js\n */ /**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */class Button extends ClickableComponent{/**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */createEl(tag,props={},attributes={}){tag='button';props=Object.assign({className:this.buildCSSClass()},props);// Add attributes for button element\nattributes=Object.assign({// Necessary since the default button type is \"submit\"\ntype:'button'},attributes);const el=createEl(tag,props,attributes);el.appendChild(createEl('span',{className:'vjs-icon-placeholder'},{'aria-hidden':true}));this.createControlTextEl(el);return el;}/**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */addChild(child,options={}){const className=this.constructor.name;log$1.warn(`Adding an actionable (user controllable) child to a Button (${className}) is not supported; use a ClickableComponent instead.`);// Avoid the error message generated by ClickableComponent's addChild method\nreturn Component$1.prototype.addChild.call(this,child,options);}/**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */enable(){super.enable();this.el_.removeAttribute('disabled');}/**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */disable(){super.disable();this.el_.setAttribute('disabled','disabled');}/**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */handleKeyDown(event){// Ignore Space or Enter key operation, which is handled by the browser for\n// a button - though not for its super class, ClickableComponent. Also,\n// prevent the event from propagating through the DOM and triggering Player\n// hotkeys. We do not preventDefault here because we _want_ the browser to\n// handle it.\nif(keycode.isEventKey(event,'Space')||keycode.isEventKey(event,'Enter')){event.stopPropagation();return;}// Pass keypress handling up for unsupported keys\nsuper.handleKeyDown(event);}}Component$1.registerComponent('Button',Button);/**\n * @file big-play-button.js\n */ /**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */class BigPlayButton extends Button{constructor(player,options){super(player,options);this.mouseused_=false;this.on('mousedown',e=>this.handleMouseDown(e));}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */buildCSSClass(){return'vjs-big-play-button';}/**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */handleClick(event){const playPromise=this.player_.play();// exit early if clicked via the mouse\nif(this.mouseused_&&event.clientX&&event.clientY){silencePromise(playPromise);if(this.player_.tech(true)){this.player_.tech(true).focus();}return;}const cb=this.player_.getChild('controlBar');const playToggle=cb&&cb.getChild('playToggle');if(!playToggle){this.player_.tech(true).focus();return;}const playFocus=()=>playToggle.focus();if(isPromise(playPromise)){playPromise.then(playFocus,()=>{});}else{this.setTimeout(playFocus,1);}}handleKeyDown(event){this.mouseused_=false;super.handleKeyDown(event);}handleMouseDown(event){this.mouseused_=true;}}/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n */BigPlayButton.prototype.controlText_='Play Video';Component$1.registerComponent('BigPlayButton',BigPlayButton);/**\n * @file close-button.js\n */ /**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */class CloseButton extends Button{/**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */constructor(player,options){super(player,options);this.controlText(options&&options.controlText||this.localize('Close'));}/**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */buildCSSClass(){return`vjs-close-button ${super.buildCSSClass()}`;}/**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */handleClick(event){/**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */this.trigger({type:'close',bubbles:false});}/**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */handleKeyDown(event){// Esc button will trigger `click` event\nif(keycode.isEventKey(event,'Esc')){event.preventDefault();event.stopPropagation();this.trigger('click');}else{// Pass keypress handling up for unsupported keys\nsuper.handleKeyDown(event);}}}Component$1.registerComponent('CloseButton',CloseButton);/**\n * @file play-toggle.js\n */ /**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */class PlayToggle extends Button{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */constructor(player,options={}){super(player,options);// show or hide replay icon\noptions.replay=options.replay===undefined||options.replay;this.on(player,'play',e=>this.handlePlay(e));this.on(player,'pause',e=>this.handlePause(e));if(options.replay){this.on(player,'ended',e=>this.handleEnded(e));}}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){return`vjs-play-control ${super.buildCSSClass()}`;}/**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */handleClick(event){if(this.player_.paused()){silencePromise(this.player_.play());}else{this.player_.pause();}}/**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */handleSeeked(event){this.removeClass('vjs-ended');if(this.player_.paused()){this.handlePause(event);}else{this.handlePlay(event);}}/**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */handlePlay(event){this.removeClass('vjs-ended','vjs-paused');this.addClass('vjs-playing');// change the button text to \"Pause\"\nthis.controlText('Pause');}/**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */handlePause(event){this.removeClass('vjs-playing');this.addClass('vjs-paused');// change the button text to \"Play\"\nthis.controlText('Play');}/**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */handleEnded(event){this.removeClass('vjs-playing');this.addClass('vjs-ended');// change the button text to \"Replay\"\nthis.controlText('Replay');// on the next seek remove the replay button\nthis.one(this.player_,'seeked',e=>this.handleSeeked(e));}}/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */PlayToggle.prototype.controlText_='Play';Component$1.registerComponent('PlayToggle',PlayToggle);/**\n * @file time-display.js\n */ /**\n * Displays time information about the video\n *\n * @extends Component\n */class TimeDisplay extends Component$1{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);this.on(player,['timeupdate','ended'],e=>this.updateContent(e));this.updateTextNode_();}/**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){const className=this.buildCSSClass();const el=super.createEl('div',{className:`${className} vjs-time-control vjs-control`});const span=createEl('span',{className:'vjs-control-text',textContent:`${this.localize(this.labelText_)}\\u00a0`},{role:'presentation'});el.appendChild(span);this.contentEl_=createEl('span',{className:`${className}-display`},{// tell screen readers not to automatically read the time as it changes\n'aria-live':'off',// span elements have no implicit role, but some screen readers (notably VoiceOver)\n// treat them as a break between items in the DOM when using arrow keys\n// (or left-to-right swipes on iOS) to read contents of a page. Using\n// role='presentation' causes VoiceOver to NOT treat this span as a break.\n'role':'presentation'});el.appendChild(this.contentEl_);return el;}dispose(){this.contentEl_=null;this.textNode_=null;super.dispose();}/**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */updateTextNode_(time=0){time=formatTime(time);if(this.formattedTime_===time){return;}this.formattedTime_=time;this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_',()=>{if(!this.contentEl_){return;}let oldNode=this.textNode_;if(oldNode&&this.contentEl_.firstChild!==oldNode){oldNode=null;log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');}this.textNode_=document.createTextNode(this.formattedTime_);if(!this.textNode_){return;}if(oldNode){this.contentEl_.replaceChild(this.textNode_,oldNode);}else{this.contentEl_.appendChild(this.textNode_);}});}/**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */updateContent(event){}}/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */TimeDisplay.prototype.labelText_='Time';/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */TimeDisplay.prototype.controlText_='Time';Component$1.registerComponent('TimeDisplay',TimeDisplay);/**\n * @file current-time-display.js\n */ /**\n * Displays the current time\n *\n * @extends Component\n */class CurrentTimeDisplay extends TimeDisplay{/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){return'vjs-current-time';}/**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */updateContent(event){// Allows for smooth scrubbing, when player can't keep up.\nlet time;if(this.player_.ended()){time=this.player_.duration();}else{time=this.player_.scrubbing()?this.player_.getCache().currentTime:this.player_.currentTime();}this.updateTextNode_(time);}}/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */CurrentTimeDisplay.prototype.labelText_='Current Time';/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */CurrentTimeDisplay.prototype.controlText_='Current Time';Component$1.registerComponent('CurrentTimeDisplay',CurrentTimeDisplay);/**\n * @file duration-display.js\n */ /**\n * Displays the duration\n *\n * @extends Component\n */class DurationDisplay extends TimeDisplay{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);const updateContent=e=>this.updateContent(e);// we do not want to/need to throttle duration changes,\n// as they should always display the changed duration as\n// it has changed\nthis.on(player,'durationchange',updateContent);// Listen to loadstart because the player duration is reset when a new media element is loaded,\n// but the durationchange on the user agent will not fire.\n// @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\nthis.on(player,'loadstart',updateContent);// Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n// listeners could have broken dependent applications/libraries. These\n// can likely be removed for 7.0.\nthis.on(player,'loadedmetadata',updateContent);}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){return'vjs-duration';}/**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */updateContent(event){const duration=this.player_.duration();this.updateTextNode_(duration);}}/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */DurationDisplay.prototype.labelText_='Duration';/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */DurationDisplay.prototype.controlText_='Duration';Component$1.registerComponent('DurationDisplay',DurationDisplay);/**\n * @file time-divider.js\n */ /**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */class TimeDivider extends Component$1{/**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){const el=super.createEl('div',{className:'vjs-time-control vjs-time-divider'},{// this element and its contents can be hidden from assistive techs since\n// it is made extraneous by the announcement of the control text\n// for the current time and duration displays\n'aria-hidden':true});const div=super.createEl('div');const span=super.createEl('span',{textContent:'/'});div.appendChild(span);el.appendChild(div);return el;}}Component$1.registerComponent('TimeDivider',TimeDivider);/**\n * @file remaining-time-display.js\n */ /**\n * Displays the time left in the video\n *\n * @extends Component\n */class RemainingTimeDisplay extends TimeDisplay{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);this.on(player,'durationchange',e=>this.updateContent(e));}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){return'vjs-remaining-time';}/**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){const el=super.createEl();if(this.options_.displayNegative!==false){el.insertBefore(createEl('span',{},{'aria-hidden':true},'-'),this.contentEl_);}return el;}/**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */updateContent(event){if(typeof this.player_.duration()!=='number'){return;}let time;// @deprecated We should only use remainingTimeDisplay\n// as of video.js 7\nif(this.player_.ended()){time=0;}else if(this.player_.remainingTimeDisplay){time=this.player_.remainingTimeDisplay();}else{time=this.player_.remainingTime();}this.updateTextNode_(time);}}/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */RemainingTimeDisplay.prototype.labelText_='Remaining Time';/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */RemainingTimeDisplay.prototype.controlText_='Remaining Time';Component$1.registerComponent('RemainingTimeDisplay',RemainingTimeDisplay);/**\n * @file live-display.js\n */ // TODO - Future make it click to snap to live\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */class LiveDisplay extends Component$1{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);this.updateShowing();this.on(this.player(),'durationchange',e=>this.updateShowing(e));}/**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){const el=super.createEl('div',{className:'vjs-live-control vjs-control'});this.contentEl_=createEl('div',{className:'vjs-live-display'},{'aria-live':'off'});this.contentEl_.appendChild(createEl('span',{className:'vjs-control-text',textContent:`${this.localize('Stream Type')}\\u00a0`}));this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));el.appendChild(this.contentEl_);return el;}dispose(){this.contentEl_=null;super.dispose();}/**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */updateShowing(event){if(this.player().duration()===Infinity){this.show();}else{this.hide();}}}Component$1.registerComponent('LiveDisplay',LiveDisplay);/**\n * @file seek-to-live.js\n */ /**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */class SeekToLive extends Button{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);this.updateLiveEdgeStatus();if(this.player_.liveTracker){this.updateLiveEdgeStatusHandler_=e=>this.updateLiveEdgeStatus(e);this.on(this.player_.liveTracker,'liveedgechange',this.updateLiveEdgeStatusHandler_);}}/**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){const el=super.createEl('button',{className:'vjs-seek-to-live-control vjs-control'});this.textEl_=createEl('span',{className:'vjs-seek-to-live-text',textContent:this.localize('LIVE')},{'aria-hidden':'true'});el.appendChild(this.textEl_);return el;}/**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */updateLiveEdgeStatus(){// default to live edge\nif(!this.player_.liveTracker||this.player_.liveTracker.atLiveEdge()){this.setAttribute('aria-disabled',true);this.addClass('vjs-at-live-edge');this.controlText('Seek to live, currently playing live');}else{this.setAttribute('aria-disabled',false);this.removeClass('vjs-at-live-edge');this.controlText('Seek to live, currently behind live');}}/**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */handleClick(){this.player_.liveTracker.seekToLiveEdge();}/**\n   * Dispose of the element and stop tracking\n   */dispose(){if(this.player_.liveTracker){this.off(this.player_.liveTracker,'liveedgechange',this.updateLiveEdgeStatusHandler_);}this.textEl_=null;super.dispose();}}/**\n * The text that should display over the `SeekToLive`s control. Added for localization.\n *\n * @type {string}\n * @protected\n */SeekToLive.prototype.controlText_='Seek to live, currently playing live';Component$1.registerComponent('SeekToLive',SeekToLive);/**\n * @file num.js\n * @module num\n */ /**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */function clamp(number,min,max){number=Number(number);return Math.min(max,Math.max(min,isNaN(number)?min:number));}var Num=/*#__PURE__*/Object.freeze({__proto__:null,clamp:clamp});/**\n * @file slider.js\n */ /**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */class Slider extends Component$1{/**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */constructor(player,options){super(player,options);this.handleMouseDown_=e=>this.handleMouseDown(e);this.handleMouseUp_=e=>this.handleMouseUp(e);this.handleKeyDown_=e=>this.handleKeyDown(e);this.handleClick_=e=>this.handleClick(e);this.handleMouseMove_=e=>this.handleMouseMove(e);this.update_=e=>this.update(e);// Set property names to bar to match with the child Slider class is looking for\nthis.bar=this.getChild(this.options_.barName);// Set a horizontal or vertical class on the slider depending on the slider type\nthis.vertical(!!this.options_.vertical);this.enable();}/**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */enabled(){return this.enabled_;}/**\n   * Enable controls for this slider if they are disabled\n   */enable(){if(this.enabled()){return;}this.on('mousedown',this.handleMouseDown_);this.on('touchstart',this.handleMouseDown_);this.on('keydown',this.handleKeyDown_);this.on('click',this.handleClick_);// TODO: deprecated, controlsvisible does not seem to be fired\nthis.on(this.player_,'controlsvisible',this.update);if(this.playerEvent){this.on(this.player_,this.playerEvent,this.update);}this.removeClass('disabled');this.setAttribute('tabindex',0);this.enabled_=true;}/**\n   * Disable controls for this slider if they are enabled\n   */disable(){if(!this.enabled()){return;}const doc=this.bar.el_.ownerDocument;this.off('mousedown',this.handleMouseDown_);this.off('touchstart',this.handleMouseDown_);this.off('keydown',this.handleKeyDown_);this.off('click',this.handleClick_);this.off(this.player_,'controlsvisible',this.update_);this.off(doc,'mousemove',this.handleMouseMove_);this.off(doc,'mouseup',this.handleMouseUp_);this.off(doc,'touchmove',this.handleMouseMove_);this.off(doc,'touchend',this.handleMouseUp_);this.removeAttribute('tabindex');this.addClass('disabled');if(this.playerEvent){this.off(this.player_,this.playerEvent,this.update);}this.enabled_=false;}/**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */createEl(type,props={},attributes={}){// Add the slider element class to all sub classes\nprops.className=props.className+' vjs-slider';props=Object.assign({tabIndex:0},props);attributes=Object.assign({'role':'slider','aria-valuenow':0,'aria-valuemin':0,'aria-valuemax':100},attributes);return super.createEl(type,props,attributes);}/**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */handleMouseDown(event){const doc=this.bar.el_.ownerDocument;if(event.type==='mousedown'){event.preventDefault();}// Do not call preventDefault() on touchstart in Chrome\n// to avoid console warnings. Use a 'touch-action: none' style\n// instead to prevent unintented scrolling.\n// https://developers.google.com/web/updates/2017/01/scrolling-intervention\nif(event.type==='touchstart'&&!IS_CHROME){event.preventDefault();}blockTextSelection();this.addClass('vjs-sliding');/**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */this.trigger('slideractive');this.on(doc,'mousemove',this.handleMouseMove_);this.on(doc,'mouseup',this.handleMouseUp_);this.on(doc,'touchmove',this.handleMouseMove_);this.on(doc,'touchend',this.handleMouseUp_);this.handleMouseMove(event,true);}/**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */handleMouseMove(event){}/**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */handleMouseUp(){const doc=this.bar.el_.ownerDocument;unblockTextSelection();this.removeClass('vjs-sliding');/**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */this.trigger('sliderinactive');this.off(doc,'mousemove',this.handleMouseMove_);this.off(doc,'mouseup',this.handleMouseUp_);this.off(doc,'touchmove',this.handleMouseMove_);this.off(doc,'touchend',this.handleMouseUp_);this.update();}/**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */update(){// In VolumeBar init we have a setTimeout for update that pops and update\n// to the end of the execution stack. The player is destroyed before then\n// update will cause an error\n// If there's no bar...\nif(!this.el_||!this.bar){return;}// clamp progress between 0 and 1\n// and only round to four decimal places, as we round to two below\nconst progress=this.getProgress();if(progress===this.progress_){return progress;}this.progress_=progress;this.requestNamedAnimationFrame('Slider#update',()=>{// Set the new bar width or height\nconst sizeKey=this.vertical()?'height':'width';// Convert to a percentage for css value\nthis.bar.el().style[sizeKey]=(progress*100).toFixed(2)+'%';});return progress;}/**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */getProgress(){return Number(clamp(this.getPercent(),0,1).toFixed(4));}/**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */calculateDistance(event){const position=getPointerPosition(this.el_,event);if(this.vertical()){return position.y;}return position.x;}/**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */handleKeyDown(event){// Left and Down Arrows\nif(keycode.isEventKey(event,'Left')||keycode.isEventKey(event,'Down')){event.preventDefault();event.stopPropagation();this.stepBack();// Up and Right Arrows\n}else if(keycode.isEventKey(event,'Right')||keycode.isEventKey(event,'Up')){event.preventDefault();event.stopPropagation();this.stepForward();}else{// Pass keydown handling up for unsupported keys\nsuper.handleKeyDown(event);}}/**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */handleClick(event){event.stopPropagation();event.preventDefault();}/**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */vertical(bool){if(bool===undefined){return this.vertical_||false;}this.vertical_=!!bool;if(this.vertical_){this.addClass('vjs-slider-vertical');}else{this.addClass('vjs-slider-horizontal');}}}Component$1.registerComponent('Slider',Slider);/**\n * @file load-progress-bar.js\n */ // get the percent width of a time compared to the total end\nconst percentify=(time,end)=>clamp(time/end*100,0,100).toFixed(2)+'%';/**\n * Shows loading progress\n *\n * @extends Component\n */class LoadProgressBar extends Component$1{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);this.partEls_=[];this.on(player,'progress',e=>this.update(e));}/**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){const el=super.createEl('div',{className:'vjs-load-progress'});const wrapper=createEl('span',{className:'vjs-control-text'});const loadedText=createEl('span',{textContent:this.localize('Loaded')});const separator=document.createTextNode(': ');this.percentageEl_=createEl('span',{className:'vjs-control-text-loaded-percentage',textContent:'0%'});el.appendChild(wrapper);wrapper.appendChild(loadedText);wrapper.appendChild(separator);wrapper.appendChild(this.percentageEl_);return el;}dispose(){this.partEls_=null;this.percentageEl_=null;super.dispose();}/**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */update(event){this.requestNamedAnimationFrame('LoadProgressBar#update',()=>{const liveTracker=this.player_.liveTracker;const buffered=this.player_.buffered();const duration=liveTracker&&liveTracker.isLive()?liveTracker.seekableEnd():this.player_.duration();const bufferedEnd=this.player_.bufferedEnd();const children=this.partEls_;const percent=percentify(bufferedEnd,duration);if(this.percent_!==percent){// update the width of the progress bar\nthis.el_.style.width=percent;// update the control-text\ntextContent(this.percentageEl_,percent);this.percent_=percent;}// add child elements to represent the individual buffered time ranges\nfor(let i=0;i<buffered.length;i++){const start=buffered.start(i);const end=buffered.end(i);let part=children[i];if(!part){part=this.el_.appendChild(createEl());children[i]=part;}//  only update if changed\nif(part.dataset.start===start&&part.dataset.end===end){continue;}part.dataset.start=start;part.dataset.end=end;// set the percent based on the width of the progress bar (bufferedEnd)\npart.style.left=percentify(start,bufferedEnd);part.style.width=percentify(end-start,bufferedEnd);}// remove unused buffered range elements\nfor(let i=children.length;i>buffered.length;i--){this.el_.removeChild(children[i-1]);}children.length=buffered.length;});}}Component$1.registerComponent('LoadProgressBar',LoadProgressBar);/**\n * @file time-tooltip.js\n */ /**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */class TimeTooltip extends Component$1{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);this.update=throttle(bind_(this,this.update),UPDATE_REFRESH_INTERVAL);}/**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){return super.createEl('div',{className:'vjs-time-tooltip'},{'aria-hidden':'true'});}/**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */update(seekBarRect,seekBarPoint,content){const tooltipRect=findPosition(this.el_);const playerRect=getBoundingClientRect(this.player_.el());const seekBarPointPx=seekBarRect.width*seekBarPoint;// do nothing if either rect isn't available\n// for example, if the player isn't in the DOM for testing\nif(!playerRect||!tooltipRect){return;}// This is the space left of the `seekBarPoint` available within the bounds\n// of the player. We calculate any gap between the left edge of the player\n// and the left edge of the `SeekBar` and add the number of pixels in the\n// `SeekBar` before hitting the `seekBarPoint`\nconst spaceLeftOfPoint=seekBarRect.left-playerRect.left+seekBarPointPx;// This is the space right of the `seekBarPoint` available within the bounds\n// of the player. We calculate the number of pixels from the `seekBarPoint`\n// to the right edge of the `SeekBar` and add to that any gap between the\n// right edge of the `SeekBar` and the player.\nconst spaceRightOfPoint=seekBarRect.width-seekBarPointPx+(playerRect.right-seekBarRect.right);// This is the number of pixels by which the tooltip will need to be pulled\n// further to the right to center it over the `seekBarPoint`.\nlet pullTooltipBy=tooltipRect.width/2;// Adjust the `pullTooltipBy` distance to the left or right depending on\n// the results of the space calculations above.\nif(spaceLeftOfPoint<pullTooltipBy){pullTooltipBy+=pullTooltipBy-spaceLeftOfPoint;}else if(spaceRightOfPoint<pullTooltipBy){pullTooltipBy=spaceRightOfPoint;}// Due to the imprecision of decimal/ratio based calculations and varying\n// rounding behaviors, there are cases where the spacing adjustment is off\n// by a pixel or two. This adds insurance to these calculations.\nif(pullTooltipBy<0){pullTooltipBy=0;}else if(pullTooltipBy>tooltipRect.width){pullTooltipBy=tooltipRect.width;}// prevent small width fluctuations within 0.4px from\n// changing the value below.\n// This really helps for live to prevent the play\n// progress time tooltip from jittering\npullTooltipBy=Math.round(pullTooltipBy);this.el_.style.right=`-${pullTooltipBy}px`;this.write(content);}/**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */write(content){textContent(this.el_,content);}/**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */updateTime(seekBarRect,seekBarPoint,time,cb){this.requestNamedAnimationFrame('TimeTooltip#updateTime',()=>{let content;const duration=this.player_.duration();if(this.player_.liveTracker&&this.player_.liveTracker.isLive()){const liveWindow=this.player_.liveTracker.liveWindow();const secondsBehind=liveWindow-seekBarPoint*liveWindow;content=(secondsBehind<1?'':'-')+formatTime(secondsBehind,liveWindow);}else{content=formatTime(time,duration);}this.update(seekBarRect,seekBarPoint,content);if(cb){cb();}});}}Component$1.registerComponent('TimeTooltip',TimeTooltip);/**\n * @file play-progress-bar.js\n */ /**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */class PlayProgressBar extends Component$1{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);this.update=throttle(bind_(this,this.update),UPDATE_REFRESH_INTERVAL);}/**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){return super.createEl('div',{className:'vjs-play-progress vjs-slider-bar'},{'aria-hidden':'true'});}/**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */update(seekBarRect,seekBarPoint){const timeTooltip=this.getChild('timeTooltip');if(!timeTooltip){return;}const time=this.player_.scrubbing()?this.player_.getCache().currentTime:this.player_.currentTime();timeTooltip.updateTime(seekBarRect,seekBarPoint,time);}}/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */PlayProgressBar.prototype.options_={children:[]};// Time tooltips should not be added to a player on mobile devices\nif(!IS_IOS&&!IS_ANDROID){PlayProgressBar.prototype.options_.children.push('timeTooltip');}Component$1.registerComponent('PlayProgressBar',PlayProgressBar);/**\n * @file mouse-time-display.js\n */ /**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */class MouseTimeDisplay extends Component$1{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);this.update=throttle(bind_(this,this.update),UPDATE_REFRESH_INTERVAL);}/**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){return super.createEl('div',{className:'vjs-mouse-display'});}/**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */update(seekBarRect,seekBarPoint){const time=seekBarPoint*this.player_.duration();this.getChild('timeTooltip').updateTime(seekBarRect,seekBarPoint,time,()=>{this.el_.style.left=`${seekBarRect.width*seekBarPoint}px`;});}}/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */MouseTimeDisplay.prototype.options_={children:['timeTooltip']};Component$1.registerComponent('MouseTimeDisplay',MouseTimeDisplay);/**\n * @file seek-bar.js\n */ // The number of seconds the `step*` functions move the timeline.\nconst STEP_SECONDS=5;// The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\nconst PAGE_KEY_MULTIPLIER=12;/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */class SeekBar extends Slider{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);this.setEventHandlers_();}/**\n   * Sets the event handlers\n   *\n   * @private\n   */setEventHandlers_(){this.update_=bind_(this,this.update);this.update=throttle(this.update_,UPDATE_REFRESH_INTERVAL);this.on(this.player_,['ended','durationchange','timeupdate'],this.update);if(this.player_.liveTracker){this.on(this.player_.liveTracker,'liveedgechange',this.update);}// when playing, let's ensure we smoothly update the play progress bar\n// via an interval\nthis.updateInterval=null;this.enableIntervalHandler_=e=>this.enableInterval_(e);this.disableIntervalHandler_=e=>this.disableInterval_(e);this.on(this.player_,['playing'],this.enableIntervalHandler_);this.on(this.player_,['ended','pause','waiting'],this.disableIntervalHandler_);// we don't need to update the play progress if the document is hidden,\n// also, this causes the CPU to spike and eventually crash the page on IE11.\nif('hidden'in document&&'visibilityState'in document){this.on(document,'visibilitychange',this.toggleVisibility_);}}toggleVisibility_(e){if(document.visibilityState==='hidden'){this.cancelNamedAnimationFrame('SeekBar#update');this.cancelNamedAnimationFrame('Slider#update');this.disableInterval_(e);}else{if(!this.player_.ended()&&!this.player_.paused()){this.enableInterval_();}// we just switched back to the page and someone may be looking, so, update ASAP\nthis.update();}}enableInterval_(){if(this.updateInterval){return;}this.updateInterval=this.setInterval(this.update,UPDATE_REFRESH_INTERVAL);}disableInterval_(e){if(this.player_.liveTracker&&this.player_.liveTracker.isLive()&&e&&e.type!=='ended'){return;}if(!this.updateInterval){return;}this.clearInterval(this.updateInterval);this.updateInterval=null;}/**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){return super.createEl('div',{className:'vjs-progress-holder'},{'aria-label':this.localize('Progress Bar')});}/**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */update(event){// ignore updates while the tab is hidden\nif(document.visibilityState==='hidden'){return;}const percent=super.update();this.requestNamedAnimationFrame('SeekBar#update',()=>{const currentTime=this.player_.ended()?this.player_.duration():this.getCurrentTime_();const liveTracker=this.player_.liveTracker;let duration=this.player_.duration();if(liveTracker&&liveTracker.isLive()){duration=this.player_.liveTracker.liveCurrentTime();}if(this.percent_!==percent){// machine readable value of progress bar (percentage complete)\nthis.el_.setAttribute('aria-valuenow',(percent*100).toFixed(2));this.percent_=percent;}if(this.currentTime_!==currentTime||this.duration_!==duration){// human readable value of progress bar (time complete)\nthis.el_.setAttribute('aria-valuetext',this.localize('progress bar timing: currentTime={1} duration={2}',[formatTime(currentTime,duration),formatTime(duration,duration)],'{1} of {2}'));this.currentTime_=currentTime;this.duration_=duration;}// update the progress bar time tooltip with the current time\nif(this.bar){this.bar.update(getBoundingClientRect(this.el()),this.getProgress());}});return percent;}/**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */userSeek_(ct){if(this.player_.liveTracker&&this.player_.liveTracker.isLive()){this.player_.liveTracker.nextSeekedFromUser();}this.player_.currentTime(ct);}/**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */getCurrentTime_(){return this.player_.scrubbing()?this.player_.getCache().currentTime:this.player_.currentTime();}/**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */getPercent(){const currentTime=this.getCurrentTime_();let percent;const liveTracker=this.player_.liveTracker;if(liveTracker&&liveTracker.isLive()){percent=(currentTime-liveTracker.seekableStart())/liveTracker.liveWindow();// prevent the percent from changing at the live edge\nif(liveTracker.atLiveEdge()){percent=1;}}else{percent=currentTime/this.player_.duration();}return percent;}/**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */handleMouseDown(event){if(!isSingleLeftClick(event)){return;}// Stop event propagation to prevent double fire in progress-control.js\nevent.stopPropagation();this.videoWasPlaying=!this.player_.paused();this.player_.pause();super.handleMouseDown(event);}/**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n   *\n   * @listens mousemove\n   */handleMouseMove(event,mouseDown=false){if(!isSingleLeftClick(event)){return;}if(!mouseDown&&!this.player_.scrubbing()){this.player_.scrubbing(true);}let newTime;const distance=this.calculateDistance(event);const liveTracker=this.player_.liveTracker;if(!liveTracker||!liveTracker.isLive()){newTime=distance*this.player_.duration();// Don't let video end while scrubbing.\nif(newTime===this.player_.duration()){newTime=newTime-0.1;}}else{if(distance>=0.99){liveTracker.seekToLiveEdge();return;}const seekableStart=liveTracker.seekableStart();const seekableEnd=liveTracker.liveCurrentTime();newTime=seekableStart+distance*liveTracker.liveWindow();// Don't let video end while scrubbing.\nif(newTime>=seekableEnd){newTime=seekableEnd;}// Compensate for precision differences so that currentTime is not less\n// than seekable start\nif(newTime<=seekableStart){newTime=seekableStart+0.1;}// On android seekableEnd can be Infinity sometimes,\n// this will cause newTime to be Infinity, which is\n// not a valid currentTime.\nif(newTime===Infinity){return;}}// Set new time (tell player to seek to new time)\nthis.userSeek_(newTime);}enable(){super.enable();const mouseTimeDisplay=this.getChild('mouseTimeDisplay');if(!mouseTimeDisplay){return;}mouseTimeDisplay.show();}disable(){super.disable();const mouseTimeDisplay=this.getChild('mouseTimeDisplay');if(!mouseTimeDisplay){return;}mouseTimeDisplay.hide();}/**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */handleMouseUp(event){super.handleMouseUp(event);// Stop event propagation to prevent double fire in progress-control.js\nif(event){event.stopPropagation();}this.player_.scrubbing(false);/**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */this.player_.trigger({type:'timeupdate',target:this,manuallyTriggered:true});if(this.videoWasPlaying){silencePromise(this.player_.play());}else{// We're done seeking and the time has changed.\n// If the player is paused, make sure we display the correct time on the seek bar.\nthis.update_();}}/**\n   * Move more quickly fast forward for keyboard-only users\n   */stepForward(){this.userSeek_(this.player_.currentTime()+STEP_SECONDS);}/**\n   * Move more quickly rewind for keyboard-only users\n   */stepBack(){this.userSeek_(this.player_.currentTime()-STEP_SECONDS);}/**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */handleAction(event){if(this.player_.paused()){this.player_.play();}else{this.player_.pause();}}/**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */handleKeyDown(event){const liveTracker=this.player_.liveTracker;if(keycode.isEventKey(event,'Space')||keycode.isEventKey(event,'Enter')){event.preventDefault();event.stopPropagation();this.handleAction(event);}else if(keycode.isEventKey(event,'Home')){event.preventDefault();event.stopPropagation();this.userSeek_(0);}else if(keycode.isEventKey(event,'End')){event.preventDefault();event.stopPropagation();if(liveTracker&&liveTracker.isLive()){this.userSeek_(liveTracker.liveCurrentTime());}else{this.userSeek_(this.player_.duration());}}else if(/^[0-9]$/.test(keycode(event))){event.preventDefault();event.stopPropagation();const gotoFraction=(keycode.codes[keycode(event)]-keycode.codes['0'])*10.0/100.0;if(liveTracker&&liveTracker.isLive()){this.userSeek_(liveTracker.seekableStart()+liveTracker.liveWindow()*gotoFraction);}else{this.userSeek_(this.player_.duration()*gotoFraction);}}else if(keycode.isEventKey(event,'PgDn')){event.preventDefault();event.stopPropagation();this.userSeek_(this.player_.currentTime()-STEP_SECONDS*PAGE_KEY_MULTIPLIER);}else if(keycode.isEventKey(event,'PgUp')){event.preventDefault();event.stopPropagation();this.userSeek_(this.player_.currentTime()+STEP_SECONDS*PAGE_KEY_MULTIPLIER);}else{// Pass keydown handling up for unsupported keys\nsuper.handleKeyDown(event);}}dispose(){this.disableInterval_();this.off(this.player_,['ended','durationchange','timeupdate'],this.update);if(this.player_.liveTracker){this.off(this.player_.liveTracker,'liveedgechange',this.update);}this.off(this.player_,['playing'],this.enableIntervalHandler_);this.off(this.player_,['ended','pause','waiting'],this.disableIntervalHandler_);// we don't need to update the play progress if the document is hidden,\n// also, this causes the CPU to spike and eventually crash the page on IE11.\nif('hidden'in document&&'visibilityState'in document){this.off(document,'visibilitychange',this.toggleVisibility_);}super.dispose();}}/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */SeekBar.prototype.options_={children:['loadProgressBar','playProgressBar'],barName:'playProgressBar'};// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif(!IS_IOS&&!IS_ANDROID){SeekBar.prototype.options_.children.splice(1,0,'mouseTimeDisplay');}Component$1.registerComponent('SeekBar',SeekBar);/**\n * @file progress-control.js\n */ /**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */class ProgressControl extends Component$1{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);this.handleMouseMove=throttle(bind_(this,this.handleMouseMove),UPDATE_REFRESH_INTERVAL);this.throttledHandleMouseSeek=throttle(bind_(this,this.handleMouseSeek),UPDATE_REFRESH_INTERVAL);this.handleMouseUpHandler_=e=>this.handleMouseUp(e);this.handleMouseDownHandler_=e=>this.handleMouseDown(e);this.enable();}/**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){return super.createEl('div',{className:'vjs-progress-control vjs-control'});}/**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */handleMouseMove(event){const seekBar=this.getChild('seekBar');if(!seekBar){return;}const playProgressBar=seekBar.getChild('playProgressBar');const mouseTimeDisplay=seekBar.getChild('mouseTimeDisplay');if(!playProgressBar&&!mouseTimeDisplay){return;}const seekBarEl=seekBar.el();const seekBarRect=findPosition(seekBarEl);let seekBarPoint=getPointerPosition(seekBarEl,event).x;// The default skin has a gap on either side of the `SeekBar`. This means\n// that it's possible to trigger this behavior outside the boundaries of\n// the `SeekBar`. This ensures we stay within it at all times.\nseekBarPoint=clamp(seekBarPoint,0,1);if(mouseTimeDisplay){mouseTimeDisplay.update(seekBarRect,seekBarPoint);}if(playProgressBar){playProgressBar.update(seekBarRect,seekBar.getProgress());}}/**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */ /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */handleMouseSeek(event){const seekBar=this.getChild('seekBar');if(seekBar){seekBar.handleMouseMove(event);}}/**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */enabled(){return this.enabled_;}/**\n   * Disable all controls on the progress control and its children\n   */disable(){this.children().forEach(child=>child.disable&&child.disable());if(!this.enabled()){return;}this.off(['mousedown','touchstart'],this.handleMouseDownHandler_);this.off(this.el_,'mousemove',this.handleMouseMove);this.removeListenersAddedOnMousedownAndTouchstart();this.addClass('disabled');this.enabled_=false;// Restore normal playback state if controls are disabled while scrubbing\nif(this.player_.scrubbing()){const seekBar=this.getChild('seekBar');this.player_.scrubbing(false);if(seekBar.videoWasPlaying){silencePromise(this.player_.play());}}}/**\n   * Enable all controls on the progress control and its children\n   */enable(){this.children().forEach(child=>child.enable&&child.enable());if(this.enabled()){return;}this.on(['mousedown','touchstart'],this.handleMouseDownHandler_);this.on(this.el_,'mousemove',this.handleMouseMove);this.removeClass('disabled');this.enabled_=true;}/**\n   * Cleanup listeners after the user finishes interacting with the progress controls\n   */removeListenersAddedOnMousedownAndTouchstart(){const doc=this.el_.ownerDocument;this.off(doc,'mousemove',this.throttledHandleMouseSeek);this.off(doc,'touchmove',this.throttledHandleMouseSeek);this.off(doc,'mouseup',this.handleMouseUpHandler_);this.off(doc,'touchend',this.handleMouseUpHandler_);}/**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */handleMouseDown(event){const doc=this.el_.ownerDocument;const seekBar=this.getChild('seekBar');if(seekBar){seekBar.handleMouseDown(event);}this.on(doc,'mousemove',this.throttledHandleMouseSeek);this.on(doc,'touchmove',this.throttledHandleMouseSeek);this.on(doc,'mouseup',this.handleMouseUpHandler_);this.on(doc,'touchend',this.handleMouseUpHandler_);}/**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */handleMouseUp(event){const seekBar=this.getChild('seekBar');if(seekBar){seekBar.handleMouseUp(event);}this.removeListenersAddedOnMousedownAndTouchstart();}}/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */ProgressControl.prototype.options_={children:['seekBar']};Component$1.registerComponent('ProgressControl',ProgressControl);/**\n * @file picture-in-picture-toggle.js\n */ /**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */class PictureInPictureToggle extends Button{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */constructor(player,options){super(player,options);this.on(player,['enterpictureinpicture','leavepictureinpicture'],e=>this.handlePictureInPictureChange(e));this.on(player,['disablepictureinpicturechanged','loadedmetadata'],e=>this.handlePictureInPictureEnabledChange(e));this.on(player,['loadedmetadata','audioonlymodechange','audiopostermodechange'],()=>{// This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\nconst isSourceAudio=player.currentType().substring(0,5)==='audio';if(isSourceAudio||player.audioPosterMode()||player.audioOnlyMode()){if(player.isInPictureInPicture()){player.exitPictureInPicture();}this.hide();}else{this.show();}});// TODO: Deactivate button on player emptied event.\nthis.disable();}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){return`vjs-picture-in-picture-control ${super.buildCSSClass()}`;}/**\n   * Enables or disables button based on document.pictureInPictureEnabled property value\n   * or on value returned by player.disablePictureInPicture() method.\n   */handlePictureInPictureEnabledChange(){if(document.pictureInPictureEnabled&&this.player_.disablePictureInPicture()===false){this.enable();}else{this.disable();}}/**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */handlePictureInPictureChange(event){if(this.player_.isInPictureInPicture()){this.controlText('Exit Picture-in-Picture');}else{this.controlText('Picture-in-Picture');}this.handlePictureInPictureEnabledChange();}/**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */handleClick(event){if(!this.player_.isInPictureInPicture()){this.player_.requestPictureInPicture();}else{this.player_.exitPictureInPicture();}}}/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */PictureInPictureToggle.prototype.controlText_='Picture-in-Picture';Component$1.registerComponent('PictureInPictureToggle',PictureInPictureToggle);/**\n * @file fullscreen-toggle.js\n */ /**\n * Toggle fullscreen video\n *\n * @extends Button\n */class FullscreenToggle extends Button{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);this.on(player,'fullscreenchange',e=>this.handleFullscreenChange(e));if(document[player.fsApi_.fullscreenEnabled]===false){this.disable();}}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){return`vjs-fullscreen-control ${super.buildCSSClass()}`;}/**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */handleFullscreenChange(event){if(this.player_.isFullscreen()){this.controlText('Exit Fullscreen');}else{this.controlText('Fullscreen');}}/**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */handleClick(event){if(!this.player_.isFullscreen()){this.player_.requestFullscreen();}else{this.player_.exitFullscreen();}}}/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */FullscreenToggle.prototype.controlText_='Fullscreen';Component$1.registerComponent('FullscreenToggle',FullscreenToggle);/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */const checkVolumeSupport=function(self,player){// hide volume controls when they're not supported by the current tech\nif(player.tech_&&!player.tech_.featuresVolumeControl){self.addClass('vjs-hidden');}self.on(player,'loadstart',function(){if(!player.tech_.featuresVolumeControl){self.addClass('vjs-hidden');}else{self.removeClass('vjs-hidden');}});};/**\n * @file volume-level.js\n */ /**\n * Shows volume level\n *\n * @extends Component\n */class VolumeLevel extends Component$1{/**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){const el=super.createEl('div',{className:'vjs-volume-level'});el.appendChild(super.createEl('span',{className:'vjs-control-text'}));return el;}}Component$1.registerComponent('VolumeLevel',VolumeLevel);/**\n * @file volume-level-tooltip.js\n */ /**\n * Volume level tooltips display a volume above or side by side the volume bar.\n *\n * @extends Component\n */class VolumeLevelTooltip extends Component$1{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);this.update=throttle(bind_(this,this.update),UPDATE_REFRESH_INTERVAL);}/**\n   * Create the volume tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){return super.createEl('div',{className:'vjs-volume-tooltip'},{'aria-hidden':'true'});}/**\n   * Updates the position of the tooltip relative to the `VolumeBar` and\n   * its content text.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */update(rangeBarRect,rangeBarPoint,vertical,content){if(!vertical){const tooltipRect=getBoundingClientRect(this.el_);const playerRect=getBoundingClientRect(this.player_.el());const volumeBarPointPx=rangeBarRect.width*rangeBarPoint;if(!playerRect||!tooltipRect){return;}const spaceLeftOfPoint=rangeBarRect.left-playerRect.left+volumeBarPointPx;const spaceRightOfPoint=rangeBarRect.width-volumeBarPointPx+(playerRect.right-rangeBarRect.right);let pullTooltipBy=tooltipRect.width/2;if(spaceLeftOfPoint<pullTooltipBy){pullTooltipBy+=pullTooltipBy-spaceLeftOfPoint;}else if(spaceRightOfPoint<pullTooltipBy){pullTooltipBy=spaceRightOfPoint;}if(pullTooltipBy<0){pullTooltipBy=0;}else if(pullTooltipBy>tooltipRect.width){pullTooltipBy=tooltipRect.width;}this.el_.style.right=`-${pullTooltipBy}px`;}this.write(`${content}%`);}/**\n   * Write the volume to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted volume for the tooltip.\n   */write(content){textContent(this.el_,content);}/**\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   * @param {number} volume\n   *        The volume level to update the tooltip to\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */updateVolume(rangeBarRect,rangeBarPoint,vertical,volume,cb){this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume',()=>{this.update(rangeBarRect,rangeBarPoint,vertical,volume.toFixed(0));if(cb){cb();}});}}Component$1.registerComponent('VolumeLevelTooltip',VolumeLevelTooltip);/**\n * @file mouse-volume-level-display.js\n */ /**\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n * indicating the volume level which is represented by a given point in the\n * {@link VolumeBar}.\n *\n * @extends Component\n */class MouseVolumeLevelDisplay extends Component$1{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);this.update=throttle(bind_(this,this.update),UPDATE_REFRESH_INTERVAL);}/**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){return super.createEl('div',{className:'vjs-mouse-display'});}/**\n   * Enquires updates to its own DOM as well as the DOM of its\n   * {@link VolumeLevelTooltip} child.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */update(rangeBarRect,rangeBarPoint,vertical){const volume=100*rangeBarPoint;this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect,rangeBarPoint,vertical,volume,()=>{if(vertical){this.el_.style.bottom=`${rangeBarRect.height*rangeBarPoint}px`;}else{this.el_.style.left=`${rangeBarRect.width*rangeBarPoint}px`;}});}}/**\n * Default options for `MouseVolumeLevelDisplay`\n *\n * @type {Object}\n * @private\n */MouseVolumeLevelDisplay.prototype.options_={children:['volumeLevelTooltip']};Component$1.registerComponent('MouseVolumeLevelDisplay',MouseVolumeLevelDisplay);/**\n * @file volume-bar.js\n */ /**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */class VolumeBar extends Slider{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);this.on('slideractive',e=>this.updateLastVolume_(e));this.on(player,'volumechange',e=>this.updateARIAAttributes(e));player.ready(()=>this.updateARIAAttributes());}/**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){return super.createEl('div',{className:'vjs-volume-bar vjs-slider-bar'},{'aria-label':this.localize('Volume Level'),'aria-live':'polite'});}/**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */handleMouseDown(event){if(!isSingleLeftClick(event)){return;}super.handleMouseDown(event);}/**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */handleMouseMove(event){const mouseVolumeLevelDisplay=this.getChild('mouseVolumeLevelDisplay');if(mouseVolumeLevelDisplay){const volumeBarEl=this.el();const volumeBarRect=getBoundingClientRect(volumeBarEl);const vertical=this.vertical();let volumeBarPoint=getPointerPosition(volumeBarEl,event);volumeBarPoint=vertical?volumeBarPoint.y:volumeBarPoint.x;// The default skin has a gap on either side of the `VolumeBar`. This means\n// that it's possible to trigger this behavior outside the boundaries of\n// the `VolumeBar`. This ensures we stay within it at all times.\nvolumeBarPoint=clamp(volumeBarPoint,0,1);mouseVolumeLevelDisplay.update(volumeBarRect,volumeBarPoint,vertical);}if(!isSingleLeftClick(event)){return;}this.checkMuted();this.player_.volume(this.calculateDistance(event));}/**\n   * If the player is muted unmute it.\n   */checkMuted(){if(this.player_.muted()){this.player_.muted(false);}}/**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */getPercent(){if(this.player_.muted()){return 0;}return this.player_.volume();}/**\n   * Increase volume level for keyboard users\n   */stepForward(){this.checkMuted();this.player_.volume(this.player_.volume()+0.1);}/**\n   * Decrease volume level for keyboard users\n   */stepBack(){this.checkMuted();this.player_.volume(this.player_.volume()-0.1);}/**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */updateARIAAttributes(event){const ariaValue=this.player_.muted()?0:this.volumeAsPercentage_();this.el_.setAttribute('aria-valuenow',ariaValue);this.el_.setAttribute('aria-valuetext',ariaValue+'%');}/**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */volumeAsPercentage_(){return Math.round(this.player_.volume()*100);}/**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */updateLastVolume_(){const volumeBeforeDrag=this.player_.volume();this.one('sliderinactive',()=>{if(this.player_.volume()===0){this.player_.lastVolume_(volumeBeforeDrag);}});}}/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */VolumeBar.prototype.options_={children:['volumeLevel'],barName:'volumeLevel'};// MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\nif(!IS_IOS&&!IS_ANDROID){VolumeBar.prototype.options_.children.splice(0,0,'mouseVolumeLevelDisplay');}/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */VolumeBar.prototype.playerEvent='volumechange';Component$1.registerComponent('VolumeBar',VolumeBar);/**\n * @file volume-control.js\n */ /**\n * The component for controlling the volume level\n *\n * @extends Component\n */class VolumeControl extends Component$1{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */constructor(player,options={}){options.vertical=options.vertical||false;// Pass the vertical option down to the VolumeBar if\n// the VolumeBar is turned on.\nif(typeof options.volumeBar==='undefined'||isPlain(options.volumeBar)){options.volumeBar=options.volumeBar||{};options.volumeBar.vertical=options.vertical;}super(player,options);// hide this control if volume support is missing\ncheckVolumeSupport(this,player);this.throttledHandleMouseMove=throttle(bind_(this,this.handleMouseMove),UPDATE_REFRESH_INTERVAL);this.handleMouseUpHandler_=e=>this.handleMouseUp(e);this.on('mousedown',e=>this.handleMouseDown(e));this.on('touchstart',e=>this.handleMouseDown(e));this.on('mousemove',e=>this.handleMouseMove(e));// while the slider is active (the mouse has been pressed down and\n// is dragging) or in focus we do not want to hide the VolumeBar\nthis.on(this.volumeBar,['focus','slideractive'],()=>{this.volumeBar.addClass('vjs-slider-active');this.addClass('vjs-slider-active');this.trigger('slideractive');});this.on(this.volumeBar,['blur','sliderinactive'],()=>{this.volumeBar.removeClass('vjs-slider-active');this.removeClass('vjs-slider-active');this.trigger('sliderinactive');});}/**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){let orientationClass='vjs-volume-horizontal';if(this.options_.vertical){orientationClass='vjs-volume-vertical';}return super.createEl('div',{className:`vjs-volume-control vjs-control ${orientationClass}`});}/**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */handleMouseDown(event){const doc=this.el_.ownerDocument;this.on(doc,'mousemove',this.throttledHandleMouseMove);this.on(doc,'touchmove',this.throttledHandleMouseMove);this.on(doc,'mouseup',this.handleMouseUpHandler_);this.on(doc,'touchend',this.handleMouseUpHandler_);}/**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */handleMouseUp(event){const doc=this.el_.ownerDocument;this.off(doc,'mousemove',this.throttledHandleMouseMove);this.off(doc,'touchmove',this.throttledHandleMouseMove);this.off(doc,'mouseup',this.handleMouseUpHandler_);this.off(doc,'touchend',this.handleMouseUpHandler_);}/**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */handleMouseMove(event){this.volumeBar.handleMouseMove(event);}}/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */VolumeControl.prototype.options_={children:['volumeBar']};Component$1.registerComponent('VolumeControl',VolumeControl);/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */const checkMuteSupport=function(self,player){// hide mute toggle button if it's not supported by the current tech\nif(player.tech_&&!player.tech_.featuresMuteControl){self.addClass('vjs-hidden');}self.on(player,'loadstart',function(){if(!player.tech_.featuresMuteControl){self.addClass('vjs-hidden');}else{self.removeClass('vjs-hidden');}});};/**\n * @file mute-toggle.js\n */ /**\n * A button component for muting the audio.\n *\n * @extends Button\n */class MuteToggle extends Button{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);// hide this control if volume support is missing\ncheckMuteSupport(this,player);this.on(player,['loadstart','volumechange'],e=>this.update(e));}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){return`vjs-mute-control ${super.buildCSSClass()}`;}/**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */handleClick(event){const vol=this.player_.volume();const lastVolume=this.player_.lastVolume_();if(vol===0){const volumeToSet=lastVolume<0.1?0.1:lastVolume;this.player_.volume(volumeToSet);this.player_.muted(false);}else{this.player_.muted(this.player_.muted()?false:true);}}/**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */update(event){this.updateIcon_();this.updateControlText_();}/**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */updateIcon_(){const vol=this.player_.volume();let level=3;// in iOS when a player is loaded with muted attribute\n// and volume is changed with a native mute button\n// we want to make sure muted state is updated\nif(IS_IOS&&this.player_.tech_&&this.player_.tech_.el_){this.player_.muted(this.player_.tech_.el_.muted);}if(vol===0||this.player_.muted()){level=0;}else if(vol<0.33){level=1;}else if(vol<0.67){level=2;}removeClass(this.el_,[0,1,2,3].reduce((str,i)=>str+`${i?' ':''}vjs-vol-${i}`,''));addClass(this.el_,`vjs-vol-${level}`);}/**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */updateControlText_(){const soundOff=this.player_.muted()||this.player_.volume()===0;const text=soundOff?'Unmute':'Mute';if(this.controlText()!==text){this.controlText(text);}}}/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */MuteToggle.prototype.controlText_='Mute';Component$1.registerComponent('MuteToggle',MuteToggle);/**\n * @file volume-control.js\n */ /**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */class VolumePanel extends Component$1{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */constructor(player,options={}){if(typeof options.inline!=='undefined'){options.inline=options.inline;}else{options.inline=true;}// pass the inline option down to the VolumeControl as vertical if\n// the VolumeControl is on.\nif(typeof options.volumeControl==='undefined'||isPlain(options.volumeControl)){options.volumeControl=options.volumeControl||{};options.volumeControl.vertical=!options.inline;}super(player,options);// this handler is used by mouse handler methods below\nthis.handleKeyPressHandler_=e=>this.handleKeyPress(e);this.on(player,['loadstart'],e=>this.volumePanelState_(e));this.on(this.muteToggle,'keyup',e=>this.handleKeyPress(e));this.on(this.volumeControl,'keyup',e=>this.handleVolumeControlKeyUp(e));this.on('keydown',e=>this.handleKeyPress(e));this.on('mouseover',e=>this.handleMouseOver(e));this.on('mouseout',e=>this.handleMouseOut(e));// while the slider is active (the mouse has been pressed down and\n// is dragging) we do not want to hide the VolumeBar\nthis.on(this.volumeControl,['slideractive'],this.sliderActive_);this.on(this.volumeControl,['sliderinactive'],this.sliderInactive_);}/**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */sliderActive_(){this.addClass('vjs-slider-active');}/**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */sliderInactive_(){this.removeClass('vjs-slider-active');}/**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */volumePanelState_(){// hide volume panel if neither volume control or mute toggle\n// are displayed\nif(this.volumeControl.hasClass('vjs-hidden')&&this.muteToggle.hasClass('vjs-hidden')){this.addClass('vjs-hidden');}// if only mute toggle is visible we don't want\n// volume panel expanding when hovered or active\nif(this.volumeControl.hasClass('vjs-hidden')&&!this.muteToggle.hasClass('vjs-hidden')){this.addClass('vjs-mute-toggle-only');}}/**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){let orientationClass='vjs-volume-panel-horizontal';if(!this.options_.inline){orientationClass='vjs-volume-panel-vertical';}return super.createEl('div',{className:`vjs-volume-panel vjs-control ${orientationClass}`});}/**\n   * Dispose of the `volume-panel` and all child components.\n   */dispose(){this.handleMouseOut();super.dispose();}/**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */handleVolumeControlKeyUp(event){if(keycode.isEventKey(event,'Esc')){this.muteToggle.focus();}}/**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */handleMouseOver(event){this.addClass('vjs-hover');on(document,'keyup',this.handleKeyPressHandler_);}/**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */handleMouseOut(event){this.removeClass('vjs-hover');off(document,'keyup',this.handleKeyPressHandler_);}/**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */handleKeyPress(event){if(keycode.isEventKey(event,'Esc')){this.handleMouseOut();}}}/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */VolumePanel.prototype.options_={children:['muteToggle','volumeControl']};Component$1.registerComponent('VolumePanel',VolumePanel);/**\n * @file menu.js\n */ /**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */class Menu extends Component$1{/**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */constructor(player,options){super(player,options);if(options){this.menuButton_=options.menuButton;}this.focusedChild_=-1;this.on('keydown',e=>this.handleKeyDown(e));// All the menu item instances share the same blur handler provided by the menu container.\nthis.boundHandleBlur_=e=>this.handleBlur(e);this.boundHandleTapClick_=e=>this.handleTapClick(e);}/**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */addEventListenerForItem(component){if(!(component instanceof Component$1)){return;}this.on(component,'blur',this.boundHandleBlur_);this.on(component,['tap','click'],this.boundHandleTapClick_);}/**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */removeEventListenerForItem(component){if(!(component instanceof Component$1)){return;}this.off(component,'blur',this.boundHandleBlur_);this.off(component,['tap','click'],this.boundHandleTapClick_);}/**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */removeChild(component){if(typeof component==='string'){component=this.getChild(component);}this.removeEventListenerForItem(component);super.removeChild(component);}/**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */addItem(component){const childComponent=this.addChild(component);if(childComponent){this.addEventListenerForItem(childComponent);}}/**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */createEl(){const contentElType=this.options_.contentElType||'ul';this.contentEl_=createEl(contentElType,{className:'vjs-menu-content'});this.contentEl_.setAttribute('role','menu');const el=super.createEl('div',{append:this.contentEl_,className:'vjs-menu'});el.appendChild(this.contentEl_);// Prevent clicks from bubbling up. Needed for Menu Buttons,\n// where a click on the parent is significant\non(el,'click',function(event){event.preventDefault();event.stopImmediatePropagation();});return el;}dispose(){this.contentEl_=null;this.boundHandleBlur_=null;this.boundHandleTapClick_=null;super.dispose();}/**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */handleBlur(event){const relatedTarget=event.relatedTarget||document.activeElement;// Close menu popup when a user clicks outside the menu\nif(!this.children().some(element=>{return element.el()===relatedTarget;})){const btn=this.menuButton_;if(btn&&btn.buttonPressed_&&relatedTarget!==btn.el().firstChild){btn.unpressButton();}}}/**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */handleTapClick(event){// Unpress the associated MenuButton, and move focus back to it\nif(this.menuButton_){this.menuButton_.unpressButton();const childComponents=this.children();if(!Array.isArray(childComponents)){return;}const foundComponent=childComponents.filter(component=>component.el()===event.target)[0];if(!foundComponent){return;}// don't focus menu button if item is a caption settings item\n// because focus will move elsewhere\nif(foundComponent.name()!=='CaptionSettingsMenuItem'){this.menuButton_.focus();}}}/**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */handleKeyDown(event){// Left and Down Arrows\nif(keycode.isEventKey(event,'Left')||keycode.isEventKey(event,'Down')){event.preventDefault();event.stopPropagation();this.stepForward();// Up and Right Arrows\n}else if(keycode.isEventKey(event,'Right')||keycode.isEventKey(event,'Up')){event.preventDefault();event.stopPropagation();this.stepBack();}}/**\n   * Move to next (lower) menu item for keyboard users.\n   */stepForward(){let stepChild=0;if(this.focusedChild_!==undefined){stepChild=this.focusedChild_+1;}this.focus(stepChild);}/**\n   * Move to previous (higher) menu item for keyboard users.\n   */stepBack(){let stepChild=0;if(this.focusedChild_!==undefined){stepChild=this.focusedChild_-1;}this.focus(stepChild);}/**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */focus(item=0){const children=this.children().slice();const haveTitle=children.length&&children[0].hasClass('vjs-menu-title');if(haveTitle){children.shift();}if(children.length>0){if(item<0){item=0;}else if(item>=children.length){item=children.length-1;}this.focusedChild_=item;children[item].el_.focus();}}}Component$1.registerComponent('Menu',Menu);/**\n * @file menu-button.js\n */ /**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */class MenuButton extends Component$1{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */constructor(player,options={}){super(player,options);this.menuButton_=new Button(player,options);this.menuButton_.controlText(this.controlText_);this.menuButton_.el_.setAttribute('aria-haspopup','true');// Add buildCSSClass values to the button, not the wrapper\nconst buttonClass=Button.prototype.buildCSSClass();this.menuButton_.el_.className=this.buildCSSClass()+' '+buttonClass;this.menuButton_.removeClass('vjs-control');this.addChild(this.menuButton_);this.update();this.enabled_=true;const handleClick=e=>this.handleClick(e);this.handleMenuKeyUp_=e=>this.handleMenuKeyUp(e);this.on(this.menuButton_,'tap',handleClick);this.on(this.menuButton_,'click',handleClick);this.on(this.menuButton_,'keydown',e=>this.handleKeyDown(e));this.on(this.menuButton_,'mouseenter',()=>{this.addClass('vjs-hover');this.menu.show();on(document,'keyup',this.handleMenuKeyUp_);});this.on('mouseleave',e=>this.handleMouseLeave(e));this.on('keydown',e=>this.handleSubmenuKeyDown(e));}/**\n   * Update the menu based on the current state of its items.\n   */update(){const menu=this.createMenu();if(this.menu){this.menu.dispose();this.removeChild(this.menu);}this.menu=menu;this.addChild(menu);/**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */this.buttonPressed_=false;this.menuButton_.el_.setAttribute('aria-expanded','false');if(this.items&&this.items.length<=this.hideThreshold_){this.hide();this.menu.contentEl_.removeAttribute('role');}else{this.show();this.menu.contentEl_.setAttribute('role','menu');}}/**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */createMenu(){const menu=new Menu(this.player_,{menuButton:this});/**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */this.hideThreshold_=0;// Add a title list item to the top\nif(this.options_.title){const titleEl=createEl('li',{className:'vjs-menu-title',textContent:toTitleCase$1(this.options_.title),tabIndex:-1});const titleComponent=new Component$1(this.player_,{el:titleEl});menu.addItem(titleComponent);}this.items=this.createItems();if(this.items){// Add menu items to the menu\nfor(let i=0;i<this.items.length;i++){menu.addItem(this.items[i]);}}return menu;}/**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */createItems(){}/**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */createEl(){return super.createEl('div',{className:this.buildWrapperCSSClass()},{});}/**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */buildWrapperCSSClass(){let menuButtonClass='vjs-menu-button';// If the inline option is passed, we want to use different styles altogether.\nif(this.options_.inline===true){menuButtonClass+='-inline';}else{menuButtonClass+='-popup';}// TODO: Fix the CSS so that this isn't necessary\nconst buttonClass=Button.prototype.buildCSSClass();return`vjs-menu-button ${menuButtonClass} ${buttonClass} ${super.buildCSSClass()}`;}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){let menuButtonClass='vjs-menu-button';// If the inline option is passed, we want to use different styles altogether.\nif(this.options_.inline===true){menuButtonClass+='-inline';}else{menuButtonClass+='-popup';}return`vjs-menu-button ${menuButtonClass} ${super.buildCSSClass()}`;}/**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */controlText(text,el=this.menuButton_.el()){return this.menuButton_.controlText(text,el);}/**\n   * Dispose of the `menu-button` and all child components.\n   */dispose(){this.handleMouseLeave();super.dispose();}/**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */handleClick(event){if(this.buttonPressed_){this.unpressButton();}else{this.pressButton();}}/**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */handleMouseLeave(event){this.removeClass('vjs-hover');off(document,'keyup',this.handleMenuKeyUp_);}/**\n   * Set the focus to the actual button, not to this element\n   */focus(){this.menuButton_.focus();}/**\n   * Remove the focus from the actual button, not this element\n   */blur(){this.menuButton_.blur();}/**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */handleKeyDown(event){// Escape or Tab unpress the 'button'\nif(keycode.isEventKey(event,'Esc')||keycode.isEventKey(event,'Tab')){if(this.buttonPressed_){this.unpressButton();}// Don't preventDefault for Tab key - we still want to lose focus\nif(!keycode.isEventKey(event,'Tab')){event.preventDefault();// Set focus back to the menu button's button\nthis.menuButton_.focus();}// Up Arrow or Down Arrow also 'press' the button to open the menu\n}else if(keycode.isEventKey(event,'Up')||keycode.isEventKey(event,'Down')){if(!this.buttonPressed_){event.preventDefault();this.pressButton();}}}/**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */handleMenuKeyUp(event){// Escape hides popup menu\nif(keycode.isEventKey(event,'Esc')||keycode.isEventKey(event,'Tab')){this.removeClass('vjs-hover');}}/**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */handleSubmenuKeyPress(event){this.handleSubmenuKeyDown(event);}/**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */handleSubmenuKeyDown(event){// Escape or Tab unpress the 'button'\nif(keycode.isEventKey(event,'Esc')||keycode.isEventKey(event,'Tab')){if(this.buttonPressed_){this.unpressButton();}// Don't preventDefault for Tab key - we still want to lose focus\nif(!keycode.isEventKey(event,'Tab')){event.preventDefault();// Set focus back to the menu button's button\nthis.menuButton_.focus();}}}/**\n   * Put the current `MenuButton` into a pressed state.\n   */pressButton(){if(this.enabled_){this.buttonPressed_=true;this.menu.show();this.menu.lockShowing();this.menuButton_.el_.setAttribute('aria-expanded','true');// set the focus into the submenu, except on iOS where it is resulting in\n// undesired scrolling behavior when the player is in an iframe\nif(IS_IOS&&isInFrame()){// Return early so that the menu isn't focused\nreturn;}this.menu.focus();}}/**\n   * Take the current `MenuButton` out of a pressed state.\n   */unpressButton(){if(this.enabled_){this.buttonPressed_=false;this.menu.unlockShowing();this.menu.hide();this.menuButton_.el_.setAttribute('aria-expanded','false');}}/**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */disable(){this.unpressButton();this.enabled_=false;this.addClass('vjs-disabled');this.menuButton_.disable();}/**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */enable(){this.enabled_=true;this.removeClass('vjs-disabled');this.menuButton_.enable();}}Component$1.registerComponent('MenuButton',MenuButton);/**\n * @file track-button.js\n */ /**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */class TrackButton extends MenuButton{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){const tracks=options.tracks;super(player,options);if(this.items.length<=1){this.hide();}if(!tracks){return;}const updateHandler=bind_(this,this.update);tracks.addEventListener('removetrack',updateHandler);tracks.addEventListener('addtrack',updateHandler);tracks.addEventListener('labelchange',updateHandler);this.player_.on('ready',updateHandler);this.player_.on('dispose',function(){tracks.removeEventListener('removetrack',updateHandler);tracks.removeEventListener('addtrack',updateHandler);tracks.removeEventListener('labelchange',updateHandler);});}}Component$1.registerComponent('TrackButton',TrackButton);/**\n * @file menu-keys.js\n */ /**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n *\n  * @typedef MenuKeys\n  * @array\n  */const MenuKeys=['Tab','Esc','Up','Down','Right','Left'];/**\n * @file menu-item.js\n */ /**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */class MenuItem extends ClickableComponent{/**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */constructor(player,options){super(player,options);this.selectable=options.selectable;this.isSelected_=options.selected||false;this.multiSelectable=options.multiSelectable;this.selected(this.isSelected_);if(this.selectable){if(this.multiSelectable){this.el_.setAttribute('role','menuitemcheckbox');}else{this.el_.setAttribute('role','menuitemradio');}}else{this.el_.setAttribute('role','menuitem');}}/**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */createEl(type,props,attrs){// The control is textual, not just an icon\nthis.nonIconControl=true;const el=super.createEl('li',Object.assign({className:'vjs-menu-item',tabIndex:-1},props),attrs);// swap icon with menu item text.\nel.replaceChild(createEl('span',{className:'vjs-menu-item-text',textContent:this.localize(this.options_.label)}),el.querySelector('.vjs-icon-placeholder'));return el;}/**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */handleKeyDown(event){if(!MenuKeys.some(key=>keycode.isEventKey(event,key))){// Pass keydown handling up for unused keys\nsuper.handleKeyDown(event);}}/**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */handleClick(event){this.selected(true);}/**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */selected(selected){if(this.selectable){if(selected){this.addClass('vjs-selected');this.el_.setAttribute('aria-checked','true');// aria-checked isn't fully supported by browsers/screen readers,\n// so indicate selected state to screen reader in the control text.\nthis.controlText(', selected');this.isSelected_=true;}else{this.removeClass('vjs-selected');this.el_.setAttribute('aria-checked','false');// Indicate un-selected state to screen reader\nthis.controlText('');this.isSelected_=false;}}}}Component$1.registerComponent('MenuItem',MenuItem);/**\n * @file text-track-menu-item.js\n */ /**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */class TextTrackMenuItem extends MenuItem{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){const track=options.track;const tracks=player.textTracks();// Modify options for parent MenuItem class's init.\noptions.label=track.label||track.language||'Unknown';options.selected=track.mode==='showing';super(player,options);this.track=track;// Determine the relevant kind(s) of tracks for this component and filter\n// out empty kinds.\nthis.kinds=(options.kinds||[options.kind||this.track.kind]).filter(Boolean);const changeHandler=(...args)=>{this.handleTracksChange.apply(this,args);};const selectedLanguageChangeHandler=(...args)=>{this.handleSelectedLanguageChange.apply(this,args);};player.on(['loadstart','texttrackchange'],changeHandler);tracks.addEventListener('change',changeHandler);tracks.addEventListener('selectedlanguagechange',selectedLanguageChangeHandler);this.on('dispose',function(){player.off(['loadstart','texttrackchange'],changeHandler);tracks.removeEventListener('change',changeHandler);tracks.removeEventListener('selectedlanguagechange',selectedLanguageChangeHandler);});// iOS7 doesn't dispatch change events to TextTrackLists when an\n// associated track's mode changes. Without something like\n// Object.observe() (also not present on iOS7), it's not\n// possible to detect changes to the mode attribute and polyfill\n// the change event. As a poor substitute, we manually dispatch\n// change events whenever the controls modify the mode.\nif(tracks.onchange===undefined){let event;this.on(['tap','click'],function(){if(typeof window$1.Event!=='object'){// Android 2.3 throws an Illegal Constructor error for window.Event\ntry{event=new window$1.Event('change');}catch(err){// continue regardless of error\n}}if(!event){event=document.createEvent('Event');event.initEvent('change',true,true);}tracks.dispatchEvent(event);});}// set the default state based on current tracks\nthis.handleTracksChange();}/**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */handleClick(event){const referenceTrack=this.track;const tracks=this.player_.textTracks();super.handleClick(event);if(!tracks){return;}for(let i=0;i<tracks.length;i++){const track=tracks[i];// If the track from the text tracks list is not of the right kind,\n// skip it. We do not want to affect tracks of incompatible kind(s).\nif(this.kinds.indexOf(track.kind)===-1){continue;}// If this text track is the component's track and it is not showing,\n// set it to showing.\nif(track===referenceTrack){if(track.mode!=='showing'){track.mode='showing';}// If this text track is not the component's track and it is not\n// disabled, set it to disabled.\n}else if(track.mode!=='disabled'){track.mode='disabled';}}}/**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */handleTracksChange(event){const shouldBeSelected=this.track.mode==='showing';// Prevent redundant selected() calls because they may cause\n// screen readers to read the appended control text unnecessarily\nif(shouldBeSelected!==this.isSelected_){this.selected(shouldBeSelected);}}handleSelectedLanguageChange(event){if(this.track.mode==='showing'){const selectedLanguage=this.player_.cache_.selectedLanguage;// Don't replace the kind of track across the same language\nif(selectedLanguage&&selectedLanguage.enabled&&selectedLanguage.language===this.track.language&&selectedLanguage.kind!==this.track.kind){return;}this.player_.cache_.selectedLanguage={enabled:true,language:this.track.language,kind:this.track.kind};}}dispose(){// remove reference to track object on dispose\nthis.track=null;super.dispose();}}Component$1.registerComponent('TextTrackMenuItem',TextTrackMenuItem);/**\n * @file off-text-track-menu-item.js\n */ /**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */class OffTextTrackMenuItem extends TextTrackMenuItem{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){// Create pseudo track info\n// Requires options['kind']\noptions.track={player,// it is no longer necessary to store `kind` or `kinds` on the track itself\n// since they are now stored in the `kinds` property of all instances of\n// TextTrackMenuItem, but this will remain for backwards compatibility\nkind:options.kind,kinds:options.kinds,default:false,mode:'disabled'};if(!options.kinds){options.kinds=[options.kind];}if(options.label){options.track.label=options.label;}else{options.track.label=options.kinds.join(' and ')+' off';}// MenuItem is selectable\noptions.selectable=true;// MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\noptions.multiSelectable=false;super(player,options);}/**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */handleTracksChange(event){const tracks=this.player().textTracks();let shouldBeSelected=true;for(let i=0,l=tracks.length;i<l;i++){const track=tracks[i];if(this.options_.kinds.indexOf(track.kind)>-1&&track.mode==='showing'){shouldBeSelected=false;break;}}// Prevent redundant selected() calls because they may cause\n// screen readers to read the appended control text unnecessarily\nif(shouldBeSelected!==this.isSelected_){this.selected(shouldBeSelected);}}handleSelectedLanguageChange(event){const tracks=this.player().textTracks();let allHidden=true;for(let i=0,l=tracks.length;i<l;i++){const track=tracks[i];if(['captions','descriptions','subtitles'].indexOf(track.kind)>-1&&track.mode==='showing'){allHidden=false;break;}}if(allHidden){this.player_.cache_.selectedLanguage={enabled:false};}}}Component$1.registerComponent('OffTextTrackMenuItem',OffTextTrackMenuItem);/**\n * @file text-track-button.js\n */ /**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */class TextTrackButton extends TrackButton{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */constructor(player,options={}){options.tracks=player.textTracks();super(player,options);}/**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */createItems(items=[],TrackMenuItem=TextTrackMenuItem){// Label is an override for the [track] off label\n// USed to localise captions/subtitles\nlet label;if(this.label_){label=`${this.label_} off`;}// Add an OFF menu item to turn all tracks off\nitems.push(new OffTextTrackMenuItem(this.player_,{kinds:this.kinds_,kind:this.kind_,label}));this.hideThreshold_+=1;const tracks=this.player_.textTracks();if(!Array.isArray(this.kinds_)){this.kinds_=[this.kind_];}for(let i=0;i<tracks.length;i++){const track=tracks[i];// only add tracks that are of an appropriate kind and have a label\nif(this.kinds_.indexOf(track.kind)>-1){const item=new TrackMenuItem(this.player_,{track,kinds:this.kinds_,kind:this.kind_,// MenuItem is selectable\nselectable:true,// MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\nmultiSelectable:false});item.addClass(`vjs-${track.kind}-menu-item`);items.push(item);}}return items;}}Component$1.registerComponent('TextTrackButton',TextTrackButton);/**\n * @file chapters-track-menu-item.js\n */ /**\n * The chapter track menu item\n *\n * @extends MenuItem\n */class ChaptersTrackMenuItem extends MenuItem{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){const track=options.track;const cue=options.cue;const currentTime=player.currentTime();// Modify options for parent MenuItem class's init.\noptions.selectable=true;options.multiSelectable=false;options.label=cue.text;options.selected=cue.startTime<=currentTime&&currentTime<cue.endTime;super(player,options);this.track=track;this.cue=cue;}/**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */handleClick(event){super.handleClick();this.player_.currentTime(this.cue.startTime);}}Component$1.registerComponent('ChaptersTrackMenuItem',ChaptersTrackMenuItem);/**\n * @file chapters-button.js\n */ /**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */class ChaptersButton extends TextTrackButton{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */constructor(player,options,ready){super(player,options,ready);this.selectCurrentItem_=()=>{this.items.forEach(item=>{item.selected(this.track_.activeCues[0]===item.cue);});};}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){return`vjs-chapters-button ${super.buildCSSClass()}`;}buildWrapperCSSClass(){return`vjs-chapters-button ${super.buildWrapperCSSClass()}`;}/**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */update(event){if(event&&event.track&&event.track.kind!=='chapters'){return;}const track=this.findChaptersTrack();if(track!==this.track_){this.setTrack(track);super.update();}else if(!this.items||track&&track.cues&&track.cues.length!==this.items.length){// Update the menu initially or if the number of cues has changed since set\nsuper.update();}}/**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */setTrack(track){if(this.track_===track){return;}if(!this.updateHandler_){this.updateHandler_=this.update.bind(this);}// here this.track_ refers to the old track instance\nif(this.track_){const remoteTextTrackEl=this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);if(remoteTextTrackEl){remoteTextTrackEl.removeEventListener('load',this.updateHandler_);}this.track_.removeEventListener('cuechange',this.selectCurrentItem_);this.track_=null;}this.track_=track;// here this.track_ refers to the new track instance\nif(this.track_){this.track_.mode='hidden';const remoteTextTrackEl=this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);if(remoteTextTrackEl){remoteTextTrackEl.addEventListener('load',this.updateHandler_);}this.track_.addEventListener('cuechange',this.selectCurrentItem_);}}/**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */findChaptersTrack(){const tracks=this.player_.textTracks()||[];for(let i=tracks.length-1;i>=0;i--){// We will always choose the last track as our chaptersTrack\nconst track=tracks[i];if(track.kind===this.kind_){return track;}}}/**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */getMenuCaption(){if(this.track_&&this.track_.label){return this.track_.label;}return this.localize(toTitleCase$1(this.kind_));}/**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */createMenu(){this.options_.title=this.getMenuCaption();return super.createMenu();}/**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */createItems(){const items=[];if(!this.track_){return items;}const cues=this.track_.cues;if(!cues){return items;}for(let i=0,l=cues.length;i<l;i++){const cue=cues[i];const mi=new ChaptersTrackMenuItem(this.player_,{track:this.track_,cue});items.push(mi);}return items;}}/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */ChaptersButton.prototype.kind_='chapters';/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */ChaptersButton.prototype.controlText_='Chapters';Component$1.registerComponent('ChaptersButton',ChaptersButton);/**\n * @file descriptions-button.js\n */ /**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */class DescriptionsButton extends TextTrackButton{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */constructor(player,options,ready){super(player,options,ready);const tracks=player.textTracks();const changeHandler=bind_(this,this.handleTracksChange);tracks.addEventListener('change',changeHandler);this.on('dispose',function(){tracks.removeEventListener('change',changeHandler);});}/**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */handleTracksChange(event){const tracks=this.player().textTracks();let disabled=false;// Check whether a track of a different kind is showing\nfor(let i=0,l=tracks.length;i<l;i++){const track=tracks[i];if(track.kind!==this.kind_&&track.mode==='showing'){disabled=true;break;}}// If another track is showing, disable this menu button\nif(disabled){this.disable();}else{this.enable();}}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){return`vjs-descriptions-button ${super.buildCSSClass()}`;}buildWrapperCSSClass(){return`vjs-descriptions-button ${super.buildWrapperCSSClass()}`;}}/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */DescriptionsButton.prototype.kind_='descriptions';/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */DescriptionsButton.prototype.controlText_='Descriptions';Component$1.registerComponent('DescriptionsButton',DescriptionsButton);/**\n * @file subtitles-button.js\n */ /**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */class SubtitlesButton extends TextTrackButton{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */constructor(player,options,ready){super(player,options,ready);}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){return`vjs-subtitles-button ${super.buildCSSClass()}`;}buildWrapperCSSClass(){return`vjs-subtitles-button ${super.buildWrapperCSSClass()}`;}}/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */SubtitlesButton.prototype.kind_='subtitles';/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */SubtitlesButton.prototype.controlText_='Subtitles';Component$1.registerComponent('SubtitlesButton',SubtitlesButton);/**\n * @file caption-settings-menu-item.js\n */ /**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */class CaptionSettingsMenuItem extends TextTrackMenuItem{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){options.track={player,kind:options.kind,label:options.kind+' settings',selectable:false,default:false,mode:'disabled'};// CaptionSettingsMenuItem has no concept of 'selected'\noptions.selectable=false;options.name='CaptionSettingsMenuItem';super(player,options);this.addClass('vjs-texttrack-settings');this.controlText(', opens '+options.kind+' settings dialog');}/**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */handleClick(event){this.player().getChild('textTrackSettings').open();}}Component$1.registerComponent('CaptionSettingsMenuItem',CaptionSettingsMenuItem);/**\n * @file captions-button.js\n */ /**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */class CaptionsButton extends TextTrackButton{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */constructor(player,options,ready){super(player,options,ready);}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){return`vjs-captions-button ${super.buildCSSClass()}`;}buildWrapperCSSClass(){return`vjs-captions-button ${super.buildWrapperCSSClass()}`;}/**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */createItems(){const items=[];if(!(this.player().tech_&&this.player().tech_.featuresNativeTextTracks)&&this.player().getChild('textTrackSettings')){items.push(new CaptionSettingsMenuItem(this.player_,{kind:this.kind_}));this.hideThreshold_+=1;}return super.createItems(items);}}/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */CaptionsButton.prototype.kind_='captions';/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */CaptionsButton.prototype.controlText_='Captions';Component$1.registerComponent('CaptionsButton',CaptionsButton);/**\n * @file subs-caps-menu-item.js\n */ /**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */class SubsCapsMenuItem extends TextTrackMenuItem{createEl(type,props,attrs){const el=super.createEl(type,props,attrs);const parentSpan=el.querySelector('.vjs-menu-item-text');if(this.options_.track.kind==='captions'){parentSpan.appendChild(createEl('span',{className:'vjs-icon-placeholder'},{'aria-hidden':true}));parentSpan.appendChild(createEl('span',{className:'vjs-control-text',// space added as the text will visually flow with the\n// label\ntextContent:` ${this.localize('Captions')}`}));}return el;}}Component$1.registerComponent('SubsCapsMenuItem',SubsCapsMenuItem);/**\n * @file sub-caps-button.js\n */ /**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */class SubsCapsButton extends TextTrackButton{constructor(player,options={}){super(player,options);// Although North America uses \"captions\" in most cases for\n// \"captions and subtitles\" other locales use \"subtitles\"\nthis.label_='subtitles';if(['en','en-us','en-ca','fr-ca'].indexOf(this.player_.language_)>-1){this.label_='captions';}this.menuButton_.controlText(toTitleCase$1(this.label_));}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){return`vjs-subs-caps-button ${super.buildCSSClass()}`;}buildWrapperCSSClass(){return`vjs-subs-caps-button ${super.buildWrapperCSSClass()}`;}/**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */createItems(){let items=[];if(!(this.player().tech_&&this.player().tech_.featuresNativeTextTracks)&&this.player().getChild('textTrackSettings')){items.push(new CaptionSettingsMenuItem(this.player_,{kind:this.label_}));this.hideThreshold_+=1;}items=super.createItems(items,SubsCapsMenuItem);return items;}}/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */SubsCapsButton.prototype.kinds_=['captions','subtitles'];/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @protected\n */SubsCapsButton.prototype.controlText_='Subtitles';Component$1.registerComponent('SubsCapsButton',SubsCapsButton);/**\n * @file audio-track-menu-item.js\n */ /**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */class AudioTrackMenuItem extends MenuItem{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){const track=options.track;const tracks=player.audioTracks();// Modify options for parent MenuItem class's init.\noptions.label=track.label||track.language||'Unknown';options.selected=track.enabled;super(player,options);this.track=track;this.addClass(`vjs-${track.kind}-menu-item`);const changeHandler=(...args)=>{this.handleTracksChange.apply(this,args);};tracks.addEventListener('change',changeHandler);this.on('dispose',()=>{tracks.removeEventListener('change',changeHandler);});}createEl(type,props,attrs){const el=super.createEl(type,props,attrs);const parentSpan=el.querySelector('.vjs-menu-item-text');if(this.options_.track.kind==='main-desc'){parentSpan.appendChild(createEl('span',{className:'vjs-icon-placeholder'},{'aria-hidden':true}));parentSpan.appendChild(createEl('span',{className:'vjs-control-text',textContent:' '+this.localize('Descriptions')}));}return el;}/**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */handleClick(event){super.handleClick(event);// the audio track list will automatically toggle other tracks\n// off for us.\nthis.track.enabled=true;// when native audio tracks are used, we want to make sure that other tracks are turned off\nif(this.player_.tech_.featuresNativeAudioTracks){const tracks=this.player_.audioTracks();for(let i=0;i<tracks.length;i++){const track=tracks[i];// skip the current track since we enabled it above\nif(track===this.track){continue;}track.enabled=track===this.track;}}}/**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */handleTracksChange(event){this.selected(this.track.enabled);}}Component$1.registerComponent('AudioTrackMenuItem',AudioTrackMenuItem);/**\n * @file audio-track-button.js\n */ /**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */class AudioTrackButton extends TrackButton{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */constructor(player,options={}){options.tracks=player.audioTracks();super(player,options);}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){return`vjs-audio-button ${super.buildCSSClass()}`;}buildWrapperCSSClass(){return`vjs-audio-button ${super.buildWrapperCSSClass()}`;}/**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */createItems(items=[]){// if there's only one audio track, there no point in showing it\nthis.hideThreshold_=1;const tracks=this.player_.audioTracks();for(let i=0;i<tracks.length;i++){const track=tracks[i];items.push(new AudioTrackMenuItem(this.player_,{track,// MenuItem is selectable\nselectable:true,// MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\nmultiSelectable:false}));}return items;}}/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */AudioTrackButton.prototype.controlText_='Audio Track';Component$1.registerComponent('AudioTrackButton',AudioTrackButton);/**\n * @file playback-rate-menu-item.js\n */ /**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */class PlaybackRateMenuItem extends MenuItem{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){const label=options.rate;const rate=parseFloat(label,10);// Modify options for parent MenuItem class's init.\noptions.label=label;options.selected=rate===player.playbackRate();options.selectable=true;options.multiSelectable=false;super(player,options);this.label=label;this.rate=rate;this.on(player,'ratechange',e=>this.update(e));}/**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */handleClick(event){super.handleClick();this.player().playbackRate(this.rate);}/**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */update(event){this.selected(this.player().playbackRate()===this.rate);}}/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */PlaybackRateMenuItem.prototype.contentElType='button';Component$1.registerComponent('PlaybackRateMenuItem',PlaybackRateMenuItem);/**\n * @file playback-rate-menu-button.js\n */ /**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */class PlaybackRateMenuButton extends MenuButton{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */constructor(player,options){super(player,options);this.menuButton_.el_.setAttribute('aria-describedby',this.labelElId_);this.updateVisibility();this.updateLabel();this.on(player,'loadstart',e=>this.updateVisibility(e));this.on(player,'ratechange',e=>this.updateLabel(e));this.on(player,'playbackrateschange',e=>this.handlePlaybackRateschange(e));}/**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){const el=super.createEl();this.labelElId_='vjs-playback-rate-value-label-'+this.id_;this.labelEl_=createEl('div',{className:'vjs-playback-rate-value',id:this.labelElId_,textContent:'1x'});el.appendChild(this.labelEl_);return el;}dispose(){this.labelEl_=null;super.dispose();}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){return`vjs-playback-rate ${super.buildCSSClass()}`;}buildWrapperCSSClass(){return`vjs-playback-rate ${super.buildWrapperCSSClass()}`;}/**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   */createItems(){const rates=this.playbackRates();const items=[];for(let i=rates.length-1;i>=0;i--){items.push(new PlaybackRateMenuItem(this.player(),{rate:rates[i]+'x'}));}return items;}/**\n   * On playbackrateschange, update the menu to account for the new items.\n   *\n   * @listens Player#playbackrateschange\n   */handlePlaybackRateschange(event){this.update();}/**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */playbackRates(){const player=this.player();return player.playbackRates&&player.playbackRates()||[];}/**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */playbackRateSupported(){return this.player().tech_&&this.player().tech_.featuresPlaybackRate&&this.playbackRates()&&this.playbackRates().length>0;}/**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */updateVisibility(event){if(this.playbackRateSupported()){this.removeClass('vjs-hidden');}else{this.addClass('vjs-hidden');}}/**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */updateLabel(event){if(this.playbackRateSupported()){this.labelEl_.textContent=this.player().playbackRate()+'x';}}}/**\n * The text that should display over the `PlaybackRateMenuButton`s controls.\n *\n * Added for localization.\n *\n * @type {string}\n * @protected\n */PlaybackRateMenuButton.prototype.controlText_='Playback Rate';Component$1.registerComponent('PlaybackRateMenuButton',PlaybackRateMenuButton);/**\n * @file spacer.js\n */ /**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */class Spacer extends Component$1{/**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */buildCSSClass(){return`vjs-spacer ${super.buildCSSClass()}`;}/**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(tag='div',props={},attributes={}){if(!props.className){props.className=this.buildCSSClass();}return super.createEl(tag,props,attributes);}}Component$1.registerComponent('Spacer',Spacer);/**\n * @file custom-control-spacer.js\n */ /**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */class CustomControlSpacer extends Spacer{/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */buildCSSClass(){return`vjs-custom-control-spacer ${super.buildCSSClass()}`;}/**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){return super.createEl('div',{className:this.buildCSSClass(),// No-flex/table-cell mode requires there be some content\n// in the cell to fill the remaining space of the table.\ntextContent:'\\u00a0'});}}Component$1.registerComponent('CustomControlSpacer',CustomControlSpacer);/**\n * @file control-bar.js\n */ /**\n * Container of main controls.\n *\n * @extends Component\n */class ControlBar extends Component$1{/**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){return super.createEl('div',{className:'vjs-control-bar',dir:'ltr'});}}/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */ControlBar.prototype.options_={children:['playToggle','volumePanel','currentTimeDisplay','timeDivider','durationDisplay','progressControl','liveDisplay','seekToLive','remainingTimeDisplay','customControlSpacer','playbackRateMenuButton','chaptersButton','descriptionsButton','subsCapsButton','audioTrackButton','fullscreenToggle']};if('exitPictureInPicture'in document){ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length-1,0,'pictureInPictureToggle');}Component$1.registerComponent('ControlBar',ControlBar);/**\n * @file error-display.js\n */ /**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */class ErrorDisplay extends ModalDialog{/**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */constructor(player,options){super(player,options);this.on(player,'error',e=>this.open(e));}/**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */buildCSSClass(){return`vjs-error-display ${super.buildCSSClass()}`;}/**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */content(){const error=this.player().error();return error?this.localize(error.message):'';}}/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */ErrorDisplay.prototype.options_=Object.assign({},ModalDialog.prototype.options_,{pauseOnOpen:false,fillAlways:true,temporary:false,uncloseable:true});Component$1.registerComponent('ErrorDisplay',ErrorDisplay);/**\n * @file text-track-settings.js\n */const LOCAL_STORAGE_KEY$1='vjs-text-track-settings';const COLOR_BLACK=['#000','Black'];const COLOR_BLUE=['#00F','Blue'];const COLOR_CYAN=['#0FF','Cyan'];const COLOR_GREEN=['#0F0','Green'];const COLOR_MAGENTA=['#F0F','Magenta'];const COLOR_RED=['#F00','Red'];const COLOR_WHITE=['#FFF','White'];const COLOR_YELLOW=['#FF0','Yellow'];const OPACITY_OPAQUE=['1','Opaque'];const OPACITY_SEMI=['0.5','Semi-Transparent'];const OPACITY_TRANS=['0','Transparent'];// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nconst selectConfigs={backgroundColor:{selector:'.vjs-bg-color > select',id:'captions-background-color-%s',label:'Color',options:[COLOR_BLACK,COLOR_WHITE,COLOR_RED,COLOR_GREEN,COLOR_BLUE,COLOR_YELLOW,COLOR_MAGENTA,COLOR_CYAN]},backgroundOpacity:{selector:'.vjs-bg-opacity > select',id:'captions-background-opacity-%s',label:'Transparency',options:[OPACITY_OPAQUE,OPACITY_SEMI,OPACITY_TRANS]},color:{selector:'.vjs-fg-color > select',id:'captions-foreground-color-%s',label:'Color',options:[COLOR_WHITE,COLOR_BLACK,COLOR_RED,COLOR_GREEN,COLOR_BLUE,COLOR_YELLOW,COLOR_MAGENTA,COLOR_CYAN]},edgeStyle:{selector:'.vjs-edge-style > select',id:'%s',label:'Text Edge Style',options:[['none','None'],['raised','Raised'],['depressed','Depressed'],['uniform','Uniform'],['dropshadow','Dropshadow']]},fontFamily:{selector:'.vjs-font-family > select',id:'captions-font-family-%s',label:'Font Family',options:[['proportionalSansSerif','Proportional Sans-Serif'],['monospaceSansSerif','Monospace Sans-Serif'],['proportionalSerif','Proportional Serif'],['monospaceSerif','Monospace Serif'],['casual','Casual'],['script','Script'],['small-caps','Small Caps']]},fontPercent:{selector:'.vjs-font-percent > select',id:'captions-font-size-%s',label:'Font Size',options:[['0.50','50%'],['0.75','75%'],['1.00','100%'],['1.25','125%'],['1.50','150%'],['1.75','175%'],['2.00','200%'],['3.00','300%'],['4.00','400%']],default:2,parser:v=>v==='1.00'?null:Number(v)},textOpacity:{selector:'.vjs-text-opacity > select',id:'captions-foreground-opacity-%s',label:'Transparency',options:[OPACITY_OPAQUE,OPACITY_SEMI]},// Options for this object are defined below.\nwindowColor:{selector:'.vjs-window-color > select',id:'captions-window-color-%s',label:'Color'},// Options for this object are defined below.\nwindowOpacity:{selector:'.vjs-window-opacity > select',id:'captions-window-opacity-%s',label:'Transparency',options:[OPACITY_TRANS,OPACITY_SEMI,OPACITY_OPAQUE]}};selectConfigs.windowColor.options=selectConfigs.backgroundColor.options;/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */function parseOptionValue(value,parser){if(parser){value=parser(value);}if(value&&value!=='none'){return value;}}/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */function getSelectedOptionValue(el,parser){const value=el.options[el.options.selectedIndex].value;return parseOptionValue(value,parser);}/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */function setSelectedOption(el,value,parser){if(!value){return;}for(let i=0;i<el.options.length;i++){if(parseOptionValue(el.options[i].value,parser)===value){el.selectedIndex=i;break;}}}/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */class TextTrackSettings extends ModalDialog{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */constructor(player,options){options.temporary=false;super(player,options);this.updateDisplay=this.updateDisplay.bind(this);// fill the modal and pretend we have opened it\nthis.fill();this.hasBeenOpened_=this.hasBeenFilled_=true;this.endDialog=createEl('p',{className:'vjs-control-text',textContent:this.localize('End of dialog window.')});this.el().appendChild(this.endDialog);this.setDefaults();// Grab `persistTextTrackSettings` from the player options if not passed in child options\nif(options.persistTextTrackSettings===undefined){this.options_.persistTextTrackSettings=this.options_.playerOptions.persistTextTrackSettings;}this.on(this.$('.vjs-done-button'),'click',()=>{this.saveSettings();this.close();});this.on(this.$('.vjs-default-button'),'click',()=>{this.setDefaults();this.updateDisplay();});each(selectConfigs,config=>{this.on(this.$(config.selector),'change',this.updateDisplay);});if(this.options_.persistTextTrackSettings){this.restoreSettings();}}dispose(){this.endDialog=null;super.dispose();}/**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */createElSelect_(key,legendId='',type='label'){const config=selectConfigs[key];const id=config.id.replace('%s',this.id_);const selectLabelledbyIds=[legendId,id].join(' ').trim();return[`<${type} id=\"${id}\" class=\"${type==='label'?'vjs-label':''}\">`,this.localize(config.label),`</${type}>`,`<select aria-labelledby=\"${selectLabelledbyIds}\">`].concat(config.options.map(o=>{const optionId=id+'-'+o[1].replace(/\\W+/g,'');return[`<option id=\"${optionId}\" value=\"${o[0]}\" `,`aria-labelledby=\"${selectLabelledbyIds} ${optionId}\">`,this.localize(o[1]),'</option>'].join('');})).concat('</select>').join('');}/**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */createElFgColor_(){const legendId=`captions-text-legend-${this.id_}`;return['<fieldset class=\"vjs-fg-color vjs-track-setting\">',`<legend id=\"${legendId}\">`,this.localize('Text'),'</legend>',this.createElSelect_('color',legendId),'<span class=\"vjs-text-opacity vjs-opacity\">',this.createElSelect_('textOpacity',legendId),'</span>','</fieldset>'].join('');}/**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */createElBgColor_(){const legendId=`captions-background-${this.id_}`;return['<fieldset class=\"vjs-bg-color vjs-track-setting\">',`<legend id=\"${legendId}\">`,this.localize('Background'),'</legend>',this.createElSelect_('backgroundColor',legendId),'<span class=\"vjs-bg-opacity vjs-opacity\">',this.createElSelect_('backgroundOpacity',legendId),'</span>','</fieldset>'].join('');}/**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */createElWinColor_(){const legendId=`captions-window-${this.id_}`;return['<fieldset class=\"vjs-window-color vjs-track-setting\">',`<legend id=\"${legendId}\">`,this.localize('Window'),'</legend>',this.createElSelect_('windowColor',legendId),'<span class=\"vjs-window-opacity vjs-opacity\">',this.createElSelect_('windowOpacity',legendId),'</span>','</fieldset>'].join('');}/**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */createElColors_(){return createEl('div',{className:'vjs-track-settings-colors',innerHTML:[this.createElFgColor_(),this.createElBgColor_(),this.createElWinColor_()].join('')});}/**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */createElFont_(){return createEl('div',{className:'vjs-track-settings-font',innerHTML:['<fieldset class=\"vjs-font-percent vjs-track-setting\">',this.createElSelect_('fontPercent','','legend'),'</fieldset>','<fieldset class=\"vjs-edge-style vjs-track-setting\">',this.createElSelect_('edgeStyle','','legend'),'</fieldset>','<fieldset class=\"vjs-font-family vjs-track-setting\">',this.createElSelect_('fontFamily','','legend'),'</fieldset>'].join('')});}/**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */createElControls_(){const defaultsDescription=this.localize('restore all settings to the default values');return createEl('div',{className:'vjs-track-settings-controls',innerHTML:[`<button type=\"button\" class=\"vjs-default-button\" title=\"${defaultsDescription}\">`,this.localize('Reset'),`<span class=\"vjs-control-text\"> ${defaultsDescription}</span>`,'</button>',`<button type=\"button\" class=\"vjs-done-button\">${this.localize('Done')}</button>`].join('')});}content(){return[this.createElColors_(),this.createElFont_(),this.createElControls_()];}label(){return this.localize('Caption Settings Dialog');}description(){return this.localize('Beginning of dialog window. Escape will cancel and close the window.');}buildCSSClass(){return super.buildCSSClass()+' vjs-text-track-settings';}/**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */getValues(){return reduce(selectConfigs,(accum,config,key)=>{const value=getSelectedOptionValue(this.$(config.selector),config.parser);if(value!==undefined){accum[key]=value;}return accum;},{});}/**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */setValues(values){each(selectConfigs,(config,key)=>{setSelectedOption(this.$(config.selector),values[key],config.parser);});}/**\n   * Sets all `<select>` elements to their default values.\n   */setDefaults(){each(selectConfigs,config=>{const index=config.hasOwnProperty('default')?config.default:0;this.$(config.selector).selectedIndex=index;});}/**\n   * Restore texttrack settings from localStorage\n   */restoreSettings(){let values;try{values=JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY$1));}catch(err){log$1.warn(err);}if(values){this.setValues(values);}}/**\n   * Save text track settings to localStorage\n   */saveSettings(){if(!this.options_.persistTextTrackSettings){return;}const values=this.getValues();try{if(Object.keys(values).length){window$1.localStorage.setItem(LOCAL_STORAGE_KEY$1,JSON.stringify(values));}else{window$1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);}}catch(err){log$1.warn(err);}}/**\n   * Update display of text track settings\n   */updateDisplay(){const ttDisplay=this.player_.getChild('textTrackDisplay');if(ttDisplay){ttDisplay.updateDisplay();}}/**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */conditionalBlur_(){this.previouslyActiveEl_=null;const cb=this.player_.controlBar;const subsCapsBtn=cb&&cb.subsCapsButton;const ccBtn=cb&&cb.captionsButton;if(subsCapsBtn){subsCapsBtn.focus();}else if(ccBtn){ccBtn.focus();}}}Component$1.registerComponent('TextTrackSettings',TextTrackSettings);/**\n * @file resize-manager.js\n */ /**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n *\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */class ResizeManager extends Component$1{/**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */constructor(player,options){let RESIZE_OBSERVER_AVAILABLE=options.ResizeObserver||window$1.ResizeObserver;// if `null` was passed, we want to disable the ResizeObserver\nif(options.ResizeObserver===null){RESIZE_OBSERVER_AVAILABLE=false;}// Only create an element when ResizeObserver isn't available\nconst options_=merge$1({createEl:!RESIZE_OBSERVER_AVAILABLE,reportTouchActivity:false},options);super(player,options_);this.ResizeObserver=options.ResizeObserver||window$1.ResizeObserver;this.loadListener_=null;this.resizeObserver_=null;this.debouncedHandler_=debounce(()=>{this.resizeHandler();},100,false,this);if(RESIZE_OBSERVER_AVAILABLE){this.resizeObserver_=new this.ResizeObserver(this.debouncedHandler_);this.resizeObserver_.observe(player.el());}else{this.loadListener_=()=>{if(!this.el_||!this.el_.contentWindow){return;}const debouncedHandler_=this.debouncedHandler_;let unloadListener_=this.unloadListener_=function(){off(this,'resize',debouncedHandler_);off(this,'unload',unloadListener_);unloadListener_=null;};// safari and edge can unload the iframe before resizemanager dispose\n// we have to dispose of event handlers correctly before that happens\non(this.el_.contentWindow,'unload',unloadListener_);on(this.el_.contentWindow,'resize',debouncedHandler_);};this.one('load',this.loadListener_);}}createEl(){return super.createEl('iframe',{className:'vjs-resize-manager',tabIndex:-1,title:this.localize('No content')},{'aria-hidden':'true'});}/**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */resizeHandler(){/**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */ // make sure player is still around to trigger\n// prevents this from causing an error after dispose\nif(!this.player_||!this.player_.trigger){return;}this.player_.trigger('playerresize');}dispose(){if(this.debouncedHandler_){this.debouncedHandler_.cancel();}if(this.resizeObserver_){if(this.player_.el()){this.resizeObserver_.unobserve(this.player_.el());}this.resizeObserver_.disconnect();}if(this.loadListener_){this.off('load',this.loadListener_);}if(this.el_&&this.el_.contentWindow&&this.unloadListener_){this.unloadListener_.call(this.el_.contentWindow);}this.ResizeObserver=null;this.resizeObserver=null;this.debouncedHandler_=null;this.loadListener_=null;super.dispose();}}Component$1.registerComponent('ResizeManager',ResizeManager);const defaults={trackingThreshold:20,liveTolerance:15};/*\n  track when we are at the live edge, and other helpers for live playback */ /**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */class LiveTracker extends Component$1{/**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=20]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect wether we are live or not.\n   */constructor(player,options){// LiveTracker does not need an element\nconst options_=merge$1(defaults,options,{createEl:false});super(player,options_);this.trackLiveHandler_=()=>this.trackLive_();this.handlePlay_=e=>this.handlePlay(e);this.handleFirstTimeupdate_=e=>this.handleFirstTimeupdate(e);this.handleSeeked_=e=>this.handleSeeked(e);this.seekToLiveEdge_=e=>this.seekToLiveEdge(e);this.reset_();this.on(this.player_,'durationchange',e=>this.handleDurationchange(e));// we should try to toggle tracking on canplay as native playback engines, like Safari\n// may not have the proper values for things like seekableEnd until then\nthis.on(this.player_,'canplay',()=>this.toggleTracking());}/**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */trackLive_(){const seekable=this.player_.seekable();// skip undefined seekable\nif(!seekable||!seekable.length){return;}const newTime=Number(window$1.performance.now().toFixed(4));const deltaTime=this.lastTime_===-1?0:(newTime-this.lastTime_)/1000;this.lastTime_=newTime;this.pastSeekEnd_=this.pastSeekEnd()+deltaTime;const liveCurrentTime=this.liveCurrentTime();const currentTime=this.player_.currentTime();// we are behind live if any are true\n// 1. the player is paused\n// 2. the user seeked to a location 2 seconds away from live\n// 3. the difference between live and current time is greater\n//    liveTolerance which defaults to 15s\nlet isBehind=this.player_.paused()||this.seekedBehindLive_||Math.abs(liveCurrentTime-currentTime)>this.options_.liveTolerance;// we cannot be behind if\n// 1. until we have not seen a timeupdate yet\n// 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\nif(!this.timeupdateSeen_||liveCurrentTime===Infinity){isBehind=false;}if(isBehind!==this.behindLiveEdge_){this.behindLiveEdge_=isBehind;this.trigger('liveedgechange');}}/**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */handleDurationchange(){this.toggleTracking();}/**\n   * start/stop tracking\n   */toggleTracking(){if(this.player_.duration()===Infinity&&this.liveWindow()>=this.options_.trackingThreshold){if(this.player_.options_.liveui){this.player_.addClass('vjs-liveui');}this.startTracking();}else{this.player_.removeClass('vjs-liveui');this.stopTracking();}}/**\n   * start tracking live playback\n   */startTracking(){if(this.isTracking()){return;}// If we haven't seen a timeupdate, we need to check whether playback\n// began before this component started tracking. This can happen commonly\n// when using autoplay.\nif(!this.timeupdateSeen_){this.timeupdateSeen_=this.player_.hasStarted();}this.trackingInterval_=this.setInterval(this.trackLiveHandler_,UPDATE_REFRESH_INTERVAL);this.trackLive_();this.on(this.player_,['play','pause'],this.trackLiveHandler_);if(!this.timeupdateSeen_){this.one(this.player_,'play',this.handlePlay_);this.one(this.player_,'timeupdate',this.handleFirstTimeupdate_);}else{this.on(this.player_,'seeked',this.handleSeeked_);}}/**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */handleFirstTimeupdate(){this.timeupdateSeen_=true;this.on(this.player_,'seeked',this.handleSeeked_);}/**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */handleSeeked(){const timeDiff=Math.abs(this.liveCurrentTime()-this.player_.currentTime());this.seekedBehindLive_=this.nextSeekedFromUser_&&timeDiff>2;this.nextSeekedFromUser_=false;this.trackLive_();}/**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */handlePlay(){this.one(this.player_,'timeupdate',this.seekToLiveEdge_);}/**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */reset_(){this.lastTime_=-1;this.pastSeekEnd_=0;this.lastSeekEnd_=-1;this.behindLiveEdge_=true;this.timeupdateSeen_=false;this.seekedBehindLive_=false;this.nextSeekedFromUser_=false;this.clearInterval(this.trackingInterval_);this.trackingInterval_=null;this.off(this.player_,['play','pause'],this.trackLiveHandler_);this.off(this.player_,'seeked',this.handleSeeked_);this.off(this.player_,'play',this.handlePlay_);this.off(this.player_,'timeupdate',this.handleFirstTimeupdate_);this.off(this.player_,'timeupdate',this.seekToLiveEdge_);}/**\n   * The next seeked event is from the user. Meaning that any seek\n   * > 2s behind live will be considered behind live for real and\n   * liveTolerance will be ignored.\n   */nextSeekedFromUser(){this.nextSeekedFromUser_=true;}/**\n   * stop tracking live playback\n   */stopTracking(){if(!this.isTracking()){return;}this.reset_();this.trigger('liveedgechange');}/**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */seekableEnd(){const seekable=this.player_.seekable();const seekableEnds=[];let i=seekable?seekable.length:0;while(i--){seekableEnds.push(seekable.end(i));}// grab the furthest seekable end after sorting, or if there are none\n// default to Infinity\nreturn seekableEnds.length?seekableEnds.sort()[seekableEnds.length-1]:Infinity;}/**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */seekableStart(){const seekable=this.player_.seekable();const seekableStarts=[];let i=seekable?seekable.length:0;while(i--){seekableStarts.push(seekable.start(i));}// grab the first seekable start after sorting, or if there are none\n// default to 0\nreturn seekableStarts.length?seekableStarts.sort()[0]:0;}/**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */liveWindow(){const liveCurrentTime=this.liveCurrentTime();// if liveCurrenTime is Infinity then we don't have a liveWindow at all\nif(liveCurrentTime===Infinity){return 0;}return liveCurrentTime-this.seekableStart();}/**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Wether liveTracker is tracking\n   */isLive(){return this.isTracking();}/**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Wether playback is at the live edge\n   */atLiveEdge(){return!this.behindLiveEdge();}/**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */liveCurrentTime(){return this.pastSeekEnd()+this.seekableEnd();}/**\n   * The number of seconds that have occured after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */pastSeekEnd(){const seekableEnd=this.seekableEnd();if(this.lastSeekEnd_!==-1&&seekableEnd!==this.lastSeekEnd_){this.pastSeekEnd_=0;}this.lastSeekEnd_=seekableEnd;return this.pastSeekEnd_;}/**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */behindLiveEdge(){return this.behindLiveEdge_;}/**\n   * Wether live tracker is currently tracking or not.\n   */isTracking(){return typeof this.trackingInterval_==='number';}/**\n   * Seek to the live edge if we are behind the live edge\n   */seekToLiveEdge(){this.seekedBehindLive_=false;if(this.atLiveEdge()){return;}this.nextSeekedFromUser_=false;this.player_.currentTime(this.liveCurrentTime());}/**\n   * Dispose of liveTracker\n   */dispose(){this.stopTracking();super.dispose();}}Component$1.registerComponent('LiveTracker',LiveTracker);/**\n * Displays an element over the player which contains an optional title and\n * description for the current content.\n *\n * Much of the code for this component originated in the now obsolete\n * videojs-dock plugin: https://github.com/brightcove/videojs-dock/\n *\n * @extends Component\n */class TitleBar extends Component$1{constructor(player,options){super(player,options);this.on('statechanged',e=>this.updateDom_());this.updateDom_();}/**\n   * Create the `TitleBar`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */createEl(){this.els={title:createEl('div',{className:'vjs-title-bar-title',id:`vjs-title-bar-title-${newGUID()}`}),description:createEl('div',{className:'vjs-title-bar-description',id:`vjs-title-bar-description-${newGUID()}`})};return createEl('div',{className:'vjs-title-bar'},{},Object.values(this.els));}/**\n   * Updates the DOM based on the component's state object.\n   */updateDom_(){const tech=this.player_.tech_;const techEl=tech&&tech.el_;const techAriaAttrs={title:'aria-labelledby',description:'aria-describedby'};['title','description'].forEach(k=>{const value=this.state[k];const el=this.els[k];const techAriaAttr=techAriaAttrs[k];emptyEl(el);if(value){textContent(el,value);}// If there is a tech element available, update its ARIA attributes\n// according to whether a title and/or description have been provided.\nif(techEl){techEl.removeAttribute(techAriaAttr);if(value){techEl.setAttribute(techAriaAttr,el.id);}}});if(this.state.title||this.state.description){this.show();}else{this.hide();}}/**\n   * Update the contents of the title bar component with new title and\n   * description text.\n   *\n   * If both title and description are missing, the title bar will be hidden.\n   *\n   * If either title or description are present, the title bar will be visible.\n   *\n   * NOTE: Any previously set value will be preserved. To unset a previously\n   * set value, you must pass an empty string or null.\n   *\n   * For example:\n   *\n   * ```\n   * update({title: 'foo', description: 'bar'}) // title: 'foo', description: 'bar'\n   * update({description: 'bar2'}) // title: 'foo', description: 'bar2'\n   * update({title: ''}) // title: '', description: 'bar2'\n   * update({title: 'foo', description: null}) // title: 'foo', description: null\n   * ```\n   *\n   * @param  {Object} [options={}]\n   *         An options object. When empty, the title bar will be hidden.\n   *\n   * @param  {string} [options.title]\n   *         A title to display in the title bar.\n   *\n   * @param  {string} [options.description]\n   *         A description to display in the title bar.\n   */update(options){this.setState(options);}/**\n   * Dispose the component.\n   */dispose(){const tech=this.player_.tech_;const techEl=tech&&tech.el_;if(techEl){techEl.removeAttribute('aria-labelledby');techEl.removeAttribute('aria-describedby');}super.dispose();this.els=null;}}Component$1.registerComponent('TitleBar',TitleBar);/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */const sourcesetLoad=tech=>{const el=tech.el();// if `el.src` is set, that source will be loaded.\nif(el.hasAttribute('src')){tech.triggerSourceset(el.src);return true;}/**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */const sources=tech.$$('source');const srcUrls=[];let src='';// if there are no sources, do not fire sourceset\nif(!sources.length){return false;}// only count valid/non-duplicate source elements\nfor(let i=0;i<sources.length;i++){const url=sources[i].src;if(url&&srcUrls.indexOf(url)===-1){srcUrls.push(url);}}// there were no valid sources\nif(!srcUrls.length){return false;}// there is only one valid source element url\n// use that\nif(srcUrls.length===1){src=srcUrls[0];}tech.triggerSourceset(src);return true;};/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */const innerHTMLDescriptorPolyfill=Object.defineProperty({},'innerHTML',{get(){return this.cloneNode(true).innerHTML;},set(v){// make a dummy node to use innerHTML on\nconst dummy=document.createElement(this.nodeName.toLowerCase());// set innerHTML to the value provided\ndummy.innerHTML=v;// make a document fragment to hold the nodes from dummy\nconst docFrag=document.createDocumentFragment();// copy all of the nodes created by the innerHTML on dummy\n// to the document fragment\nwhile(dummy.childNodes.length){docFrag.appendChild(dummy.childNodes[0]);}// remove content\nthis.innerText='';// now we add all of that html in one by appending the\n// document fragment. This is how innerHTML does it.\nwindow$1.Element.prototype.appendChild.call(this,docFrag);// then return the result that innerHTML's setter would\nreturn this.innerHTML;}});/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */const getDescriptor=(priority,prop)=>{let descriptor={};for(let i=0;i<priority.length;i++){descriptor=Object.getOwnPropertyDescriptor(priority[i],prop);if(descriptor&&descriptor.set&&descriptor.get){break;}}descriptor.enumerable=true;descriptor.configurable=true;return descriptor;};const getInnerHTMLDescriptor=tech=>getDescriptor([tech.el(),window$1.HTMLMediaElement.prototype,window$1.Element.prototype,innerHTMLDescriptorPolyfill],'innerHTML');/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */const firstSourceWatch=function(tech){const el=tech.el();// make sure firstSourceWatch isn't setup twice.\nif(el.resetSourceWatch_){return;}const old={};const innerDescriptor=getInnerHTMLDescriptor(tech);const appendWrapper=appendFn=>(...args)=>{const retval=appendFn.apply(el,args);sourcesetLoad(tech);return retval;};['append','appendChild','insertAdjacentHTML'].forEach(k=>{if(!el[k]){return;}// store the old function\nold[k]=el[k];// call the old function with a sourceset if a source\n// was loaded\nel[k]=appendWrapper(old[k]);});Object.defineProperty(el,'innerHTML',merge$1(innerDescriptor,{set:appendWrapper(innerDescriptor.set)}));el.resetSourceWatch_=()=>{el.resetSourceWatch_=null;Object.keys(old).forEach(k=>{el[k]=old[k];});Object.defineProperty(el,'innerHTML',innerDescriptor);};// on the first sourceset, we need to revert our changes\ntech.one('sourceset',el.resetSourceWatch_);};/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one\n */const srcDescriptorPolyfill=Object.defineProperty({},'src',{get(){if(this.hasAttribute('src')){return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this,'src'));}return'';},set(v){window$1.Element.prototype.setAttribute.call(this,'src',v);return v;}});const getSrcDescriptor=tech=>getDescriptor([tech.el(),window$1.HTMLMediaElement.prototype,srcDescriptorPolyfill],'src');/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */const setupSourceset=function(tech){if(!tech.featuresSourceset){return;}const el=tech.el();// make sure sourceset isn't setup twice.\nif(el.resetSourceset_){return;}const srcDescriptor=getSrcDescriptor(tech);const oldSetAttribute=el.setAttribute;const oldLoad=el.load;Object.defineProperty(el,'src',merge$1(srcDescriptor,{set:v=>{const retval=srcDescriptor.set.call(el,v);// we use the getter here to get the actual value set on src\ntech.triggerSourceset(el.src);return retval;}}));el.setAttribute=(n,v)=>{const retval=oldSetAttribute.call(el,n,v);if(/src/i.test(n)){tech.triggerSourceset(el.src);}return retval;};el.load=()=>{const retval=oldLoad.call(el);// if load was called, but there was no source to fire\n// sourceset on. We have to watch for a source append\n// as that can trigger a `sourceset` when the media element\n// has no source\nif(!sourcesetLoad(tech)){tech.triggerSourceset('');firstSourceWatch(tech);}return retval;};if(el.currentSrc){tech.triggerSourceset(el.currentSrc);}else if(!sourcesetLoad(tech)){firstSourceWatch(tech);}el.resetSourceset_=()=>{el.resetSourceset_=null;el.load=oldLoad;el.setAttribute=oldSetAttribute;Object.defineProperty(el,'src',srcDescriptor);if(el.resetSourceWatch_){el.resetSourceWatch_();}};};/**\n * @file html5.js\n */ /**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */class Html5 extends Tech{/**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */constructor(options,ready){super(options,ready);const source=options.source;let crossoriginTracks=false;this.featuresVideoFrameCallback=this.featuresVideoFrameCallback&&this.el_.tagName==='VIDEO';// Set the source if one is provided\n// 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n// 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n// anyway so the error gets fired.\nif(source&&(this.el_.currentSrc!==source.src||options.tag&&options.tag.initNetworkState_===3)){this.setSource(source);}else{this.handleLateInit_(this.el_);}// setup sourceset after late sourceset/init\nif(options.enableSourceset){this.setupSourcesetHandling_();}this.isScrubbing_=false;if(this.el_.hasChildNodes()){const nodes=this.el_.childNodes;let nodesLength=nodes.length;const removeNodes=[];while(nodesLength--){const node=nodes[nodesLength];const nodeName=node.nodeName.toLowerCase();if(nodeName==='track'){if(!this.featuresNativeTextTracks){// Empty video tag tracks so the built-in player doesn't use them also.\n// This may not be fast enough to stop HTML5 browsers from reading the tags\n// so we'll need to turn off any default tracks if we're manually doing\n// captions and subtitles. videoElement.textTracks\nremoveNodes.push(node);}else{// store HTMLTrackElement and TextTrack to remote list\nthis.remoteTextTrackEls().addTrackElement_(node);this.remoteTextTracks().addTrack(node.track);this.textTracks().addTrack(node.track);if(!crossoriginTracks&&!this.el_.hasAttribute('crossorigin')&&isCrossOrigin(node.src)){crossoriginTracks=true;}}}}for(let i=0;i<removeNodes.length;i++){this.el_.removeChild(removeNodes[i]);}}this.proxyNativeTracks_();if(this.featuresNativeTextTracks&&crossoriginTracks){log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n'+'This may prevent text tracks from loading.');}// prevent iOS Safari from disabling metadata text tracks during native playback\nthis.restoreMetadataTracksInIOSNativePlayer_();// Determine if native controls should be used\n// Our goal should be to get the custom controls on mobile solid everywhere\n// so we can remove this all together. Right now this will block custom\n// controls on touch enabled laptops like the Chrome Pixel\nif((TOUCH_ENABLED||IS_IPHONE)&&options.nativeControlsForTouch===true){this.setControls(true);}// on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n// into a `fullscreenchange` event\nthis.proxyWebkitFullscreen_();this.triggerReady();}/**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */dispose(){if(this.el_&&this.el_.resetSourceset_){this.el_.resetSourceset_();}Html5.disposeMediaElement(this.el_);this.options_=null;// tech will handle clearing of the emulated track list\nsuper.dispose();}/**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */setupSourcesetHandling_(){setupSourceset(this);}/**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */restoreMetadataTracksInIOSNativePlayer_(){const textTracks=this.textTracks();let metadataTracksPreFullscreenState;// captures a snapshot of every metadata track's current state\nconst takeMetadataTrackSnapshot=()=>{metadataTracksPreFullscreenState=[];for(let i=0;i<textTracks.length;i++){const track=textTracks[i];if(track.kind==='metadata'){metadataTracksPreFullscreenState.push({track,storedMode:track.mode});}}};// snapshot each metadata track's initial state, and update the snapshot\n// each time there is a track 'change' event\ntakeMetadataTrackSnapshot();textTracks.addEventListener('change',takeMetadataTrackSnapshot);this.on('dispose',()=>textTracks.removeEventListener('change',takeMetadataTrackSnapshot));const restoreTrackMode=()=>{for(let i=0;i<metadataTracksPreFullscreenState.length;i++){const storedTrack=metadataTracksPreFullscreenState[i];if(storedTrack.track.mode==='disabled'&&storedTrack.track.mode!==storedTrack.storedMode){storedTrack.track.mode=storedTrack.storedMode;}}// we only want this handler to be executed on the first 'change' event\ntextTracks.removeEventListener('change',restoreTrackMode);};// when we enter fullscreen playback, stop updating the snapshot and\n// restore all track modes to their pre-fullscreen state\nthis.on('webkitbeginfullscreen',()=>{textTracks.removeEventListener('change',takeMetadataTrackSnapshot);// remove the listener before adding it just in case it wasn't previously removed\ntextTracks.removeEventListener('change',restoreTrackMode);textTracks.addEventListener('change',restoreTrackMode);});// start updating the snapshot again after leaving fullscreen\nthis.on('webkitendfullscreen',()=>{// remove the listener before adding it just in case it wasn't previously removed\ntextTracks.removeEventListener('change',takeMetadataTrackSnapshot);textTracks.addEventListener('change',takeMetadataTrackSnapshot);// remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\ntextTracks.removeEventListener('change',restoreTrackMode);});}/**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */overrideNative_(type,override){// If there is no behavioral change don't add/remove listeners\nif(override!==this[`featuresNative${type}Tracks`]){return;}const lowerCaseType=type.toLowerCase();if(this[`${lowerCaseType}TracksListeners_`]){Object.keys(this[`${lowerCaseType}TracksListeners_`]).forEach(eventName=>{const elTracks=this.el()[`${lowerCaseType}Tracks`];elTracks.removeEventListener(eventName,this[`${lowerCaseType}TracksListeners_`][eventName]);});}this[`featuresNative${type}Tracks`]=!override;this[`${lowerCaseType}TracksListeners_`]=null;this.proxyNativeTracksForType_(lowerCaseType);}/**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */overrideNativeAudioTracks(override){this.overrideNative_('Audio',override);}/**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */overrideNativeVideoTracks(override){this.overrideNative_('Video',override);}/**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */proxyNativeTracksForType_(name){const props=NORMAL[name];const elTracks=this.el()[props.getterName];const techTracks=this[props.getterName]();if(!this[`featuresNative${props.capitalName}Tracks`]||!elTracks||!elTracks.addEventListener){return;}const listeners={change:e=>{const event={type:'change',target:techTracks,currentTarget:techTracks,srcElement:techTracks};techTracks.trigger(event);// if we are a text track change event, we should also notify the\n// remote text track list. This can potentially cause a false positive\n// if we were to get a change event on a non-remote track and\n// we triggered the event on the remote text track list which doesn't\n// contain that track. However, best practices mean looping through the\n// list of tracks and searching for the appropriate mode value, so,\n// this shouldn't pose an issue\nif(name==='text'){this[REMOTE.remoteText.getterName]().trigger(event);}},addtrack(e){techTracks.addTrack(e.track);},removetrack(e){techTracks.removeTrack(e.track);}};const removeOldTracks=function(){const removeTracks=[];for(let i=0;i<techTracks.length;i++){let found=false;for(let j=0;j<elTracks.length;j++){if(elTracks[j]===techTracks[i]){found=true;break;}}if(!found){removeTracks.push(techTracks[i]);}}while(removeTracks.length){techTracks.removeTrack(removeTracks.shift());}};this[props.getterName+'Listeners_']=listeners;Object.keys(listeners).forEach(eventName=>{const listener=listeners[eventName];elTracks.addEventListener(eventName,listener);this.on('dispose',e=>elTracks.removeEventListener(eventName,listener));});// Remove (native) tracks that are not used anymore\nthis.on('loadstart',removeOldTracks);this.on('dispose',e=>this.off('loadstart',removeOldTracks));}/**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */proxyNativeTracks_(){NORMAL.names.forEach(name=>{this.proxyNativeTracksForType_(name);});}/**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */createEl(){let el=this.options_.tag;// Check if this browser supports moving the element into the box.\n// On the iPhone video will break if you move the element,\n// So we have to create a brand new element.\n// If we ingested the player div, we do not need to move the media element.\nif(!el||!(this.options_.playerElIngest||this.movingMediaElementInDOM)){// If the original tag is still there, clone and remove it.\nif(el){const clone=el.cloneNode(true);if(el.parentNode){el.parentNode.insertBefore(clone,el);}Html5.disposeMediaElement(el);el=clone;}else{el=document.createElement('video');// determine if native controls should be used\nconst tagAttributes=this.options_.tag&&getAttributes(this.options_.tag);const attributes=merge$1({},tagAttributes);if(!TOUCH_ENABLED||this.options_.nativeControlsForTouch!==true){delete attributes.controls;}setAttributes(el,Object.assign(attributes,{id:this.options_.techId,class:'vjs-tech'}));}el.playerId=this.options_.playerId;}if(typeof this.options_.preload!=='undefined'){setAttribute(el,'preload',this.options_.preload);}if(this.options_.disablePictureInPicture!==undefined){el.disablePictureInPicture=this.options_.disablePictureInPicture;}// Update specific tag settings, in case they were overridden\n// `autoplay` has to be *last* so that `muted` and `playsinline` are present\n// when iOS/Safari or other browsers attempt to autoplay.\nconst settingsAttrs=['loop','muted','playsinline','autoplay'];for(let i=0;i<settingsAttrs.length;i++){const attr=settingsAttrs[i];const value=this.options_[attr];if(typeof value!=='undefined'){if(value){setAttribute(el,attr,attr);}else{removeAttribute(el,attr);}el[attr]=value;}}return el;}/**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */handleLateInit_(el){if(el.networkState===0||el.networkState===3){// The video element hasn't started loading the source yet\n// or didn't find a source\nreturn;}if(el.readyState===0){// NetworkState is set synchronously BUT loadstart is fired at the\n// end of the current stack, usually before setInterval(fn, 0).\n// So at this point we know loadstart may have already fired or is\n// about to fire, and either way the player hasn't seen it yet.\n// We don't want to fire loadstart prematurely here and cause a\n// double loadstart so we'll wait and see if it happens between now\n// and the next loop, and fire it if not.\n// HOWEVER, we also want to make sure it fires before loadedmetadata\n// which could also happen between now and the next loop, so we'll\n// watch for that also.\nlet loadstartFired=false;const setLoadstartFired=function(){loadstartFired=true;};this.on('loadstart',setLoadstartFired);const triggerLoadstart=function(){// We did miss the original loadstart. Make sure the player\n// sees loadstart before loadedmetadata\nif(!loadstartFired){this.trigger('loadstart');}};this.on('loadedmetadata',triggerLoadstart);this.ready(function(){this.off('loadstart',setLoadstartFired);this.off('loadedmetadata',triggerLoadstart);if(!loadstartFired){// We did miss the original native loadstart. Fire it now.\nthis.trigger('loadstart');}});return;}// From here on we know that loadstart already fired and we missed it.\n// The other readyState events aren't as much of a problem if we double\n// them, so not going to go to as much trouble as loadstart to prevent\n// that unless we find reason to.\nconst eventsToTrigger=['loadstart'];// loadedmetadata: newly equal to HAVE_METADATA (1) or greater\neventsToTrigger.push('loadedmetadata');// loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\nif(el.readyState>=2){eventsToTrigger.push('loadeddata');}// canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\nif(el.readyState>=3){eventsToTrigger.push('canplay');}// canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\nif(el.readyState>=4){eventsToTrigger.push('canplaythrough');}// We still need to give the player time to add event listeners\nthis.ready(function(){eventsToTrigger.forEach(function(type){this.trigger(type);},this);});}/**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */setScrubbing(isScrubbing){this.isScrubbing_=isScrubbing;}/**\n   * Get whether we are scrubbing or not.\n   *\n   * @return {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */scrubbing(){return this.isScrubbing_;}/**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */setCurrentTime(seconds){try{if(this.isScrubbing_&&this.el_.fastSeek&&IS_ANY_SAFARI){this.el_.fastSeek(seconds);}else{this.el_.currentTime=seconds;}}catch(e){log$1(e,'Video is not ready. (Video.js)');// this.warning(VideoJS.warnings.videoNotReady);\n}}/**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */duration(){// Android Chrome will report duration as Infinity for VOD HLS until after\n// playback has started, which triggers the live display erroneously.\n// Return NaN if playback has not started and trigger a durationupdate once\n// the duration can be reliably known.\nif(this.el_.duration===Infinity&&IS_ANDROID&&IS_CHROME&&this.el_.currentTime===0){// Wait for the first `timeupdate` with currentTime > 0 - there may be\n// several with 0\nconst checkProgress=()=>{if(this.el_.currentTime>0){// Trigger durationchange for genuinely live video\nif(this.el_.duration===Infinity){this.trigger('durationchange');}this.off('timeupdate',checkProgress);}};this.on('timeupdate',checkProgress);return NaN;}return this.el_.duration||NaN;}/**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */width(){return this.el_.offsetWidth;}/**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */height(){return this.el_.offsetHeight;}/**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */proxyWebkitFullscreen_(){if(!('webkitDisplayingFullscreen'in this.el_)){return;}const endFn=function(){this.trigger('fullscreenchange',{isFullscreen:false});// Safari will sometimes set contols on the videoelement when existing fullscreen.\nif(this.el_.controls&&!this.options_.nativeControlsForTouch&&this.controls()){this.el_.controls=false;}};const beginFn=function(){if('webkitPresentationMode'in this.el_&&this.el_.webkitPresentationMode!=='picture-in-picture'){this.one('webkitendfullscreen',endFn);this.trigger('fullscreenchange',{isFullscreen:true,// set a flag in case another tech triggers fullscreenchange\nnativeIOSFullscreen:true});}};this.on('webkitbeginfullscreen',beginFn);this.on('dispose',()=>{this.off('webkitbeginfullscreen',beginFn);this.off('webkitendfullscreen',endFn);});}/**\n   * Check if fullscreen is supported on the video el.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */supportsFullScreen(){return typeof this.el_.webkitEnterFullScreen==='function';}/**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */enterFullScreen(){const video=this.el_;if(video.paused&&video.networkState<=video.HAVE_METADATA){// attempt to prime the video element for programmatic access\n// this isn't necessary on the desktop but shouldn't hurt\nsilencePromise(this.el_.play());// playing and pausing synchronously during the transition to fullscreen\n// can get iOS ~6.1 devices into a play/pause loop\nthis.setTimeout(function(){video.pause();try{video.webkitEnterFullScreen();}catch(e){this.trigger('fullscreenerror',e);}},0);}else{try{video.webkitEnterFullScreen();}catch(e){this.trigger('fullscreenerror',e);}}}/**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */exitFullScreen(){if(!this.el_.webkitDisplayingFullscreen){this.trigger('fullscreenerror',new Error('The video is not fullscreen'));return;}this.el_.webkitExitFullScreen();}/**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */requestPictureInPicture(){return this.el_.requestPictureInPicture();}/**\n   * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n   * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n   * Needs to be checked later than the constructor\n   * This will be a false positive for clear sources loaded after a Fairplay source\n   *\n   * @param {function} cb function to call\n   * @return {number} id of request\n   */requestVideoFrameCallback(cb){if(this.featuresVideoFrameCallback&&!this.el_.webkitKeys){return this.el_.requestVideoFrameCallback(cb);}return super.requestVideoFrameCallback(cb);}/**\n   * Native or fallback requestVideoFrameCallback\n   *\n   * @param {number} id request id to cancel\n   */cancelVideoFrameCallback(id){if(this.featuresVideoFrameCallback&&!this.el_.webkitKeys){this.el_.cancelVideoFrameCallback(id);}else{super.cancelVideoFrameCallback(id);}}/**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */src(src){if(src===undefined){return this.el_.src;}// Setting src through `src` instead of `setSrc` will be deprecated\nthis.setSrc(src);}/**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */reset(){Html5.resetMediaElement(this.el_);}/**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */currentSrc(){if(this.currentSource_){return this.currentSource_.src;}return this.el_.currentSrc;}/**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */setControls(val){this.el_.controls=!!val;}/**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */addTextTrack(kind,label,language){if(!this.featuresNativeTextTracks){return super.addTextTrack(kind,label,language);}return this.el_.addTextTrack(kind,label,language);}/**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */createRemoteTextTrack(options){if(!this.featuresNativeTextTracks){return super.createRemoteTextTrack(options);}const htmlTrackElement=document.createElement('track');if(options.kind){htmlTrackElement.kind=options.kind;}if(options.label){htmlTrackElement.label=options.label;}if(options.language||options.srclang){htmlTrackElement.srclang=options.language||options.srclang;}if(options.default){htmlTrackElement.default=options.default;}if(options.id){htmlTrackElement.id=options.id;}if(options.src){htmlTrackElement.src=options.src;}return htmlTrackElement;}/**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack\n   * will not be removed from the TextTrackList and HtmlTrackElementList\n   * after a source change\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   */addRemoteTextTrack(options,manualCleanup){const htmlTrackElement=super.addRemoteTextTrack(options,manualCleanup);if(this.featuresNativeTextTracks){this.el().appendChild(htmlTrackElement);}return htmlTrackElement;}/**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */removeRemoteTextTrack(track){super.removeRemoteTextTrack(track);if(this.featuresNativeTextTracks){const tracks=this.$$('track');let i=tracks.length;while(i--){if(track===tracks[i]||track===tracks[i].track){this.el().removeChild(tracks[i]);}}}}/**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */getVideoPlaybackQuality(){if(typeof this.el().getVideoPlaybackQuality==='function'){return this.el().getVideoPlaybackQuality();}const videoPlaybackQuality={};if(typeof this.el().webkitDroppedFrameCount!=='undefined'&&typeof this.el().webkitDecodedFrameCount!=='undefined'){videoPlaybackQuality.droppedVideoFrames=this.el().webkitDroppedFrameCount;videoPlaybackQuality.totalVideoFrames=this.el().webkitDecodedFrameCount;}if(window$1.performance){videoPlaybackQuality.creationTime=window$1.performance.now();}return videoPlaybackQuality;}}/* HTML5 Support Testing ---------------------------------------------------- */ /**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */defineLazyProperty(Html5,'TEST_VID',function(){if(!isReal()){return;}const video=document.createElement('video');const track=document.createElement('track');track.kind='captions';track.srclang='en';track.label='English';video.appendChild(track);return video;});/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */Html5.isSupported=function(){// IE with no Media Player is a LIAR! (#984)\ntry{Html5.TEST_VID.volume=0.5;}catch(e){return false;}return!!(Html5.TEST_VID&&Html5.TEST_VID.canPlayType);};/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */Html5.canPlayType=function(type){return Html5.TEST_VID.canPlayType(type);};/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */Html5.canPlaySource=function(srcObj,options){return Html5.canPlayType(srcObj.type);};/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */Html5.canControlVolume=function(){// IE will error if Windows Media Player not installed #3315\ntry{const volume=Html5.TEST_VID.volume;Html5.TEST_VID.volume=volume/2+0.1;const canControl=volume!==Html5.TEST_VID.volume;// With the introduction of iOS 15, there are cases where the volume is read as\n// changed but reverts back to its original state at the start of the next tick.\n// To determine whether volume can be controlled on iOS,\n// a timeout is set and the volume is checked asynchronously.\n// Since `features` doesn't currently work asynchronously, the value is manually set.\nif(canControl&&IS_IOS){window$1.setTimeout(()=>{if(Html5&&Html5.prototype){Html5.prototype.featuresVolumeControl=volume!==Html5.TEST_VID.volume;}});// default iOS to false, which will be updated in the timeout above.\nreturn false;}return canControl;}catch(e){return false;}};/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */Html5.canMuteVolume=function(){try{const muted=Html5.TEST_VID.muted;// in some versions of iOS muted property doesn't always\n// work, so we want to set both property and attribute\nHtml5.TEST_VID.muted=!muted;if(Html5.TEST_VID.muted){setAttribute(Html5.TEST_VID,'muted','muted');}else{removeAttribute(Html5.TEST_VID,'muted','muted');}return muted!==Html5.TEST_VID.muted;}catch(e){return false;}};/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */Html5.canControlPlaybackRate=function(){// Playback rate API is implemented in Android Chrome, but doesn't do anything\n// https://github.com/videojs/video.js/issues/3180\nif(IS_ANDROID&&IS_CHROME&&CHROME_VERSION<58){return false;}// IE will error if Windows Media Player not installed #3315\ntry{const playbackRate=Html5.TEST_VID.playbackRate;Html5.TEST_VID.playbackRate=playbackRate/2+0.1;return playbackRate!==Html5.TEST_VID.playbackRate;}catch(e){return false;}};/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */Html5.canOverrideAttributes=function(){// if we cannot overwrite the src/innerHTML property, there is no support\n// iOS 7 safari for instance cannot do this.\ntry{const noop=()=>{};Object.defineProperty(document.createElement('video'),'src',{get:noop,set:noop});Object.defineProperty(document.createElement('audio'),'src',{get:noop,set:noop});Object.defineProperty(document.createElement('video'),'innerHTML',{get:noop,set:noop});Object.defineProperty(document.createElement('audio'),'innerHTML',{get:noop,set:noop});}catch(e){return false;}return true;};/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */Html5.supportsNativeTextTracks=function(){return IS_ANY_SAFARI||IS_IOS&&IS_CHROME;};/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */Html5.supportsNativeVideoTracks=function(){return!!(Html5.TEST_VID&&Html5.TEST_VID.videoTracks);};/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */Html5.supportsNativeAudioTracks=function(){return!!(Html5.TEST_VID&&Html5.TEST_VID.audioTracks);};/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */Html5.Events=['loadstart','suspend','abort','error','emptied','stalled','loadedmetadata','loadeddata','canplay','canplaythrough','playing','waiting','seeking','seeked','ended','durationchange','timeupdate','progress','play','pause','ratechange','resize','volumechange'];/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */ /**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */ /**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */ /**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */ /**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */ /**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */ /**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */[['featuresMuteControl','canMuteVolume'],['featuresPlaybackRate','canControlPlaybackRate'],['featuresSourceset','canOverrideAttributes'],['featuresNativeTextTracks','supportsNativeTextTracks'],['featuresNativeVideoTracks','supportsNativeVideoTracks'],['featuresNativeAudioTracks','supportsNativeAudioTracks']].forEach(function([key,fn]){defineLazyProperty(Html5.prototype,key,()=>Html5[fn](),true);});Html5.prototype.featuresVolumeControl=Html5.canControlVolume();/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */Html5.prototype.movingMediaElementInDOM=!IS_IOS;// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */Html5.prototype.featuresFullscreenResize=true;/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */Html5.prototype.featuresProgressEvents=true;/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */Html5.prototype.featuresTimeupdateEvents=true;/**\n * Whether the HTML5 el supports `requestVideoFrameCallback`\n *\n * @type {boolean}\n */Html5.prototype.featuresVideoFrameCallback=!!(Html5.TEST_VID&&Html5.TEST_VID.requestVideoFrameCallback);Html5.disposeMediaElement=function(el){if(!el){return;}if(el.parentNode){el.parentNode.removeChild(el);}// remove any child track or source nodes to prevent their loading\nwhile(el.hasChildNodes()){el.removeChild(el.firstChild);}// remove any src reference. not setting `src=''` because that causes a warning\n// in firefox\nel.removeAttribute('src');// force the media element to update its loading state by calling load()\n// however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\nif(typeof el.load==='function'){// wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n(function(){try{el.load();}catch(e){// not supported\n}})();}};Html5.resetMediaElement=function(el){if(!el){return;}const sources=el.querySelectorAll('source');let i=sources.length;while(i--){el.removeChild(sources[i]);}// remove any src reference.\n// not setting `src=''` because that throws an error\nel.removeAttribute('src');if(typeof el.load==='function'){// wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n(function(){try{el.load();}catch(e){// satisfy linter\n}})();}};/* Native HTML5 element property wrapping ----------------------------------- */ // Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */'muted',/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */'defaultMuted',/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */'autoplay',/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */'controls',/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */'loop',/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */'playsinline'].forEach(function(prop){Html5.prototype[prop]=function(){return this.el_[prop]||this.el_.hasAttribute(prop);};});// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */'muted',/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */'defaultMuted',/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */'autoplay',/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */'loop',/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */'playsinline'].forEach(function(prop){Html5.prototype['set'+toTitleCase$1(prop)]=function(v){this.el_[prop]=v;if(v){this.el_.setAttribute(prop,prop);}else{this.el_.removeAttribute(prop);}};});// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n[/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */'paused',/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */'currentTime',/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */'buffered',/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */'volume',/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */'poster',/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */'preload',/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */'error',/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */'seeking',/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */'seekable',/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */'ended',/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */'playbackRate',/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */'defaultPlaybackRate',/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */'disablePictureInPicture',/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */'played',/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */'networkState',/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */'readyState',/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */'videoWidth',/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */'videoHeight',/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */'crossOrigin'].forEach(function(prop){Html5.prototype[prop]=function(){return this.el_[prop];};});// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n[/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */'volume',/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */'src',/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */'poster',/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */'preload',/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */'playbackRate',/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */'defaultPlaybackRate',/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */'disablePictureInPicture',/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */'crossOrigin'].forEach(function(prop){Html5.prototype['set'+toTitleCase$1(prop)]=function(v){this.el_[prop]=v;};});// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */'pause',/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */'load',/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */'play'].forEach(function(prop){Html5.prototype[prop]=function(){return this.el_[prop]();};});Tech.withSourceHandlers(Html5);/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */Html5.nativeSourceHandler={};/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */Html5.nativeSourceHandler.canPlayType=function(type){// IE without MediaPlayer throws an error (#519)\ntry{return Html5.TEST_VID.canPlayType(type);}catch(e){return'';}};/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */Html5.nativeSourceHandler.canHandleSource=function(source,options){// If a type was provided we should rely on that\nif(source.type){return Html5.nativeSourceHandler.canPlayType(source.type);// If no type, fall back to checking 'video/[EXTENSION]'\n}else if(source.src){const ext=getFileExtension(source.src);return Html5.nativeSourceHandler.canPlayType(`video/${ext}`);}return'';};/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */Html5.nativeSourceHandler.handleSource=function(source,tech,options){tech.setSrc(source.src);};/**\n * A noop for the native dispose function, as cleanup is not needed.\n */Html5.nativeSourceHandler.dispose=function(){};// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);Tech.registerTech('Html5',Html5);/**\n * @file player.js\n */ // The following tech events are simply re-triggered\n// on the player when they happen\nconst TECH_EVENTS_RETRIGGER=[/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */ /**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */'progress',/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */ /**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */'abort',/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */ /**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */'suspend',/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */ /**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */'emptied',/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */ /**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */'stalled',/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */ /**\n * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */'loadedmetadata',/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */ /**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */'loadeddata',/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */ /**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */'timeupdate',/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */ /**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */'resize',/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */ /**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */'volumechange',/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */ /**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */'texttrackchange'];// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nconst TECH_EVENTS_QUEUE={canplay:'CanPlay',canplaythrough:'CanPlayThrough',playing:'Playing',seeked:'Seeked'};const BREAKPOINT_ORDER=['tiny','xsmall','small','medium','large','xlarge','huge'];const BREAKPOINT_CLASSES={};// grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\nBREAKPOINT_ORDER.forEach(k=>{const v=k.charAt(0)==='x'?`x-${k.substring(1)}`:k;BREAKPOINT_CLASSES[k]=`vjs-layout-${v}`;});const DEFAULT_BREAKPOINTS={tiny:210,xsmall:320,small:425,medium:768,large:1440,xlarge:2560,huge:Infinity};/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */class Player extends Component$1{/**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */constructor(tag,options,ready){// Make sure tag ID exists\ntag.id=tag.id||options.id||`vjs_video_${newGUID()}`;// Set Options\n// The options argument overrides options set in the video tag\n// which overrides globally set options.\n// This latter part coincides with the load order\n// (tag must exist before Player)\noptions=Object.assign(Player.getTagSettings(tag),options);// Delay the initialization of children because we need to set up\n// player properties first, and can't use `this` before `super()`\noptions.initChildren=false;// Same with creating the element\noptions.createEl=false;// don't auto mixin the evented mixin\noptions.evented=false;// we don't want the player to report touch activity on itself\n// see enableTouchActivity in Component\noptions.reportTouchActivity=false;// If language is not set, get the closest lang attribute\nif(!options.language){const closest=tag.closest('[lang]');if(closest){options.language=closest.getAttribute('lang');}}// Run base component initializing with new options\nsuper(null,options,ready);// Create bound methods for document listeners.\nthis.boundDocumentFullscreenChange_=e=>this.documentFullscreenChange_(e);this.boundFullWindowOnEscKey_=e=>this.fullWindowOnEscKey(e);this.boundUpdateStyleEl_=e=>this.updateStyleEl_(e);this.boundApplyInitTime_=e=>this.applyInitTime_(e);this.boundUpdateCurrentBreakpoint_=e=>this.updateCurrentBreakpoint_(e);this.boundHandleTechClick_=e=>this.handleTechClick_(e);this.boundHandleTechDoubleClick_=e=>this.handleTechDoubleClick_(e);this.boundHandleTechTouchStart_=e=>this.handleTechTouchStart_(e);this.boundHandleTechTouchMove_=e=>this.handleTechTouchMove_(e);this.boundHandleTechTouchEnd_=e=>this.handleTechTouchEnd_(e);this.boundHandleTechTap_=e=>this.handleTechTap_(e);// default isFullscreen_ to false\nthis.isFullscreen_=false;// create logger\nthis.log=createLogger(this.id_);// Hold our own reference to fullscreen api so it can be mocked in tests\nthis.fsApi_=FullscreenApi;// Tracks when a tech changes the poster\nthis.isPosterFromTech_=false;// Holds callback info that gets queued when playback rate is zero\n// and a seek is happening\nthis.queuedCallbacks_=[];// Turn off API access because we're loading a new tech that might load asynchronously\nthis.isReady_=false;// Init state hasStarted_\nthis.hasStarted_=false;// Init state userActive_\nthis.userActive_=false;// Init debugEnabled_\nthis.debugEnabled_=false;// Init state audioOnlyMode_\nthis.audioOnlyMode_=false;// Init state audioPosterMode_\nthis.audioPosterMode_=false;// Init state audioOnlyCache_\nthis.audioOnlyCache_={playerHeight:null,hiddenChildren:[]};// if the global option object was accidentally blown away by\n// someone, bail early with an informative error\nif(!this.options_||!this.options_.techOrder||!this.options_.techOrder.length){throw new Error('No techOrder specified. Did you overwrite '+'videojs.options instead of just changing the '+'properties you want to override?');}// Store the original tag used to set options\nthis.tag=tag;// Store the tag attributes used to restore html5 element\nthis.tagAttributes=tag&&getAttributes(tag);// Update current language\nthis.language(this.options_.language);// Update Supported Languages\nif(options.languages){// Normalise player option languages to lowercase\nconst languagesToLower={};Object.getOwnPropertyNames(options.languages).forEach(function(name){languagesToLower[name.toLowerCase()]=options.languages[name];});this.languages_=languagesToLower;}else{this.languages_=Player.prototype.options_.languages;}this.resetCache_();// Set poster\nthis.poster_=options.poster||'';// Set controls\nthis.controls_=!!options.controls;// Original tag settings stored in options\n// now remove immediately so native controls don't flash.\n// May be turned back on by HTML5 tech if nativeControlsForTouch is true\ntag.controls=false;tag.removeAttribute('controls');this.changingSrc_=false;this.playCallbacks_=[];this.playTerminatedQueue_=[];// the attribute overrides the option\nif(tag.hasAttribute('autoplay')){this.autoplay(true);}else{// otherwise use the setter to validate and\n// set the correct value.\nthis.autoplay(this.options_.autoplay);}// check plugins\nif(options.plugins){Object.keys(options.plugins).forEach(name=>{if(typeof this[name]!=='function'){throw new Error(`plugin \"${name}\" does not exist`);}});}/*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */this.scrubbing_=false;this.el_=this.createEl();// Make this an evented object and use `el_` as its event bus.\nevented(this,{eventBusKey:'el_'});// listen to document and player fullscreenchange handlers so we receive those events\n// before a user can receive them so we can update isFullscreen appropriately.\n// make sure that we listen to fullscreenchange events before everything else to make sure that\n// our isFullscreen method is updated properly for internal components as well as external.\nif(this.fsApi_.requestFullscreen){on(document,this.fsApi_.fullscreenchange,this.boundDocumentFullscreenChange_);this.on(this.fsApi_.fullscreenchange,this.boundDocumentFullscreenChange_);}if(this.fluid_){this.on(['playerreset','resize'],this.boundUpdateStyleEl_);}// We also want to pass the original player options to each component and plugin\n// as well so they don't need to reach back into the player for options later.\n// We also need to do another copy of this.options_ so we don't end up with\n// an infinite loop.\nconst playerOptionsCopy=merge$1(this.options_);// Load plugins\nif(options.plugins){Object.keys(options.plugins).forEach(name=>{this[name](options.plugins[name]);});}// Enable debug mode to fire debugon event for all plugins.\nif(options.debug){this.debug(true);}this.options_.playerOptions=playerOptionsCopy;this.middleware_=[];this.playbackRates(options.playbackRates);this.initChildren();// Set isAudio based on whether or not an audio tag was used\nthis.isAudio(tag.nodeName.toLowerCase()==='audio');// Update controls className. Can't do this when the controls are initially\n// set because the element doesn't exist yet.\nif(this.controls()){this.addClass('vjs-controls-enabled');}else{this.addClass('vjs-controls-disabled');}// Set ARIA label and region role depending on player type\nthis.el_.setAttribute('role','region');if(this.isAudio()){this.el_.setAttribute('aria-label',this.localize('Audio Player'));}else{this.el_.setAttribute('aria-label',this.localize('Video Player'));}if(this.isAudio()){this.addClass('vjs-audio');}// TODO: Make this smarter. Toggle user state between touching/mousing\n// using events, since devices can have both touch and mouse events.\n// TODO: Make this check be performed again when the window switches between monitors\n// (See https://github.com/videojs/video.js/issues/5683)\nif(TOUCH_ENABLED){this.addClass('vjs-touch-enabled');}// iOS Safari has broken hover handling\nif(!IS_IOS){this.addClass('vjs-workinghover');}// Make player easily findable by ID\nPlayer.players[this.id_]=this;// Add a major version class to aid css in plugins\nconst majorVersion=version$6.split('.')[0];this.addClass(`vjs-v${majorVersion}`);// When the player is first initialized, trigger activity so components\n// like the control bar show themselves if needed\nthis.userActive(true);this.reportUserActivity();this.one('play',e=>this.listenForUserActivity_(e));this.on('keydown',e=>this.handleKeyDown(e));this.on('languagechange',e=>this.handleLanguagechange(e));this.breakpoints(this.options_.breakpoints);this.responsive(this.options_.responsive);// Calling both the audio mode methods after the player is fully\n// setup to be able to listen to the events triggered by them\nthis.on('ready',()=>{// Calling the audioPosterMode method first so that\n// the audioOnlyMode can take precedence when both options are set to true\nthis.audioPosterMode(this.options_.audioPosterMode);this.audioOnlyMode(this.options_.audioOnlyMode);});}/**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */dispose(){/**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */this.trigger('dispose');// prevent dispose from being called twice\nthis.off('dispose');// Make sure all player-specific document listeners are unbound. This is\noff(document,this.fsApi_.fullscreenchange,this.boundDocumentFullscreenChange_);off(document,'keydown',this.boundFullWindowOnEscKey_);if(this.styleEl_&&this.styleEl_.parentNode){this.styleEl_.parentNode.removeChild(this.styleEl_);this.styleEl_=null;}// Kill reference to this player\nPlayer.players[this.id_]=null;if(this.tag&&this.tag.player){this.tag.player=null;}if(this.el_&&this.el_.player){this.el_.player=null;}if(this.tech_){this.tech_.dispose();this.isPosterFromTech_=false;this.poster_='';}if(this.playerElIngest_){this.playerElIngest_=null;}if(this.tag){this.tag=null;}clearCacheForPlayer(this);// remove all event handlers for track lists\n// all tracks and track listeners are removed on\n// tech dispose\nALL.names.forEach(name=>{const props=ALL[name];const list=this[props.getterName]();// if it is not a native list\n// we have to manually remove event listeners\nif(list&&list.off){list.off();}});// the actual .el_ is removed here, or replaced if\nsuper.dispose({restoreEl:this.options_.restoreEl});}/**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */createEl(){let tag=this.tag;let el;let playerElIngest=this.playerElIngest_=tag.parentNode&&tag.parentNode.hasAttribute&&tag.parentNode.hasAttribute('data-vjs-player');const divEmbed=this.tag.tagName.toLowerCase()==='video-js';if(playerElIngest){el=this.el_=tag.parentNode;}else if(!divEmbed){el=this.el_=super.createEl('div');}// Copy over all the attributes from the tag, including ID and class\n// ID will now reference player box, not the video tag\nconst attrs=getAttributes(tag);if(divEmbed){el=this.el_=tag;tag=this.tag=document.createElement('video');while(el.children.length){tag.appendChild(el.firstChild);}if(!hasClass(el,'video-js')){addClass(el,'video-js');}el.appendChild(tag);playerElIngest=this.playerElIngest_=el;// move properties over from our custom `video-js` element\n// to our new `video` element. This will move things like\n// `src` or `controls` that were set via js before the player\n// was initialized.\nObject.keys(el).forEach(k=>{try{tag[k]=el[k];}catch(e){// we got a a property like outerHTML which we can't actually copy, ignore it\n}});}// set tabindex to -1 to remove the video element from the focus order\ntag.setAttribute('tabindex','-1');attrs.tabindex='-1';// Workaround for #4583 on Chrome (on Windows) with JAWS.\n// See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n// Note that we can't detect if JAWS is being used, but this ARIA attribute\n// doesn't change behavior of Chrome if JAWS is not being used\nif(IS_CHROME&&IS_WINDOWS){tag.setAttribute('role','application');attrs.role='application';}// Remove width/height attrs from tag so CSS can make it 100% width/height\ntag.removeAttribute('width');tag.removeAttribute('height');if('width'in attrs){delete attrs.width;}if('height'in attrs){delete attrs.height;}Object.getOwnPropertyNames(attrs).forEach(function(attr){// don't copy over the class attribute to the player element when we're in a div embed\n// the class is already set up properly in the divEmbed case\n// and we want to make sure that the `video-js` class doesn't get lost\nif(!(divEmbed&&attr==='class')){el.setAttribute(attr,attrs[attr]);}if(divEmbed){tag.setAttribute(attr,attrs[attr]);}});// Update tag id/class for use as HTML5 playback tech\n// Might think we should do this after embedding in container so .vjs-tech class\n// doesn't flash 100% width/height, but class only applies with .video-js parent\ntag.playerId=tag.id;tag.id+='_html5_api';tag.className='vjs-tech';// Make player findable on elements\ntag.player=el.player=this;// Default state of video is paused\nthis.addClass('vjs-paused');// Add a style element in the player that we'll use to set the width/height\n// of the player in a way that's still overrideable by CSS, just like the\n// video element\nif(window$1.VIDEOJS_NO_DYNAMIC_STYLE!==true){this.styleEl_=createStyleElement('vjs-styles-dimensions');const defaultsStyleEl=$('.vjs-styles-defaults');const head=$('head');head.insertBefore(this.styleEl_,defaultsStyleEl?defaultsStyleEl.nextSibling:head.firstChild);}this.fill_=false;this.fluid_=false;// Pass in the width/height/aspectRatio options which will update the style el\nthis.width(this.options_.width);this.height(this.options_.height);this.fill(this.options_.fill);this.fluid(this.options_.fluid);this.aspectRatio(this.options_.aspectRatio);// support both crossOrigin and crossorigin to reduce confusion and issues around the name\nthis.crossOrigin(this.options_.crossOrigin||this.options_.crossorigin);// Hide any links within the video/audio tag,\n// because IE doesn't hide them completely from screen readers.\nconst links=tag.getElementsByTagName('a');for(let i=0;i<links.length;i++){const linkEl=links.item(i);addClass(linkEl,'vjs-hidden');linkEl.setAttribute('hidden','hidden');}// insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n// keep track of the original for later so we can know if the source originally failed\ntag.initNetworkState_=tag.networkState;// Wrap video tag in div (el/box) container\nif(tag.parentNode&&!playerElIngest){tag.parentNode.insertBefore(el,tag);}// insert the tag as the first child of the player element\n// then manually add it to the children array so that this.addChild\n// will work properly for other components\n//\n// Breaks iPhone, fixed in HTML5 setup.\nprependTo(tag,el);this.children_.unshift(tag);// Set lang attr on player to ensure CSS :lang() in consistent with player\n// if it's been set to something different to the doc\nthis.el_.setAttribute('lang',this.language_);this.el_.setAttribute('translate','no');this.el_=el;return el;}/**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string|null} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */crossOrigin(value){// `null` can be set to unset a value\nif(typeof value==='undefined'){return this.techGet_('crossOrigin');}if(value!==null&&value!=='anonymous'&&value!=='use-credentials'){log$1.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);return;}this.techCall_('setCrossOrigin',value);if(this.posterImage){this.posterImage.crossOrigin(value);}return;}/**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */width(value){return this.dimension('width',value);}/**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */height(value){return this.dimension('height',value);}/**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */dimension(dimension,value){const privDimension=dimension+'_';if(value===undefined){return this[privDimension]||0;}if(value===''||value==='auto'){// If an empty string is given, reset the dimension to be automatic\nthis[privDimension]=undefined;this.updateStyleEl_();return;}const parsedVal=parseFloat(value);if(isNaN(parsedVal)){log$1.error(`Improper value \"${value}\" supplied for for ${dimension}`);return;}this[privDimension]=parsedVal;this.updateStyleEl_();}/**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */fluid(bool){if(bool===undefined){return!!this.fluid_;}this.fluid_=!!bool;if(isEvented(this)){this.off(['playerreset','resize'],this.boundUpdateStyleEl_);}if(bool){this.addClass('vjs-fluid');this.fill(false);addEventedCallback(this,()=>{this.on(['playerreset','resize'],this.boundUpdateStyleEl_);});}else{this.removeClass('vjs-fluid');}this.updateStyleEl_();}/**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */fill(bool){if(bool===undefined){return!!this.fill_;}this.fill_=!!bool;if(bool){this.addClass('vjs-fill');this.fluid(false);}else{this.removeClass('vjs-fill');}}/**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */ /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */aspectRatio(ratio){if(ratio===undefined){return this.aspectRatio_;}// Check for width:height format\nif(!/^\\d+\\:\\d+$/.test(ratio)){throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');}this.aspectRatio_=ratio;// We're assuming if you set an aspect ratio you want fluid mode,\n// because in fixed mode you could calculate width and height yourself.\nthis.fluid(true);this.updateStyleEl_();}/**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */updateStyleEl_(){if(window$1.VIDEOJS_NO_DYNAMIC_STYLE===true){const width=typeof this.width_==='number'?this.width_:this.options_.width;const height=typeof this.height_==='number'?this.height_:this.options_.height;const techEl=this.tech_&&this.tech_.el();if(techEl){if(width>=0){techEl.width=width;}if(height>=0){techEl.height=height;}}return;}let width;let height;let aspectRatio;let idClass;// The aspect ratio is either used directly or to calculate width and height.\nif(this.aspectRatio_!==undefined&&this.aspectRatio_!=='auto'){// Use any aspectRatio that's been specifically set\naspectRatio=this.aspectRatio_;}else if(this.videoWidth()>0){// Otherwise try to get the aspect ratio from the video metadata\naspectRatio=this.videoWidth()+':'+this.videoHeight();}else{// Or use a default. The video element's is 2:1, but 16:9 is more common.\naspectRatio='16:9';}// Get the ratio as a decimal we can use to calculate dimensions\nconst ratioParts=aspectRatio.split(':');const ratioMultiplier=ratioParts[1]/ratioParts[0];if(this.width_!==undefined){// Use any width that's been specifically set\nwidth=this.width_;}else if(this.height_!==undefined){// Or calulate the width from the aspect ratio if a height has been set\nwidth=this.height_/ratioMultiplier;}else{// Or use the video's metadata, or use the video el's default of 300\nwidth=this.videoWidth()||300;}if(this.height_!==undefined){// Use any height that's been specifically set\nheight=this.height_;}else{// Otherwise calculate the height from the ratio and the width\nheight=width*ratioMultiplier;}// Ensure the CSS class is valid by starting with an alpha character\nif(/^[^a-zA-Z]/.test(this.id())){idClass='dimensions-'+this.id();}else{idClass=this.id()+'-dimensions';}// Ensure the right class is still on the player for the style element\nthis.addClass(idClass);setTextContent(this.styleEl_,`\n      .${idClass} {\n        width: ${width}px;\n        height: ${height}px;\n      }\n\n      .${idClass}.vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: ${ratioMultiplier*100}%;\n      }\n    `);}/**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */loadTech_(techName,source){// Pause and remove current playback technology\nif(this.tech_){this.unloadTech_();}const titleTechName=toTitleCase$1(techName);const camelTechName=techName.charAt(0).toLowerCase()+techName.slice(1);// get rid of the HTML5 video tag as soon as we are using another tech\nif(titleTechName!=='Html5'&&this.tag){Tech.getTech('Html5').disposeMediaElement(this.tag);this.tag.player=null;this.tag=null;}this.techName_=titleTechName;// Turn off API access because we're loading a new tech that might load asynchronously\nthis.isReady_=false;let autoplay=this.autoplay();// if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n// because the player is going to handle autoplay on `loadstart`\nif(typeof this.autoplay()==='string'||this.autoplay()===true&&this.options_.normalizeAutoplay){autoplay=false;}// Grab tech-specific options from player options and add source and parent element to use.\nconst techOptions={source,autoplay,'nativeControlsForTouch':this.options_.nativeControlsForTouch,'playerId':this.id(),'techId':`${this.id()}_${camelTechName}_api`,'playsinline':this.options_.playsinline,'preload':this.options_.preload,'loop':this.options_.loop,'disablePictureInPicture':this.options_.disablePictureInPicture,'muted':this.options_.muted,'poster':this.poster(),'language':this.language(),'playerElIngest':this.playerElIngest_||false,'vtt.js':this.options_['vtt.js'],'canOverridePoster':!!this.options_.techCanOverridePoster,'enableSourceset':this.options_.enableSourceset};ALL.names.forEach(name=>{const props=ALL[name];techOptions[props.getterName]=this[props.privateName];});Object.assign(techOptions,this.options_[titleTechName]);Object.assign(techOptions,this.options_[camelTechName]);Object.assign(techOptions,this.options_[techName.toLowerCase()]);if(this.tag){techOptions.tag=this.tag;}if(source&&source.src===this.cache_.src&&this.cache_.currentTime>0){techOptions.startTime=this.cache_.currentTime;}// Initialize tech instance\nconst TechClass=Tech.getTech(techName);if(!TechClass){throw new Error(`No Tech named '${titleTechName}' exists! '${titleTechName}' should be registered using videojs.registerTech()'`);}this.tech_=new TechClass(techOptions);// player.triggerReady is always async, so don't need this to be async\nthis.tech_.ready(bind_(this,this.handleTechReady_),true);textTrackConverter.jsonToTextTracks(this.textTracksJson_||[],this.tech_);// Listen to all HTML5-defined events and trigger them on the player\nTECH_EVENTS_RETRIGGER.forEach(event=>{this.on(this.tech_,event,e=>this[`handleTech${toTitleCase$1(event)}_`](e));});Object.keys(TECH_EVENTS_QUEUE).forEach(event=>{this.on(this.tech_,event,eventObj=>{if(this.tech_.playbackRate()===0&&this.tech_.seeking()){this.queuedCallbacks_.push({callback:this[`handleTech${TECH_EVENTS_QUEUE[event]}_`].bind(this),event:eventObj});return;}this[`handleTech${TECH_EVENTS_QUEUE[event]}_`](eventObj);});});this.on(this.tech_,'loadstart',e=>this.handleTechLoadStart_(e));this.on(this.tech_,'sourceset',e=>this.handleTechSourceset_(e));this.on(this.tech_,'waiting',e=>this.handleTechWaiting_(e));this.on(this.tech_,'ended',e=>this.handleTechEnded_(e));this.on(this.tech_,'seeking',e=>this.handleTechSeeking_(e));this.on(this.tech_,'play',e=>this.handleTechPlay_(e));this.on(this.tech_,'pause',e=>this.handleTechPause_(e));this.on(this.tech_,'durationchange',e=>this.handleTechDurationChange_(e));this.on(this.tech_,'fullscreenchange',(e,data)=>this.handleTechFullscreenChange_(e,data));this.on(this.tech_,'fullscreenerror',(e,err)=>this.handleTechFullscreenError_(e,err));this.on(this.tech_,'enterpictureinpicture',e=>this.handleTechEnterPictureInPicture_(e));this.on(this.tech_,'leavepictureinpicture',e=>this.handleTechLeavePictureInPicture_(e));this.on(this.tech_,'error',e=>this.handleTechError_(e));this.on(this.tech_,'posterchange',e=>this.handleTechPosterChange_(e));this.on(this.tech_,'textdata',e=>this.handleTechTextData_(e));this.on(this.tech_,'ratechange',e=>this.handleTechRateChange_(e));this.on(this.tech_,'loadedmetadata',this.boundUpdateStyleEl_);this.usingNativeControls(this.techGet_('controls'));if(this.controls()&&!this.usingNativeControls()){this.addTechControlsListeners_();}// Add the tech element in the DOM if it was not already there\n// Make sure to not insert the original video element if using Html5\nif(this.tech_.el().parentNode!==this.el()&&(titleTechName!=='Html5'||!this.tag)){prependTo(this.tech_.el(),this.el());}// Get rid of the original video tag reference after the first tech is loaded\nif(this.tag){this.tag.player=null;this.tag=null;}}/**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */unloadTech_(){// Save the current text tracks so that we can reuse the same text tracks with the next tech\nALL.names.forEach(name=>{const props=ALL[name];this[props.privateName]=this[props.getterName]();});this.textTracksJson_=textTrackConverter.textTracksToJson(this.tech_);this.isReady_=false;this.tech_.dispose();this.tech_=false;if(this.isPosterFromTech_){this.poster_='';this.trigger('posterchange');}this.isPosterFromTech_=false;}/**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */tech(safety){if(safety===undefined){log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n'+'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');}return this.tech_;}/**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */addTechControlsListeners_(){// Make sure to remove all the previous listeners in case we are called multiple times.\nthis.removeTechControlsListeners_();this.on(this.tech_,'click',this.boundHandleTechClick_);this.on(this.tech_,'dblclick',this.boundHandleTechDoubleClick_);// If the controls were hidden we don't want that to change without a tap event\n// so we'll check if the controls were already showing before reporting user\n// activity\nthis.on(this.tech_,'touchstart',this.boundHandleTechTouchStart_);this.on(this.tech_,'touchmove',this.boundHandleTechTouchMove_);this.on(this.tech_,'touchend',this.boundHandleTechTouchEnd_);// The tap listener needs to come after the touchend listener because the tap\n// listener cancels out any reportedUserActivity when setting userActive(false)\nthis.on(this.tech_,'tap',this.boundHandleTechTap_);}/**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */removeTechControlsListeners_(){// We don't want to just use `this.off()` because there might be other needed\n// listeners added by techs that extend this.\nthis.off(this.tech_,'tap',this.boundHandleTechTap_);this.off(this.tech_,'touchstart',this.boundHandleTechTouchStart_);this.off(this.tech_,'touchmove',this.boundHandleTechTouchMove_);this.off(this.tech_,'touchend',this.boundHandleTechTouchEnd_);this.off(this.tech_,'click',this.boundHandleTechClick_);this.off(this.tech_,'dblclick',this.boundHandleTechDoubleClick_);}/**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */handleTechReady_(){this.triggerReady();// Keep the same volume as before\nif(this.cache_.volume){this.techCall_('setVolume',this.cache_.volume);}// Look if the tech found a higher resolution poster while loading\nthis.handleTechPosterChange_();// Update the duration if available\nthis.handleTechDurationChange_();}/**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#loadstart\n   * @listens Tech#loadstart\n   * @private\n   */handleTechLoadStart_(){// TODO: Update to use `emptied` event instead. See #1277.\nthis.removeClass('vjs-ended','vjs-seeking');// reset the error state\nthis.error(null);// Update the duration\nthis.handleTechDurationChange_();if(!this.paused()){/**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */this.trigger('loadstart');}else{// reset the hasStarted state\nthis.hasStarted(false);this.trigger('loadstart');}// autoplay happens after loadstart for the browser,\n// so we mimic that behavior\nthis.manualAutoplay_(this.autoplay()===true&&this.options_.normalizeAutoplay?'play':this.autoplay());}/**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */manualAutoplay_(type){if(!this.tech_||typeof type!=='string'){return;}// Save original muted() value, set muted to true, and attempt to play().\n// On promise rejection, restore muted from saved value\nconst resolveMuted=()=>{const previouslyMuted=this.muted();this.muted(true);const restoreMuted=()=>{this.muted(previouslyMuted);};// restore muted on play terminatation\nthis.playTerminatedQueue_.push(restoreMuted);const mutedPromise=this.play();if(!isPromise(mutedPromise)){return;}return mutedPromise.catch(err=>{restoreMuted();throw new Error(`Rejection at manualAutoplay. Restoring muted value. ${err?err:''}`);});};let promise;// if muted defaults to true\n// the only thing we can do is call play\nif(type==='any'&&!this.muted()){promise=this.play();if(isPromise(promise)){promise=promise.catch(resolveMuted);}}else if(type==='muted'&&!this.muted()){promise=resolveMuted();}else{promise=this.play();}if(!isPromise(promise)){return;}return promise.then(()=>{this.trigger({type:'autoplay-success',autoplay:type});}).catch(()=>{this.trigger({type:'autoplay-failure',autoplay:type});});}/**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */updateSourceCaches_(srcObj=''){let src=srcObj;let type='';if(typeof src!=='string'){src=srcObj.src;type=srcObj.type;}// make sure all the caches are set to default values\n// to prevent null checking\nthis.cache_.source=this.cache_.source||{};this.cache_.sources=this.cache_.sources||[];// try to get the type of the src that was passed in\nif(src&&!type){type=findMimetype(this,src);}// update `currentSource` cache always\nthis.cache_.source=merge$1({},srcObj,{src,type});const matchingSources=this.cache_.sources.filter(s=>s.src&&s.src===src);const sourceElSources=[];const sourceEls=this.$$('source');const matchingSourceEls=[];for(let i=0;i<sourceEls.length;i++){const sourceObj=getAttributes(sourceEls[i]);sourceElSources.push(sourceObj);if(sourceObj.src&&sourceObj.src===src){matchingSourceEls.push(sourceObj.src);}}// if we have matching source els but not matching sources\n// the current source cache is not up to date\nif(matchingSourceEls.length&&!matchingSources.length){this.cache_.sources=sourceElSources;// if we don't have matching source or source els set the\n// sources cache to the `currentSource` cache\n}else if(!matchingSources.length){this.cache_.sources=[this.cache_.source];}// update the tech `src` cache\nthis.cache_.src=src;}/**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */ /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */handleTechSourceset_(event){// only update the source cache when the source\n// was not updated using the player api\nif(!this.changingSrc_){let updateSourceCaches=src=>this.updateSourceCaches_(src);const playerSrc=this.currentSource().src;const eventSrc=event.src;// if we have a playerSrc that is not a blob, and a tech src that is a blob\nif(playerSrc&&!/^blob:/.test(playerSrc)&&/^blob:/.test(eventSrc)){// if both the tech source and the player source were updated we assume\n// something like @videojs/http-streaming did the sourceset and skip updating the source cache.\nif(!this.lastSource_||this.lastSource_.tech!==eventSrc&&this.lastSource_.player!==playerSrc){updateSourceCaches=()=>{};}}// update the source to the initial source right away\n// in some cases this will be empty string\nupdateSourceCaches(eventSrc);// if the `sourceset` `src` was an empty string\n// wait for a `loadstart` to update the cache to `currentSrc`.\n// If a sourceset happens before a `loadstart`, we reset the state\nif(!event.src){this.tech_.any(['sourceset','loadstart'],e=>{// if a sourceset happens before a `loadstart` there\n// is nothing to do as this `handleTechSourceset_`\n// will be called again and this will be handled there.\nif(e.type==='sourceset'){return;}const techSrc=this.techGet('currentSrc');this.lastSource_.tech=techSrc;this.updateSourceCaches_(techSrc);});}}this.lastSource_={player:this.currentSource().src,tech:event.src};this.trigger({src:event.src,type:'sourceset'});}/**\n   * Add/remove the vjs-has-started class\n   *\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */hasStarted(request){if(request===undefined){// act as getter, if we have no request to change\nreturn this.hasStarted_;}if(request===this.hasStarted_){return;}this.hasStarted_=request;if(this.hasStarted_){this.addClass('vjs-has-started');}else{this.removeClass('vjs-has-started');}}/**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */handleTechPlay_(){this.removeClass('vjs-ended','vjs-paused');this.addClass('vjs-playing');// hide the poster when the user hits play\nthis.hasStarted(true);/**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */this.trigger('play');}/**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */handleTechRateChange_(){if(this.tech_.playbackRate()>0&&this.cache_.lastPlaybackRate===0){this.queuedCallbacks_.forEach(queued=>queued.callback(queued.event));this.queuedCallbacks_=[];}this.cache_.lastPlaybackRate=this.tech_.playbackRate();/**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */this.trigger('ratechange');}/**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */handleTechWaiting_(){this.addClass('vjs-waiting');/**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */this.trigger('waiting');// Browsers may emit a timeupdate event after a waiting event. In order to prevent\n// premature removal of the waiting class, wait for the time to change.\nconst timeWhenWaiting=this.currentTime();const timeUpdateListener=()=>{if(timeWhenWaiting!==this.currentTime()){this.removeClass('vjs-waiting');this.off('timeupdate',timeUpdateListener);}};this.on('timeupdate',timeUpdateListener);}/**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */handleTechCanPlay_(){this.removeClass('vjs-waiting');/**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */this.trigger('canplay');}/**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */handleTechCanPlayThrough_(){this.removeClass('vjs-waiting');/**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */this.trigger('canplaythrough');}/**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */handleTechPlaying_(){this.removeClass('vjs-waiting');/**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */this.trigger('playing');}/**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */handleTechSeeking_(){this.addClass('vjs-seeking');/**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */this.trigger('seeking');}/**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */handleTechSeeked_(){this.removeClass('vjs-seeking','vjs-ended');/**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */this.trigger('seeked');}/**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */handleTechPause_(){this.removeClass('vjs-playing');this.addClass('vjs-paused');/**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */this.trigger('pause');}/**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */handleTechEnded_(){this.addClass('vjs-ended');this.removeClass('vjs-waiting');if(this.options_.loop){this.currentTime(0);this.play();}else if(!this.paused()){this.pause();}/**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */this.trigger('ended');}/**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */handleTechDurationChange_(){this.duration(this.techGet_('duration'));}/**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#click\n   * @private\n   */handleTechClick_(event){// When controls are disabled a click should not toggle playback because\n// the click is considered a control\nif(!this.controls_){return;}if(this.options_===undefined||this.options_.userActions===undefined||this.options_.userActions.click===undefined||this.options_.userActions.click!==false){if(this.options_!==undefined&&this.options_.userActions!==undefined&&typeof this.options_.userActions.click==='function'){this.options_.userActions.click.call(this,event);}else if(this.paused()){silencePromise(this.play());}else{this.pause();}}}/**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */handleTechDoubleClick_(event){if(!this.controls_){return;}// we do not want to toggle fullscreen state\n// when double-clicking inside a control bar or a modal\nconst inAllowedEls=Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'),el=>el.contains(event.target));if(!inAllowedEls){/*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */if(this.options_===undefined||this.options_.userActions===undefined||this.options_.userActions.doubleClick===undefined||this.options_.userActions.doubleClick!==false){if(this.options_!==undefined&&this.options_.userActions!==undefined&&typeof this.options_.userActions.doubleClick==='function'){this.options_.userActions.doubleClick.call(this,event);}else if(this.isFullscreen()){this.exitFullscreen();}else{this.requestFullscreen();}}}}/**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */handleTechTap_(){this.userActive(!this.userActive());}/**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */handleTechTouchStart_(){this.userWasActive=this.userActive();}/**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */handleTechTouchMove_(){if(this.userWasActive){this.reportUserActivity();}}/**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */handleTechTouchEnd_(event){// Stop the mouse events from also happening\nif(event.cancelable){event.preventDefault();}}/**\n   * @private\n   */toggleFullscreenClass_(){if(this.isFullscreen()){this.addClass('vjs-fullscreen');}else{this.removeClass('vjs-fullscreen');}}/**\n   * when the document fschange event triggers it calls this\n   */documentFullscreenChange_(e){const targetPlayer=e.target.player;// if another player was fullscreen\n// do a null check for targetPlayer because older firefox's would put document as e.target\nif(targetPlayer&&targetPlayer!==this){return;}const el=this.el();let isFs=document[this.fsApi_.fullscreenElement]===el;if(!isFs&&el.matches){isFs=el.matches(':'+this.fsApi_.fullscreen);}else if(!isFs&&el.msMatchesSelector){isFs=el.msMatchesSelector(':'+this.fsApi_.fullscreen);}this.isFullscreen(isFs);}/**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */handleTechFullscreenChange_(event,data){if(data){if(data.nativeIOSFullscreen){this.addClass('vjs-ios-native-fs');this.tech_.one('webkitendfullscreen',()=>{this.removeClass('vjs-ios-native-fs');});}this.isFullscreen(data.isFullscreen);}}handleTechFullscreenError_(event,err){this.trigger('fullscreenerror',err);}/**\n   * @private\n   */togglePictureInPictureClass_(){if(this.isInPictureInPicture()){this.addClass('vjs-picture-in-picture');}else{this.removeClass('vjs-picture-in-picture');}}/**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */handleTechEnterPictureInPicture_(event){this.isInPictureInPicture(true);}/**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */handleTechLeavePictureInPicture_(event){this.isInPictureInPicture(false);}/**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */handleTechError_(){const error=this.tech_.error();this.error(error);}/**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */handleTechTextData_(){let data=null;if(arguments.length>1){data=arguments[1];}/**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */this.trigger('textdata',data);}/**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */getCache(){return this.cache_;}/**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */resetCache_(){this.cache_={// Right now, the currentTime is not _really_ cached because it is always\n// retrieved from the tech (see: currentTime). However, for completeness,\n// we set it to zero here to ensure that if we do start actually caching\n// it, we reset it along with everything else.\ncurrentTime:0,initTime:0,inactivityTimeout:this.options_.inactivityTimeout,duration:NaN,lastVolume:1,lastPlaybackRate:this.defaultPlaybackRate(),media:null,src:'',source:{},sources:[],playbackRates:[],volume:1};}/**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */techCall_(method,arg){// If it's not ready yet, call method when it is\nthis.ready(function(){if(method in allowedSetters){return set(this.middleware_,this.tech_,method,arg);}else if(method in allowedMediators){return mediate(this.middleware_,this.tech_,method,arg);}try{if(this.tech_){this.tech_[method](arg);}}catch(e){log$1(e);throw e;}},true);}/**\n   * Mediate attempt to call playback tech method\n   * and return the value of the method called.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {*}\n   *         Value returned by the tech method called, undefined if tech\n   *         is not ready or tech method is not present\n   *\n   * @private\n   */techGet_(method){if(!this.tech_||!this.tech_.isReady_){return;}if(method in allowedGetters){return get(this.middleware_,this.tech_,method);}else if(method in allowedMediators){return mediate(this.middleware_,this.tech_,method);}// Log error when playback tech object is present but method\n// is undefined or unavailable\ntry{return this.tech_[method]();}catch(e){// When building additional tech libs, an expected method may not be defined yet\nif(this.tech_[method]===undefined){log$1(`Video.js: ${method} method not defined for ${this.techName_} playback technology.`,e);throw e;}// When a method isn't available on the object it throws a TypeError\nif(e.name==='TypeError'){log$1(`Video.js: ${method} unavailable on ${this.techName_} playback technology element.`,e);this.tech_.isReady_=false;throw e;}// If error unknown, just log and throw\nlog$1(e);throw e;}}/**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */play(){return new Promise(resolve=>{this.play_(resolve);});}/**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */play_(callback=silencePromise){this.playCallbacks_.push(callback);const isSrcReady=Boolean(!this.changingSrc_&&(this.src()||this.currentSrc()));// treat calls to play_ somewhat like the `one` event function\nif(this.waitToPlay_){this.off(['ready','loadstart'],this.waitToPlay_);this.waitToPlay_=null;}// if the player/tech is not ready or the src itself is not ready\n// queue up a call to play on `ready` or `loadstart`\nif(!this.isReady_||!isSrcReady){this.waitToPlay_=e=>{this.play_();};this.one(['ready','loadstart'],this.waitToPlay_);// if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n// in that case, we need to prime the video element by calling load so it'll be ready in time\nif(!isSrcReady&&(IS_ANY_SAFARI||IS_IOS)){this.load();}return;}// If the player/tech is ready and we have a source, we can attempt playback.\nconst val=this.techGet_('play');// play was terminated if the returned value is null\nif(val===null){this.runPlayTerminatedQueue_();}else{this.runPlayCallbacks_(val);}}/**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */runPlayTerminatedQueue_(){const queue=this.playTerminatedQueue_.slice(0);this.playTerminatedQueue_=[];queue.forEach(function(q){q();});}/**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */runPlayCallbacks_(val){const callbacks=this.playCallbacks_.slice(0);this.playCallbacks_=[];// clear play terminatedQueue since we finished a real play\nthis.playTerminatedQueue_=[];callbacks.forEach(function(cb){cb(val);});}/**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */pause(){this.techCall_('pause');}/**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */paused(){// The initial state of paused should be true (in Safari it's actually false)\nreturn this.techGet_('paused')===false?false:true;}/**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */played(){return this.techGet_('played')||createTimeRanges$1(0,0);}/**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */scrubbing(isScrubbing){if(typeof isScrubbing==='undefined'){return this.scrubbing_;}this.scrubbing_=!!isScrubbing;this.techCall_('setScrubbing',this.scrubbing_);if(isScrubbing){this.addClass('vjs-scrubbing');}else{this.removeClass('vjs-scrubbing');}}/**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */currentTime(seconds){if(typeof seconds!=='undefined'){if(seconds<0){seconds=0;}if(!this.isReady_||this.changingSrc_||!this.tech_||!this.tech_.isReady_){this.cache_.initTime=seconds;this.off('canplay',this.boundApplyInitTime_);this.one('canplay',this.boundApplyInitTime_);return;}this.techCall_('setCurrentTime',seconds);this.cache_.initTime=0;return;}// cache last currentTime and return. default to 0 seconds\n//\n// Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n// currentTime when scrubbing, but may not provide much performance benefit afterall.\n// Should be tested. Also something has to read the actual current time or the cache will\n// never get updated.\nthis.cache_.currentTime=this.techGet_('currentTime')||0;return this.cache_.currentTime;}/**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */applyInitTime_(){this.currentTime(this.cache_.initTime);}/**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and depending on preload behaviour may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */duration(seconds){if(seconds===undefined){// return NaN if the duration is not known\nreturn this.cache_.duration!==undefined?this.cache_.duration:NaN;}seconds=parseFloat(seconds);// Standardize on Infinity for signaling video is live\nif(seconds<0){seconds=Infinity;}if(seconds!==this.cache_.duration){// Cache the last set value for optimized scrubbing\nthis.cache_.duration=seconds;if(seconds===Infinity){this.addClass('vjs-live');}else{this.removeClass('vjs-live');}if(!isNaN(seconds)){// Do not fire durationchange unless the duration value is known.\n// @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n/**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */this.trigger('durationchange');}}}/**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */remainingTime(){return this.duration()-this.currentTime();}/**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */remainingTimeDisplay(){return Math.floor(this.duration())-Math.floor(this.currentTime());}//\n// Kind of like an array of portions of the video that have been downloaded.\n/**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */buffered(){let buffered=this.techGet_('buffered');if(!buffered||!buffered.length){buffered=createTimeRanges$1(0,0);}return buffered;}/**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */bufferedPercent(){return bufferedPercent(this.buffered(),this.duration());}/**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */bufferedEnd(){const buffered=this.buffered();const duration=this.duration();let end=buffered.end(buffered.length-1);if(end>duration){end=duration;}return end;}/**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */volume(percentAsDecimal){let vol;if(percentAsDecimal!==undefined){// Force value to between 0 and 1\nvol=Math.max(0,Math.min(1,parseFloat(percentAsDecimal)));this.cache_.volume=vol;this.techCall_('setVolume',vol);if(vol>0){this.lastVolume_(vol);}return;}// Default to 1 when returning current volume.\nvol=parseFloat(this.techGet_('volume'));return isNaN(vol)?1:vol;}/**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */muted(muted){if(muted!==undefined){this.techCall_('setMuted',muted);return;}return this.techGet_('muted')||false;}/**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */defaultMuted(defaultMuted){if(defaultMuted!==undefined){return this.techCall_('setDefaultMuted',defaultMuted);}return this.techGet_('defaultMuted')||false;}/**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */lastVolume_(percentAsDecimal){if(percentAsDecimal!==undefined&&percentAsDecimal!==0){this.cache_.lastVolume=percentAsDecimal;return;}return this.cache_.lastVolume;}/**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */supportsFullScreen(){return this.techGet_('supportsFullScreen')||false;}/**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */isFullscreen(isFS){if(isFS!==undefined){const oldValue=this.isFullscreen_;this.isFullscreen_=Boolean(isFS);// if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n// this is the only place where we trigger fullscreenchange events for older browsers\n// fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\nif(this.isFullscreen_!==oldValue&&this.fsApi_.prefixed){/**\n           * @event Player#fullscreenchange\n           * @type {EventTarget~Event}\n           */this.trigger('fullscreenchange');}this.toggleFullscreenClass_();return;}return this.isFullscreen_;}/**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */requestFullscreen(fullscreenOptions){if(this.isInPictureInPicture()){this.exitPictureInPicture();}const self=this;return new Promise((resolve,reject)=>{function offHandler(){self.off('fullscreenerror',errorHandler);self.off('fullscreenchange',changeHandler);}function changeHandler(){offHandler();resolve();}function errorHandler(e,err){offHandler();reject(err);}self.one('fullscreenchange',changeHandler);self.one('fullscreenerror',errorHandler);const promise=self.requestFullscreenHelper_(fullscreenOptions);if(promise){promise.then(offHandler,offHandler);promise.then(resolve,reject);}});}requestFullscreenHelper_(fullscreenOptions){let fsOptions;// Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n// Use defaults or player configured option unless passed directly to this method.\nif(!this.fsApi_.prefixed){fsOptions=this.options_.fullscreen&&this.options_.fullscreen.options||{};if(fullscreenOptions!==undefined){fsOptions=fullscreenOptions;}}// This method works as follows:\n// 1. if a fullscreen api is available, use it\n//   1. call requestFullscreen with potential options\n//   2. if we got a promise from above, use it to update isFullscreen()\n// 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n//   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n// 3. otherwise, use \"fullWindow\" mode\nif(this.fsApi_.requestFullscreen){const promise=this.el_[this.fsApi_.requestFullscreen](fsOptions);// Even on browsers with promise support this may not return a promise\nif(promise){promise.then(()=>this.isFullscreen(true),()=>this.isFullscreen(false));}return promise;}else if(this.tech_.supportsFullScreen()&&!this.options_.preferFullWindow===true){// we can't take the video.js controls fullscreen but we can go fullscreen\n// with native controls\nthis.techCall_('enterFullScreen');}else{// fullscreen isn't supported so we'll just stretch the video element to\n// fill the viewport\nthis.enterFullWindow();}}/**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */exitFullscreen(){const self=this;return new Promise((resolve,reject)=>{function offHandler(){self.off('fullscreenerror',errorHandler);self.off('fullscreenchange',changeHandler);}function changeHandler(){offHandler();resolve();}function errorHandler(e,err){offHandler();reject(err);}self.one('fullscreenchange',changeHandler);self.one('fullscreenerror',errorHandler);const promise=self.exitFullscreenHelper_();if(promise){promise.then(offHandler,offHandler);// map the promise to our resolve/reject methods\npromise.then(resolve,reject);}});}exitFullscreenHelper_(){if(this.fsApi_.requestFullscreen){const promise=document[this.fsApi_.exitFullscreen]();// Even on browsers with promise support this may not return a promise\nif(promise){// we're splitting the promise here, so, we want to catch the\n// potential error so that this chain doesn't have unhandled errors\nsilencePromise(promise.then(()=>this.isFullscreen(false)));}return promise;}else if(this.tech_.supportsFullScreen()&&!this.options_.preferFullWindow===true){this.techCall_('exitFullScreen');}else{this.exitFullWindow();}}/**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */enterFullWindow(){this.isFullscreen(true);this.isFullWindow=true;// Storing original doc overflow value to return to when fullscreen is off\nthis.docOrigOverflow=document.documentElement.style.overflow;// Add listener for esc key to exit fullscreen\non(document,'keydown',this.boundFullWindowOnEscKey_);// Hide any scroll bars\ndocument.documentElement.style.overflow='hidden';// Apply fullscreen styles\naddClass(document.body,'vjs-full-window');/**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */this.trigger('enterFullWindow');}/**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */fullWindowOnEscKey(event){if(keycode.isEventKey(event,'Esc')){if(this.isFullscreen()===true){if(!this.isFullWindow){this.exitFullscreen();}else{this.exitFullWindow();}}}}/**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */exitFullWindow(){this.isFullscreen(false);this.isFullWindow=false;off(document,'keydown',this.boundFullWindowOnEscKey_);// Unhide scroll bars.\ndocument.documentElement.style.overflow=this.docOrigOverflow;// Remove fullscreen styles\nremoveClass(document.body,'vjs-full-window');// Resize the box, controller, and poster to original sizes\n// this.positionAll();\n/**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */this.trigger('exitFullWindow');}/**\n   * Disable Picture-in-Picture mode.\n   *\n   * @param {boolean} value\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */disablePictureInPicture(value){if(value===undefined){return this.techGet_('disablePictureInPicture');}this.techCall_('setDisablePictureInPicture',value);this.options_.disablePictureInPicture=value;this.trigger('disablepictureinpicturechanged');}/**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */isInPictureInPicture(isPiP){if(isPiP!==undefined){this.isInPictureInPicture_=!!isPiP;this.togglePictureInPictureClass_();return;}return!!this.isInPictureInPicture_;}/**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */requestPictureInPicture(){if('pictureInPictureEnabled'in document&&this.disablePictureInPicture()===false){/**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */return this.techGet_('requestPictureInPicture');}}/**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */exitPictureInPicture(){if('pictureInPictureEnabled'in document){/**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */return document.exitPictureInPicture();}}/**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */handleKeyDown(event){const{userActions}=this.options_;// Bail out if hotkeys are not configured.\nif(!userActions||!userActions.hotkeys){return;}// Function that determines whether or not to exclude an element from\n// hotkeys handling.\nconst excludeElement=el=>{const tagName=el.tagName.toLowerCase();// The first and easiest test is for `contenteditable` elements.\nif(el.isContentEditable){return true;}// Inputs matching these types will still trigger hotkey handling as\n// they are not text inputs.\nconst allowedInputTypes=['button','checkbox','hidden','radio','reset','submit'];if(tagName==='input'){return allowedInputTypes.indexOf(el.type)===-1;}// The final test is by tag name. These tags will be excluded entirely.\nconst excludedTags=['textarea'];return excludedTags.indexOf(tagName)!==-1;};// Bail out if the user is focused on an interactive form element.\nif(excludeElement(this.el_.ownerDocument.activeElement)){return;}if(typeof userActions.hotkeys==='function'){userActions.hotkeys.call(this,event);}else{this.handleHotkeys(event);}}/**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */handleHotkeys(event){const hotkeys=this.options_.userActions?this.options_.userActions.hotkeys:{};// set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\nconst{fullscreenKey=keydownEvent=>keycode.isEventKey(keydownEvent,'f'),muteKey=keydownEvent=>keycode.isEventKey(keydownEvent,'m'),playPauseKey=keydownEvent=>keycode.isEventKey(keydownEvent,'k')||keycode.isEventKey(keydownEvent,'Space')}=hotkeys;if(fullscreenKey.call(this,event)){event.preventDefault();event.stopPropagation();const FSToggle=Component$1.getComponent('FullscreenToggle');if(document[this.fsApi_.fullscreenEnabled]!==false){FSToggle.prototype.handleClick.call(this,event);}}else if(muteKey.call(this,event)){event.preventDefault();event.stopPropagation();const MuteToggle=Component$1.getComponent('MuteToggle');MuteToggle.prototype.handleClick.call(this,event);}else if(playPauseKey.call(this,event)){event.preventDefault();event.stopPropagation();const PlayToggle=Component$1.getComponent('PlayToggle');PlayToggle.prototype.handleClick.call(this,event);}}/**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */canPlayType(type){let can;// Loop through each playback technology in the options order\nfor(let i=0,j=this.options_.techOrder;i<j.length;i++){const techName=j[i];let tech=Tech.getTech(techName);// Support old behavior of techs being registered as components.\n// Remove once that deprecated behavior is removed.\nif(!tech){tech=Component$1.getComponent(techName);}// Check if the current tech is defined before continuing\nif(!tech){log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);continue;}// Check if the browser supports this technology\nif(tech.isSupported()){can=tech.canPlayType(type);if(can){return can;}}}return'';}/**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */selectSource(sources){// Get only the techs specified in `techOrder` that exist and are supported by the\n// current platform\nconst techs=this.options_.techOrder.map(techName=>{return[techName,Tech.getTech(techName)];}).filter(([techName,tech])=>{// Check if the current tech is defined before continuing\nif(tech){// Check if the browser supports this technology\nreturn tech.isSupported();}log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);return false;});// Iterate over each `innerArray` element once per `outerArray` element and execute\n// `tester` with both. If `tester` returns a non-falsy value, exit early and return\n// that value.\nconst findFirstPassingTechSourcePair=function(outerArray,innerArray,tester){let found;outerArray.some(outerChoice=>{return innerArray.some(innerChoice=>{found=tester(outerChoice,innerChoice);if(found){return true;}});});return found;};let foundSourceAndTech;const flip=fn=>(a,b)=>fn(b,a);const finder=([techName,tech],source)=>{if(tech.canPlaySource(source,this.options_[techName.toLowerCase()])){return{source,tech:techName};}};// Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n// to select from them based on their priority.\nif(this.options_.sourceOrder){// Source-first ordering\nfoundSourceAndTech=findFirstPassingTechSourcePair(sources,techs,flip(finder));}else{// Tech-first ordering\nfoundSourceAndTech=findFirstPassingTechSourcePair(techs,sources,finder);}return foundSourceAndTech||false;}/**\n   * Executes source setting and getting logic\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   * @param {boolean} isRetry\n   *        Indicates whether this is being called internally as a result of a retry\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */handleSrc_(source,isRetry){// getter usage\nif(typeof source==='undefined'){return this.cache_.src||'';}// Reset retry behavior for new source\nif(this.resetRetryOnError_){this.resetRetryOnError_();}// filter out invalid sources and turn our source into\n// an array of source objects\nconst sources=filterSource(source);// if a source was passed in then it is invalid because\n// it was filtered to a zero length Array. So we have to\n// show an error\nif(!sources.length){this.setTimeout(function(){this.error({code:4,message:this.options_.notSupportedMessage});},0);return;}// initial sources\nthis.changingSrc_=true;// Only update the cached source list if we are not retrying a new source after error,\n// since in that case we want to include the failed source(s) in the cache\nif(!isRetry){this.cache_.sources=sources;}this.updateSourceCaches_(sources[0]);// middlewareSource is the source after it has been changed by middleware\nsetSource(this,sources[0],(middlewareSource,mws)=>{this.middleware_=mws;// since sourceSet is async we have to update the cache again after we select a source since\n// the source that is selected could be out of order from the cache update above this callback.\nif(!isRetry){this.cache_.sources=sources;}this.updateSourceCaches_(middlewareSource);const err=this.src_(middlewareSource);if(err){if(sources.length>1){return this.handleSrc_(sources.slice(1));}this.changingSrc_=false;// We need to wrap this in a timeout to give folks a chance to add error event handlers\nthis.setTimeout(function(){this.error({code:4,message:this.options_.notSupportedMessage});},0);// we could not find an appropriate tech, but let's still notify the delegate that this is it\n// this needs a better comment about why this is needed\nthis.triggerReady();return;}setTech(mws,this.tech_);});// Try another available source if this one fails before playback.\nif(sources.length>1){const retry=()=>{// Remove the error modal\nthis.error(null);this.handleSrc_(sources.slice(1),true);};const stopListeningForErrors=()=>{this.off('error',retry);};this.one('error',retry);this.one('playing',stopListeningForErrors);this.resetRetryOnError_=()=>{this.off('error',retry);this.off('playing',stopListeningForErrors);};}}/**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */src(source){return this.handleSrc_(source,false);}/**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */src_(source){const sourceTech=this.selectSource([source]);if(!sourceTech){return true;}if(!titleCaseEquals(sourceTech.tech,this.techName_)){this.changingSrc_=true;// load this technology with the chosen source\nthis.loadTech_(sourceTech.tech,sourceTech.source);this.tech_.ready(()=>{this.changingSrc_=false;});return false;}// wait until the tech is ready to set the source\n// and set it synchronously if possible (#2326)\nthis.ready(function(){// The setSource tech method was added with source handlers\n// so older techs won't support it\n// We need to check the direct prototype for the case where subclasses\n// of the tech do not support source handlers\nif(this.tech_.constructor.prototype.hasOwnProperty('setSource')){this.techCall_('setSource',source);}else{this.techCall_('src',source.src);}this.changingSrc_=false;},true);return false;}/**\n   * Begin loading the src data.\n   */load(){this.techCall_('load');}/**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */reset(){if(this.paused()){this.doReset_();}else{const playPromise=this.play();silencePromise(playPromise.then(()=>this.doReset_()));}}doReset_(){if(this.tech_){this.tech_.clearTracks('text');}this.resetCache_();this.poster('');this.loadTech_(this.options_.techOrder[0],null);this.techCall_('reset');this.resetControlBarUI_();if(isEvented(this)){this.trigger('playerreset');}}/**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */resetControlBarUI_(){this.resetProgressBar_();this.resetPlaybackRate_();this.resetVolumeBar_();}/**\n   * Reset tech's progress so progress bar is reset in the UI\n   */resetProgressBar_(){this.currentTime(0);const{durationDisplay,remainingTimeDisplay}=this.controlBar||{};if(durationDisplay){durationDisplay.updateContent();}if(remainingTimeDisplay){remainingTimeDisplay.updateContent();}}/**\n   * Reset Playback ratio\n   */resetPlaybackRate_(){this.playbackRate(this.defaultPlaybackRate());this.handleTechRateChange_();}/**\n   * Reset Volume bar\n   */resetVolumeBar_(){this.volume(1.0);this.trigger('volumechange');}/**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */currentSources(){const source=this.currentSource();const sources=[];// assume `{}` or `{ src }`\nif(Object.keys(source).length!==0){sources.push(source);}return this.cache_.sources||sources;}/**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */currentSource(){return this.cache_.source||{};}/**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */currentSrc(){return this.currentSource()&&this.currentSource().src||'';}/**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */currentType(){return this.currentSource()&&this.currentSource().type||'';}/**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */preload(value){if(value!==undefined){this.techCall_('setPreload',value);this.options_.preload=value;return;}return this.techGet_('preload');}/**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */autoplay(value){// getter usage\nif(value===undefined){return this.options_.autoplay||false;}let techAutoplay;// if the value is a valid string set it to that, or normalize `true` to 'play', if need be\nif(typeof value==='string'&&/(any|play|muted)/.test(value)||value===true&&this.options_.normalizeAutoplay){this.options_.autoplay=value;this.manualAutoplay_(typeof value==='string'?value:'play');techAutoplay=false;// any falsy value sets autoplay to false in the browser,\n// lets do the same\n}else if(!value){this.options_.autoplay=false;// any other value (ie truthy) sets autoplay to true\n}else{this.options_.autoplay=true;}techAutoplay=typeof techAutoplay==='undefined'?this.options_.autoplay:techAutoplay;// if we don't have a tech then we do not queue up\n// a setAutoplay call on tech ready. We do this because the\n// autoplay option will be passed in the constructor and we\n// do not need to set it twice\nif(this.tech_){this.techCall_('setAutoplay',techAutoplay);}}/**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */playsinline(value){if(value!==undefined){this.techCall_('setPlaysinline',value);this.options_.playsinline=value;return this;}return this.techGet_('playsinline');}/**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */loop(value){if(value!==undefined){this.techCall_('setLoop',value);this.options_.loop=value;return;}return this.techGet_('loop');}/**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */poster(src){if(src===undefined){return this.poster_;}// The correct way to remove a poster is to set as an empty string\n// other falsey values will throw errors\nif(!src){src='';}if(src===this.poster_){return;}// update the internal poster variable\nthis.poster_=src;// update the tech's poster\nthis.techCall_('setPoster',src);this.isPosterFromTech_=false;// alert components that the poster has been set\n/**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */this.trigger('posterchange');}/**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */handleTechPosterChange_(){if((!this.poster_||this.options_.techCanOverridePoster)&&this.tech_&&this.tech_.poster){const newPoster=this.tech_.poster()||'';if(newPoster!==this.poster_){this.poster_=newPoster;this.isPosterFromTech_=true;// Let components know the poster has changed\nthis.trigger('posterchange');}}}/**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */controls(bool){if(bool===undefined){return!!this.controls_;}bool=!!bool;// Don't trigger a change event unless it actually changed\nif(this.controls_===bool){return;}this.controls_=bool;if(this.usingNativeControls()){this.techCall_('setControls',bool);}if(this.controls_){this.removeClass('vjs-controls-disabled');this.addClass('vjs-controls-enabled');/**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */this.trigger('controlsenabled');if(!this.usingNativeControls()){this.addTechControlsListeners_();}}else{this.removeClass('vjs-controls-enabled');this.addClass('vjs-controls-disabled');/**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */this.trigger('controlsdisabled');if(!this.usingNativeControls()){this.removeTechControlsListeners_();}}}/**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls) or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */usingNativeControls(bool){if(bool===undefined){return!!this.usingNativeControls_;}bool=!!bool;// Don't trigger a change event unless it actually changed\nif(this.usingNativeControls_===bool){return;}this.usingNativeControls_=bool;if(this.usingNativeControls_){this.addClass('vjs-using-native-controls');/**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */this.trigger('usingnativecontrols');}else{this.removeClass('vjs-using-native-controls');/**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */this.trigger('usingcustomcontrols');}}/**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */error(err){if(err===undefined){return this.error_||null;}// allow hooks to modify error object\nhooks('beforeerror').forEach(hookFunction=>{const newErr=hookFunction(this,err);if(!(isObject(newErr)&&!Array.isArray(newErr)||typeof newErr==='string'||typeof newErr==='number'||newErr===null)){this.log.error('please return a value that MediaError expects in beforeerror hooks');return;}err=newErr;});// Suppress the first error message for no compatible source until\n// user interaction\nif(this.options_.suppressNotSupportedError&&err&&err.code===4){const triggerSuppressedError=function(){this.error(err);};this.options_.suppressNotSupportedError=false;this.any(['click','touchstart'],triggerSuppressedError);this.one('loadstart',function(){this.off(['click','touchstart'],triggerSuppressedError);});return;}// restoring to default\nif(err===null){this.error_=err;this.removeClass('vjs-error');if(this.errorDisplay){this.errorDisplay.close();}return;}this.error_=new MediaError(err);// add the vjs-error classname to the player\nthis.addClass('vjs-error');// log the name of the error type and any message\n// IE11 logs \"[object object]\" and required you to expand message to see error object\nlog$1.error(`(CODE:${this.error_.code} ${MediaError.errorTypes[this.error_.code]})`,this.error_.message,this.error_);/**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */this.trigger('error');// notify hooks of the per player error\nhooks('error').forEach(hookFunction=>hookFunction(this,this.error_));return;}/**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */reportUserActivity(event){this.userActivity_=true;}/**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */userActive(bool){if(bool===undefined){return this.userActive_;}bool=!!bool;if(bool===this.userActive_){return;}this.userActive_=bool;if(this.userActive_){this.userActivity_=true;this.removeClass('vjs-user-inactive');this.addClass('vjs-user-active');/**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */this.trigger('useractive');return;}// Chrome/Safari/IE have bugs where when you change the cursor it can\n// trigger a mousemove event. This causes an issue when you're hiding\n// the cursor when the user is inactive, and a mousemove signals user\n// activity. Making it impossible to go into inactive mode. Specifically\n// this happens in fullscreen when we really need to hide the cursor.\n//\n// When this gets resolved in ALL browsers it can be removed\n// https://code.google.com/p/chromium/issues/detail?id=103041\nif(this.tech_){this.tech_.one('mousemove',function(e){e.stopPropagation();e.preventDefault();});}this.userActivity_=false;this.removeClass('vjs-user-active');this.addClass('vjs-user-inactive');/**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */this.trigger('userinactive');}/**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */listenForUserActivity_(){let mouseInProgress;let lastMoveX;let lastMoveY;const handleActivity=bind_(this,this.reportUserActivity);const handleMouseMove=function(e){// #1068 - Prevent mousemove spamming\n// Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\nif(e.screenX!==lastMoveX||e.screenY!==lastMoveY){lastMoveX=e.screenX;lastMoveY=e.screenY;handleActivity();}};const handleMouseDown=function(){handleActivity();// For as long as the they are touching the device or have their mouse down,\n// we consider them active even if they're not moving their finger or mouse.\n// So we want to continue to update that they are active\nthis.clearInterval(mouseInProgress);// Setting userActivity=true now and setting the interval to the same time\n// as the activityCheck interval (250) should ensure we never miss the\n// next activityCheck\nmouseInProgress=this.setInterval(handleActivity,250);};const handleMouseUpAndMouseLeave=function(event){handleActivity();// Stop the interval that maintains activity if the mouse/touch is down\nthis.clearInterval(mouseInProgress);};// Any mouse movement will be considered user activity\nthis.on('mousedown',handleMouseDown);this.on('mousemove',handleMouseMove);this.on('mouseup',handleMouseUpAndMouseLeave);this.on('mouseleave',handleMouseUpAndMouseLeave);const controlBar=this.getChild('controlBar');// Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n// controlBar would no longer be hidden by default timeout.\nif(controlBar&&!IS_IOS&&!IS_ANDROID){controlBar.on('mouseenter',function(event){if(this.player().options_.inactivityTimeout!==0){this.player().cache_.inactivityTimeout=this.player().options_.inactivityTimeout;}this.player().options_.inactivityTimeout=0;});controlBar.on('mouseleave',function(event){this.player().options_.inactivityTimeout=this.player().cache_.inactivityTimeout;});}// Listen for keyboard navigation\n// Shouldn't need to use inProgress interval because of key repeat\nthis.on('keydown',handleActivity);this.on('keyup',handleActivity);// Run an interval every 250 milliseconds instead of stuffing everything into\n// the mousemove/touchmove function itself, to prevent performance degradation.\n// `this.reportUserActivity` simply sets this.userActivity_ to true, which\n// then gets picked up by this loop\n// http://ejohn.org/blog/learning-from-twitter/\nlet inactivityTimeout;this.setInterval(function(){// Check to see if mouse/touch activity has happened\nif(!this.userActivity_){return;}// Reset the activity tracker\nthis.userActivity_=false;// If the user state was inactive, set the state to active\nthis.userActive(true);// Clear any existing inactivity timeout to start the timer over\nthis.clearTimeout(inactivityTimeout);const timeout=this.options_.inactivityTimeout;if(timeout<=0){return;}// In <timeout> milliseconds, if no more activity has occurred the\n// user will be considered inactive\ninactivityTimeout=this.setTimeout(function(){// Protect against the case where the inactivityTimeout can trigger just\n// before the next user activity is picked up by the activity check loop\n// causing a flicker\nif(!this.userActivity_){this.userActive(false);}},timeout);},250);}/**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */playbackRate(rate){if(rate!==undefined){// NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n// that is registered above\nthis.techCall_('setPlaybackRate',rate);return;}if(this.tech_&&this.tech_.featuresPlaybackRate){return this.cache_.lastPlaybackRate||this.techGet_('playbackRate');}return 1.0;}/**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */defaultPlaybackRate(rate){if(rate!==undefined){return this.techCall_('setDefaultPlaybackRate',rate);}if(this.tech_&&this.tech_.featuresPlaybackRate){return this.techGet_('defaultPlaybackRate');}return 1.0;}/**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */isAudio(bool){if(bool!==undefined){this.isAudio_=!!bool;return;}return!!this.isAudio_;}enableAudioOnlyUI_(){// Update styling immediately to show the control bar so we can get its height\nthis.addClass('vjs-audio-only-mode');const playerChildren=this.children();const controlBar=this.getChild('ControlBar');const controlBarHeight=controlBar&&controlBar.currentHeight();// Hide all player components except the control bar. Control bar components\n// needed only for video are hidden with CSS\nplayerChildren.forEach(child=>{if(child===controlBar){return;}if(child.el_&&!child.hasClass('vjs-hidden')){child.hide();this.audioOnlyCache_.hiddenChildren.push(child);}});this.audioOnlyCache_.playerHeight=this.currentHeight();// Set the player height the same as the control bar\nthis.height(controlBarHeight);this.trigger('audioonlymodechange');}disableAudioOnlyUI_(){this.removeClass('vjs-audio-only-mode');// Show player components that were previously hidden\nthis.audioOnlyCache_.hiddenChildren.forEach(child=>child.show());// Reset player height\nthis.height(this.audioOnlyCache_.playerHeight);this.trigger('audioonlymodechange');}/**\n   * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n   *\n   * Setting this to `true` will hide all player components except the control bar,\n   * as well as control bar components needed only for video.\n   *\n   * @param {boolean} [value]\n   *         The value to set audioOnlyMode to.\n   *\n   * @return {Promise|boolean}\n   *        A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */audioOnlyMode(value){if(typeof value!=='boolean'||value===this.audioOnlyMode_){return this.audioOnlyMode_;}this.audioOnlyMode_=value;// Enable Audio Only Mode\nif(value){const exitPromises=[];// Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\nif(this.isInPictureInPicture()){exitPromises.push(this.exitPictureInPicture());}if(this.isFullscreen()){exitPromises.push(this.exitFullscreen());}if(this.audioPosterMode()){exitPromises.push(this.audioPosterMode(false));}return Promise.all(exitPromises).then(()=>this.enableAudioOnlyUI_());}// Disable Audio Only Mode\nreturn Promise.resolve().then(()=>this.disableAudioOnlyUI_());}enablePosterModeUI_(){// Hide the video element and show the poster image to enable posterModeUI\nconst tech=this.tech_&&this.tech_;tech.hide();this.addClass('vjs-audio-poster-mode');this.trigger('audiopostermodechange');}disablePosterModeUI_(){// Show the video element and hide the poster image to disable posterModeUI\nconst tech=this.tech_&&this.tech_;tech.show();this.removeClass('vjs-audio-poster-mode');this.trigger('audiopostermodechange');}/**\n   * Get the current audioPosterMode state or set audioPosterMode to true or false\n   *\n   * @param {boolean} [value]\n   *         The value to set audioPosterMode to.\n   *\n   * @return {Promise|boolean}\n   *         A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */audioPosterMode(value){if(typeof value!=='boolean'||value===this.audioPosterMode_){return this.audioPosterMode_;}this.audioPosterMode_=value;if(value){if(this.audioOnlyMode()){const audioOnlyModePromise=this.audioOnlyMode(false);return audioOnlyModePromise.then(()=>{// enable audio poster mode after audio only mode is disabled\nthis.enablePosterModeUI_();});}return Promise.resolve().then(()=>{// enable audio poster mode\nthis.enablePosterModeUI_();});}return Promise.resolve().then(()=>{// disable audio poster mode\nthis.disablePosterModeUI_();});}/**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */addTextTrack(kind,label,language){if(this.tech_){return this.tech_.addTextTrack(kind,label,language);}}/**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack will not be removed\n   *                                        from the TextTrackList and HtmlTrackElementList\n   *                                        after a source change\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   */addRemoteTextTrack(options,manualCleanup){if(this.tech_){return this.tech_.addRemoteTextTrack(options,manualCleanup);}}/**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */removeRemoteTextTrack(obj={}){let{track}=obj;if(!track){track=obj;}// destructure the input into an object with a track argument, defaulting to arguments[0]\n// default the whole argument to an empty object if nothing was passed in\nif(this.tech_){return this.tech_.removeRemoteTextTrack(track);}}/**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */getVideoPlaybackQuality(){return this.techGet_('getVideoPlaybackQuality');}/**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */videoWidth(){return this.tech_&&this.tech_.videoWidth&&this.tech_.videoWidth()||0;}/**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */videoHeight(){return this.tech_&&this.tech_.videoHeight&&this.tech_.videoHeight()||0;}/**\n   * The player's language code.\n   *\n   * Changing the language will trigger\n   * [languagechange]{@link Player#event:languagechange}\n   * which Components can use to update control text.\n   * ClickableComponent will update its control text by default on\n   * [languagechange]{@link Player#event:languagechange}.\n   *\n   * @fires Player#languagechange\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */language(code){if(code===undefined){return this.language_;}if(this.language_!==String(code).toLowerCase()){this.language_=String(code).toLowerCase();// during first init, it's possible some things won't be evented\nif(isEvented(this)){/**\n        * fires when the player language change\n        *\n        * @event Player#languagechange\n        * @type {EventTarget~Event}\n        */this.trigger('languagechange');}}}/**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */languages(){return merge$1(Player.prototype.options_.languages,this.languages_);}/**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */toJSON(){const options=merge$1(this.options_);const tracks=options.tracks;options.tracks=[];for(let i=0;i<tracks.length;i++){let track=tracks[i];// deep merge tracks and null out player so no circular references\ntrack=merge$1(track);track.player=undefined;options.tracks[i]=track;}return options;}/**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */createModal(content,options){options=options||{};options.content=content||'';const modal=new ModalDialog(this,options);this.addChild(modal);modal.on('dispose',()=>{this.removeChild(modal);});modal.open();return modal;}/**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */updateCurrentBreakpoint_(){if(!this.responsive()){return;}const currentBreakpoint=this.currentBreakpoint();const currentWidth=this.currentWidth();for(let i=0;i<BREAKPOINT_ORDER.length;i++){const candidateBreakpoint=BREAKPOINT_ORDER[i];const maxWidth=this.breakpoints_[candidateBreakpoint];if(currentWidth<=maxWidth){// The current breakpoint did not change, nothing to do.\nif(currentBreakpoint===candidateBreakpoint){return;}// Only remove a class if there is a current breakpoint.\nif(currentBreakpoint){this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);}this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);this.breakpoint_=candidateBreakpoint;break;}}}/**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */removeCurrentBreakpoint_(){const className=this.currentBreakpointClass();this.breakpoint_='';if(className){this.removeClass(className);}}/**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */breakpoints(breakpoints){// Used as a getter.\nif(breakpoints===undefined){return Object.assign(this.breakpoints_);}this.breakpoint_='';this.breakpoints_=Object.assign({},DEFAULT_BREAKPOINTS,breakpoints);// When breakpoint definitions change, we need to update the currently\n// selected breakpoint.\nthis.updateCurrentBreakpoint_();// Clone the breakpoints before returning.\nreturn Object.assign(this.breakpoints_);}/**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */responsive(value){// Used as a getter.\nif(value===undefined){return this.responsive_;}value=Boolean(value);const current=this.responsive_;// Nothing changed.\nif(value===current){return;}// The value actually changed, set it.\nthis.responsive_=value;// Start listening for breakpoints and set the initial breakpoint if the\n// player is now responsive.\nif(value){this.on('playerresize',this.boundUpdateCurrentBreakpoint_);this.updateCurrentBreakpoint_();// Stop listening for breakpoints if the player is no longer responsive.\n}else{this.off('playerresize',this.boundUpdateCurrentBreakpoint_);this.removeCurrentBreakpoint_();}return value;}/**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */currentBreakpoint(){return this.breakpoint_;}/**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */currentBreakpointClass(){return BREAKPOINT_CLASSES[this.breakpoint_]||'';}/**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */ /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */loadMedia(media,ready){if(!media||typeof media!=='object'){return;}this.reset();// Clone the media object so it cannot be mutated from outside.\nthis.cache_.media=merge$1(media);const{artist,artwork,description,poster,src,textTracks,title}=this.cache_.media;// If `artwork` is not given, create it using `poster`.\nif(!artwork&&poster){this.cache_.media.artwork=[{src:poster,type:getMimetype(poster)}];}if(src){this.src(src);}if(poster){this.poster(poster);}if(Array.isArray(textTracks)){textTracks.forEach(tt=>this.addRemoteTextTrack(tt,false));}if(this.titleBar){this.titleBar.update({title,description:description||artist||''});}this.ready(ready);}/**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */getMedia(){if(!this.cache_.media){const poster=this.poster();const src=this.currentSources();const textTracks=Array.prototype.map.call(this.remoteTextTracks(),tt=>({kind:tt.kind,label:tt.label,language:tt.language,src:tt.src}));const media={src,textTracks};if(poster){media.poster=poster;media.artwork=[{src:media.poster,type:getMimetype(media.poster)}];}return media;}return merge$1(this.cache_.media);}/**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */static getTagSettings(tag){const baseOptions={sources:[],tracks:[]};const tagOptions=getAttributes(tag);const dataSetup=tagOptions['data-setup'];if(hasClass(tag,'vjs-fill')){tagOptions.fill=true;}if(hasClass(tag,'vjs-fluid')){tagOptions.fluid=true;}// Check if data-setup attr exists.\nif(dataSetup!==null){// Parse options JSON\n// If empty string, make it a parsable json object.\nconst[err,data]=safeParseTuple(dataSetup||'{}');if(err){log$1.error(err);}Object.assign(tagOptions,data);}Object.assign(baseOptions,tagOptions);// Get tag children settings\nif(tag.hasChildNodes()){const children=tag.childNodes;for(let i=0,j=children.length;i<j;i++){const child=children[i];// Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\nconst childName=child.nodeName.toLowerCase();if(childName==='source'){baseOptions.sources.push(getAttributes(child));}else if(childName==='track'){baseOptions.tracks.push(getAttributes(child));}}}return baseOptions;}/**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   */debug(enabled){if(enabled===undefined){return this.debugEnabled_;}if(enabled){this.trigger('debugon');this.previousLogLevel_=this.log.level;this.log.level('debug');this.debugEnabled_=true;}else{this.trigger('debugoff');this.log.level(this.previousLogLevel_);this.previousLogLevel_=undefined;this.debugEnabled_=false;}}/**\n   * Set or get current playback rates.\n   * Takes an array and updates the playback rates menu with the new items.\n   * Pass in an empty array to hide the menu.\n   * Values other than arrays are ignored.\n   *\n   * @fires Player#playbackrateschange\n   * @param {number[]} newRates\n   *                   The new rates that the playback rates menu should update to.\n   *                   An empty array will hide the menu\n   * @return {number[]} When used as a getter will return the current playback rates\n   */playbackRates(newRates){if(newRates===undefined){return this.cache_.playbackRates;}// ignore any value that isn't an array\nif(!Array.isArray(newRates)){return;}// ignore any arrays that don't only contain numbers\nif(!newRates.every(rate=>typeof rate==='number')){return;}this.cache_.playbackRates=newRates;/**\n    * fires when the playback rates in a player are changed\n    *\n    * @event Player#playbackrateschange\n    * @type {EventTarget~Event}\n    */this.trigger('playbackrateschange');}}/**\n * Get the {@link VideoTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */ /**\n * Get the {@link AudioTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */ /**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */ /**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */ /**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */ALL.names.forEach(function(name){const props=ALL[name];Player.prototype[props.getterName]=function(){if(this.tech_){return this.tech_[props.getterName]();}// if we have not yet loadTech_, we create {video,audio,text}Tracks_\n// these will be passed to the tech during loading\nthis[props.privateName]=this[props.privateName]||new props.ListClass();return this[props.privateName];};});/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */Player.prototype.crossorigin=Player.prototype.crossOrigin;/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */Player.players={};const navigator=window$1.navigator;/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */Player.prototype.options_={// Default order of fallback technology\ntechOrder:Tech.defaultTechOrder_,html5:{},// enable sourceset by default\nenableSourceset:true,// default inactivity timeout\ninactivityTimeout:2000,// default playback rates\nplaybackRates:[],// Add playback rate selection by adding rates\n// 'playbackRates': [0.5, 1, 1.5, 2],\nliveui:false,// Included control sets\nchildren:['mediaLoader','posterImage','titleBar','textTrackDisplay','loadingSpinner','bigPlayButton','liveTracker','controlBar','errorDisplay','textTrackSettings','resizeManager'],language:navigator&&(navigator.languages&&navigator.languages[0]||navigator.userLanguage||navigator.language)||'en',// locales and their language translations\nlanguages:{},// Default message to show when a video cannot be played.\nnotSupportedMessage:'No compatible source was found for this media.',normalizeAutoplay:false,fullscreen:{options:{navigationUI:'hide'}},breakpoints:{},responsive:false,audioOnlyMode:false,audioPosterMode:false};[/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */'ended',/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */'seeking',/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */'seekable',/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */'networkState',/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */'readyState'].forEach(function(fn){Player.prototype[fn]=function(){return this.techGet_(fn);};});TECH_EVENTS_RETRIGGER.forEach(function(event){Player.prototype[`handleTech${toTitleCase$1(event)}_`]=function(){return this.trigger(event);};});/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */ /**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */ /**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */ /**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */ /**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */ /**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */Component$1.registerComponent('Player',Player);/**\n * @file plugin.js\n */ /**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */const BASE_PLUGIN_NAME='plugin';/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */const PLUGIN_CACHE_KEY='activePlugins_';/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */const pluginStorage={};/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */const pluginExists=name=>pluginStorage.hasOwnProperty(name);/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {typeof Plugin|Function|undefined}\n *          The plugin (or undefined).\n */const getPlugin=name=>pluginExists(name)?pluginStorage[name]:undefined;/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */const markPluginAsActive=(player,name)=>{player[PLUGIN_CACHE_KEY]=player[PLUGIN_CACHE_KEY]||{};player[PLUGIN_CACHE_KEY][name]=true;};/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */const triggerSetupEvent=(player,hash,before)=>{const eventName=(before?'before':'')+'pluginsetup';player.trigger(eventName,hash);player.trigger(eventName+':'+hash.name,hash);};/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */const createBasicPlugin=function(name,plugin){const basicPluginWrapper=function(){// We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n// regardless, but we want the hash to be consistent with the hash provided\n// for advanced plugins.\n//\n// The only potentially counter-intuitive thing here is the `instance` in\n// the \"pluginsetup\" event is the value returned by the `plugin` function.\ntriggerSetupEvent(this,{name,plugin,instance:null},true);const instance=plugin.apply(this,arguments);markPluginAsActive(this,name);triggerSetupEvent(this,{name,plugin,instance});return instance;};Object.keys(plugin).forEach(function(prop){basicPluginWrapper[prop]=plugin[prop];});return basicPluginWrapper;};/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */const createPluginFactory=(name,PluginSubClass)=>{// Add a `name` property to the plugin prototype so that each plugin can\n// refer to itself by name.\nPluginSubClass.prototype.name=name;return function(...args){triggerSetupEvent(this,{name,plugin:PluginSubClass,instance:null},true);const instance=new PluginSubClass(...[this,...args]);// The plugin is replaced by a function that returns the current instance.\nthis[name]=()=>instance;triggerSetupEvent(this,instance.getEventHash());return instance;};};/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */class Plugin{/**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */constructor(player){if(this.constructor===Plugin){throw new Error('Plugin must be sub-classed; not directly instantiated.');}this.player=player;if(!this.log){this.log=this.player.log.createLogger(this.name);}// Make this object evented, but remove the added `trigger` method so we\n// use the prototype version instead.\nevented(this);delete this.trigger;stateful(this,this.constructor.defaultState);markPluginAsActive(player,this.name);// Auto-bind the dispose method so we can use it as a listener and unbind\n// it later easily.\nthis.dispose=this.dispose.bind(this);// If the player is disposed, dispose the plugin.\nplayer.on('dispose',this.dispose);}/**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */version(){return this.constructor.VERSION;}/**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */getEventHash(hash={}){hash.name=this.name;hash.plugin=this.constructor;hash.instance=this;return hash;}/**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */trigger(event,hash={}){return trigger(this.eventBusEl_,event,this.getEventHash(hash));}/**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */handleStateChanged(e){}/**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */dispose(){const{name,player}=this;/**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */this.trigger('dispose');this.off();player.off('dispose',this.dispose);// Eliminate any possible sources of leaking memory by clearing up\n// references between the player and the plugin instance and nulling out\n// the plugin's state and replacing methods with a function that throws.\nplayer[PLUGIN_CACHE_KEY][name]=false;this.player=this.state=null;// Finally, replace the plugin name on the player with a new factory\n// function, so that the plugin is ready to be set up again.\nplayer[name]=createPluginFactory(name,pluginStorage[name]);}/**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */static isBasic(plugin){const p=typeof plugin==='string'?getPlugin(plugin):plugin;return typeof p==='function'&&!Plugin.prototype.isPrototypeOf(p.prototype);}/**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {typeof Plugin|Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {typeof Plugin|Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */static registerPlugin(name,plugin){if(typeof name!=='string'){throw new Error(`Illegal plugin name, \"${name}\", must be a string, was ${typeof name}.`);}if(pluginExists(name)){log$1.warn(`A plugin named \"${name}\" already exists. You may want to avoid re-registering plugins!`);}else if(Player.prototype.hasOwnProperty(name)){throw new Error(`Illegal plugin name, \"${name}\", cannot share a name with an existing player method!`);}if(typeof plugin!=='function'){throw new Error(`Illegal plugin for \"${name}\", must be a function, was ${typeof plugin}.`);}pluginStorage[name]=plugin;// Add a player prototype method for all sub-classed plugins (but not for\n// the base Plugin class).\nif(name!==BASE_PLUGIN_NAME){if(Plugin.isBasic(plugin)){Player.prototype[name]=createBasicPlugin(name,plugin);}else{Player.prototype[name]=createPluginFactory(name,plugin);}}return plugin;}/**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */static deregisterPlugin(name){if(name===BASE_PLUGIN_NAME){throw new Error('Cannot de-register base plugin.');}if(pluginExists(name)){delete pluginStorage[name];delete Player.prototype[name];}}/**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */static getPlugins(names=Object.keys(pluginStorage)){let result;names.forEach(name=>{const plugin=getPlugin(name);if(plugin){result=result||{};result[name]=plugin;}});return result;}/**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */static getPluginVersion(name){const plugin=getPlugin(name);return plugin&&plugin.VERSION||'';}}/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {typeof Plugin|Function|undefined}\n *           The plugin (or `undefined`).\n */Plugin.getPlugin=getPlugin;/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */Plugin.BASE_PLUGIN_NAME=BASE_PLUGIN_NAME;Plugin.registerPlugin(BASE_PLUGIN_NAME,Plugin);/**\n * Documented in player.js\n *\n * @ignore\n */Player.prototype.usingPlugin=function(name){return!!this[PLUGIN_CACHE_KEY]&&this[PLUGIN_CACHE_KEY][name]===true;};/**\n * Documented in player.js\n *\n * @ignore\n */Player.prototype.hasPlugin=function(name){return!!pluginExists(name);};/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */ /**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */ /**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */ /**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */ /**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */ /**\n * @file deprecate.js\n * @module deprecate\n */ /**\n * Decorate a function with a deprecation message the first time it is called.\n *\n * @param  {string}   message\n *         A deprecation message to log the first time the returned function\n *         is called.\n *\n * @param  {Function} fn\n *         The function to be deprecated.\n *\n * @return {Function}\n *         A wrapper function that will log a deprecation warning the first\n *         time it is called. The return value will be the return value of\n *         the wrapped function.\n */function deprecate(message,fn){let warned=false;return function(...args){if(!warned){log$1.warn(message);}warned=true;return fn.apply(this,args);};}/**\n * Internal function used to mark a function as deprecated in the next major\n * version with consistent messaging.\n *\n * @param  {number}   major   The major version where it will be removed\n * @param  {string}   oldName The old function name\n * @param  {string}   newName The new function name\n * @param  {Function} fn      The function to deprecate\n * @return {Function}         The decorated function\n */function deprecateForMajor(major,oldName,newName,fn){return deprecate(`${oldName} is deprecated and will be removed in ${major}.0; please use ${newName} instead.`,fn);}/**\n * @file video.js\n * @module videojs\n */ /**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */const normalizeId=id=>id.indexOf('#')===0?id.slice(1):id;/**\n * A callback that is called when a component is ready. Does not have any\n * parameters and any callback value will be ignored. See: {@link Component~ReadyCallback}\n *\n * @callback ReadyCallback\n */ /**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */function videojs(id,options,ready){let player=videojs.getPlayer(id);if(player){if(options){log$1.warn(`Player \"${id}\" is already initialised. Options will not be applied.`);}if(ready){player.ready(ready);}return player;}const el=typeof id==='string'?$('#'+normalizeId(id)):id;if(!isEl(el)){throw new TypeError('The element or ID supplied is not valid. (videojs)');}// document.body.contains(el) will only check if el is contained within that one document.\n// This causes problems for elements in iframes.\n// Instead, use the element's ownerDocument instead of the global document.\n// This will make sure that the element is indeed in the dom of that document.\n// Additionally, check that the document in question has a default view.\n// If the document is no longer attached to the dom, the defaultView of the document will be null.\nif(!el.ownerDocument.defaultView||!el.ownerDocument.body.contains(el)){log$1.warn('The element supplied is not included in the DOM');}options=options||{};// Store a copy of the el before modification, if it is to be restored in destroy()\n// If div ingest, store the parent div\nif(options.restoreEl===true){options.restoreEl=(el.parentNode&&el.parentNode.hasAttribute('data-vjs-player')?el.parentNode:el).cloneNode(true);}hooks('beforesetup').forEach(hookFunction=>{const opts=hookFunction(el,merge$1(options));if(!isObject(opts)||Array.isArray(opts)){log$1.error('please return an object in beforesetup hooks');return;}options=merge$1(options,opts);});// We get the current \"Player\" component here in case an integration has\n// replaced it with a custom player.\nconst PlayerComponent=Component$1.getComponent('Player');player=new PlayerComponent(el,options,ready);hooks('setup').forEach(hookFunction=>hookFunction(player));return player;}videojs.hooks_=hooks_;videojs.hooks=hooks;videojs.hook=hook;videojs.hookOnce=hookOnce;videojs.removeHook=removeHook;// Add default styles\nif(window$1.VIDEOJS_NO_DYNAMIC_STYLE!==true&&isReal()){let style=$('.vjs-styles-defaults');if(!style){style=createStyleElement('vjs-styles-defaults');const head=$('head');if(head){head.insertBefore(style,head.firstChild);}setTextContent(style,`\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    `);}}// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1,videojs);/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */videojs.VERSION=version$6;/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */videojs.options=Player.prototype.options_;/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */videojs.getPlayers=()=>Player.players;/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */videojs.getPlayer=id=>{const players=Player.players;let tag;if(typeof id==='string'){const nId=normalizeId(id);const player=players[nId];if(player){return player;}tag=$('#'+nId);}else{tag=id;}if(isEl(tag)){const{player,playerId}=tag;// Element may have a `player` property referring to an already created\n// player instance. If so, return that.\nif(player||players[playerId]){return player||players[playerId];}}};/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */videojs.getAllPlayers=()=>// Disposed players leave a key with a `null` value, so we need to make sure\n// we filter those out.\nObject.keys(Player.players).map(k=>Player.players[k]).filter(Boolean);videojs.players=Player.players;videojs.getComponent=Component$1.getComponent;/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */videojs.registerComponent=(name,comp)=>{if(Tech.isTech(comp)){log$1.warn(`The ${name} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);}Component$1.registerComponent.call(Component$1,name,comp);};videojs.getTech=Tech.getTech;videojs.registerTech=Tech.registerTech;videojs.use=use;/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */Object.defineProperty(videojs,'middleware',{value:{},writeable:false,enumerable:true});Object.defineProperty(videojs.middleware,'TERMINATOR',{value:TERMINATOR,writeable:false,enumerable:true});/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */videojs.browser=browser;/**\n * A reference to the {@link module:obj|obj utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:obj|obj}\n */videojs.obj=Obj;/**\n * Deprecated reference to the {@link module:obj.merge|merge function}\n *\n * @type {Function}\n * @see {@link module:obj.merge|merge}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.merge instead.\n */videojs.mergeOptions=deprecateForMajor(9,'videojs.mergeOptions','videojs.obj.merge',merge$1);/**\n * Deprecated reference to the {@link module:obj.defineLazyProperty|defineLazyProperty function}\n *\n * @type {Function}\n * @see {@link module:obj.defineLazyProperty|defineLazyProperty}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.defineLazyProperty instead.\n */videojs.defineLazyProperty=deprecateForMajor(9,'videojs.defineLazyProperty','videojs.obj.defineLazyProperty',defineLazyProperty);/**\n * Deprecated reference to the {@link module:fn.bind_|fn.bind_ function}\n *\n * @type {Function}\n * @see {@link module:fn.bind_|fn.bind_}\n * @deprecated Deprecated and will be removed in 9.0. Please use native Function.prototype.bind instead.\n */videojs.bind=deprecateForMajor(9,'videojs.bind','native Function.prototype.bind',bind_);videojs.registerPlugin=Plugin.registerPlugin;videojs.deregisterPlugin=Plugin.deregisterPlugin;/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated Deprecated and will be removed in 9.0. Use videojs.registerPlugin() instead.\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */videojs.plugin=(name,plugin)=>{log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');return Plugin.registerPlugin(name,plugin);};videojs.getPlugins=Plugin.getPlugins;videojs.getPlugin=Plugin.getPlugin;videojs.getPluginVersion=Plugin.getPluginVersion;/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */videojs.addLanguage=function(code,data){code=(''+code).toLowerCase();videojs.options.languages=merge$1(videojs.options.languages,{[code]:data});return videojs.options.languages[code];};/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */videojs.log=log$1;videojs.createLogger=createLogger;/**\n * A reference to the {@link module:time|time utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:time|time}\n */videojs.time=Time;/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */videojs.createTimeRange=deprecateForMajor(9,'videojs.createTimeRange','videojs.time.createTimeRanges',createTimeRanges$1);/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */videojs.createTimeRanges=deprecateForMajor(9,'videojs.createTimeRanges','videojs.time.createTimeRanges',createTimeRanges$1);/**\n * Deprecated reference to the {@link module:time.formatTime|formatTime function}\n *\n * @type {Function}\n * @see {@link module:time.formatTime|formatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.format instead.\n */videojs.formatTime=deprecateForMajor(9,'videojs.formatTime','videojs.time.formatTime',formatTime);/**\n * Deprecated reference to the {@link module:time.setFormatTime|setFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.setFormatTime|setFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.setFormat instead.\n */videojs.setFormatTime=deprecateForMajor(9,'videojs.setFormatTime','videojs.time.setFormatTime',setFormatTime);/**\n * Deprecated reference to the {@link module:time.resetFormatTime|resetFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.resetFormatTime|resetFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.resetFormat instead.\n */videojs.resetFormatTime=deprecateForMajor(9,'videojs.resetFormatTime','videojs.time.resetFormatTime',resetFormatTime);/**\n * Deprecated reference to the {@link module:url.parseUrl|Url.parseUrl function}\n *\n * @type {Function}\n * @see {@link module:url.parseUrl|parseUrl}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.parseUrl instead.\n */videojs.parseUrl=deprecateForMajor(9,'videojs.parseUrl','videojs.url.parseUrl',parseUrl);/**\n * Deprecated reference to the {@link module:url.isCrossOrigin|Url.isCrossOrigin function}\n *\n * @type {Function}\n * @see {@link module:url.isCrossOrigin|isCrossOrigin}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.isCrossOrigin instead.\n */videojs.isCrossOrigin=deprecateForMajor(9,'videojs.isCrossOrigin','videojs.url.isCrossOrigin',isCrossOrigin);videojs.EventTarget=EventTarget$2;videojs.any=any;videojs.on=on;videojs.one=one;videojs.off=off;videojs.trigger=trigger;/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */videojs.xhr=XHR;videojs.TextTrack=TextTrack;videojs.AudioTrack=AudioTrack;videojs.VideoTrack=VideoTrack;['isEl','isTextNode','createEl','hasClass','addClass','removeClass','toggleClass','setAttributes','getAttributes','emptyEl','appendContent','insertContent'].forEach(k=>{videojs[k]=function(){log$1.warn(`videojs.${k}() is deprecated; use videojs.dom.${k}() instead`);return Dom[k].apply(null,arguments);};});videojs.computedStyle=deprecateForMajor(9,'videojs.computedStyle','videojs.dom.computedStyle',computedStyle);/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:dom|dom}\n */videojs.dom=Dom;/**\n * A reference to the {@link module:fn|fn utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:fn|fn}\n */videojs.fn=Fn;/**\n * A reference to the {@link module:num|num utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:num|num}\n */videojs.num=Num;/**\n * A reference to the {@link module:str|str utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:str|str}\n */videojs.str=Str;/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:url|url}\n */videojs.url=Url;/*! @name videojs-contrib-quality-levels @version 3.0.0 @license Apache-2.0 */ /**\n * A single QualityLevel.\n *\n * interface QualityLevel {\n *   readonly attribute DOMString id;\n *            attribute DOMString label;\n *   readonly attribute long width;\n *   readonly attribute long height;\n *   readonly attribute long bitrate;\n *            attribute boolean enabled;\n * };\n *\n * @class QualityLevel\n */class QualityLevel{/**\n   * Creates a QualityLevel\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   */constructor(representation){let level=this;// eslint-disable-line\nlevel.id=representation.id;level.label=level.id;level.width=representation.width;level.height=representation.height;level.bitrate=representation.bandwidth;level.frameRate=representation.frameRate;level.enabled_=representation.enabled;Object.defineProperty(level,'enabled',{/**\n       * Get whether the QualityLevel is enabled.\n       *\n       * @return {boolean} True if the QualityLevel is enabled.\n       */get(){return level.enabled_();},/**\n       * Enable or disable the QualityLevel.\n       *\n       * @param {boolean} enable true to enable QualityLevel, false to disable.\n       */set(enable){level.enabled_(enable);}});return level;}}/**\n * A list of QualityLevels.\n *\n * interface QualityLevelList : EventTarget {\n *   getter QualityLevel (unsigned long index);\n *   readonly attribute unsigned long length;\n *   readonly attribute long selectedIndex;\n *\n *   void addQualityLevel(QualityLevel qualityLevel)\n *   void removeQualityLevel(QualityLevel remove)\n *   QualityLevel? getQualityLevelById(DOMString id);\n *\n *   attribute EventHandler onchange;\n *   attribute EventHandler onaddqualitylevel;\n *   attribute EventHandler onremovequalitylevel;\n * };\n *\n * @extends videojs.EventTarget\n * @class QualityLevelList\n */class QualityLevelList extends videojs.EventTarget{constructor(){super();let list=this;// eslint-disable-line\nlist.levels_=[];list.selectedIndex_=-1;/**\n     * Get the index of the currently selected QualityLevel.\n     *\n     * @returns {number} The index of the selected QualityLevel. -1 if none selected.\n     * @readonly\n     */Object.defineProperty(list,'selectedIndex',{get(){return list.selectedIndex_;}});/**\n     * Get the length of the list of QualityLevels.\n     *\n     * @returns {number} The length of the list.\n     * @readonly\n     */Object.defineProperty(list,'length',{get(){return list.levels_.length;}});return list;}/**\n   * Adds a quality level to the list.\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   * @return {QualityLevel} the QualityLevel added to the list\n   * @method addQualityLevel\n   */addQualityLevel(representation){let qualityLevel=this.getQualityLevelById(representation.id);// Do not add duplicate quality levels\nif(qualityLevel){return qualityLevel;}const index=this.levels_.length;qualityLevel=new QualityLevel(representation);if(!(''+index in this)){Object.defineProperty(this,index,{get(){return this.levels_[index];}});}this.levels_.push(qualityLevel);this.trigger({qualityLevel,type:'addqualitylevel'});return qualityLevel;}/**\n   * Removes a quality level from the list.\n   *\n   * @param {QualityLevel} remove QualityLevel to remove to the list.\n   * @return {QualityLevel|null} the QualityLevel removed or null if nothing removed\n   * @method removeQualityLevel\n   */removeQualityLevel(qualityLevel){let removed=null;for(let i=0,l=this.length;i<l;i++){if(this[i]===qualityLevel){removed=this.levels_.splice(i,1)[0];if(this.selectedIndex_===i){this.selectedIndex_=-1;}else if(this.selectedIndex_>i){this.selectedIndex_--;}break;}}if(removed){this.trigger({qualityLevel,type:'removequalitylevel'});}return removed;}/**\n   * Searches for a QualityLevel with the given id.\n   *\n   * @param {string} id The id of the QualityLevel to find.\n   * @return {QualityLevel|null} The QualityLevel with id, or null if not found.\n   * @method getQualityLevelById\n   */getQualityLevelById(id){for(let i=0,l=this.length;i<l;i++){const level=this[i];if(level.id===id){return level;}}return null;}/**\n   * Resets the list of QualityLevels to empty\n   *\n   * @method dispose\n   */dispose(){this.selectedIndex_=-1;this.levels_.length=0;}}/**\n * change - The selected QualityLevel has changed.\n * addqualitylevel - A QualityLevel has been added to the QualityLevelList.\n * removequalitylevel - A QualityLevel has been removed from the QualityLevelList.\n */QualityLevelList.prototype.allowedEvents_={change:'change',addqualitylevel:'addqualitylevel',removequalitylevel:'removequalitylevel'};// emulate attribute EventHandler support to allow for feature detection\nfor(const event in QualityLevelList.prototype.allowedEvents_){QualityLevelList.prototype['on'+event]=null;}var version$5=\"3.0.0\";const registerPlugin=videojs.registerPlugin||videojs.plugin;/**\n * Initialization function for the qualityLevels plugin. Sets up the QualityLevelList and\n * event handlers.\n *\n * @param {Player} player Player object.\n * @param {Object} options Plugin options object.\n * @function initPlugin\n */const initPlugin$1=function(player,options){const originalPluginFn=player.qualityLevels;const qualityLevelList=new QualityLevelList();const disposeHandler=function(){qualityLevelList.dispose();player.qualityLevels=originalPluginFn;player.off('dispose',disposeHandler);};player.on('dispose',disposeHandler);player.qualityLevels=()=>qualityLevelList;player.qualityLevels.VERSION=version$5;return qualityLevelList;};/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @param {Object} options Plugin options object\n * @function qualityLevels\n */const qualityLevels=function(options){return initPlugin$1(this,videojs.mergeOptions({},options));};// Register the plugin with video.js.\nregisterPlugin('qualityLevels',qualityLevels);// Include the version number.\nqualityLevels.VERSION=version$5;/*! @name @videojs/http-streaming @version 3.0.0 @license Apache-2.0 */ /**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */const resolveUrl=_resolveUrl;/**\n * If the xhr request was redirected, return the responseURL, otherwise,\n * return the original url.\n *\n * @api private\n *\n * @param  {string} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {string}\n */const resolveManifestRedirect=(url,req)=>{// To understand how the responseURL below is set and generated:\n// - https://fetch.spec.whatwg.org/#concept-response-url\n// - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\nif(req&&req.responseURL&&url!==req.responseURL){return req.responseURL;}return url;};const logger=source=>{if(videojs.log.debug){return videojs.log.debug.bind(videojs,'VHS:',`${source} >`);}return function(){};};/**\n * Provides a compatibility layer between Video.js 7 and 8 API changes for VHS.\n */ /**\n * Delegates to videojs.obj.merge (Video.js 8) or\n * videojs.mergeOptions (Video.js 7).\n */function merge(...args){const context=videojs.obj||videojs;const fn=context.merge||context.mergeOptions;return fn.apply(context,args);}/**\n * Delegates to videojs.time.createTimeRanges (Video.js 8) or\n * videojs.createTimeRanges (Video.js 7).\n */function createTimeRanges(...args){const context=videojs.time||videojs;const fn=context.createTimeRanges||context.createTimeRanges;return fn.apply(context,args);}/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */const TIME_FUDGE_FACTOR=1/30;// Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\nconst SAFE_TIME_DELTA=TIME_FUDGE_FACTOR*3;const filterRanges=function(timeRanges,predicate){const results=[];let i;if(timeRanges&&timeRanges.length){// Search for ranges that match the predicate\nfor(i=0;i<timeRanges.length;i++){if(predicate(timeRanges.start(i),timeRanges.end(i))){results.push([timeRanges.start(i),timeRanges.end(i)]);}}}return createTimeRanges(results);};/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n *\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object\n */const findRange=function(buffered,time){return filterRanges(buffered,function(start,end){return start-SAFE_TIME_DELTA<=time&&end+SAFE_TIME_DELTA>=time;});};/**\n * Returns the TimeRanges that begin later than the specified time.\n *\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object.\n */const findNextRange=function(timeRanges,time){return filterRanges(timeRanges,function(start){return start-TIME_FUDGE_FACTOR>=time;});};/**\n * Returns gaps within a list of TimeRanges\n *\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */const findGaps=function(buffered){if(buffered.length<2){return createTimeRanges();}const ranges=[];for(let i=1;i<buffered.length;i++){const start=buffered.end(i-1);const end=buffered.start(i);ranges.push([start,end]);}return createTimeRanges(ranges);};/**\n * Calculate the intersection of two TimeRanges\n *\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n */const bufferIntersection=function(bufferA,bufferB){let start=null;let end=null;let arity=0;const extents=[];const ranges=[];if(!bufferA||!bufferA.length||!bufferB||!bufferB.length){return createTimeRanges();}// Handle the case where we have both buffers and create an\n// intersection of the two\nlet count=bufferA.length;// A) Gather up all start and end times\nwhile(count--){extents.push({time:bufferA.start(count),type:'start'});extents.push({time:bufferA.end(count),type:'end'});}count=bufferB.length;while(count--){extents.push({time:bufferB.start(count),type:'start'});extents.push({time:bufferB.end(count),type:'end'});}// B) Sort them by time\nextents.sort(function(a,b){return a.time-b.time;});// C) Go along one by one incrementing arity for start and decrementing\n//    arity for ends\nfor(count=0;count<extents.length;count++){if(extents[count].type==='start'){arity++;// D) If arity is ever incremented to 2 we are entering an\n//    overlapping range\nif(arity===2){start=extents[count].time;}}else if(extents[count].type==='end'){arity--;// E) If arity is ever decremented to 1 we leaving an\n//    overlapping range\nif(arity===1){end=extents[count].time;}}// F) Record overlapping ranges\nif(start!==null&&end!==null){ranges.push([start,end]);start=null;end=null;}}return createTimeRanges(ranges);};/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @return {string} a human readable string\n */const printableRange=range=>{const strArr=[];if(!range||!range.length){return'';}for(let i=0;i<range.length;i++){strArr.push(range.start(i)+' => '+range.end(i));}return strArr.join(', ');};/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */const timeUntilRebuffer=function(buffered,currentTime,playbackRate=1){const bufferedEnd=buffered.length?buffered.end(buffered.length-1):0;return(bufferedEnd-currentTime)/playbackRate;};/**\n * Converts a TimeRanges object into an array representation\n *\n * @param {TimeRanges} timeRanges\n * @return {Array}\n */const timeRangesToArray=timeRanges=>{const timeRangesList=[];for(let i=0;i<timeRanges.length;i++){timeRangesList.push({start:timeRanges.start(i),end:timeRanges.end(i)});}return timeRangesList;};/**\n * Determines if two time range objects are different.\n *\n * @param {TimeRange} a\n *        the first time range object to check\n *\n * @param {TimeRange} b\n *        the second time range object to check\n *\n * @return {Boolean}\n *         Whether the time range objects differ\n */const isRangeDifferent=function(a,b){// same object\nif(a===b){return false;}// one or the other is undefined\nif(!a&&b||!b&&a){return true;}// length is different\nif(a.length!==b.length){return true;}// see if any start/end pair is different\nfor(let i=0;i<a.length;i++){if(a.start(i)!==b.start(i)||a.end(i)!==b.end(i)){return true;}}// if the length and every pair is the same\n// this is the same time range\nreturn false;};const lastBufferedEnd=function(a){if(!a||!a.length||!a.end){return;}return a.end(a.length-1);};/**\n * A utility function to add up the amount of time in a timeRange\n * after a specified startTime.\n * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n *     would return 40 as there are 40s seconds after 0 in the timeRange\n *\n * @param {TimeRange} range\n *        The range to check against\n * @param {number} startTime\n *        The time in the time range that you should start counting from\n *\n * @return {number}\n *          The number of seconds in the buffer passed the specified time.\n */const timeAheadOf=function(range,startTime){let time=0;if(!range||!range.length){return time;}for(let i=0;i<range.length;i++){const start=range.start(i);const end=range.end(i);// startTime is after this range entirely\nif(startTime>end){continue;}// startTime is within this range\nif(startTime>start&&startTime<=end){time+=end-startTime;continue;}// startTime is before this range.\ntime+=end-start;}return time;};/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */ /**\n * Get the duration of a segment, with special cases for\n * llhls segments that do not have a duration yet.\n *\n * @param {Object} playlist\n *        the playlist that the segment belongs to.\n * @param {Object} segment\n *        the segment to get a duration for.\n *\n * @return {number}\n *          the segment duration\n */const segmentDurationWithParts=(playlist,segment)=>{// if this isn't a preload segment\n// then we will have a segment duration that is accurate.\nif(!segment.preload){return segment.duration;}// otherwise we have to add up parts and preload hints\n// to get an up to date duration.\nlet result=0;(segment.parts||[]).forEach(function(p){result+=p.duration;});// for preload hints we have to use partTargetDuration\n// as they won't even have a duration yet.\n(segment.preloadHints||[]).forEach(function(p){if(p.type==='PART'){result+=playlist.partTargetDuration;}});return result;};/**\n * A function to get a combined list of parts and segments with durations\n * and indexes.\n *\n * @param {Playlist} playlist the playlist to get the list for.\n *\n * @return {Array} The part/segment list.\n */const getPartsAndSegments=playlist=>(playlist.segments||[]).reduce((acc,segment,si)=>{if(segment.parts){segment.parts.forEach(function(part,pi){acc.push({duration:part.duration,segmentIndex:si,partIndex:pi,part,segment});});}else{acc.push({duration:segment.duration,segmentIndex:si,partIndex:null,segment,part:null});}return acc;},[]);const getLastParts=media=>{const lastSegment=media.segments&&media.segments.length&&media.segments[media.segments.length-1];return lastSegment&&lastSegment.parts||[];};const getKnownPartCount=({preloadSegment})=>{if(!preloadSegment){return;}const{parts,preloadHints}=preloadSegment;let partCount=(preloadHints||[]).reduce((count,hint)=>count+(hint.type==='PART'?1:0),0);partCount+=parts&&parts.length?parts.length:0;return partCount;};/**\n * Get the number of seconds to delay from the end of a\n * live playlist.\n *\n * @param {Playlist} main the main playlist\n * @param {Playlist} media the media playlist\n * @return {number} the hold back in seconds.\n */const liveEdgeDelay=(main,media)=>{if(media.endList){return 0;}// dash suggestedPresentationDelay trumps everything\nif(main&&main.suggestedPresentationDelay){return main.suggestedPresentationDelay;}const hasParts=getLastParts(media).length>0;// look for \"part\" delays from ll-hls first\nif(hasParts&&media.serverControl&&media.serverControl.partHoldBack){return media.serverControl.partHoldBack;}else if(hasParts&&media.partTargetDuration){return media.partTargetDuration*3;// finally look for full segment delays\n}else if(media.serverControl&&media.serverControl.holdBack){return media.serverControl.holdBack;}else if(media.targetDuration){return media.targetDuration*3;}return 0;};/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */const backwardDuration=function(playlist,endSequence){let result=0;let i=endSequence-playlist.mediaSequence;// if a start time is available for segment immediately following\n// the interval, use it\nlet segment=playlist.segments[i];// Walk backward until we find the latest segment with timeline\n// information that is earlier than endSequence\nif(segment){if(typeof segment.start!=='undefined'){return{result:segment.start,precise:true};}if(typeof segment.end!=='undefined'){return{result:segment.end-segment.duration,precise:true};}}while(i--){segment=playlist.segments[i];if(typeof segment.end!=='undefined'){return{result:result+segment.end,precise:true};}result+=segmentDurationWithParts(playlist,segment);if(typeof segment.start!=='undefined'){return{result:result+segment.start,precise:true};}}return{result,precise:false};};/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {number} endSequence the mediaSequence to stop walking on\n */const forwardDuration=function(playlist,endSequence){let result=0;let segment;let i=endSequence-playlist.mediaSequence;// Walk forward until we find the earliest segment with timeline\n// information\nfor(;i<playlist.segments.length;i++){segment=playlist.segments[i];if(typeof segment.start!=='undefined'){return{result:segment.start-result,precise:true};}result+=segmentDurationWithParts(playlist,segment);if(typeof segment.end!=='undefined'){return{result:segment.end-result,precise:true};}}// indicate we didn't find a useful duration estimate\nreturn{result:-1,precise:false};};/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {number} the duration between the first available segment\n  * and end index.\n  */const intervalDuration=function(playlist,endSequence,expired){if(typeof endSequence==='undefined'){endSequence=playlist.mediaSequence+playlist.segments.length;}if(endSequence<playlist.mediaSequence){return 0;}// do a backward walk to estimate the duration\nconst backward=backwardDuration(playlist,endSequence);if(backward.precise){// if we were able to base our duration estimate on timing\n// information provided directly from the Media Source, return\n// it\nreturn backward.result;}// walk forward to see if a precise duration estimate can be made\n// that way\nconst forward=forwardDuration(playlist,endSequence);if(forward.precise){// we found a segment that has been buffered and so it's\n// position is known precisely\nreturn forward.result;}// return the less-precise, playlist-based duration estimate\nreturn backward.result+expired;};/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {number} the duration between the start index and end\n  * index.\n  */const duration=function(playlist,endSequence,expired){if(!playlist){return 0;}if(typeof expired!=='number'){expired=0;}// if a slice of the total duration is not requested, use\n// playlist-level duration indicators when they're present\nif(typeof endSequence==='undefined'){// if present, use the duration specified in the playlist\nif(playlist.totalDuration){return playlist.totalDuration;}// duration should be Infinity for live playlists\nif(!playlist.endList){return window$1.Infinity;}}// calculate the total duration based on the segment durations\nreturn intervalDuration(playlist,endSequence,expired);};/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Array} options.durationList list to iterate over for durations.\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n  * @param {number} options.startIndex partsAndSegments index to start\n  * @param {number} options.endIndex partsAndSegments index to end.\n  * @return {number} the number of seconds between startIndex and endIndex\n  */const sumDurations=function({defaultDuration,durationList,startIndex,endIndex}){let durations=0;if(startIndex>endIndex){[startIndex,endIndex]=[endIndex,startIndex];}if(startIndex<0){for(let i=startIndex;i<Math.min(0,endIndex);i++){durations+=defaultDuration;}startIndex=0;}for(let i=startIndex;i<endIndex;i++){durations+=durationList[i].duration;}return durations;};/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {number} the end time of playlist\n * @function playlistEnd\n */const playlistEnd=function(playlist,expired,useSafeLiveEnd,liveEdgePadding){if(!playlist||!playlist.segments){return null;}if(playlist.endList){return duration(playlist);}if(expired===null){return null;}expired=expired||0;let lastSegmentEndTime=intervalDuration(playlist,playlist.mediaSequence+playlist.segments.length,expired);if(useSafeLiveEnd){liveEdgePadding=typeof liveEdgePadding==='number'?liveEdgePadding:liveEdgeDelay(null,playlist);lastSegmentEndTime-=liveEdgePadding;}// don't return a time less than zero\nreturn Math.max(0,lastSegmentEndTime);};/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */const seekable=function(playlist,expired,liveEdgePadding){const useSafeLiveEnd=true;const seekableStart=expired||0;const seekableEnd=playlistEnd(playlist,expired,useSafeLiveEnd,liveEdgePadding);if(seekableEnd===null){return createTimeRanges();}return createTimeRanges(seekableStart,seekableEnd);};/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} options.playlist the media playlist to query\n * @param {number} options.currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {number} options.startTime the time when the segment/part starts\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n *\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\n */const getMediaInfoForTime=function({playlist,currentTime,startingSegmentIndex,startingPartIndex,startTime,exactManifestTimings}){let time=currentTime-startTime;const partsAndSegments=getPartsAndSegments(playlist);let startIndex=0;for(let i=0;i<partsAndSegments.length;i++){const partAndSegment=partsAndSegments[i];if(startingSegmentIndex!==partAndSegment.segmentIndex){continue;}// skip this if part index does not match.\nif(typeof startingPartIndex==='number'&&typeof partAndSegment.partIndex==='number'&&startingPartIndex!==partAndSegment.partIndex){continue;}startIndex=i;break;}if(time<0){// Walk backward from startIndex in the playlist, adding durations\n// until we find a segment that contains `time` and return it\nif(startIndex>0){for(let i=startIndex-1;i>=0;i--){const partAndSegment=partsAndSegments[i];time+=partAndSegment.duration;if(exactManifestTimings){if(time<0){continue;}}else if(time+TIME_FUDGE_FACTOR<=0){continue;}return{partIndex:partAndSegment.partIndex,segmentIndex:partAndSegment.segmentIndex,startTime:startTime-sumDurations({defaultDuration:playlist.targetDuration,durationList:partsAndSegments,startIndex,endIndex:i})};}}// We were unable to find a good segment within the playlist\n// so select the first segment\nreturn{partIndex:partsAndSegments[0]&&partsAndSegments[0].partIndex||null,segmentIndex:partsAndSegments[0]&&partsAndSegments[0].segmentIndex||0,startTime:currentTime};}// When startIndex is negative, we first walk forward to first segment\n// adding target durations. If we \"run out of time\" before getting to\n// the first segment, return the first segment\nif(startIndex<0){for(let i=startIndex;i<0;i++){time-=playlist.targetDuration;if(time<0){return{partIndex:partsAndSegments[0]&&partsAndSegments[0].partIndex||null,segmentIndex:partsAndSegments[0]&&partsAndSegments[0].segmentIndex||0,startTime:currentTime};}}startIndex=0;}// Walk forward from startIndex in the playlist, subtracting durations\n// until we find a segment that contains `time` and return it\nfor(let i=startIndex;i<partsAndSegments.length;i++){const partAndSegment=partsAndSegments[i];time-=partAndSegment.duration;if(exactManifestTimings){if(time>0){continue;}}else if(time-TIME_FUDGE_FACTOR>=0){continue;}return{partIndex:partAndSegment.partIndex,segmentIndex:partAndSegment.segmentIndex,startTime:startTime+sumDurations({defaultDuration:playlist.targetDuration,durationList:partsAndSegments,startIndex,endIndex:i})};}// We are out of possible candidates so load the last one...\nreturn{segmentIndex:partsAndSegments[partsAndSegments.length-1].segmentIndex,partIndex:partsAndSegments[partsAndSegments.length-1].partIndex,startTime:currentTime};};/**\n * Check whether the playlist is excluded or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is excluded or not\n * @function isExcluded\n */const isExcluded=function(playlist){return playlist.excludeUntil&&playlist.excludeUntil>Date.now();};/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been excluded permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */const isIncompatible=function(playlist){return playlist.excludeUntil&&playlist.excludeUntil===Infinity;};/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */const isEnabled=function(playlist){const excluded=isExcluded(playlist);return!playlist.disabled&&!excluded;};/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */const isDisabled=function(playlist){return playlist.disabled;};/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {boolean} true if it's an AES encrypted HLS stream\n */const isAes=function(media){for(let i=0;i<media.segments.length;i++){if(media.segments[i].key){return true;}}return false;};/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {string} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */const hasAttribute=function(attr,playlist){return playlist.attributes&&playlist.attributes[attr];};/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {number} segmentDuration\n *        Duration of requested segment\n * @param {number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */const estimateSegmentRequestTime=function(segmentDuration,bandwidth,playlist,bytesReceived=0){if(!hasAttribute('BANDWIDTH',playlist)){return NaN;}const size=segmentDuration*playlist.attributes.BANDWIDTH;return(size-bytesReceived*8)/bandwidth;};/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */const isLowestEnabledRendition=(main,media)=>{if(main.playlists.length===1){return true;}const currentBandwidth=media.attributes.BANDWIDTH||Number.MAX_VALUE;return main.playlists.filter(playlist=>{if(!isEnabled(playlist)){return false;}return(playlist.attributes.BANDWIDTH||0)<currentBandwidth;}).length===0;};const playlistMatch=(a,b)=>{// both playlits are null\n// or only one playlist is non-null\n// no match\nif(!a&&!b||!a&&b||a&&!b){return false;}// playlist objects are the same, match\nif(a===b){return true;}// first try to use id as it should be the most\n// accurate\nif(a.id&&b.id&&a.id===b.id){return true;}// next try to use reslovedUri as it should be the\n// second most accurate.\nif(a.resolvedUri&&b.resolvedUri&&a.resolvedUri===b.resolvedUri){return true;}// finally try to use uri as it should be accurate\n// but might miss a few cases for relative uris\nif(a.uri&&b.uri&&a.uri===b.uri){return true;}return false;};const someAudioVariant=function(main,callback){const AUDIO=main&&main.mediaGroups&&main.mediaGroups.AUDIO||{};let found=false;for(const groupName in AUDIO){for(const label in AUDIO[groupName]){found=callback(AUDIO[groupName][label]);if(found){break;}}if(found){break;}}return!!found;};const isAudioOnly=main=>{// we are audio only if we have no main playlists but do\n// have media group playlists.\nif(!main||!main.playlists||!main.playlists.length){// without audio variants or playlists this\n// is not an audio only main.\nconst found=someAudioVariant(main,variant=>variant.playlists&&variant.playlists.length||variant.uri);return found;}// if every playlist has only an audio codec it is audio only\nfor(let i=0;i<main.playlists.length;i++){const playlist=main.playlists[i];const CODECS=playlist.attributes&&playlist.attributes.CODECS;// all codecs are audio, this is an audio playlist.\nif(CODECS&&CODECS.split(',').every(c=>isAudioCodec(c))){continue;}// playlist is in an audio group it is audio only\nconst found=someAudioVariant(main,variant=>playlistMatch(playlist,variant));if(found){continue;}// if we make it here this playlist isn't audio and we\n// are not audio only\nreturn false;}// if we make it past every playlist without returning, then\n// this is an audio only playlist.\nreturn true;};// exports\nvar Playlist={liveEdgeDelay,duration,seekable,getMediaInfoForTime,isEnabled,isDisabled,isExcluded,isIncompatible,playlistEnd,isAes,hasAttribute,estimateSegmentRequestTime,isLowestEnabledRendition,isAudioOnly,playlistMatch,segmentDurationWithParts};const{log}=videojs;const createPlaylistID=(index,uri)=>{return`${index}-${uri}`;};/**\n * Parses a given m3u8 playlist\n *\n * @param {Function} [onwarn]\n *        a function to call when the parser triggers a warning event.\n * @param {Function} [oninfo]\n *        a function to call when the parser triggers an info event.\n * @param {string} manifestString\n *        The downloaded manifest string\n * @param {Object[]} [customTagParsers]\n *        An array of custom tag parsers for the m3u8-parser instance\n * @param {Object[]} [customTagMappers]\n *        An array of custom tag mappers for the m3u8-parser instance\n * @param {boolean} [llhls]\n *        Whether to keep ll-hls features in the manifest after parsing.\n * @return {Object}\n *         The manifest object\n */const parseManifest=({onwarn,oninfo,manifestString,customTagParsers=[],customTagMappers=[],llhls})=>{const parser=new Parser();if(onwarn){parser.on('warn',onwarn);}if(oninfo){parser.on('info',oninfo);}customTagParsers.forEach(customParser=>parser.addParser(customParser));customTagMappers.forEach(mapper=>parser.addTagMapper(mapper));parser.push(manifestString);parser.end();const manifest=parser.manifest;// remove llhls features from the parsed manifest\n// if we don't want llhls support.\nif(!llhls){['preloadSegment','skip','serverControl','renditionReports','partInf','partTargetDuration'].forEach(function(k){if(manifest.hasOwnProperty(k)){delete manifest[k];}});if(manifest.segments){manifest.segments.forEach(function(segment){['parts','preloadHints'].forEach(function(k){if(segment.hasOwnProperty(k)){delete segment[k];}});});}}if(!manifest.targetDuration){let targetDuration=10;if(manifest.segments&&manifest.segments.length){targetDuration=manifest.segments.reduce((acc,s)=>Math.max(acc,s.duration),0);}if(onwarn){onwarn(`manifest has no targetDuration defaulting to ${targetDuration}`);}manifest.targetDuration=targetDuration;}const parts=getLastParts(manifest);if(parts.length&&!manifest.partTargetDuration){const partTargetDuration=parts.reduce((acc,p)=>Math.max(acc,p.duration),0);if(onwarn){onwarn(`manifest has no partTargetDuration defaulting to ${partTargetDuration}`);log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');}manifest.partTargetDuration=partTargetDuration;}return manifest;};/**\n * Loops through all supported media groups in main and calls the provided\n * callback for each group\n *\n * @param {Object} main\n *        The parsed main manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */const forEachMediaGroup=(main,callback)=>{if(!main.mediaGroups){return;}['AUDIO','SUBTITLES'].forEach(mediaType=>{if(!main.mediaGroups[mediaType]){return;}for(const groupKey in main.mediaGroups[mediaType]){for(const labelKey in main.mediaGroups[mediaType][groupKey]){const mediaProperties=main.mediaGroups[mediaType][groupKey][labelKey];callback(mediaProperties,mediaType,groupKey,labelKey);}}});};/**\n * Adds properties and attributes to the playlist to keep consistent functionality for\n * playlists throughout VHS.\n *\n * @param {Object} config\n *        Arguments object\n * @param {Object} config.playlist\n *        The media playlist\n * @param {string} [config.uri]\n *        The uri to the media playlist (if media playlist is not from within a main\n *        playlist)\n * @param {string} id\n *        ID to use for the playlist\n */const setupMediaPlaylist=({playlist,uri,id})=>{playlist.id=id;playlist.playlistErrors_=0;if(uri){// For media playlists, m3u8-parser does not have access to a URI, as HLS media\n// playlists do not contain their own source URI, but one is needed for consistency in\n// VHS.\nplaylist.uri=uri;}// For HLS main playlists, even though certain attributes MUST be defined, the\n// stream may still be played without them.\n// For HLS media playlists, m3u8-parser does not attach an attributes object to the\n// manifest.\n//\n// To avoid undefined reference errors through the project, and make the code easier\n// to write/read, add an empty attributes object for these cases.\nplaylist.attributes=playlist.attributes||{};};/**\n * Adds ID, resolvedUri, and attributes properties to each playlist of the main, where\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n * playlist references to the playlists array.\n *\n * @param {Object} main\n *        The main playlist\n */const setupMediaPlaylists=main=>{let i=main.playlists.length;while(i--){const playlist=main.playlists[i];setupMediaPlaylist({playlist,id:createPlaylistID(i,playlist.uri)});playlist.resolvedUri=resolveUrl(main.uri,playlist.uri);main.playlists[playlist.id]=playlist;// URI reference added for backwards compatibility\nmain.playlists[playlist.uri]=playlist;// Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n// the stream can be played without it. Although an attributes property may have been\n// added to the playlist to prevent undefined references, issue a warning to fix the\n// manifest.\nif(!playlist.attributes.BANDWIDTH){log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');}}};/**\n * Adds resolvedUri properties to each media group.\n *\n * @param {Object} main\n *        The main playlist\n */const resolveMediaGroupUris=main=>{forEachMediaGroup(main,properties=>{if(properties.uri){properties.resolvedUri=resolveUrl(main.uri,properties.uri);}});};/**\n * Creates a main playlist wrapper to insert a sole media playlist into.\n *\n * @param {Object} media\n *        Media playlist\n * @param {string} uri\n *        The media URI\n *\n * @return {Object}\n *         main playlist\n */const mainForMedia=(media,uri)=>{const id=createPlaylistID(0,uri);const main={mediaGroups:{'AUDIO':{},'VIDEO':{},'CLOSED-CAPTIONS':{},'SUBTITLES':{}},uri:window$1.location.href,resolvedUri:window$1.location.href,playlists:[{uri,id,resolvedUri:uri,// m3u8-parser does not attach an attributes property to media playlists so make\n// sure that the property is attached to avoid undefined reference errors\nattributes:{}}]};// set up ID reference\nmain.playlists[id]=main.playlists[0];// URI reference added for backwards compatibility\nmain.playlists[uri]=main.playlists[0];return main;};/**\n * Does an in-place update of the main manifest to add updated playlist URI references\n * as well as other properties needed by VHS that aren't included by the parser.\n *\n * @param {Object} main\n *        main manifest object\n * @param {string} uri\n *        The source URI\n */const addPropertiesToMain=(main,uri)=>{main.uri=uri;for(let i=0;i<main.playlists.length;i++){if(!main.playlists[i].uri){// Set up phony URIs for the playlists since playlists are referenced by their URIs\n// throughout VHS, but some formats (e.g., DASH) don't have external URIs\n// TODO: consider adding dummy URIs in mpd-parser\nconst phonyUri=`placeholder-uri-${i}`;main.playlists[i].uri=phonyUri;}}const audioOnlyMain=isAudioOnly(main);forEachMediaGroup(main,(properties,mediaType,groupKey,labelKey)=>{const groupId=`placeholder-uri-${mediaType}-${groupKey}-${labelKey}`;// add a playlist array under properties\nif(!properties.playlists||!properties.playlists.length){// If the manifest is audio only and this media group does not have a uri, check\n// if the media group is located in the main list of playlists. If it is, don't add\n// placeholder properties as it shouldn't be considered an alternate audio track.\nif(audioOnlyMain&&mediaType==='AUDIO'&&!properties.uri){for(let i=0;i<main.playlists.length;i++){const p=main.playlists[i];if(p.attributes&&p.attributes.AUDIO&&p.attributes.AUDIO===groupKey){return;}}}properties.playlists=[_extends({},properties)];}properties.playlists.forEach(function(p,i){const id=createPlaylistID(i,groupId);if(p.uri){p.resolvedUri=p.resolvedUri||resolveUrl(main.uri,p.uri);}else{// DEPRECATED, this has been added to prevent a breaking change.\n// previously we only ever had a single media group playlist, so\n// we mark the first playlist uri without prepending the index as we used to\n// ideally we would do all of the playlists the same way.\np.uri=i===0?groupId:id;// don't resolve a placeholder uri to an absolute url, just use\n// the placeholder again\np.resolvedUri=p.uri;}p.id=p.id||id;// add an empty attributes object, all playlists are\n// expected to have this.\np.attributes=p.attributes||{};// setup ID and URI references (URI for backwards compatibility)\nmain.playlists[p.id]=p;main.playlists[p.uri]=p;});});setupMediaPlaylists(main);resolveMediaGroupUris(main);};/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */const{EventTarget:EventTarget$1}=videojs;const addLLHLSQueryDirectives=(uri,media)=>{if(media.endList||!media.serverControl){return uri;}const parameters={};if(media.serverControl.canBlockReload){const{preloadSegment}=media;// next msn is a zero based value, length is not.\nlet nextMSN=media.mediaSequence+media.segments.length;// If preload segment has parts then it is likely\n// that we are going to request a part of that preload segment.\n// the logic below is used to determine that.\nif(preloadSegment){const parts=preloadSegment.parts||[];// _HLS_part is a zero based index\nconst nextPart=getKnownPartCount(media)-1;// if nextPart is > -1 and not equal to just the\n// length of parts, then we know we had part preload hints\n// and we need to add the _HLS_part= query\nif(nextPart>-1&&nextPart!==parts.length-1){// add existing parts to our preload hints\n// eslint-disable-next-line\nparameters._HLS_part=nextPart;}// this if statement makes sure that we request the msn\n// of the preload segment if:\n// 1. the preload segment had parts (and was not yet a full segment)\n//    but was added to our segments array\n// 2. the preload segment had preload hints for parts that are not in\n//    the manifest yet.\n// in all other cases we want the segment after the preload segment\n// which will be given by using media.segments.length because it is 1 based\n// rather than 0 based.\nif(nextPart>-1||parts.length){nextMSN--;}}// add _HLS_msn= in front of any _HLS_part query\n// eslint-disable-next-line\nparameters._HLS_msn=nextMSN;}if(media.serverControl&&media.serverControl.canSkipUntil){// add _HLS_skip= infront of all other queries.\n// eslint-disable-next-line\nparameters._HLS_skip=media.serverControl.canSkipDateranges?'v2':'YES';}if(Object.keys(parameters).length){const parsedUri=new window$1.URL(uri);['_HLS_skip','_HLS_msn','_HLS_part'].forEach(function(name){if(!parameters.hasOwnProperty(name)){return;}parsedUri.searchParams.set(name,parameters[name]);});uri=parsedUri.toString();}return uri;};/**\n * Returns a new segment object with properties and\n * the parts array merged.\n *\n * @param {Object} a the old segment\n * @param {Object} b the new segment\n *\n * @return {Object} the merged segment\n */const updateSegment=(a,b)=>{if(!a){return b;}const result=merge(a,b);// if only the old segment has preload hints\n// and the new one does not, remove preload hints.\nif(a.preloadHints&&!b.preloadHints){delete result.preloadHints;}// if only the old segment has parts\n// then the parts are no longer valid\nif(a.parts&&!b.parts){delete result.parts;// if both segments have parts\n// copy part propeties from the old segment\n// to the new one.\n}else if(a.parts&&b.parts){for(let i=0;i<b.parts.length;i++){if(a.parts&&a.parts[i]){result.parts[i]=merge(a.parts[i],b.parts[i]);}}}// set skipped to false for segments that have\n// have had information merged from the old segment.\nif(!a.skipped&&b.skipped){result.skipped=false;}// set preload to false for segments that have\n// had information added in the new segment.\nif(a.preload&&!b.preload){result.preload=false;}return result;};/**\n * Returns a new array of segments that is the result of merging\n * properties from an older list of segments onto an updated\n * list. No properties on the updated playlist will be ovewritten.\n *\n * @param {Array} original the outdated list of segments\n * @param {Array} update the updated list of segments\n * @param {number=} offset the index of the first update\n * segment in the original segment list. For non-live playlists,\n * this should always be zero and does not need to be\n * specified. For live playlists, it should be the difference\n * between the media sequence numbers in the original and updated\n * playlists.\n * @return {Array} a list of merged segment objects\n */const updateSegments=(original,update,offset)=>{const oldSegments=original.slice();const newSegments=update.slice();offset=offset||0;const result=[];let currentMap;for(let newIndex=0;newIndex<newSegments.length;newIndex++){const oldSegment=oldSegments[newIndex+offset];const newSegment=newSegments[newIndex];if(oldSegment){currentMap=oldSegment.map||currentMap;result.push(updateSegment(oldSegment,newSegment));}else{// carry over map to new segment if it is missing\nif(currentMap&&!newSegment.map){newSegment.map=currentMap;}result.push(newSegment);}}return result;};const resolveSegmentUris=(segment,baseUri)=>{// preloadSegment will not have a uri at all\n// as the segment isn't actually in the manifest yet, only parts\nif(!segment.resolvedUri&&segment.uri){segment.resolvedUri=resolveUrl(baseUri,segment.uri);}if(segment.key&&!segment.key.resolvedUri){segment.key.resolvedUri=resolveUrl(baseUri,segment.key.uri);}if(segment.map&&!segment.map.resolvedUri){segment.map.resolvedUri=resolveUrl(baseUri,segment.map.uri);}if(segment.map&&segment.map.key&&!segment.map.key.resolvedUri){segment.map.key.resolvedUri=resolveUrl(baseUri,segment.map.key.uri);}if(segment.parts&&segment.parts.length){segment.parts.forEach(p=>{if(p.resolvedUri){return;}p.resolvedUri=resolveUrl(baseUri,p.uri);});}if(segment.preloadHints&&segment.preloadHints.length){segment.preloadHints.forEach(p=>{if(p.resolvedUri){return;}p.resolvedUri=resolveUrl(baseUri,p.uri);});}};const getAllSegments=function(media){const segments=media.segments||[];const preloadSegment=media.preloadSegment;// a preloadSegment with only preloadHints is not currently\n// a usable segment, only include a preloadSegment that has\n// parts.\nif(preloadSegment&&preloadSegment.parts&&preloadSegment.parts.length){// if preloadHints has a MAP that means that the\n// init segment is going to change. We cannot use any of the parts\n// from this preload segment.\nif(preloadSegment.preloadHints){for(let i=0;i<preloadSegment.preloadHints.length;i++){if(preloadSegment.preloadHints[i].type==='MAP'){return segments;}}}// set the duration for our preload segment to target duration.\npreloadSegment.duration=media.targetDuration;preloadSegment.preload=true;segments.push(preloadSegment);}return segments;};// consider the playlist unchanged if the playlist object is the same or\n// the number of segments is equal, the media sequence number is unchanged,\n// and this playlist hasn't become the end of the playlist\nconst isPlaylistUnchanged=(a,b)=>a===b||a.segments&&b.segments&&a.segments.length===b.segments.length&&a.endList===b.endList&&a.mediaSequence===b.mediaSequence&&a.preloadSegment===b.preloadSegment;/**\n  * Returns a new main playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original main playlist, null is returned.\n  *\n  * @param {Object} main a parsed main M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * main playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */const updateMain$1=(main,newMedia,unchangedCheck=isPlaylistUnchanged)=>{const result=merge(main,{});const oldMedia=result.playlists[newMedia.id];if(!oldMedia){return null;}if(unchangedCheck(oldMedia,newMedia)){return null;}newMedia.segments=getAllSegments(newMedia);const mergedPlaylist=merge(oldMedia,newMedia);// always use the new media's preload segment\nif(mergedPlaylist.preloadSegment&&!newMedia.preloadSegment){delete mergedPlaylist.preloadSegment;}// if the update could overlap existing segment information, merge the two segment lists\nif(oldMedia.segments){if(newMedia.skip){newMedia.segments=newMedia.segments||[];// add back in objects for skipped segments, so that we merge\n// old properties into the new segments\nfor(let i=0;i<newMedia.skip.skippedSegments;i++){newMedia.segments.unshift({skipped:true});}}mergedPlaylist.segments=updateSegments(oldMedia.segments,newMedia.segments,newMedia.mediaSequence-oldMedia.mediaSequence);}// resolve any segment URIs to prevent us from having to do it later\nmergedPlaylist.segments.forEach(segment=>{resolveSegmentUris(segment,mergedPlaylist.resolvedUri);});// TODO Right now in the playlists array there are two references to each playlist, one\n// that is referenced by index, and one by URI. The index reference may no longer be\n// necessary.\nfor(let i=0;i<result.playlists.length;i++){if(result.playlists[i].id===newMedia.id){result.playlists[i]=mergedPlaylist;}}result.playlists[newMedia.id]=mergedPlaylist;// URI reference added for backwards compatibility\nresult.playlists[newMedia.uri]=mergedPlaylist;// update media group playlist references.\nforEachMediaGroup(main,(properties,mediaType,groupKey,labelKey)=>{if(!properties.playlists){return;}for(let i=0;i<properties.playlists.length;i++){if(newMedia.id===properties.playlists[i].id){properties.playlists[i]=mergedPlaylist;}}});return result;};/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {number}\n *         The time in ms to wait before refreshing the live playlist\n */const refreshDelay=(media,update)=>{const segments=media.segments||[];const lastSegment=segments[segments.length-1];const lastPart=lastSegment&&lastSegment.parts&&lastSegment.parts[lastSegment.parts.length-1];const lastDuration=lastPart&&lastPart.duration||lastSegment&&lastSegment.duration;if(update&&lastDuration){return lastDuration*1000;}// if the playlist is unchanged since the last reload or last segment duration\n// cannot be determined, try again after half the target duration\nreturn(media.partTargetDuration||media.targetDuration||10)*500;};/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {string|Object} src url or object of manifest\n * @param {boolean} withCredentials the withCredentials xhr option\n * @class\n */class PlaylistLoader extends EventTarget$1{constructor(src,vhs,options={}){super();if(!src){throw new Error('A non-empty playlist URL or object is required');}this.logger_=logger('PlaylistLoader');const{withCredentials=false}=options;this.src=src;this.vhs_=vhs;this.withCredentials=withCredentials;const vhsOptions=vhs.options_;this.customTagParsers=vhsOptions&&vhsOptions.customTagParsers||[];this.customTagMappers=vhsOptions&&vhsOptions.customTagMappers||[];this.llhls=vhsOptions&&vhsOptions.llhls;// initialize the loader state\nthis.state='HAVE_NOTHING';// live playlist staleness timeout\nthis.handleMediaupdatetimeout_=this.handleMediaupdatetimeout_.bind(this);this.on('mediaupdatetimeout',this.handleMediaupdatetimeout_);}handleMediaupdatetimeout_(){if(this.state!=='HAVE_METADATA'){// only refresh the media playlist if no other activity is going on\nreturn;}const media=this.media();let uri=resolveUrl(this.main.uri,media.uri);if(this.llhls){uri=addLLHLSQueryDirectives(uri,media);}this.state='HAVE_CURRENT_METADATA';this.request=this.vhs_.xhr({uri,withCredentials:this.withCredentials},(error,req)=>{// disposed\nif(!this.request){return;}if(error){return this.playlistRequestError(this.request,this.media(),'HAVE_METADATA');}this.haveMetadata({playlistString:this.request.responseText,url:this.media().uri,id:this.media().id});});}playlistRequestError(xhr,playlist,startingState){const{uri,id}=playlist;// any in-flight request is now finished\nthis.request=null;if(startingState){this.state=startingState;}this.error={playlist:this.main.playlists[id],status:xhr.status,message:`HLS playlist request error at URL: ${uri}.`,responseText:xhr.responseText,code:xhr.status>=500?4:2};this.trigger('error');}parseManifest_({url,manifestString}){return parseManifest({onwarn:({message})=>this.logger_(`m3u8-parser warn for ${url}: ${message}`),oninfo:({message})=>this.logger_(`m3u8-parser info for ${url}: ${message}`),manifestString,customTagParsers:this.customTagParsers,customTagMappers:this.customTagMappers,llhls:this.llhls});}/**\n   * Update the playlist loader's state in response to a new or updated playlist.\n   *\n   * @param {string} [playlistString]\n   *        Playlist string (if playlistObject is not provided)\n   * @param {Object} [playlistObject]\n   *        Playlist object (if playlistString is not provided)\n   * @param {string} url\n   *        URL of playlist\n   * @param {string} id\n   *        ID to use for playlist\n   */haveMetadata({playlistString,playlistObject,url,id}){// any in-flight request is now finished\nthis.request=null;this.state='HAVE_METADATA';const playlist=playlistObject||this.parseManifest_({url,manifestString:playlistString});playlist.lastRequest=Date.now();setupMediaPlaylist({playlist,uri:url,id});// merge this playlist into the main manifest\nconst update=updateMain$1(this.main,playlist);this.targetDuration=playlist.partTargetDuration||playlist.targetDuration;this.pendingMedia_=null;if(update){this.main=update;this.media_=this.main.playlists[id];}else{this.trigger('playlistunchanged');}this.updateMediaUpdateTimeout_(refreshDelay(this.media(),!!update));this.trigger('loadedplaylist');}/**\n    * Abort any outstanding work and clean up.\n    */dispose(){this.trigger('dispose');this.stopRequest();window$1.clearTimeout(this.mediaUpdateTimeout);window$1.clearTimeout(this.finalRenditionTimeout);this.off();}stopRequest(){if(this.request){const oldRequest=this.request;this.request=null;oldRequest.onreadystatechange=null;oldRequest.abort();}}/**\n    * When called without any arguments, returns the currently\n    * active media playlist. When called with a single argument,\n    * triggers the playlist loader to asynchronously switch to the\n    * specified media playlist. Calling this method while the\n    * loader is in the HAVE_NOTHING causes an error to be emitted\n    * but otherwise has no effect.\n    *\n    * @param {Object=} playlist the parsed media playlist\n    * object to switch to\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n    *\n    * @return {Playlist} the current loaded media\n    */media(playlist,shouldDelay){// getter\nif(!playlist){return this.media_;}// setter\nif(this.state==='HAVE_NOTHING'){throw new Error('Cannot switch media playlist from '+this.state);}// find the playlist object if the target playlist has been\n// specified by URI\nif(typeof playlist==='string'){if(!this.main.playlists[playlist]){throw new Error('Unknown playlist URI: '+playlist);}playlist=this.main.playlists[playlist];}window$1.clearTimeout(this.finalRenditionTimeout);if(shouldDelay){const delay=(playlist.partTargetDuration||playlist.targetDuration)/2*1000||5*1000;this.finalRenditionTimeout=window$1.setTimeout(this.media.bind(this,playlist,false),delay);return;}const startingState=this.state;const mediaChange=!this.media_||playlist.id!==this.media_.id;const mainPlaylistRef=this.main.playlists[playlist.id];// switch to fully loaded playlists immediately\nif(mainPlaylistRef&&mainPlaylistRef.endList||// handle the case of a playlist object (e.g., if using vhs-json with a resolved\n// media playlist or, for the case of demuxed audio, a resolved audio media group)\nplaylist.endList&&playlist.segments.length){// abort outstanding playlist requests\nif(this.request){this.request.onreadystatechange=null;this.request.abort();this.request=null;}this.state='HAVE_METADATA';this.media_=playlist;// trigger media change if the active media has been updated\nif(mediaChange){this.trigger('mediachanging');if(startingState==='HAVE_MAIN_MANIFEST'){// The initial playlist was a main manifest, and the first media selected was\n// also provided (in the form of a resolved playlist object) as part of the\n// source object (rather than just a URL). Therefore, since the media playlist\n// doesn't need to be requested, loadedmetadata won't trigger as part of the\n// normal flow, and needs an explicit trigger here.\nthis.trigger('loadedmetadata');}else{this.trigger('mediachange');}}return;}// We update/set the timeout here so that live playlists\n// that are not a media change will \"start\" the loader as expected.\n// We expect that this function will start the media update timeout\n// cycle again. This also prevents a playlist switch failure from\n// causing us to stall during live.\nthis.updateMediaUpdateTimeout_(refreshDelay(playlist,true));// switching to the active playlist is a no-op\nif(!mediaChange){return;}this.state='SWITCHING_MEDIA';// there is already an outstanding playlist request\nif(this.request){if(playlist.resolvedUri===this.request.url){// requesting to switch to the same playlist multiple times\n// has no effect after the first\nreturn;}this.request.onreadystatechange=null;this.request.abort();this.request=null;}// request the new playlist\nif(this.media_){this.trigger('mediachanging');}this.pendingMedia_=playlist;this.request=this.vhs_.xhr({uri:playlist.resolvedUri,withCredentials:this.withCredentials},(error,req)=>{// disposed\nif(!this.request){return;}playlist.lastRequest=Date.now();playlist.resolvedUri=resolveManifestRedirect(playlist.resolvedUri,req);if(error){return this.playlistRequestError(this.request,playlist,startingState);}this.haveMetadata({playlistString:req.responseText,url:playlist.uri,id:playlist.id});// fire loadedmetadata the first time a media playlist is loaded\nif(startingState==='HAVE_MAIN_MANIFEST'){this.trigger('loadedmetadata');}else{this.trigger('mediachange');}});}/**\n   * pause loading of the playlist\n   */pause(){if(this.mediaUpdateTimeout){window$1.clearTimeout(this.mediaUpdateTimeout);this.mediaUpdateTimeout=null;}this.stopRequest();if(this.state==='HAVE_NOTHING'){// If we pause the loader before any data has been retrieved, its as if we never\n// started, so reset to an unstarted state.\nthis.started=false;}// Need to restore state now that no activity is happening\nif(this.state==='SWITCHING_MEDIA'){// if the loader was in the process of switching media, it should either return to\n// HAVE_MAIN_MANIFEST or HAVE_METADATA depending on if the loader has loaded a media\n// playlist yet. This is determined by the existence of loader.media_\nif(this.media_){this.state='HAVE_METADATA';}else{this.state='HAVE_MAIN_MANIFEST';}}else if(this.state==='HAVE_CURRENT_METADATA'){this.state='HAVE_METADATA';}}/**\n   * start loading of the playlist\n   */load(shouldDelay){if(this.mediaUpdateTimeout){window$1.clearTimeout(this.mediaUpdateTimeout);this.mediaUpdateTimeout=null;}const media=this.media();if(shouldDelay){const delay=media?(media.partTargetDuration||media.targetDuration)/2*1000:5*1000;this.mediaUpdateTimeout=window$1.setTimeout(()=>{this.mediaUpdateTimeout=null;this.load();},delay);return;}if(!this.started){this.start();return;}if(media&&!media.endList){this.trigger('mediaupdatetimeout');}else{this.trigger('loadedplaylist');}}updateMediaUpdateTimeout_(delay){if(this.mediaUpdateTimeout){window$1.clearTimeout(this.mediaUpdateTimeout);this.mediaUpdateTimeout=null;}// we only have use mediaupdatetimeout for live playlists.\nif(!this.media()||this.media().endList){return;}this.mediaUpdateTimeout=window$1.setTimeout(()=>{this.mediaUpdateTimeout=null;this.trigger('mediaupdatetimeout');this.updateMediaUpdateTimeout_(delay);},delay);}/**\n   * start loading of the playlist\n   */start(){this.started=true;if(typeof this.src==='object'){// in the case of an entirely constructed manifest object (meaning there's no actual\n// manifest on a server), default the uri to the page's href\nif(!this.src.uri){this.src.uri=window$1.location.href;}// resolvedUri is added on internally after the initial request. Since there's no\n// request for pre-resolved manifests, add on resolvedUri here.\nthis.src.resolvedUri=this.src.uri;// Since a manifest object was passed in as the source (instead of a URL), the first\n// request can be skipped (since the top level of the manifest, at a minimum, is\n// already available as a parsed manifest object). However, if the manifest object\n// represents a main playlist, some media playlists may need to be resolved before\n// the starting segment list is available. Therefore, go directly to setup of the\n// initial playlist, and let the normal flow continue from there.\n//\n// Note that the call to setup is asynchronous, as other sections of VHS may assume\n// that the first request is asynchronous.\nsetTimeout(()=>{this.setupInitialPlaylist(this.src);},0);return;}// request the specified URL\nthis.request=this.vhs_.xhr({uri:this.src,withCredentials:this.withCredentials},(error,req)=>{// disposed\nif(!this.request){return;}// clear the loader's request reference\nthis.request=null;if(error){this.error={status:req.status,message:`HLS playlist request error at URL: ${this.src}.`,responseText:req.responseText,// MEDIA_ERR_NETWORK\ncode:2};if(this.state==='HAVE_NOTHING'){this.started=false;}return this.trigger('error');}this.src=resolveManifestRedirect(this.src,req);const manifest=this.parseManifest_({manifestString:req.responseText,url:this.src});this.setupInitialPlaylist(manifest);});}srcUri(){return typeof this.src==='string'?this.src:this.src.uri;}/**\n   * Given a manifest object that's either a main or media playlist, trigger the proper\n   * events and set the state of the playlist loader.\n   *\n   * If the manifest object represents a main playlist, `loadedplaylist` will be\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\n   * will default to the first one in the playlists array.\n   *\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n   *\n   * In the case of a media playlist, a main playlist object wrapper with one playlist\n   * will be created so that all logic can handle playlists in the same fashion (as an\n   * assumed manifest object schema).\n   *\n   * @param {Object} manifest\n   *        The parsed manifest object\n   */setupInitialPlaylist(manifest){this.state='HAVE_MAIN_MANIFEST';if(manifest.playlists){this.main=manifest;addPropertiesToMain(this.main,this.srcUri());// If the initial main playlist has playlists wtih segments already resolved,\n// then resolve URIs in advance, as they are usually done after a playlist request,\n// which may not happen if the playlist is resolved.\nmanifest.playlists.forEach(playlist=>{playlist.segments=getAllSegments(playlist);playlist.segments.forEach(segment=>{resolveSegmentUris(segment,playlist.resolvedUri);});});this.trigger('loadedplaylist');if(!this.request){// no media playlist was specifically selected so start\n// from the first listed one\nthis.media(this.main.playlists[0]);}return;}// In order to support media playlists passed in as vhs-json, the case where the uri\n// is not provided as part of the manifest should be considered, and an appropriate\n// default used.\nconst uri=this.srcUri()||window$1.location.href;this.main=mainForMedia(manifest,uri);this.haveMetadata({playlistObject:manifest,url:uri,id:this.main.playlists[0].id});this.trigger('loadedmetadata');}}/**\n * @file xhr.js\n */const{xhr:videojsXHR}=videojs;const callbackWrapper=function(request,error,response,callback){const reqResponse=request.responseType==='arraybuffer'?request.response:request.responseText;if(!error&&reqResponse){request.responseTime=Date.now();request.roundTripTime=request.responseTime-request.requestTime;request.bytesReceived=reqResponse.byteLength||reqResponse.length;if(!request.bandwidth){request.bandwidth=Math.floor(request.bytesReceived/request.roundTripTime*8*1000);}}if(response.headers){request.responseHeaders=response.headers;}// videojs.xhr now uses a specific code on the error\n// object to signal that a request has timed out instead\n// of setting a boolean on the request object\nif(error&&error.code==='ETIMEDOUT'){request.timedout=true;}// videojs.xhr no longer considers status codes outside of 200 and 0\n// (for file uris) to be errors, but the old XHR did, so emulate that\n// behavior. Status 206 may be used in response to byterange requests.\nif(!error&&!request.aborted&&response.statusCode!==200&&response.statusCode!==206&&response.statusCode!==0){error=new Error('XHR Failed with a response of: '+(request&&(reqResponse||request.responseText)));}callback(error,request);};const xhrFactory=function(){const xhr=function XhrFunction(options,callback){// Add a default timeout\noptions=merge({timeout:45e3},options);// Allow an optional user-specified function to modify the option\n// object before we construct the xhr request\nconst beforeRequest=XhrFunction.beforeRequest||videojs.Vhs.xhr.beforeRequest;if(beforeRequest&&typeof beforeRequest==='function'){const newOptions=beforeRequest(options);if(newOptions){options=newOptions;}}// Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n// TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\nconst xhrMethod=videojs.Vhs.xhr.original===true?videojsXHR:videojs.Vhs.xhr;const request=xhrMethod(options,function(error,response){return callbackWrapper(request,error,response,callback);});const originalAbort=request.abort;request.abort=function(){request.aborted=true;return originalAbort.apply(request,arguments);};request.uri=options.uri;request.requestTime=Date.now();return request;};xhr.original=true;return xhr;};/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */const byterangeStr=function(byterange){// `byterangeEnd` is one less than `offset + length` because the HTTP range\n// header uses inclusive ranges\nlet byterangeEnd;const byterangeStart=byterange.offset;if(typeof byterange.offset==='bigint'||typeof byterange.length==='bigint'){byterangeEnd=window$1.BigInt(byterange.offset)+window$1.BigInt(byterange.length)-window$1.BigInt(1);}else{byterangeEnd=byterange.offset+byterange.length-1;}return'bytes='+byterangeStart+'-'+byterangeEnd;};/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */const segmentXhrHeaders=function(segment){const headers={};if(segment.byterange){headers.Range=byterangeStr(segment.byterange);}return headers;};/**\n * @file bin-utils.js\n */ /**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {number} i the iterator on the range to convert\n * @return {string} the range in string format\n */const textRange=function(range,i){return range.start(i)+'-'+range.end(i);};/**\n * format a number as hex string\n *\n * @param {number} e The number\n * @param {number} i the iterator\n * @return {string} the hex formatted number as a string\n */const formatHexString=function(e,i){const value=e.toString(16);return'00'.substring(0,2-value.length)+value+(i%2?' ':'');};const formatAsciiString=function(e){if(e>=0x20&&e<0x7e){return String.fromCharCode(e);}return'.';};/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */const createTransferableMessage=function(message){const transferable={};Object.keys(message).forEach(key=>{const value=message[key];if(isArrayBufferView(value)){transferable[key]={bytes:value.buffer,byteOffset:value.byteOffset,byteLength:value.byteLength};}else{transferable[key]=value;}});return transferable;};/**\n * Returns a unique string identifier for a media initialization\n * segment.\n *\n * @param {Object} initSegment\n *        the init segment object.\n *\n * @return {string} the generated init segment id\n */const initSegmentId=function(initSegment){const byterange=initSegment.byterange||{length:Infinity,offset:0};return[byterange.length,byterange.offset,initSegment.resolvedUri].join(',');};/**\n * Returns a unique string identifier for a media segment key.\n *\n * @param {Object} key the encryption key\n * @return {string} the unique id for the media segment key.\n */const segmentKeyId=function(key){return key.resolvedUri;};/**\n * utils to help dump binary data to the console\n *\n * @param {Array|TypedArray} data\n *        data to dump to a string\n *\n * @return {string} the data as a hex string.\n */const hexDump=data=>{const bytes=Array.prototype.slice.call(data);const step=16;let result='';let hex;let ascii;for(let j=0;j<bytes.length/step;j++){hex=bytes.slice(j*step,j*step+step).map(formatHexString).join('');ascii=bytes.slice(j*step,j*step+step).map(formatAsciiString).join('');result+=hex+' '+ascii+'\\n';}return result;};const tagDump=({bytes})=>hexDump(bytes);const textRanges=ranges=>{let result='';let i;for(i=0;i<ranges.length;i++){result+=textRange(ranges,i)+' ';}return result;};var utils=/*#__PURE__*/Object.freeze({__proto__:null,createTransferableMessage:createTransferableMessage,initSegmentId:initSegmentId,segmentKeyId:segmentKeyId,hexDump:hexDump,tagDump:tagDump,textRanges:textRanges});// TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// 25% was arbitrarily chosen, and may need to be refined over time.\nconst SEGMENT_END_FUDGE_PERCENT=0.25;/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */const playerTimeToProgramTime=(playerTime,segment)=>{if(!segment.dateTimeObject){// Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n// be used to map the start of a segment with a real world time).\nreturn null;}const transmuxerPrependedSeconds=segment.videoTimingInfo.transmuxerPrependedSeconds;const transmuxedStart=segment.videoTimingInfo.transmuxedPresentationStart;// get the start of the content from before old content is prepended\nconst startOfSegment=transmuxedStart+transmuxerPrependedSeconds;const offsetFromSegmentStart=playerTime-startOfSegment;return new Date(segment.dateTimeObject.getTime()+offsetFromSegmentStart*1000);};const originalSegmentVideoDuration=videoTimingInfo=>{return videoTimingInfo.transmuxedPresentationEnd-videoTimingInfo.transmuxedPresentationStart-videoTimingInfo.transmuxerPrependedSeconds;};/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {string} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */const findSegmentForProgramTime=(programTime,playlist)=>{// Assumptions:\n//  - verifyProgramDateTimeTags has already been run\n//  - live streams have been started\nlet dateTimeObject;try{dateTimeObject=new Date(programTime);}catch(e){return null;}if(!playlist||!playlist.segments||playlist.segments.length===0){return null;}let segment=playlist.segments[0];if(dateTimeObject<segment.dateTimeObject){// Requested time is before stream start.\nreturn null;}for(let i=0;i<playlist.segments.length-1;i++){segment=playlist.segments[i];const nextSegmentStart=playlist.segments[i+1].dateTimeObject;if(dateTimeObject<nextSegmentStart){break;}}const lastSegment=playlist.segments[playlist.segments.length-1];const lastSegmentStart=lastSegment.dateTimeObject;const lastSegmentDuration=lastSegment.videoTimingInfo?originalSegmentVideoDuration(lastSegment.videoTimingInfo):lastSegment.duration+lastSegment.duration*SEGMENT_END_FUDGE_PERCENT;const lastSegmentEnd=new Date(lastSegmentStart.getTime()+lastSegmentDuration*1000);if(dateTimeObject>lastSegmentEnd){// Beyond the end of the stream, or our best guess of the end of the stream.\nreturn null;}if(dateTimeObject>lastSegmentStart){segment=lastSegment;}return{segment,estimatedStart:segment.videoTimingInfo?segment.videoTimingInfo.transmuxedPresentationStart:Playlist.duration(playlist,playlist.mediaSequence+playlist.segments.indexOf(segment)),// Although, given that all segments have accurate date time objects, the segment\n// selected should be accurate, unless the video has been transmuxed at some point\n// (determined by the presence of the videoTimingInfo object), the segment's \"player\n// time\" (the start time in the player) can't be considered accurate.\ntype:segment.videoTimingInfo?'accurate':'estimate'};};/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */const findSegmentForPlayerTime=(time,playlist)=>{// Assumptions:\n// - there will always be a segment.duration\n// - we can start from zero\n// - segments are in time order\nif(!playlist||!playlist.segments||playlist.segments.length===0){return null;}let segmentEnd=0;let segment;for(let i=0;i<playlist.segments.length;i++){segment=playlist.segments[i];// videoTimingInfo is set after the segment is downloaded and transmuxed, and\n// should contain the most accurate values we have for the segment's player times.\n//\n// Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n// back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n// calculate an end value.\nsegmentEnd=segment.videoTimingInfo?segment.videoTimingInfo.transmuxedPresentationEnd:segmentEnd+segment.duration;if(time<=segmentEnd){break;}}const lastSegment=playlist.segments[playlist.segments.length-1];if(lastSegment.videoTimingInfo&&lastSegment.videoTimingInfo.transmuxedPresentationEnd<time){// The time requested is beyond the stream end.\nreturn null;}if(time>segmentEnd){// The time is within or beyond the last segment.\n//\n// Check to see if the time is beyond a reasonable guess of the end of the stream.\nif(time>segmentEnd+lastSegment.duration*SEGMENT_END_FUDGE_PERCENT){// Technically, because the duration value is only an estimate, the time may still\n// exist in the last segment, however, there isn't enough information to make even\n// a reasonable estimate.\nreturn null;}segment=lastSegment;}return{segment,estimatedStart:segment.videoTimingInfo?segment.videoTimingInfo.transmuxedPresentationStart:segmentEnd-segment.duration,// Because videoTimingInfo is only set after transmux, it is the only way to get\n// accurate timing values.\ntype:segment.videoTimingInfo?'accurate':'estimate'};};/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {string} programTime The programTime as an ISO-8601 string\n * @return {number} offset\n */const getOffsetFromTimestamp=(comparisonTimeStamp,programTime)=>{let segmentDateTime;let programDateTime;try{segmentDateTime=new Date(comparisonTimeStamp);programDateTime=new Date(programTime);}catch(e){// TODO handle error\n}const segmentTimeEpoch=segmentDateTime.getTime();const programTimeEpoch=programDateTime.getTime();return(programTimeEpoch-segmentTimeEpoch)/1000;};/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */const verifyProgramDateTimeTags=playlist=>{if(!playlist.segments||playlist.segments.length===0){return false;}for(let i=0;i<playlist.segments.length;i++){const segment=playlist.segments[i];if(!segment.dateTimeObject){return false;}}return true;};/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @return {string} err.message A detailed error message\n * @return {Object} programTime\n * @return {number} programTime.mediaSeconds The streamTime in seconds\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n */const getProgramTime=({playlist,time=undefined,callback})=>{if(!callback){throw new Error('getProgramTime: callback must be provided');}if(!playlist||time===undefined){return callback({message:'getProgramTime: playlist and time must be provided'});}const matchedSegment=findSegmentForPlayerTime(time,playlist);if(!matchedSegment){return callback({message:'valid programTime was not found'});}if(matchedSegment.type==='estimate'){return callback({message:'Accurate programTime could not be determined.'+' Please seek to e.seekTime and try again',seekTime:matchedSegment.estimatedStart});}const programTimeObject={mediaSeconds:time};const programTime=playerTimeToProgramTime(time,matchedSegment.segment);if(programTime){programTimeObject.programDateTime=programTime.toISOString();}return callback(null,programTimeObject);};/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @return {string} err.message A detailed error message\n * @return {number} newTime The exact time that was seeked to in seconds\n */const seekToProgramTime=({programTime,playlist,retryCount=2,seekTo,pauseAfterSeek=true,tech,callback})=>{if(!callback){throw new Error('seekToProgramTime: callback must be provided');}if(typeof programTime==='undefined'||!playlist||!seekTo){return callback({message:'seekToProgramTime: programTime, seekTo and playlist must be provided'});}if(!playlist.endList&&!tech.hasStarted_){return callback({message:'player must be playing a live stream to start buffering'});}if(!verifyProgramDateTimeTags(playlist)){return callback({message:'programDateTime tags must be provided in the manifest '+playlist.resolvedUri});}const matchedSegment=findSegmentForProgramTime(programTime,playlist);// no match\nif(!matchedSegment){return callback({message:`${programTime} was not found in the stream`});}const segment=matchedSegment.segment;const mediaOffset=getOffsetFromTimestamp(segment.dateTimeObject,programTime);if(matchedSegment.type==='estimate'){// we've run out of retries\nif(retryCount===0){return callback({message:`${programTime} is not buffered yet. Try again`});}seekTo(matchedSegment.estimatedStart+mediaOffset);tech.one('seeked',()=>{seekToProgramTime({programTime,playlist,retryCount:retryCount-1,seekTo,pauseAfterSeek,tech,callback});});return;}// Since the segment.start value is determined from the buffered end or ending time\n// of the prior segment, the seekToTime doesn't need to account for any transmuxer\n// modifications.\nconst seekToTime=segment.start+mediaOffset;const seekedCallback=()=>{return callback(null,tech.currentTime());};// listen for seeked event\ntech.one('seeked',seekedCallback);// pause before seeking as video.js will restore this state\nif(pauseAfterSeek){tech.pause();}seekTo(seekToTime);};// which will only happen if the request is complete.\nconst callbackOnCompleted=(request,cb)=>{if(request.readyState===4){return cb();}return;};const containerRequest=(uri,xhr,cb)=>{let bytes=[];let id3Offset;let finished=false;const endRequestAndCallback=function(err,req,type,_bytes){req.abort();finished=true;return cb(err,req,type,_bytes);};const progressListener=function(error,request){if(finished){return;}if(error){return endRequestAndCallback(error,request,'',bytes);}// grap the new part of content that was just downloaded\nconst newPart=request.responseText.substring(bytes&&bytes.byteLength||0,request.responseText.length);// add that onto bytes\nbytes=concatTypedArrays(bytes,stringToBytes(newPart,true));id3Offset=id3Offset||getId3Offset(bytes);// we need at least 10 bytes to determine a type\n// or we need at least two bytes after an id3Offset\nif(bytes.length<10||id3Offset&&bytes.length<id3Offset+2){return callbackOnCompleted(request,()=>endRequestAndCallback(error,request,'',bytes));}const type=detectContainerForBytes(bytes);// if this looks like a ts segment but we don't have enough data\n// to see the second sync byte, wait until we have enough data\n// before declaring it ts\nif(type==='ts'&&bytes.length<188){return callbackOnCompleted(request,()=>endRequestAndCallback(error,request,'',bytes));}// this may be an unsynced ts segment\n// wait for 376 bytes before detecting no container\nif(!type&&bytes.length<376){return callbackOnCompleted(request,()=>endRequestAndCallback(error,request,'',bytes));}return endRequestAndCallback(null,request,type,bytes);};const options={uri,beforeSend(request){// this forces the browser to pass the bytes to us unprocessed\nrequest.overrideMimeType('text/plain; charset=x-user-defined');request.addEventListener('progress',function({total,loaded}){return callbackWrapper(request,null,{statusCode:request.status},progressListener);});}};const request=xhr(options,function(error,response){return callbackWrapper(request,error,response,progressListener);});return request;};const{EventTarget}=videojs;const dashPlaylistUnchanged=function(a,b){if(!isPlaylistUnchanged(a,b)){return false;}// for dash the above check will often return true in scenarios where\n// the playlist actually has changed because mediaSequence isn't a\n// dash thing, and we often set it to 1. So if the playlists have the same amount\n// of segments we return true.\n// So for dash we need to make sure that the underlying segments are different.\n// if sidx changed then the playlists are different.\nif(a.sidx&&b.sidx&&(a.sidx.offset!==b.sidx.offset||a.sidx.length!==b.sidx.length)){return false;}else if(!a.sidx&&b.sidx||a.sidx&&!b.sidx){return false;}// one or the other does not have segments\n// there was a change.\nif(a.segments&&!b.segments||!a.segments&&b.segments){return false;}// neither has segments nothing changed\nif(!a.segments&&!b.segments){return true;}// check segments themselves\nfor(let i=0;i<a.segments.length;i++){const aSegment=a.segments[i];const bSegment=b.segments[i];// if uris are different between segments there was a change\nif(aSegment.uri!==bSegment.uri){return false;}// neither segment has a byterange, there will be no byterange change.\nif(!aSegment.byterange&&!bSegment.byterange){continue;}const aByterange=aSegment.byterange;const bByterange=bSegment.byterange;// if byterange only exists on one of the segments, there was a change.\nif(aByterange&&!bByterange||!aByterange&&bByterange){return false;}// if both segments have byterange with different offsets, there was a change.\nif(aByterange.offset!==bByterange.offset||aByterange.length!==bByterange.length){return false;}}// if everything was the same with segments, this is the same playlist.\nreturn true;};/**\n * Parses the main XML string and updates playlist URI references.\n *\n * @param {Object} config\n *        Object of arguments\n * @param {string} config.mainXml\n *        The mpd XML\n * @param {string} config.srcUrl\n *        The mpd URL\n * @param {Date} config.clientOffset\n *         A time difference between server and client\n * @param {Object} config.sidxMapping\n *        SIDX mappings for moof/mdat URIs and byte ranges\n * @return {Object}\n *         The parsed mpd manifest object\n */const parseMainXml=({mainXml,srcUrl,clientOffset,sidxMapping,previousManifest})=>{const manifest=parse(mainXml,{manifestUri:srcUrl,clientOffset,sidxMapping,previousManifest});addPropertiesToMain(manifest,srcUrl);return manifest;};/**\n * Returns a new main manifest that is the result of merging an updated main manifest\n * into the original version.\n *\n * @param {Object} oldMain\n *        The old parsed mpd object\n * @param {Object} newMain\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original main manifest with the updated media\n *         playlists merged in\n */const updateMain=(oldMain,newMain,sidxMapping)=>{let noChanges=true;let update=merge(oldMain,{// These are top level properties that can be updated\nduration:newMain.duration,minimumUpdatePeriod:newMain.minimumUpdatePeriod,timelineStarts:newMain.timelineStarts});// First update the playlists in playlist list\nfor(let i=0;i<newMain.playlists.length;i++){const playlist=newMain.playlists[i];if(playlist.sidx){const sidxKey=generateSidxKey(playlist.sidx);// add sidx segments to the playlist if we have all the sidx info already\nif(sidxMapping&&sidxMapping[sidxKey]&&sidxMapping[sidxKey].sidx){addSidxSegmentsToPlaylist(playlist,sidxMapping[sidxKey].sidx,playlist.sidx.resolvedUri);}}const playlistUpdate=updateMain$1(update,playlist,dashPlaylistUnchanged);if(playlistUpdate){update=playlistUpdate;noChanges=false;}}// Then update media group playlists\nforEachMediaGroup(newMain,(properties,type,group,label)=>{if(properties.playlists&&properties.playlists.length){const id=properties.playlists[0].id;const playlistUpdate=updateMain$1(update,properties.playlists[0],dashPlaylistUnchanged);if(playlistUpdate){update=playlistUpdate;// update the playlist reference within media groups\nupdate.mediaGroups[type][group][label].playlists[0]=update.playlists[id];noChanges=false;}}});if(newMain.minimumUpdatePeriod!==oldMain.minimumUpdatePeriod){noChanges=false;}if(noChanges){return null;}return update;};// SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\nconst equivalentSidx=(a,b)=>{const neitherMap=Boolean(!a.map&&!b.map);const equivalentMap=neitherMap||Boolean(a.map&&b.map&&a.map.byterange.offset===b.map.byterange.offset&&a.map.byterange.length===b.map.byterange.length);return equivalentMap&&a.uri===b.uri&&a.byterange.offset===b.byterange.offset&&a.byterange.length===b.byterange.length;};// exported for testing\nconst compareSidxEntry=(playlists,oldSidxMapping)=>{const newSidxMapping={};for(const id in playlists){const playlist=playlists[id];const currentSidxInfo=playlist.sidx;if(currentSidxInfo){const key=generateSidxKey(currentSidxInfo);if(!oldSidxMapping[key]){break;}const savedSidxInfo=oldSidxMapping[key].sidxInfo;if(equivalentSidx(savedSidxInfo,currentSidxInfo)){newSidxMapping[key]=oldSidxMapping[key];}}}return newSidxMapping;};/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} main the parsed mpd XML returned via mpd-parser\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */const filterChangedSidxMappings=(main,oldSidxMapping)=>{const videoSidx=compareSidxEntry(main.playlists,oldSidxMapping);let mediaGroupSidx=videoSidx;forEachMediaGroup(main,(properties,mediaType,groupKey,labelKey)=>{if(properties.playlists&&properties.playlists.length){const playlists=properties.playlists;mediaGroupSidx=merge(mediaGroupSidx,compareSidxEntry(playlists,oldSidxMapping));}});return mediaGroupSidx;};class DashPlaylistLoader extends EventTarget{// DashPlaylistLoader must accept either a src url or a playlist because subsequent\n// playlist loader setups from media groups will expect to be able to pass a playlist\n// (since there aren't external URLs to media playlists with DASH)\nconstructor(srcUrlOrPlaylist,vhs,options={},mainPlaylistLoader){super();this.mainPlaylistLoader_=mainPlaylistLoader||this;if(!mainPlaylistLoader){this.isMain_=true;}const{withCredentials=false}=options;this.vhs_=vhs;this.withCredentials=withCredentials;if(!srcUrlOrPlaylist){throw new Error('A non-empty playlist URL or object is required');}// event naming?\nthis.on('minimumUpdatePeriod',()=>{this.refreshXml_();});// live playlist staleness timeout\nthis.on('mediaupdatetimeout',()=>{this.refreshMedia_(this.media().id);});this.state='HAVE_NOTHING';this.loadedPlaylists_={};this.logger_=logger('DashPlaylistLoader');// initialize the loader state\n// The mainPlaylistLoader will be created with a string\nif(this.isMain_){this.mainPlaylistLoader_.srcUrl=srcUrlOrPlaylist;// TODO: reset sidxMapping between period changes\n// once multi-period is refactored\nthis.mainPlaylistLoader_.sidxMapping_={};}else{this.childPlaylist_=srcUrlOrPlaylist;}}requestErrored_(err,request,startingState){// disposed\nif(!this.request){return true;}// pending request is cleared\nthis.request=null;if(err){// use the provided error object or create one\n// based on the request/response\nthis.error=typeof err==='object'&&!(err instanceof Error)?err:{status:request.status,message:'DASH request error at URL: '+request.uri,response:request.response,// MEDIA_ERR_NETWORK\ncode:2};if(startingState){this.state=startingState;}this.trigger('error');return true;}}/**\n   * Verify that the container of the sidx segment can be parsed\n   * and if it can, get and parse that segment.\n   */addSidxSegments_(playlist,startingState,cb){const sidxKey=playlist.sidx&&generateSidxKey(playlist.sidx);// playlist lacks sidx or sidx segments were added to this playlist already.\nif(!playlist.sidx||!sidxKey||this.mainPlaylistLoader_.sidxMapping_[sidxKey]){// keep this function async\nthis.mediaRequest_=window$1.setTimeout(()=>cb(false),0);return;}// resolve the segment URL relative to the playlist\nconst uri=resolveManifestRedirect(playlist.sidx.resolvedUri);const fin=(err,request)=>{if(this.requestErrored_(err,request,startingState)){return;}const sidxMapping=this.mainPlaylistLoader_.sidxMapping_;let sidx;try{sidx=parseSidx(toUint8(request.response).subarray(8));}catch(e){// sidx parsing failed.\nthis.requestErrored_(e,request,startingState);return;}sidxMapping[sidxKey]={sidxInfo:playlist.sidx,sidx};addSidxSegmentsToPlaylist(playlist,sidx,playlist.sidx.resolvedUri);return cb(true);};this.request=containerRequest(uri,this.vhs_.xhr,(err,request,container,bytes)=>{if(err){return fin(err,request);}if(!container||container!=='mp4'){return fin({status:request.status,message:`Unsupported ${container||'unknown'} container type for sidx segment at URL: ${uri}`,// response is just bytes in this case\n// but we really don't want to return that.\nresponse:'',playlist,internal:true,playlistExclusionDuration:Infinity,// MEDIA_ERR_NETWORK\ncode:2},request);}// if we already downloaded the sidx bytes in the container request, use them\nconst{offset,length}=playlist.sidx.byterange;if(bytes.length>=length+offset){return fin(err,{response:bytes.subarray(offset,offset+length),status:request.status,uri:request.uri});}// otherwise request sidx bytes\nthis.request=this.vhs_.xhr({uri,responseType:'arraybuffer',headers:segmentXhrHeaders({byterange:playlist.sidx.byterange})},fin);});}dispose(){this.trigger('dispose');this.stopRequest();this.loadedPlaylists_={};window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);window$1.clearTimeout(this.mediaRequest_);window$1.clearTimeout(this.mediaUpdateTimeout);this.mediaUpdateTimeout=null;this.mediaRequest_=null;this.minimumUpdatePeriodTimeout_=null;if(this.mainPlaylistLoader_.createMupOnMedia_){this.off('loadedmetadata',this.mainPlaylistLoader_.createMupOnMedia_);this.mainPlaylistLoader_.createMupOnMedia_=null;}this.off();}hasPendingRequest(){return this.request||this.mediaRequest_;}stopRequest(){if(this.request){const oldRequest=this.request;this.request=null;oldRequest.onreadystatechange=null;oldRequest.abort();}}media(playlist){// getter\nif(!playlist){return this.media_;}// setter\nif(this.state==='HAVE_NOTHING'){throw new Error('Cannot switch media playlist from '+this.state);}const startingState=this.state;// find the playlist object if the target playlist has been specified by URI\nif(typeof playlist==='string'){if(!this.mainPlaylistLoader_.main.playlists[playlist]){throw new Error('Unknown playlist URI: '+playlist);}playlist=this.mainPlaylistLoader_.main.playlists[playlist];}const mediaChange=!this.media_||playlist.id!==this.media_.id;// switch to previously loaded playlists immediately\nif(mediaChange&&this.loadedPlaylists_[playlist.id]&&this.loadedPlaylists_[playlist.id].endList){this.state='HAVE_METADATA';this.media_=playlist;// trigger media change if the active media has been updated\nif(mediaChange){this.trigger('mediachanging');this.trigger('mediachange');}return;}// switching to the active playlist is a no-op\nif(!mediaChange){return;}// switching from an already loaded playlist\nif(this.media_){this.trigger('mediachanging');}this.addSidxSegments_(playlist,startingState,sidxChanged=>{// everything is ready just continue to haveMetadata\nthis.haveMetadata({startingState,playlist});});}haveMetadata({startingState,playlist}){this.state='HAVE_METADATA';this.loadedPlaylists_[playlist.id]=playlist;this.mediaRequest_=null;// This will trigger loadedplaylist\nthis.refreshMedia_(playlist.id);// fire loadedmetadata the first time a media playlist is loaded\n// to resolve setup of media groups\nif(startingState==='HAVE_MAIN_MANIFEST'){this.trigger('loadedmetadata');}else{// trigger media change if the active media has been updated\nthis.trigger('mediachange');}}pause(){if(this.mainPlaylistLoader_.createMupOnMedia_){this.off('loadedmetadata',this.mainPlaylistLoader_.createMupOnMedia_);this.mainPlaylistLoader_.createMupOnMedia_=null;}this.stopRequest();window$1.clearTimeout(this.mediaUpdateTimeout);this.mediaUpdateTimeout=null;if(this.isMain_){window$1.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_);this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_=null;}if(this.state==='HAVE_NOTHING'){// If we pause the loader before any data has been retrieved, its as if we never\n// started, so reset to an unstarted state.\nthis.started=false;}}load(isFinalRendition){window$1.clearTimeout(this.mediaUpdateTimeout);this.mediaUpdateTimeout=null;const media=this.media();if(isFinalRendition){const delay=media?media.targetDuration/2*1000:5*1000;this.mediaUpdateTimeout=window$1.setTimeout(()=>this.load(),delay);return;}// because the playlists are internal to the manifest, load should either load the\n// main manifest, or do nothing but trigger an event\nif(!this.started){this.start();return;}if(media&&!media.endList){// Check to see if this is the main loader and the MUP was cleared (this happens\n// when the loader was paused). `media` should be set at this point since one is always\n// set during `start()`.\nif(this.isMain_&&!this.minimumUpdatePeriodTimeout_){// Trigger minimumUpdatePeriod to refresh the main manifest\nthis.trigger('minimumUpdatePeriod');// Since there was no prior minimumUpdatePeriodTimeout it should be recreated\nthis.updateMinimumUpdatePeriodTimeout_();}this.trigger('mediaupdatetimeout');}else{this.trigger('loadedplaylist');}}start(){this.started=true;// We don't need to request the main manifest again\n// Call this asynchronously to match the xhr request behavior below\nif(!this.isMain_){this.mediaRequest_=window$1.setTimeout(()=>this.haveMain_(),0);return;}this.requestMain_((req,mainChanged)=>{this.haveMain_();if(!this.hasPendingRequest()&&!this.media_){this.media(this.mainPlaylistLoader_.main.playlists[0]);}});}requestMain_(cb){this.request=this.vhs_.xhr({uri:this.mainPlaylistLoader_.srcUrl,withCredentials:this.withCredentials},(error,req)=>{if(this.requestErrored_(error,req)){if(this.state==='HAVE_NOTHING'){this.started=false;}return;}const mainChanged=req.responseText!==this.mainPlaylistLoader_.mainXml_;this.mainPlaylistLoader_.mainXml_=req.responseText;if(req.responseHeaders&&req.responseHeaders.date){this.mainLoaded_=Date.parse(req.responseHeaders.date);}else{this.mainLoaded_=Date.now();}this.mainPlaylistLoader_.srcUrl=resolveManifestRedirect(this.mainPlaylistLoader_.srcUrl,req);if(mainChanged){this.handleMain_();this.syncClientServerClock_(()=>{return cb(req,mainChanged);});return;}return cb(req,mainChanged);});}/**\n   * Parses the main xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */syncClientServerClock_(done){const utcTiming=parseUTCTiming(this.mainPlaylistLoader_.mainXml_);// No UTCTiming element found in the mpd. Use Date header from mpd request as the\n// server clock\nif(utcTiming===null){this.mainPlaylistLoader_.clientOffset_=this.mainLoaded_-Date.now();return done();}if(utcTiming.method==='DIRECT'){this.mainPlaylistLoader_.clientOffset_=utcTiming.value-Date.now();return done();}this.request=this.vhs_.xhr({uri:resolveUrl(this.mainPlaylistLoader_.srcUrl,utcTiming.value),method:utcTiming.method,withCredentials:this.withCredentials},(error,req)=>{// disposed\nif(!this.request){return;}if(error){// sync request failed, fall back to using date header from mpd\n// TODO: log warning\nthis.mainPlaylistLoader_.clientOffset_=this.mainLoaded_-Date.now();return done();}let serverTime;if(utcTiming.method==='HEAD'){if(!req.responseHeaders||!req.responseHeaders.date){// expected date header not preset, fall back to using date header from mpd\n// TODO: log warning\nserverTime=this.mainLoaded_;}else{serverTime=Date.parse(req.responseHeaders.date);}}else{serverTime=Date.parse(req.responseText);}this.mainPlaylistLoader_.clientOffset_=serverTime-Date.now();done();});}haveMain_(){this.state='HAVE_MAIN_MANIFEST';if(this.isMain_){// We have the main playlist at this point, so\n// trigger this to allow PlaylistController\n// to make an initial playlist selection\nthis.trigger('loadedplaylist');}else if(!this.media_){// no media playlist was specifically selected so select\n// the one the child playlist loader was created with\nthis.media(this.childPlaylist_);}}handleMain_(){// clear media request\nthis.mediaRequest_=null;const oldMain=this.mainPlaylistLoader_.main;let newMain=parseMainXml({mainXml:this.mainPlaylistLoader_.mainXml_,srcUrl:this.mainPlaylistLoader_.srcUrl,clientOffset:this.mainPlaylistLoader_.clientOffset_,sidxMapping:this.mainPlaylistLoader_.sidxMapping_,previousManifest:oldMain});// if we have an old main to compare the new main against\nif(oldMain){newMain=updateMain(oldMain,newMain,this.mainPlaylistLoader_.sidxMapping_);}// only update main if we have a new main\nthis.mainPlaylistLoader_.main=newMain?newMain:oldMain;const location=this.mainPlaylistLoader_.main.locations&&this.mainPlaylistLoader_.main.locations[0];if(location&&location!==this.mainPlaylistLoader_.srcUrl){this.mainPlaylistLoader_.srcUrl=location;}if(!oldMain||newMain&&newMain.minimumUpdatePeriod!==oldMain.minimumUpdatePeriod){this.updateMinimumUpdatePeriodTimeout_();}return Boolean(newMain);}updateMinimumUpdatePeriodTimeout_(){const mpl=this.mainPlaylistLoader_;// cancel any pending creation of mup on media\n// a new one will be added if needed.\nif(mpl.createMupOnMedia_){mpl.off('loadedmetadata',mpl.createMupOnMedia_);mpl.createMupOnMedia_=null;}// clear any pending timeouts\nif(mpl.minimumUpdatePeriodTimeout_){window$1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);mpl.minimumUpdatePeriodTimeout_=null;}let mup=mpl.main&&mpl.main.minimumUpdatePeriod;// If the minimumUpdatePeriod has a value of 0, that indicates that the current\n// MPD has no future validity, so a new one will need to be acquired when new\n// media segments are to be made available. Thus, we use the target duration\n// in this case\nif(mup===0){if(mpl.media()){mup=mpl.media().targetDuration*1000;}else{mpl.createMupOnMedia_=mpl.updateMinimumUpdatePeriodTimeout_;mpl.one('loadedmetadata',mpl.createMupOnMedia_);}}// if minimumUpdatePeriod is invalid or <= zero, which\n// can happen when a live video becomes VOD. skip timeout\n// creation.\nif(typeof mup!=='number'||mup<=0){if(mup<0){this.logger_(`found invalid minimumUpdatePeriod of ${mup}, not setting a timeout`);}return;}this.createMUPTimeout_(mup);}createMUPTimeout_(mup){const mpl=this.mainPlaylistLoader_;mpl.minimumUpdatePeriodTimeout_=window$1.setTimeout(()=>{mpl.minimumUpdatePeriodTimeout_=null;mpl.trigger('minimumUpdatePeriod');mpl.createMUPTimeout_(mup);},mup);}/**\n   * Sends request to refresh the main xml and updates the parsed main manifest\n   */refreshXml_(){this.requestMain_((req,mainChanged)=>{if(!mainChanged){return;}if(this.media_){this.media_=this.mainPlaylistLoader_.main.playlists[this.media_.id];}// This will filter out updated sidx info from the mapping\nthis.mainPlaylistLoader_.sidxMapping_=filterChangedSidxMappings(this.mainPlaylistLoader_.main,this.mainPlaylistLoader_.sidxMapping_);this.addSidxSegments_(this.media(),this.state,sidxChanged=>{// TODO: do we need to reload the current playlist?\nthis.refreshMedia_(this.media().id);});});}/**\n   * Refreshes the media playlist by re-parsing the main xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the main loader.\n   */refreshMedia_(mediaID){if(!mediaID){throw new Error('refreshMedia_ must take a media id');}// for main we have to reparse the main xml\n// to re-create segments based on current timing values\n// which may change media. We only skip updating the main manifest\n// if this is the first time this.media_ is being set.\n// as main was just parsed in that case.\nif(this.media_&&this.isMain_){this.handleMain_();}const playlists=this.mainPlaylistLoader_.main.playlists;const mediaChanged=!this.media_||this.media_!==playlists[mediaID];if(mediaChanged){this.media_=playlists[mediaID];}else{this.trigger('playlistunchanged');}if(!this.mediaUpdateTimeout){const createMediaUpdateTimeout=()=>{if(this.media().endList){return;}this.mediaUpdateTimeout=window$1.setTimeout(()=>{this.trigger('mediaupdatetimeout');createMediaUpdateTimeout();},refreshDelay(this.media(),Boolean(mediaChanged)));};createMediaUpdateTimeout();}this.trigger('loadedplaylist');}}var Config={GOAL_BUFFER_LENGTH:30,MAX_GOAL_BUFFER_LENGTH:60,BACK_BUFFER_LENGTH:30,GOAL_BUFFER_LENGTH_RATE:1,// 0.5 MB/s\nINITIAL_BANDWIDTH:4194304,// A fudge factor to apply to advertised playlist bitrates to account for\n// temporary flucations in client bandwidth\nBANDWIDTH_VARIANCE:1.2,// How much of the buffer must be filled before we consider upswitching\nBUFFER_LOW_WATER_LINE:0,MAX_BUFFER_LOW_WATER_LINE:30,// TODO: Remove this when experimentalBufferBasedABR is removed\nEXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE:16,BUFFER_LOW_WATER_LINE_RATE:1,// If the buffer is greater than the high water line, we won't switch down\nBUFFER_HIGH_WATER_LINE:30};const stringToArrayBuffer=string=>{const view=new Uint8Array(new ArrayBuffer(string.length));for(let i=0;i<string.length;i++){view[i]=string.charCodeAt(i);}return view.buffer;};/* global Blob, BlobBuilder, Worker */ // unify worker interface\nconst browserWorkerPolyFill=function(workerObj){// node only supports on/off\nworkerObj.on=workerObj.addEventListener;workerObj.off=workerObj.removeEventListener;return workerObj;};const createObjectURL=function(str){try{return URL.createObjectURL(new Blob([str],{type:'application/javascript'}));}catch(e){const blob=new BlobBuilder();blob.append(str);return URL.createObjectURL(blob.getBlob());}};const factory=function(code){return function(){const objectUrl=createObjectURL(code);const worker=browserWorkerPolyFill(new Worker(objectUrl));worker.objURL=objectUrl;const terminate=worker.terminate;worker.on=worker.addEventListener;worker.off=worker.removeEventListener;worker.terminate=function(){URL.revokeObjectURL(objectUrl);return terminate.call(this);};return worker;};};const transform=function(code){return`var browserWorkerPolyFill = ${browserWorkerPolyFill.toString()};\\n`+'browserWorkerPolyFill(self);\\n'+code;};const getWorkerString=function(fn){return fn.toString().replace(/^function.+?{/,'').slice(0,-1);};/* rollup-plugin-worker-factory start for worker!/Users/poneill/dev/http-streaming/src/transmuxer-worker.js */const workerCode$1=transform(getWorkerString(function(){var commonjsGlobal=typeof globalThis!=='undefined'?globalThis:typeof window!=='undefined'?window:typeof global!=='undefined'?global:typeof self!=='undefined'?self:{};/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */var Stream$8=function(){this.init=function(){var listeners={};/**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */this.on=function(type,listener){if(!listeners[type]){listeners[type]=[];}listeners[type]=listeners[type].concat(listener);};/**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */this.off=function(type,listener){var index;if(!listeners[type]){return false;}index=listeners[type].indexOf(listener);listeners[type]=listeners[type].slice();listeners[type].splice(index,1);return index>-1;};/**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */this.trigger=function(type){var callbacks,i,length,args;callbacks=listeners[type];if(!callbacks){return;}// Slicing the arguments on every invocation of this method\n// can add a significant amount of overhead. Avoid the\n// intermediate object creation for the common case of a\n// single callback argument\nif(arguments.length===2){length=callbacks.length;for(i=0;i<length;++i){callbacks[i].call(this,arguments[1]);}}else{args=[];i=arguments.length;for(i=1;i<arguments.length;++i){args.push(arguments[i]);}length=callbacks.length;for(i=0;i<length;++i){callbacks[i].apply(this,args);}}};/**\n       * Destroys the stream and cleans up.\n       */this.dispose=function(){listeners={};};};};/**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */Stream$8.prototype.pipe=function(destination){this.on('data',function(data){destination.push(data);});this.on('done',function(flushSource){destination.flush(flushSource);});this.on('partialdone',function(flushSource){destination.partialFlush(flushSource);});this.on('endedtimeline',function(flushSource){destination.endTimeline(flushSource);});this.on('reset',function(flushSource){destination.reset(flushSource);});return destination;};// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream$8.prototype.push=function(data){this.trigger('data',data);};Stream$8.prototype.flush=function(flushSource){this.trigger('done',flushSource);};Stream$8.prototype.partialFlush=function(flushSource){this.trigger('partialdone',flushSource);};Stream$8.prototype.endTimeline=function(flushSource){this.trigger('endedtimeline',flushSource);};Stream$8.prototype.reset=function(flushSource){this.trigger('reset',flushSource);};var stream=Stream$8;var MAX_UINT32$1=Math.pow(2,32);var getUint64$2=function(uint8){var dv=new DataView(uint8.buffer,uint8.byteOffset,uint8.byteLength);var value;if(dv.getBigUint64){value=dv.getBigUint64(0);if(value<Number.MAX_SAFE_INTEGER){return Number(value);}return value;}return dv.getUint32(0)*MAX_UINT32$1+dv.getUint32(4);};var numbers={getUint64:getUint64$2,MAX_UINT32:MAX_UINT32$1};/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Functions that generate fragmented MP4s suitable for use with Media\n   * Source Extensions.\n   */var MAX_UINT32=numbers.MAX_UINT32;var box,dinf,esds,ftyp,mdat,mfhd,minf,moof,moov,mvex,mvhd,trak,tkhd,mdia,mdhd,hdlr,sdtp,stbl,stsd,traf,trex,trun$1,types,MAJOR_BRAND,MINOR_VERSION,AVC1_BRAND,VIDEO_HDLR,AUDIO_HDLR,HDLR_TYPES,VMHD,SMHD,DREF,STCO,STSC,STSZ,STTS;// pre-calculate constants\n(function(){var i;types={avc1:[],// codingname\navcC:[],btrt:[],dinf:[],dref:[],esds:[],ftyp:[],hdlr:[],mdat:[],mdhd:[],mdia:[],mfhd:[],minf:[],moof:[],moov:[],mp4a:[],// codingname\nmvex:[],mvhd:[],pasp:[],sdtp:[],smhd:[],stbl:[],stco:[],stsc:[],stsd:[],stsz:[],stts:[],styp:[],tfdt:[],tfhd:[],traf:[],trak:[],trun:[],trex:[],tkhd:[],vmhd:[]};// In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n// don't throw an error\nif(typeof Uint8Array==='undefined'){return;}for(i in types){if(types.hasOwnProperty(i)){types[i]=[i.charCodeAt(0),i.charCodeAt(1),i.charCodeAt(2),i.charCodeAt(3)];}}MAJOR_BRAND=new Uint8Array(['i'.charCodeAt(0),'s'.charCodeAt(0),'o'.charCodeAt(0),'m'.charCodeAt(0)]);AVC1_BRAND=new Uint8Array(['a'.charCodeAt(0),'v'.charCodeAt(0),'c'.charCodeAt(0),'1'.charCodeAt(0)]);MINOR_VERSION=new Uint8Array([0,0,0,1]);VIDEO_HDLR=new Uint8Array([0x00,// version 0\n0x00,0x00,0x00,// flags\n0x00,0x00,0x00,0x00,// pre_defined\n0x76,0x69,0x64,0x65,// handler_type: 'vide'\n0x00,0x00,0x00,0x00,// reserved\n0x00,0x00,0x00,0x00,// reserved\n0x00,0x00,0x00,0x00,// reserved\n0x56,0x69,0x64,0x65,0x6f,0x48,0x61,0x6e,0x64,0x6c,0x65,0x72,0x00// name: 'VideoHandler'\n]);AUDIO_HDLR=new Uint8Array([0x00,// version 0\n0x00,0x00,0x00,// flags\n0x00,0x00,0x00,0x00,// pre_defined\n0x73,0x6f,0x75,0x6e,// handler_type: 'soun'\n0x00,0x00,0x00,0x00,// reserved\n0x00,0x00,0x00,0x00,// reserved\n0x00,0x00,0x00,0x00,// reserved\n0x53,0x6f,0x75,0x6e,0x64,0x48,0x61,0x6e,0x64,0x6c,0x65,0x72,0x00// name: 'SoundHandler'\n]);HDLR_TYPES={video:VIDEO_HDLR,audio:AUDIO_HDLR};DREF=new Uint8Array([0x00,// version 0\n0x00,0x00,0x00,// flags\n0x00,0x00,0x00,0x01,// entry_count\n0x00,0x00,0x00,0x0c,// entry_size\n0x75,0x72,0x6c,0x20,// 'url' type\n0x00,// version 0\n0x00,0x00,0x01// entry_flags\n]);SMHD=new Uint8Array([0x00,// version\n0x00,0x00,0x00,// flags\n0x00,0x00,// balance, 0 means centered\n0x00,0x00// reserved\n]);STCO=new Uint8Array([0x00,// version\n0x00,0x00,0x00,// flags\n0x00,0x00,0x00,0x00// entry_count\n]);STSC=STCO;STSZ=new Uint8Array([0x00,// version\n0x00,0x00,0x00,// flags\n0x00,0x00,0x00,0x00,// sample_size\n0x00,0x00,0x00,0x00// sample_count\n]);STTS=STCO;VMHD=new Uint8Array([0x00,// version\n0x00,0x00,0x01,// flags\n0x00,0x00,// graphicsmode\n0x00,0x00,0x00,0x00,0x00,0x00// opcolor\n]);})();box=function(type){var payload=[],size=0,i,result,view;for(i=1;i<arguments.length;i++){payload.push(arguments[i]);}i=payload.length;// calculate the total size we need to allocate\nwhile(i--){size+=payload[i].byteLength;}result=new Uint8Array(size+8);view=new DataView(result.buffer,result.byteOffset,result.byteLength);view.setUint32(0,result.byteLength);result.set(type,4);// copy the payload into the result\nfor(i=0,size=8;i<payload.length;i++){result.set(payload[i],size);size+=payload[i].byteLength;}return result;};dinf=function(){return box(types.dinf,box(types.dref,DREF));};esds=function(track){return box(types.esds,new Uint8Array([0x00,// version\n0x00,0x00,0x00,// flags\n// ES_Descriptor\n0x03,// tag, ES_DescrTag\n0x19,// length\n0x00,0x00,// ES_ID\n0x00,// streamDependenceFlag, URL_flag, reserved, streamPriority\n// DecoderConfigDescriptor\n0x04,// tag, DecoderConfigDescrTag\n0x11,// length\n0x40,// object type\n0x15,// streamType\n0x00,0x06,0x00,// bufferSizeDB\n0x00,0x00,0xda,0xc0,// maxBitrate\n0x00,0x00,0xda,0xc0,// avgBitrate\n// DecoderSpecificInfo\n0x05,// tag, DecoderSpecificInfoTag\n0x02,// length\n// ISO/IEC 14496-3, AudioSpecificConfig\n// for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\ntrack.audioobjecttype<<3|track.samplingfrequencyindex>>>1,track.samplingfrequencyindex<<7|track.channelcount<<3,0x06,0x01,0x02// GASpecificConfig\n]));};ftyp=function(){return box(types.ftyp,MAJOR_BRAND,MINOR_VERSION,MAJOR_BRAND,AVC1_BRAND);};hdlr=function(type){return box(types.hdlr,HDLR_TYPES[type]);};mdat=function(data){return box(types.mdat,data);};mdhd=function(track){var result=new Uint8Array([0x00,// version 0\n0x00,0x00,0x00,// flags\n0x00,0x00,0x00,0x02,// creation_time\n0x00,0x00,0x00,0x03,// modification_time\n0x00,0x01,0x5f,0x90,// timescale, 90,000 \"ticks\" per second\ntrack.duration>>>24&0xFF,track.duration>>>16&0xFF,track.duration>>>8&0xFF,track.duration&0xFF,// duration\n0x55,0xc4,// 'und' language (undetermined)\n0x00,0x00]);// Use the sample rate from the track metadata, when it is\n// defined. The sample rate can be parsed out of an ADTS header, for\n// instance.\nif(track.samplerate){result[12]=track.samplerate>>>24&0xFF;result[13]=track.samplerate>>>16&0xFF;result[14]=track.samplerate>>>8&0xFF;result[15]=track.samplerate&0xFF;}return box(types.mdhd,result);};mdia=function(track){return box(types.mdia,mdhd(track),hdlr(track.type),minf(track));};mfhd=function(sequenceNumber){return box(types.mfhd,new Uint8Array([0x00,0x00,0x00,0x00,// flags\n(sequenceNumber&0xFF000000)>>24,(sequenceNumber&0xFF0000)>>16,(sequenceNumber&0xFF00)>>8,sequenceNumber&0xFF// sequence_number\n]));};minf=function(track){return box(types.minf,track.type==='video'?box(types.vmhd,VMHD):box(types.smhd,SMHD),dinf(),stbl(track));};moof=function(sequenceNumber,tracks){var trackFragments=[],i=tracks.length;// build traf boxes for each track fragment\nwhile(i--){trackFragments[i]=traf(tracks[i]);}return box.apply(null,[types.moof,mfhd(sequenceNumber)].concat(trackFragments));};/**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */moov=function(tracks){var i=tracks.length,boxes=[];while(i--){boxes[i]=trak(tracks[i]);}return box.apply(null,[types.moov,mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));};mvex=function(tracks){var i=tracks.length,boxes=[];while(i--){boxes[i]=trex(tracks[i]);}return box.apply(null,[types.mvex].concat(boxes));};mvhd=function(duration){var bytes=new Uint8Array([0x00,// version 0\n0x00,0x00,0x00,// flags\n0x00,0x00,0x00,0x01,// creation_time\n0x00,0x00,0x00,0x02,// modification_time\n0x00,0x01,0x5f,0x90,// timescale, 90,000 \"ticks\" per second\n(duration&0xFF000000)>>24,(duration&0xFF0000)>>16,(duration&0xFF00)>>8,duration&0xFF,// duration\n0x00,0x01,0x00,0x00,// 1.0 rate\n0x01,0x00,// 1.0 volume\n0x00,0x00,// reserved\n0x00,0x00,0x00,0x00,// reserved\n0x00,0x00,0x00,0x00,// reserved\n0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,// transformation: unity matrix\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// pre_defined\n0xff,0xff,0xff,0xff// next_track_ID\n]);return box(types.mvhd,bytes);};sdtp=function(track){var samples=track.samples||[],bytes=new Uint8Array(4+samples.length),flags,i;// leave the full box header (4 bytes) all zero\n// write the sample table\nfor(i=0;i<samples.length;i++){flags=samples[i].flags;bytes[i+4]=flags.dependsOn<<4|flags.isDependedOn<<2|flags.hasRedundancy;}return box(types.sdtp,bytes);};stbl=function(track){return box(types.stbl,stsd(track),box(types.stts,STTS),box(types.stsc,STSC),box(types.stsz,STSZ),box(types.stco,STCO));};(function(){var videoSample,audioSample;stsd=function(track){return box(types.stsd,new Uint8Array([0x00,// version 0\n0x00,0x00,0x00,// flags\n0x00,0x00,0x00,0x01]),track.type==='video'?videoSample(track):audioSample(track));};videoSample=function(track){var sps=track.sps||[],pps=track.pps||[],sequenceParameterSets=[],pictureParameterSets=[],i,avc1Box;// assemble the SPSs\nfor(i=0;i<sps.length;i++){sequenceParameterSets.push((sps[i].byteLength&0xFF00)>>>8);sequenceParameterSets.push(sps[i].byteLength&0xFF);// sequenceParameterSetLength\nsequenceParameterSets=sequenceParameterSets.concat(Array.prototype.slice.call(sps[i]));// SPS\n}// assemble the PPSs\nfor(i=0;i<pps.length;i++){pictureParameterSets.push((pps[i].byteLength&0xFF00)>>>8);pictureParameterSets.push(pps[i].byteLength&0xFF);pictureParameterSets=pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));}avc1Box=[types.avc1,new Uint8Array([0x00,0x00,0x00,0x00,0x00,0x00,// reserved\n0x00,0x01,// data_reference_index\n0x00,0x00,// pre_defined\n0x00,0x00,// reserved\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// pre_defined\n(track.width&0xff00)>>8,track.width&0xff,// width\n(track.height&0xff00)>>8,track.height&0xff,// height\n0x00,0x48,0x00,0x00,// horizresolution\n0x00,0x48,0x00,0x00,// vertresolution\n0x00,0x00,0x00,0x00,// reserved\n0x00,0x01,// frame_count\n0x13,0x76,0x69,0x64,0x65,0x6f,0x6a,0x73,0x2d,0x63,0x6f,0x6e,0x74,0x72,0x69,0x62,0x2d,0x68,0x6c,0x73,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// compressorname\n0x00,0x18,// depth = 24\n0x11,0x11// pre_defined = -1\n]),box(types.avcC,new Uint8Array([0x01,// configurationVersion\ntrack.profileIdc,// AVCProfileIndication\ntrack.profileCompatibility,// profile_compatibility\ntrack.levelIdc,// AVCLevelIndication\n0xff// lengthSizeMinusOne, hard-coded to 4 bytes\n].concat([sps.length],// numOfSequenceParameterSets\nsequenceParameterSets,// \"SPS\"\n[pps.length],// numOfPictureParameterSets\npictureParameterSets// \"PPS\"\n))),box(types.btrt,new Uint8Array([0x00,0x1c,0x9c,0x80,// bufferSizeDB\n0x00,0x2d,0xc6,0xc0,// maxBitrate\n0x00,0x2d,0xc6,0xc0// avgBitrate\n]))];if(track.sarRatio){var hSpacing=track.sarRatio[0],vSpacing=track.sarRatio[1];avc1Box.push(box(types.pasp,new Uint8Array([(hSpacing&0xFF000000)>>24,(hSpacing&0xFF0000)>>16,(hSpacing&0xFF00)>>8,hSpacing&0xFF,(vSpacing&0xFF000000)>>24,(vSpacing&0xFF0000)>>16,(vSpacing&0xFF00)>>8,vSpacing&0xFF])));}return box.apply(null,avc1Box);};audioSample=function(track){return box(types.mp4a,new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n0x00,0x00,0x00,0x00,0x00,0x00,// reserved\n0x00,0x01,// data_reference_index\n// AudioSampleEntry, ISO/IEC 14496-12\n0x00,0x00,0x00,0x00,// reserved\n0x00,0x00,0x00,0x00,// reserved\n(track.channelcount&0xff00)>>8,track.channelcount&0xff,// channelcount\n(track.samplesize&0xff00)>>8,track.samplesize&0xff,// samplesize\n0x00,0x00,// pre_defined\n0x00,0x00,// reserved\n(track.samplerate&0xff00)>>8,track.samplerate&0xff,0x00,0x00// samplerate, 16.16\n// MP4AudioSampleEntry, ISO/IEC 14496-14\n]),esds(track));};})();tkhd=function(track){var result=new Uint8Array([0x00,// version 0\n0x00,0x00,0x07,// flags\n0x00,0x00,0x00,0x00,// creation_time\n0x00,0x00,0x00,0x00,// modification_time\n(track.id&0xFF000000)>>24,(track.id&0xFF0000)>>16,(track.id&0xFF00)>>8,track.id&0xFF,// track_ID\n0x00,0x00,0x00,0x00,// reserved\n(track.duration&0xFF000000)>>24,(track.duration&0xFF0000)>>16,(track.duration&0xFF00)>>8,track.duration&0xFF,// duration\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// reserved\n0x00,0x00,// layer\n0x00,0x00,// alternate_group\n0x01,0x00,// non-audio track volume\n0x00,0x00,// reserved\n0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,// transformation: unity matrix\n(track.width&0xFF00)>>8,track.width&0xFF,0x00,0x00,// width\n(track.height&0xFF00)>>8,track.height&0xFF,0x00,0x00// height\n]);return box(types.tkhd,result);};/**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */traf=function(track){var trackFragmentHeader,trackFragmentDecodeTime,trackFragmentRun,sampleDependencyTable,dataOffset,upperWordBaseMediaDecodeTime,lowerWordBaseMediaDecodeTime;trackFragmentHeader=box(types.tfhd,new Uint8Array([0x00,// version 0\n0x00,0x00,0x3a,// flags\n(track.id&0xFF000000)>>24,(track.id&0xFF0000)>>16,(track.id&0xFF00)>>8,track.id&0xFF,// track_ID\n0x00,0x00,0x00,0x01,// sample_description_index\n0x00,0x00,0x00,0x00,// default_sample_duration\n0x00,0x00,0x00,0x00,// default_sample_size\n0x00,0x00,0x00,0x00// default_sample_flags\n]));upperWordBaseMediaDecodeTime=Math.floor(track.baseMediaDecodeTime/MAX_UINT32);lowerWordBaseMediaDecodeTime=Math.floor(track.baseMediaDecodeTime%MAX_UINT32);trackFragmentDecodeTime=box(types.tfdt,new Uint8Array([0x01,// version 1\n0x00,0x00,0x00,// flags\n// baseMediaDecodeTime\nupperWordBaseMediaDecodeTime>>>24&0xFF,upperWordBaseMediaDecodeTime>>>16&0xFF,upperWordBaseMediaDecodeTime>>>8&0xFF,upperWordBaseMediaDecodeTime&0xFF,lowerWordBaseMediaDecodeTime>>>24&0xFF,lowerWordBaseMediaDecodeTime>>>16&0xFF,lowerWordBaseMediaDecodeTime>>>8&0xFF,lowerWordBaseMediaDecodeTime&0xFF]));// the data offset specifies the number of bytes from the start of\n// the containing moof to the first payload byte of the associated\n// mdat\ndataOffset=32+// tfhd\n20+// tfdt\n8+// traf header\n16+// mfhd\n8+// moof header\n8;// mdat header\n// audio tracks require less metadata\nif(track.type==='audio'){trackFragmentRun=trun$1(track,dataOffset);return box(types.traf,trackFragmentHeader,trackFragmentDecodeTime,trackFragmentRun);}// video tracks should contain an independent and disposable samples\n// box (sdtp)\n// generate one and adjust offsets to match\nsampleDependencyTable=sdtp(track);trackFragmentRun=trun$1(track,sampleDependencyTable.length+dataOffset);return box(types.traf,trackFragmentHeader,trackFragmentDecodeTime,trackFragmentRun,sampleDependencyTable);};/**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */trak=function(track){track.duration=track.duration||0xffffffff;return box(types.trak,tkhd(track),mdia(track));};trex=function(track){var result=new Uint8Array([0x00,// version 0\n0x00,0x00,0x00,// flags\n(track.id&0xFF000000)>>24,(track.id&0xFF0000)>>16,(track.id&0xFF00)>>8,track.id&0xFF,// track_ID\n0x00,0x00,0x00,0x01,// default_sample_description_index\n0x00,0x00,0x00,0x00,// default_sample_duration\n0x00,0x00,0x00,0x00,// default_sample_size\n0x00,0x01,0x00,0x01// default_sample_flags\n]);// the last two bytes of default_sample_flags is the sample\n// degradation priority, a hint about the importance of this sample\n// relative to others. Lower the degradation priority for all sample\n// types other than video.\nif(track.type!=='video'){result[result.length-1]=0x00;}return box(types.trex,result);};(function(){var audioTrun,videoTrun,trunHeader;// This method assumes all samples are uniform. That is, if a\n// duration is present for the first sample, it will be present for\n// all subsequent samples.\n// see ISO/IEC 14496-12:2012, Section 8.8.8.1\ntrunHeader=function(samples,offset){var durationPresent=0,sizePresent=0,flagsPresent=0,compositionTimeOffset=0;// trun flag constants\nif(samples.length){if(samples[0].duration!==undefined){durationPresent=0x1;}if(samples[0].size!==undefined){sizePresent=0x2;}if(samples[0].flags!==undefined){flagsPresent=0x4;}if(samples[0].compositionTimeOffset!==undefined){compositionTimeOffset=0x8;}}return[0x00,// version 0\n0x00,durationPresent|sizePresent|flagsPresent|compositionTimeOffset,0x01,// flags\n(samples.length&0xFF000000)>>>24,(samples.length&0xFF0000)>>>16,(samples.length&0xFF00)>>>8,samples.length&0xFF,// sample_count\n(offset&0xFF000000)>>>24,(offset&0xFF0000)>>>16,(offset&0xFF00)>>>8,offset&0xFF// data_offset\n];};videoTrun=function(track,offset){var bytesOffest,bytes,header,samples,sample,i;samples=track.samples||[];offset+=8+12+16*samples.length;header=trunHeader(samples,offset);bytes=new Uint8Array(header.length+samples.length*16);bytes.set(header);bytesOffest=header.length;for(i=0;i<samples.length;i++){sample=samples[i];bytes[bytesOffest++]=(sample.duration&0xFF000000)>>>24;bytes[bytesOffest++]=(sample.duration&0xFF0000)>>>16;bytes[bytesOffest++]=(sample.duration&0xFF00)>>>8;bytes[bytesOffest++]=sample.duration&0xFF;// sample_duration\nbytes[bytesOffest++]=(sample.size&0xFF000000)>>>24;bytes[bytesOffest++]=(sample.size&0xFF0000)>>>16;bytes[bytesOffest++]=(sample.size&0xFF00)>>>8;bytes[bytesOffest++]=sample.size&0xFF;// sample_size\nbytes[bytesOffest++]=sample.flags.isLeading<<2|sample.flags.dependsOn;bytes[bytesOffest++]=sample.flags.isDependedOn<<6|sample.flags.hasRedundancy<<4|sample.flags.paddingValue<<1|sample.flags.isNonSyncSample;bytes[bytesOffest++]=sample.flags.degradationPriority&0xF0<<8;bytes[bytesOffest++]=sample.flags.degradationPriority&0x0F;// sample_flags\nbytes[bytesOffest++]=(sample.compositionTimeOffset&0xFF000000)>>>24;bytes[bytesOffest++]=(sample.compositionTimeOffset&0xFF0000)>>>16;bytes[bytesOffest++]=(sample.compositionTimeOffset&0xFF00)>>>8;bytes[bytesOffest++]=sample.compositionTimeOffset&0xFF;// sample_composition_time_offset\n}return box(types.trun,bytes);};audioTrun=function(track,offset){var bytes,bytesOffest,header,samples,sample,i;samples=track.samples||[];offset+=8+12+8*samples.length;header=trunHeader(samples,offset);bytes=new Uint8Array(header.length+samples.length*8);bytes.set(header);bytesOffest=header.length;for(i=0;i<samples.length;i++){sample=samples[i];bytes[bytesOffest++]=(sample.duration&0xFF000000)>>>24;bytes[bytesOffest++]=(sample.duration&0xFF0000)>>>16;bytes[bytesOffest++]=(sample.duration&0xFF00)>>>8;bytes[bytesOffest++]=sample.duration&0xFF;// sample_duration\nbytes[bytesOffest++]=(sample.size&0xFF000000)>>>24;bytes[bytesOffest++]=(sample.size&0xFF0000)>>>16;bytes[bytesOffest++]=(sample.size&0xFF00)>>>8;bytes[bytesOffest++]=sample.size&0xFF;// sample_size\n}return box(types.trun,bytes);};trun$1=function(track,offset){if(track.type==='audio'){return audioTrun(track,offset);}return videoTrun(track,offset);};})();var mp4Generator={ftyp:ftyp,mdat:mdat,moof:moof,moov:moov,initSegment:function(tracks){var fileType=ftyp(),movie=moov(tracks),result;result=new Uint8Array(fileType.byteLength+movie.byteLength);result.set(fileType);result.set(movie,fileType.byteLength);return result;}};/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */ // composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames=function(nalUnits){var i,currentNal,currentFrame=[],frames=[];// TODO added for LHLS, make sure this is OK\nframes.byteLength=0;frames.nalCount=0;frames.duration=0;currentFrame.byteLength=0;for(i=0;i<nalUnits.length;i++){currentNal=nalUnits[i];// Split on 'aud'-type nal units\nif(currentNal.nalUnitType==='access_unit_delimiter_rbsp'){// Since the very first nal unit is expected to be an AUD\n// only push to the frames array when currentFrame is not empty\nif(currentFrame.length){currentFrame.duration=currentNal.dts-currentFrame.dts;// TODO added for LHLS, make sure this is OK\nframes.byteLength+=currentFrame.byteLength;frames.nalCount+=currentFrame.length;frames.duration+=currentFrame.duration;frames.push(currentFrame);}currentFrame=[currentNal];currentFrame.byteLength=currentNal.data.byteLength;currentFrame.pts=currentNal.pts;currentFrame.dts=currentNal.dts;}else{// Specifically flag key frames for ease of use later\nif(currentNal.nalUnitType==='slice_layer_without_partitioning_rbsp_idr'){currentFrame.keyFrame=true;}currentFrame.duration=currentNal.dts-currentFrame.dts;currentFrame.byteLength+=currentNal.data.byteLength;currentFrame.push(currentNal);}}// For the last frame, use the duration of the previous frame if we\n// have nothing better to go on\nif(frames.length&&(!currentFrame.duration||currentFrame.duration<=0)){currentFrame.duration=frames[frames.length-1].duration;}// Push the final frame\n// TODO added for LHLS, make sure this is OK\nframes.byteLength+=currentFrame.byteLength;frames.nalCount+=currentFrame.length;frames.duration+=currentFrame.duration;frames.push(currentFrame);return frames;};// Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\nvar groupFramesIntoGops=function(frames){var i,currentFrame,currentGop=[],gops=[];// We must pre-set some of the values on the Gop since we\n// keep running totals of these values\ncurrentGop.byteLength=0;currentGop.nalCount=0;currentGop.duration=0;currentGop.pts=frames[0].pts;currentGop.dts=frames[0].dts;// store some metadata about all the Gops\ngops.byteLength=0;gops.nalCount=0;gops.duration=0;gops.pts=frames[0].pts;gops.dts=frames[0].dts;for(i=0;i<frames.length;i++){currentFrame=frames[i];if(currentFrame.keyFrame){// Since the very first frame is expected to be an keyframe\n// only push to the gops array when currentGop is not empty\nif(currentGop.length){gops.push(currentGop);gops.byteLength+=currentGop.byteLength;gops.nalCount+=currentGop.nalCount;gops.duration+=currentGop.duration;}currentGop=[currentFrame];currentGop.nalCount=currentFrame.length;currentGop.byteLength=currentFrame.byteLength;currentGop.pts=currentFrame.pts;currentGop.dts=currentFrame.dts;currentGop.duration=currentFrame.duration;}else{currentGop.duration+=currentFrame.duration;currentGop.nalCount+=currentFrame.length;currentGop.byteLength+=currentFrame.byteLength;currentGop.push(currentFrame);}}if(gops.length&&currentGop.duration<=0){currentGop.duration=gops[gops.length-1].duration;}gops.byteLength+=currentGop.byteLength;gops.nalCount+=currentGop.nalCount;gops.duration+=currentGop.duration;// push the final Gop\ngops.push(currentGop);return gops;};/*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */var extendFirstKeyFrame=function(gops){var currentGop;if(!gops[0][0].keyFrame&&gops.length>1){// Remove the first GOP\ncurrentGop=gops.shift();gops.byteLength-=currentGop.byteLength;gops.nalCount-=currentGop.nalCount;// Extend the first frame of what is now the\n// first gop to cover the time period of the\n// frames we just removed\ngops[0][0].dts=currentGop.dts;gops[0][0].pts=currentGop.pts;gops[0][0].duration+=currentGop.duration;}return gops;};/**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */var createDefaultSample=function(){return{size:0,flags:{isLeading:0,dependsOn:1,isDependedOn:0,hasRedundancy:0,degradationPriority:0,isNonSyncSample:1}};};/*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */var sampleForFrame=function(frame,dataOffset){var sample=createDefaultSample();sample.dataOffset=dataOffset;sample.compositionTimeOffset=frame.pts-frame.dts;sample.duration=frame.duration;sample.size=4*frame.length;// Space for nal unit size\nsample.size+=frame.byteLength;if(frame.keyFrame){sample.flags.dependsOn=2;sample.flags.isNonSyncSample=0;}return sample;};// generate the track's sample table from an array of gops\nvar generateSampleTable$1=function(gops,baseDataOffset){var h,i,sample,currentGop,currentFrame,dataOffset=baseDataOffset||0,samples=[];for(h=0;h<gops.length;h++){currentGop=gops[h];for(i=0;i<currentGop.length;i++){currentFrame=currentGop[i];sample=sampleForFrame(currentFrame,dataOffset);dataOffset+=sample.size;samples.push(sample);}}return samples;};// generate the track's raw mdat data from an array of gops\nvar concatenateNalData=function(gops){var h,i,j,currentGop,currentFrame,currentNal,dataOffset=0,nalsByteLength=gops.byteLength,numberOfNals=gops.nalCount,totalByteLength=nalsByteLength+4*numberOfNals,data=new Uint8Array(totalByteLength),view=new DataView(data.buffer);// For each Gop..\nfor(h=0;h<gops.length;h++){currentGop=gops[h];// For each Frame..\nfor(i=0;i<currentGop.length;i++){currentFrame=currentGop[i];// For each NAL..\nfor(j=0;j<currentFrame.length;j++){currentNal=currentFrame[j];view.setUint32(dataOffset,currentNal.data.byteLength);dataOffset+=4;data.set(currentNal.data,dataOffset);dataOffset+=currentNal.data.byteLength;}}}return data;};// generate the track's sample table from a frame\nvar generateSampleTableForFrame=function(frame,baseDataOffset){var sample,dataOffset=baseDataOffset||0,samples=[];sample=sampleForFrame(frame,dataOffset);samples.push(sample);return samples;};// generate the track's raw mdat data from a frame\nvar concatenateNalDataForFrame=function(frame){var i,currentNal,dataOffset=0,nalsByteLength=frame.byteLength,numberOfNals=frame.length,totalByteLength=nalsByteLength+4*numberOfNals,data=new Uint8Array(totalByteLength),view=new DataView(data.buffer);// For each NAL..\nfor(i=0;i<frame.length;i++){currentNal=frame[i];view.setUint32(dataOffset,currentNal.data.byteLength);dataOffset+=4;data.set(currentNal.data,dataOffset);dataOffset+=currentNal.data.byteLength;}return data;};var frameUtils$1={groupNalsIntoFrames:groupNalsIntoFrames,groupFramesIntoGops:groupFramesIntoGops,extendFirstKeyFrame:extendFirstKeyFrame,generateSampleTable:generateSampleTable$1,concatenateNalData:concatenateNalData,generateSampleTableForFrame:generateSampleTableForFrame,concatenateNalDataForFrame:concatenateNalDataForFrame};/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */var highPrefix=[33,16,5,32,164,27];var lowPrefix=[33,65,108,84,1,2,4,8,168,2,4,8,17,191,252];var zeroFill=function(count){var a=[];while(count--){a.push(0);}return a;};var makeTable=function(metaTable){return Object.keys(metaTable).reduce(function(obj,key){obj[key]=new Uint8Array(metaTable[key].reduce(function(arr,part){return arr.concat(part);},[]));return obj;},{});};var silence;var silence_1=function(){if(!silence){// Frames-of-silence to use for filling in missing AAC frames\nvar coneOfSilence={96000:[highPrefix,[227,64],zeroFill(154),[56]],88200:[highPrefix,[231],zeroFill(170),[56]],64000:[highPrefix,[248,192],zeroFill(240),[56]],48000:[highPrefix,[255,192],zeroFill(268),[55,148,128],zeroFill(54),[112]],44100:[highPrefix,[255,192],zeroFill(268),[55,163,128],zeroFill(84),[112]],32000:[highPrefix,[255,192],zeroFill(268),[55,234],zeroFill(226),[112]],24000:[highPrefix,[255,192],zeroFill(268),[55,255,128],zeroFill(268),[111,112],zeroFill(126),[224]],16000:[highPrefix,[255,192],zeroFill(268),[55,255,128],zeroFill(268),[111,255],zeroFill(269),[223,108],zeroFill(195),[1,192]],12000:[lowPrefix,zeroFill(268),[3,127,248],zeroFill(268),[6,255,240],zeroFill(268),[13,255,224],zeroFill(268),[27,253,128],zeroFill(259),[56]],11025:[lowPrefix,zeroFill(268),[3,127,248],zeroFill(268),[6,255,240],zeroFill(268),[13,255,224],zeroFill(268),[27,255,192],zeroFill(268),[55,175,128],zeroFill(108),[112]],8000:[lowPrefix,zeroFill(268),[3,121,16],zeroFill(47),[7]]};silence=makeTable(coneOfSilence);}return silence;};/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */var ONE_SECOND_IN_TS$4=90000,// 90kHz clock\nsecondsToVideoTs,secondsToAudioTs,videoTsToSeconds,audioTsToSeconds,audioTsToVideoTs,videoTsToAudioTs,metadataTsToSeconds;secondsToVideoTs=function(seconds){return seconds*ONE_SECOND_IN_TS$4;};secondsToAudioTs=function(seconds,sampleRate){return seconds*sampleRate;};videoTsToSeconds=function(timestamp){return timestamp/ONE_SECOND_IN_TS$4;};audioTsToSeconds=function(timestamp,sampleRate){return timestamp/sampleRate;};audioTsToVideoTs=function(timestamp,sampleRate){return secondsToVideoTs(audioTsToSeconds(timestamp,sampleRate));};videoTsToAudioTs=function(timestamp,sampleRate){return secondsToAudioTs(videoTsToSeconds(timestamp),sampleRate);};/**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */metadataTsToSeconds=function(timestamp,timelineStartPts,keepOriginalTimestamps){return videoTsToSeconds(keepOriginalTimestamps?timestamp:timestamp-timelineStartPts);};var clock$2={ONE_SECOND_IN_TS:ONE_SECOND_IN_TS$4,secondsToVideoTs:secondsToVideoTs,secondsToAudioTs:secondsToAudioTs,videoTsToSeconds:videoTsToSeconds,audioTsToSeconds:audioTsToSeconds,audioTsToVideoTs:audioTsToVideoTs,videoTsToAudioTs:videoTsToAudioTs,metadataTsToSeconds:metadataTsToSeconds};/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */var coneOfSilence=silence_1;var clock$1=clock$2;/**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */var sumFrameByteLengths=function(array){var i,currentObj,sum=0;// sum the byteLength's all each nal unit in the frame\nfor(i=0;i<array.length;i++){currentObj=array[i];sum+=currentObj.data.byteLength;}return sum;};// Possibly pad (prefix) the audio track with silence if appending this track\n// would lead to the introduction of a gap in the audio buffer\nvar prefixWithSilence=function(track,frames,audioAppendStartTs,videoBaseMediaDecodeTime){var baseMediaDecodeTimeTs,frameDuration=0,audioGapDuration=0,audioFillFrameCount=0,audioFillDuration=0,silentFrame,i,firstFrame;if(!frames.length){return;}baseMediaDecodeTimeTs=clock$1.audioTsToVideoTs(track.baseMediaDecodeTime,track.samplerate);// determine frame clock duration based on sample rate, round up to avoid overfills\nframeDuration=Math.ceil(clock$1.ONE_SECOND_IN_TS/(track.samplerate/1024));if(audioAppendStartTs&&videoBaseMediaDecodeTime){// insert the shortest possible amount (audio gap or audio to video gap)\naudioGapDuration=baseMediaDecodeTimeTs-Math.max(audioAppendStartTs,videoBaseMediaDecodeTime);// number of full frames in the audio gap\naudioFillFrameCount=Math.floor(audioGapDuration/frameDuration);audioFillDuration=audioFillFrameCount*frameDuration;}// don't attempt to fill gaps smaller than a single frame or larger\n// than a half second\nif(audioFillFrameCount<1||audioFillDuration>clock$1.ONE_SECOND_IN_TS/2){return;}silentFrame=coneOfSilence()[track.samplerate];if(!silentFrame){// we don't have a silent frame pregenerated for the sample rate, so use a frame\n// from the content instead\nsilentFrame=frames[0].data;}for(i=0;i<audioFillFrameCount;i++){firstFrame=frames[0];frames.splice(0,0,{data:silentFrame,dts:firstFrame.dts-frameDuration,pts:firstFrame.pts-frameDuration});}track.baseMediaDecodeTime-=Math.floor(clock$1.videoTsToAudioTs(audioFillDuration,track.samplerate));return audioFillDuration;};// If the audio segment extends before the earliest allowed dts\n// value, remove AAC frames until starts at or after the earliest\n// allowed DTS so that we don't end up with a negative baseMedia-\n// DecodeTime for the audio track\nvar trimAdtsFramesByEarliestDts=function(adtsFrames,track,earliestAllowedDts){if(track.minSegmentDts>=earliestAllowedDts){return adtsFrames;}// We will need to recalculate the earliest segment Dts\ntrack.minSegmentDts=Infinity;return adtsFrames.filter(function(currentFrame){// If this is an allowed frame, keep it and record it's Dts\nif(currentFrame.dts>=earliestAllowedDts){track.minSegmentDts=Math.min(track.minSegmentDts,currentFrame.dts);track.minSegmentPts=track.minSegmentDts;return true;}// Otherwise, discard it\nreturn false;});};// generate the track's raw mdat data from an array of frames\nvar generateSampleTable=function(frames){var i,currentFrame,samples=[];for(i=0;i<frames.length;i++){currentFrame=frames[i];samples.push({size:currentFrame.data.byteLength,duration:1024// For AAC audio, all samples contain 1024 samples\n});}return samples;};// generate the track's sample table from an array of frames\nvar concatenateFrameData=function(frames){var i,currentFrame,dataOffset=0,data=new Uint8Array(sumFrameByteLengths(frames));for(i=0;i<frames.length;i++){currentFrame=frames[i];data.set(currentFrame.data,dataOffset);dataOffset+=currentFrame.data.byteLength;}return data;};var audioFrameUtils$1={prefixWithSilence:prefixWithSilence,trimAdtsFramesByEarliestDts:trimAdtsFramesByEarliestDts,generateSampleTable:generateSampleTable,concatenateFrameData:concatenateFrameData};/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */var ONE_SECOND_IN_TS$3=clock$2.ONE_SECOND_IN_TS;/**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */var collectDtsInfo=function(track,data){if(typeof data.pts==='number'){if(track.timelineStartInfo.pts===undefined){track.timelineStartInfo.pts=data.pts;}if(track.minSegmentPts===undefined){track.minSegmentPts=data.pts;}else{track.minSegmentPts=Math.min(track.minSegmentPts,data.pts);}if(track.maxSegmentPts===undefined){track.maxSegmentPts=data.pts;}else{track.maxSegmentPts=Math.max(track.maxSegmentPts,data.pts);}}if(typeof data.dts==='number'){if(track.timelineStartInfo.dts===undefined){track.timelineStartInfo.dts=data.dts;}if(track.minSegmentDts===undefined){track.minSegmentDts=data.dts;}else{track.minSegmentDts=Math.min(track.minSegmentDts,data.dts);}if(track.maxSegmentDts===undefined){track.maxSegmentDts=data.dts;}else{track.maxSegmentDts=Math.max(track.maxSegmentDts,data.dts);}}};/**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */var clearDtsInfo=function(track){delete track.minSegmentDts;delete track.maxSegmentDts;delete track.minSegmentPts;delete track.maxSegmentPts;};/**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */var calculateTrackBaseMediaDecodeTime=function(track,keepOriginalTimestamps){var baseMediaDecodeTime,scale,minSegmentDts=track.minSegmentDts;// Optionally adjust the time so the first segment starts at zero.\nif(!keepOriginalTimestamps){minSegmentDts-=track.timelineStartInfo.dts;}// track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n// we want the start of the first segment to be placed\nbaseMediaDecodeTime=track.timelineStartInfo.baseMediaDecodeTime;// Add to that the distance this segment is from the very first\nbaseMediaDecodeTime+=minSegmentDts;// baseMediaDecodeTime must not become negative\nbaseMediaDecodeTime=Math.max(0,baseMediaDecodeTime);if(track.type==='audio'){// Audio has a different clock equal to the sampling_rate so we need to\n// scale the PTS values into the clock rate of the track\nscale=track.samplerate/ONE_SECOND_IN_TS$3;baseMediaDecodeTime*=scale;baseMediaDecodeTime=Math.floor(baseMediaDecodeTime);}return baseMediaDecodeTime;};var trackDecodeInfo$1={clearDtsInfo:clearDtsInfo,calculateTrackBaseMediaDecodeTime:calculateTrackBaseMediaDecodeTime,collectDtsInfo:collectDtsInfo};/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */ // payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35=4,RBSP_TRAILING_BITS=128;/**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */var parseSei=function(bytes){var i=0,result={payloadType:-1,payloadSize:0},payloadType=0,payloadSize=0;// go through the sei_rbsp parsing each each individual sei_message\nwhile(i<bytes.byteLength){// stop once we have hit the end of the sei_rbsp\nif(bytes[i]===RBSP_TRAILING_BITS){break;}// Parse payload type\nwhile(bytes[i]===0xFF){payloadType+=255;i++;}payloadType+=bytes[i++];// Parse payload size\nwhile(bytes[i]===0xFF){payloadSize+=255;i++;}payloadSize+=bytes[i++];// this sei_message is a 608/708 caption so save it and break\n// there can only ever be one caption message in a frame's sei\nif(!result.payload&&payloadType===USER_DATA_REGISTERED_ITU_T_T35){var userIdentifier=String.fromCharCode(bytes[i+3],bytes[i+4],bytes[i+5],bytes[i+6]);if(userIdentifier==='GA94'){result.payloadType=payloadType;result.payloadSize=payloadSize;result.payload=bytes.subarray(i,i+payloadSize);break;}else{result.payload=void 0;}}// skip the payload and parse the next message\ni+=payloadSize;payloadType=0;payloadSize=0;}return result;};// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData=function(sei){// itu_t_t35_contry_code must be 181 (United States) for\n// captions\nif(sei.payload[0]!==181){return null;}// itu_t_t35_provider_code should be 49 (ATSC) for captions\nif((sei.payload[1]<<8|sei.payload[2])!==49){return null;}// the user_identifier should be \"GA94\" to indicate ATSC1 data\nif(String.fromCharCode(sei.payload[3],sei.payload[4],sei.payload[5],sei.payload[6])!=='GA94'){return null;}// finally, user_data_type_code should be 0x03 for caption data\nif(sei.payload[7]!==0x03){return null;}// return the user_data_type_structure and strip the trailing\n// marker bits\nreturn sei.payload.subarray(8,sei.payload.length-1);};// see CEA-708-D, section 4.4\nvar parseCaptionPackets=function(pts,userData){var results=[],i,count,offset,data;// if this is just filler, return immediately\nif(!(userData[0]&0x40)){return results;}// parse out the cc_data_1 and cc_data_2 fields\ncount=userData[0]&0x1f;for(i=0;i<count;i++){offset=i*3;data={type:userData[offset+2]&0x03,pts:pts};// capture cc data when cc_valid is 1\nif(userData[offset+2]&0x04){data.ccData=userData[offset+3]<<8|userData[offset+4];results.push(data);}}return results;};var discardEmulationPreventionBytes$1=function(data){var length=data.byteLength,emulationPreventionBytesPositions=[],i=1,newLength,newData;// Find all `Emulation Prevention Bytes`\nwhile(i<length-2){if(data[i]===0&&data[i+1]===0&&data[i+2]===0x03){emulationPreventionBytesPositions.push(i+2);i+=2;}else{i++;}}// If no Emulation Prevention Bytes were found just return the original\n// array\nif(emulationPreventionBytesPositions.length===0){return data;}// Create a new array to hold the NAL unit data\nnewLength=length-emulationPreventionBytesPositions.length;newData=new Uint8Array(newLength);var sourceIndex=0;for(i=0;i<newLength;sourceIndex++,i++){if(sourceIndex===emulationPreventionBytesPositions[0]){// Skip this byte\nsourceIndex++;// Remove this position index\nemulationPreventionBytesPositions.shift();}newData[i]=data[sourceIndex];}return newData;};// exports\nvar captionPacketParser={parseSei:parseSei,parseUserData:parseUserData,parseCaptionPackets:parseCaptionPackets,discardEmulationPreventionBytes:discardEmulationPreventionBytes$1,USER_DATA_REGISTERED_ITU_T_T35:USER_DATA_REGISTERED_ITU_T_T35};/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */ // Link To Transport\n// -----------------\nvar Stream$7=stream;var cea708Parser=captionPacketParser;var CaptionStream$2=function(options){options=options||{};CaptionStream$2.prototype.init.call(this);// parse708captions flag, default to true\nthis.parse708captions_=typeof options.parse708captions==='boolean'?options.parse708captions:true;this.captionPackets_=[];this.ccStreams_=[new Cea608Stream(0,0),// eslint-disable-line no-use-before-define\nnew Cea608Stream(0,1),// eslint-disable-line no-use-before-define\nnew Cea608Stream(1,0),// eslint-disable-line no-use-before-define\nnew Cea608Stream(1,1)// eslint-disable-line no-use-before-define\n];if(this.parse708captions_){this.cc708Stream_=new Cea708Stream({captionServices:options.captionServices});// eslint-disable-line no-use-before-define\n}this.reset();// forward data and done events from CCs to this CaptionStream\nthis.ccStreams_.forEach(function(cc){cc.on('data',this.trigger.bind(this,'data'));cc.on('partialdone',this.trigger.bind(this,'partialdone'));cc.on('done',this.trigger.bind(this,'done'));},this);if(this.parse708captions_){this.cc708Stream_.on('data',this.trigger.bind(this,'data'));this.cc708Stream_.on('partialdone',this.trigger.bind(this,'partialdone'));this.cc708Stream_.on('done',this.trigger.bind(this,'done'));}};CaptionStream$2.prototype=new Stream$7();CaptionStream$2.prototype.push=function(event){var sei,userData,newCaptionPackets;// only examine SEI NALs\nif(event.nalUnitType!=='sei_rbsp'){return;}// parse the sei\nsei=cea708Parser.parseSei(event.escapedRBSP);// no payload data, skip\nif(!sei.payload){return;}// ignore everything but user_data_registered_itu_t_t35\nif(sei.payloadType!==cea708Parser.USER_DATA_REGISTERED_ITU_T_T35){return;}// parse out the user data payload\nuserData=cea708Parser.parseUserData(sei);// ignore unrecognized userData\nif(!userData){return;}// Sometimes, the same segment # will be downloaded twice. To stop the\n// caption data from being processed twice, we track the latest dts we've\n// received and ignore everything with a dts before that. However, since\n// data for a specific dts can be split across packets on either side of\n// a segment boundary, we need to make sure we *don't* ignore the packets\n// from the *next* segment that have dts === this.latestDts_. By constantly\n// tracking the number of packets received with dts === this.latestDts_, we\n// know how many should be ignored once we start receiving duplicates.\nif(event.dts<this.latestDts_){// We've started getting older data, so set the flag.\nthis.ignoreNextEqualDts_=true;return;}else if(event.dts===this.latestDts_&&this.ignoreNextEqualDts_){this.numSameDts_--;if(!this.numSameDts_){// We've received the last duplicate packet, time to start processing again\nthis.ignoreNextEqualDts_=false;}return;}// parse out CC data packets and save them for later\nnewCaptionPackets=cea708Parser.parseCaptionPackets(event.pts,userData);this.captionPackets_=this.captionPackets_.concat(newCaptionPackets);if(this.latestDts_!==event.dts){this.numSameDts_=0;}this.numSameDts_++;this.latestDts_=event.dts;};CaptionStream$2.prototype.flushCCStreams=function(flushType){this.ccStreams_.forEach(function(cc){return flushType==='flush'?cc.flush():cc.partialFlush();},this);};CaptionStream$2.prototype.flushStream=function(flushType){// make sure we actually parsed captions before proceeding\nif(!this.captionPackets_.length){this.flushCCStreams(flushType);return;}// In Chrome, the Array#sort function is not stable so add a\n// presortIndex that we can use to ensure we get a stable-sort\nthis.captionPackets_.forEach(function(elem,idx){elem.presortIndex=idx;});// sort caption byte-pairs based on their PTS values\nthis.captionPackets_.sort(function(a,b){if(a.pts===b.pts){return a.presortIndex-b.presortIndex;}return a.pts-b.pts;});this.captionPackets_.forEach(function(packet){if(packet.type<2){// Dispatch packet to the right Cea608Stream\nthis.dispatchCea608Packet(packet);}else{// Dispatch packet to the Cea708Stream\nthis.dispatchCea708Packet(packet);}},this);this.captionPackets_.length=0;this.flushCCStreams(flushType);};CaptionStream$2.prototype.flush=function(){return this.flushStream('flush');};// Only called if handling partial data\nCaptionStream$2.prototype.partialFlush=function(){return this.flushStream('partialFlush');};CaptionStream$2.prototype.reset=function(){this.latestDts_=null;this.ignoreNextEqualDts_=false;this.numSameDts_=0;this.activeCea608Channel_=[null,null];this.ccStreams_.forEach(function(ccStream){ccStream.reset();});};// From the CEA-608 spec:\n/*\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n   * to switch to captioning or Text.\n  */ // With that in mind, we ignore any data between an XDS control code and a\n// subsequent closed-captioning control code.\nCaptionStream$2.prototype.dispatchCea608Packet=function(packet){// NOTE: packet.type is the CEA608 field\nif(this.setsTextOrXDSActive(packet)){this.activeCea608Channel_[packet.type]=null;}else if(this.setsChannel1Active(packet)){this.activeCea608Channel_[packet.type]=0;}else if(this.setsChannel2Active(packet)){this.activeCea608Channel_[packet.type]=1;}if(this.activeCea608Channel_[packet.type]===null){// If we haven't received anything to set the active channel, or the\n// packets are Text/XDS data, discard the data; we don't want jumbled\n// captions\nreturn;}this.ccStreams_[(packet.type<<1)+this.activeCea608Channel_[packet.type]].push(packet);};CaptionStream$2.prototype.setsChannel1Active=function(packet){return(packet.ccData&0x7800)===0x1000;};CaptionStream$2.prototype.setsChannel2Active=function(packet){return(packet.ccData&0x7800)===0x1800;};CaptionStream$2.prototype.setsTextOrXDSActive=function(packet){return(packet.ccData&0x7100)===0x0100||(packet.ccData&0x78fe)===0x102a||(packet.ccData&0x78fe)===0x182a;};CaptionStream$2.prototype.dispatchCea708Packet=function(packet){if(this.parse708captions_){this.cc708Stream_.push(packet);}};// ----------------------\n// Session to Application\n// ----------------------\n// This hash maps special and extended character codes to their\n// proper Unicode equivalent. The first one-byte key is just a\n// non-standard character code. The two-byte keys that follow are\n// the extended CEA708 character codes, along with the preceding\n// 0x10 extended character byte to distinguish these codes from\n// non-extended character codes. Every CEA708 character code that\n// is not in this object maps directly to a standard unicode\n// character code.\n// The transparent space and non-breaking transparent space are\n// technically not fully supported since there is no code to\n// make them transparent, so they have normal non-transparent\n// stand-ins.\n// The special closed caption (CC) character isn't a standard\n// unicode character, so a fairly similar unicode character was\n// chosen in it's place.\nvar CHARACTER_TRANSLATION_708={0x7f:0x266a,// ♪\n0x1020:0x20,// Transparent Space\n0x1021:0xa0,// Nob-breaking Transparent Space\n0x1025:0x2026,// …\n0x102a:0x0160,// Š\n0x102c:0x0152,// Œ\n0x1030:0x2588,// █\n0x1031:0x2018,// ‘\n0x1032:0x2019,// ’\n0x1033:0x201c,// “\n0x1034:0x201d,// ”\n0x1035:0x2022,// •\n0x1039:0x2122,// ™\n0x103a:0x0161,// š\n0x103c:0x0153,// œ\n0x103d:0x2120,// ℠\n0x103f:0x0178,// Ÿ\n0x1076:0x215b,// ⅛\n0x1077:0x215c,// ⅜\n0x1078:0x215d,// ⅝\n0x1079:0x215e,// ⅞\n0x107a:0x23d0,// ⏐\n0x107b:0x23a4,// ⎤\n0x107c:0x23a3,// ⎣\n0x107d:0x23af,// ⎯\n0x107e:0x23a6,// ⎦\n0x107f:0x23a1,// ⎡\n0x10a0:0x3138// ㄸ (CC char)\n};var get708CharFromCode=function(code){var newCode=CHARACTER_TRANSLATION_708[code]||code;if(code&0x1000&&code===newCode){// Invalid extended code\nreturn'';}return String.fromCharCode(newCode);};var within708TextBlock=function(b){return 0x20<=b&&b<=0x7f||0xa0<=b&&b<=0xff;};var Cea708Window=function(windowNum){this.windowNum=windowNum;this.reset();};Cea708Window.prototype.reset=function(){this.clearText();this.pendingNewLine=false;this.winAttr={};this.penAttr={};this.penLoc={};this.penColor={};// These default values are arbitrary,\n// defineWindow will usually override them\nthis.visible=0;this.rowLock=0;this.columnLock=0;this.priority=0;this.relativePositioning=0;this.anchorVertical=0;this.anchorHorizontal=0;this.anchorPoint=0;this.rowCount=1;this.virtualRowCount=this.rowCount+1;this.columnCount=41;this.windowStyle=0;this.penStyle=0;};Cea708Window.prototype.getText=function(){return this.rows.join('\\n');};Cea708Window.prototype.clearText=function(){this.rows=[''];this.rowIdx=0;};Cea708Window.prototype.newLine=function(pts){if(this.rows.length>=this.virtualRowCount&&typeof this.beforeRowOverflow==='function'){this.beforeRowOverflow(pts);}if(this.rows.length>0){this.rows.push('');this.rowIdx++;}// Show all virtual rows since there's no visible scrolling\nwhile(this.rows.length>this.virtualRowCount){this.rows.shift();this.rowIdx--;}};Cea708Window.prototype.isEmpty=function(){if(this.rows.length===0){return true;}else if(this.rows.length===1){return this.rows[0]==='';}return false;};Cea708Window.prototype.addText=function(text){this.rows[this.rowIdx]+=text;};Cea708Window.prototype.backspace=function(){if(!this.isEmpty()){var row=this.rows[this.rowIdx];this.rows[this.rowIdx]=row.substr(0,row.length-1);}};var Cea708Service=function(serviceNum,encoding,stream){this.serviceNum=serviceNum;this.text='';this.currentWindow=new Cea708Window(-1);this.windows=[];this.stream=stream;// Try to setup a TextDecoder if an `encoding` value was provided\nif(typeof encoding==='string'){this.createTextDecoder(encoding);}};/**\n   * Initialize service windows\n   * Must be run before service use\n   *\n   * @param  {Integer}  pts               PTS value\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n   */Cea708Service.prototype.init=function(pts,beforeRowOverflow){this.startPts=pts;for(var win=0;win<8;win++){this.windows[win]=new Cea708Window(win);if(typeof beforeRowOverflow==='function'){this.windows[win].beforeRowOverflow=beforeRowOverflow;}}};/**\n   * Set current window of service to be affected by commands\n   *\n   * @param  {Integer} windowNum Window number\n   */Cea708Service.prototype.setCurrentWindow=function(windowNum){this.currentWindow=this.windows[windowNum];};/**\n   * Try to create a TextDecoder if it is natively supported\n   */Cea708Service.prototype.createTextDecoder=function(encoding){if(typeof TextDecoder==='undefined'){this.stream.trigger('log',{level:'warn',message:'The `encoding` option is unsupported without TextDecoder support'});}else{try{this.textDecoder_=new TextDecoder(encoding);}catch(error){this.stream.trigger('log',{level:'warn',message:'TextDecoder could not be created with '+encoding+' encoding. '+error});}}};var Cea708Stream=function(options){options=options||{};Cea708Stream.prototype.init.call(this);var self=this;var captionServices=options.captionServices||{};var captionServiceEncodings={};var serviceProps;// Get service encodings from captionServices option block\nObject.keys(captionServices).forEach(serviceName=>{serviceProps=captionServices[serviceName];if(/^SERVICE/.test(serviceName)){captionServiceEncodings[serviceName]=serviceProps.encoding;}});this.serviceEncodings=captionServiceEncodings;this.current708Packet=null;this.services={};this.push=function(packet){if(packet.type===3){// 708 packet start\nself.new708Packet();self.add708Bytes(packet);}else{if(self.current708Packet===null){// This should only happen at the start of a file if there's no packet start.\nself.new708Packet();}self.add708Bytes(packet);}};};Cea708Stream.prototype=new Stream$7();/**\n   * Push current 708 packet, create new 708 packet.\n   */Cea708Stream.prototype.new708Packet=function(){if(this.current708Packet!==null){this.push708Packet();}this.current708Packet={data:[],ptsVals:[]};};/**\n   * Add pts and both bytes from packet into current 708 packet.\n   */Cea708Stream.prototype.add708Bytes=function(packet){var data=packet.ccData;var byte0=data>>>8;var byte1=data&0xff;// I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n// that service blocks will always line up with byte pairs.\nthis.current708Packet.ptsVals.push(packet.pts);this.current708Packet.data.push(byte0);this.current708Packet.data.push(byte1);};/**\n   * Parse completed 708 packet into service blocks and push each service block.\n   */Cea708Stream.prototype.push708Packet=function(){var packet708=this.current708Packet;var packetData=packet708.data;var serviceNum=null;var blockSize=null;var i=0;var b=packetData[i++];packet708.seq=b>>6;packet708.sizeCode=b&0x3f;// 0b00111111;\nfor(;i<packetData.length;i++){b=packetData[i++];serviceNum=b>>5;blockSize=b&0x1f;// 0b00011111\nif(serviceNum===7&&blockSize>0){// Extended service num\nb=packetData[i++];serviceNum=b;}this.pushServiceBlock(serviceNum,i,blockSize);if(blockSize>0){i+=blockSize-1;}}};/**\n   * Parse service block, execute commands, read text.\n   *\n   * Note: While many of these commands serve important purposes,\n   * many others just parse out the parameters or attributes, but\n   * nothing is done with them because this is not a full and complete\n   * implementation of the entire 708 spec.\n   *\n   * @param  {Integer} serviceNum Service number\n   * @param  {Integer} start      Start index of the 708 packet data\n   * @param  {Integer} size       Block size\n   */Cea708Stream.prototype.pushServiceBlock=function(serviceNum,start,size){var b;var i=start;var packetData=this.current708Packet.data;var service=this.services[serviceNum];if(!service){service=this.initService(serviceNum,i);}for(;i<start+size&&i<packetData.length;i++){b=packetData[i];if(within708TextBlock(b)){i=this.handleText(i,service);}else if(b===0x18){i=this.multiByteCharacter(i,service);}else if(b===0x10){i=this.extendedCommands(i,service);}else if(0x80<=b&&b<=0x87){i=this.setCurrentWindow(i,service);}else if(0x98<=b&&b<=0x9f){i=this.defineWindow(i,service);}else if(b===0x88){i=this.clearWindows(i,service);}else if(b===0x8c){i=this.deleteWindows(i,service);}else if(b===0x89){i=this.displayWindows(i,service);}else if(b===0x8a){i=this.hideWindows(i,service);}else if(b===0x8b){i=this.toggleWindows(i,service);}else if(b===0x97){i=this.setWindowAttributes(i,service);}else if(b===0x90){i=this.setPenAttributes(i,service);}else if(b===0x91){i=this.setPenColor(i,service);}else if(b===0x92){i=this.setPenLocation(i,service);}else if(b===0x8f){service=this.reset(i,service);}else if(b===0x08){// BS: Backspace\nservice.currentWindow.backspace();}else if(b===0x0c){// FF: Form feed\nservice.currentWindow.clearText();}else if(b===0x0d){// CR: Carriage return\nservice.currentWindow.pendingNewLine=true;}else if(b===0x0e){// HCR: Horizontal carriage return\nservice.currentWindow.clearText();}else if(b===0x8d){// DLY: Delay, nothing to do\ni++;}else;}};/**\n   * Execute an extended command\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */Cea708Stream.prototype.extendedCommands=function(i,service){var packetData=this.current708Packet.data;var b=packetData[++i];if(within708TextBlock(b)){i=this.handleText(i,service,{isExtended:true});}return i;};/**\n   * Get PTS value of a given byte index\n   *\n   * @param  {Integer} byteIndex  Index of the byte\n   * @return {Integer}            PTS\n   */Cea708Stream.prototype.getPts=function(byteIndex){// There's 1 pts value per 2 bytes\nreturn this.current708Packet.ptsVals[Math.floor(byteIndex/2)];};/**\n   * Initializes a service\n   *\n   * @param  {Integer} serviceNum Service number\n   * @return {Service}            Initialized service object\n   */Cea708Stream.prototype.initService=function(serviceNum,i){var serviceName='SERVICE'+serviceNum;var self=this;var serviceName;var encoding;if(serviceName in this.serviceEncodings){encoding=this.serviceEncodings[serviceName];}this.services[serviceNum]=new Cea708Service(serviceNum,encoding,self);this.services[serviceNum].init(this.getPts(i),function(pts){self.flushDisplayed(pts,self.services[serviceNum]);});return this.services[serviceNum];};/**\n   * Execute text writing to current window\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */Cea708Stream.prototype.handleText=function(i,service,options){var isExtended=options&&options.isExtended;var isMultiByte=options&&options.isMultiByte;var packetData=this.current708Packet.data;var extended=isExtended?0x1000:0x0000;var currentByte=packetData[i];var nextByte=packetData[i+1];var win=service.currentWindow;var char;var charCodeArray;// Use the TextDecoder if one was created for this service\nif(service.textDecoder_&&!isExtended){if(isMultiByte){charCodeArray=[currentByte,nextByte];i++;}else{charCodeArray=[currentByte];}char=service.textDecoder_.decode(new Uint8Array(charCodeArray));}else{char=get708CharFromCode(extended|currentByte);}if(win.pendingNewLine&&!win.isEmpty()){win.newLine(this.getPts(i));}win.pendingNewLine=false;win.addText(char);return i;};/**\n   * Handle decoding of multibyte character\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */Cea708Stream.prototype.multiByteCharacter=function(i,service){var packetData=this.current708Packet.data;var firstByte=packetData[i+1];var secondByte=packetData[i+2];if(within708TextBlock(firstByte)&&within708TextBlock(secondByte)){i=this.handleText(++i,service,{isMultiByte:true});}return i;};/**\n   * Parse and execute the CW# command.\n   *\n   * Set the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */Cea708Stream.prototype.setCurrentWindow=function(i,service){var packetData=this.current708Packet.data;var b=packetData[i];var windowNum=b&0x07;service.setCurrentWindow(windowNum);return i;};/**\n   * Parse and execute the DF# command.\n   *\n   * Define a window and set it as the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */Cea708Stream.prototype.defineWindow=function(i,service){var packetData=this.current708Packet.data;var b=packetData[i];var windowNum=b&0x07;service.setCurrentWindow(windowNum);var win=service.currentWindow;b=packetData[++i];win.visible=(b&0x20)>>5;// v\nwin.rowLock=(b&0x10)>>4;// rl\nwin.columnLock=(b&0x08)>>3;// cl\nwin.priority=b&0x07;// p\nb=packetData[++i];win.relativePositioning=(b&0x80)>>7;// rp\nwin.anchorVertical=b&0x7f;// av\nb=packetData[++i];win.anchorHorizontal=b;// ah\nb=packetData[++i];win.anchorPoint=(b&0xf0)>>4;// ap\nwin.rowCount=b&0x0f;// rc\nb=packetData[++i];win.columnCount=b&0x3f;// cc\nb=packetData[++i];win.windowStyle=(b&0x38)>>3;// ws\nwin.penStyle=b&0x07;// ps\n// The spec says there are (rowCount+1) \"virtual rows\"\nwin.virtualRowCount=win.rowCount+1;return i;};/**\n   * Parse and execute the SWA command.\n   *\n   * Set attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */Cea708Stream.prototype.setWindowAttributes=function(i,service){var packetData=this.current708Packet.data;var b=packetData[i];var winAttr=service.currentWindow.winAttr;b=packetData[++i];winAttr.fillOpacity=(b&0xc0)>>6;// fo\nwinAttr.fillRed=(b&0x30)>>4;// fr\nwinAttr.fillGreen=(b&0x0c)>>2;// fg\nwinAttr.fillBlue=b&0x03;// fb\nb=packetData[++i];winAttr.borderType=(b&0xc0)>>6;// bt\nwinAttr.borderRed=(b&0x30)>>4;// br\nwinAttr.borderGreen=(b&0x0c)>>2;// bg\nwinAttr.borderBlue=b&0x03;// bb\nb=packetData[++i];winAttr.borderType+=(b&0x80)>>5;// bt\nwinAttr.wordWrap=(b&0x40)>>6;// ww\nwinAttr.printDirection=(b&0x30)>>4;// pd\nwinAttr.scrollDirection=(b&0x0c)>>2;// sd\nwinAttr.justify=b&0x03;// j\nb=packetData[++i];winAttr.effectSpeed=(b&0xf0)>>4;// es\nwinAttr.effectDirection=(b&0x0c)>>2;// ed\nwinAttr.displayEffect=b&0x03;// de\nreturn i;};/**\n   * Gather text from all displayed windows and push a caption to output.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   */Cea708Stream.prototype.flushDisplayed=function(pts,service){var displayedText=[];// TODO: Positioning not supported, displaying multiple windows will not necessarily\n// display text in the correct order, but sample files so far have not shown any issue.\nfor(var winId=0;winId<8;winId++){if(service.windows[winId].visible&&!service.windows[winId].isEmpty()){displayedText.push(service.windows[winId].getText());}}service.endPts=pts;service.text=displayedText.join('\\n\\n');this.pushCaption(service);service.startPts=pts;};/**\n   * Push a caption to output if the caption contains text.\n   *\n   * @param  {Service} service  The service object to be affected\n   */Cea708Stream.prototype.pushCaption=function(service){if(service.text!==''){this.trigger('data',{startPts:service.startPts,endPts:service.endPts,text:service.text,stream:'cc708_'+service.serviceNum});service.text='';service.startPts=service.endPts;}};/**\n   * Parse and execute the DSW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */Cea708Stream.prototype.displayWindows=function(i,service){var packetData=this.current708Packet.data;var b=packetData[++i];var pts=this.getPts(i);this.flushDisplayed(pts,service);for(var winId=0;winId<8;winId++){if(b&0x01<<winId){service.windows[winId].visible=1;}}return i;};/**\n   * Parse and execute the HDW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */Cea708Stream.prototype.hideWindows=function(i,service){var packetData=this.current708Packet.data;var b=packetData[++i];var pts=this.getPts(i);this.flushDisplayed(pts,service);for(var winId=0;winId<8;winId++){if(b&0x01<<winId){service.windows[winId].visible=0;}}return i;};/**\n   * Parse and execute the TGW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */Cea708Stream.prototype.toggleWindows=function(i,service){var packetData=this.current708Packet.data;var b=packetData[++i];var pts=this.getPts(i);this.flushDisplayed(pts,service);for(var winId=0;winId<8;winId++){if(b&0x01<<winId){service.windows[winId].visible^=1;}}return i;};/**\n   * Parse and execute the CLW command.\n   *\n   * Clear text of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */Cea708Stream.prototype.clearWindows=function(i,service){var packetData=this.current708Packet.data;var b=packetData[++i];var pts=this.getPts(i);this.flushDisplayed(pts,service);for(var winId=0;winId<8;winId++){if(b&0x01<<winId){service.windows[winId].clearText();}}return i;};/**\n   * Parse and execute the DLW command.\n   *\n   * Re-initialize windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */Cea708Stream.prototype.deleteWindows=function(i,service){var packetData=this.current708Packet.data;var b=packetData[++i];var pts=this.getPts(i);this.flushDisplayed(pts,service);for(var winId=0;winId<8;winId++){if(b&0x01<<winId){service.windows[winId].reset();}}return i;};/**\n   * Parse and execute the SPA command.\n   *\n   * Set pen attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */Cea708Stream.prototype.setPenAttributes=function(i,service){var packetData=this.current708Packet.data;var b=packetData[i];var penAttr=service.currentWindow.penAttr;b=packetData[++i];penAttr.textTag=(b&0xf0)>>4;// tt\npenAttr.offset=(b&0x0c)>>2;// o\npenAttr.penSize=b&0x03;// s\nb=packetData[++i];penAttr.italics=(b&0x80)>>7;// i\npenAttr.underline=(b&0x40)>>6;// u\npenAttr.edgeType=(b&0x38)>>3;// et\npenAttr.fontStyle=b&0x07;// fs\nreturn i;};/**\n   * Parse and execute the SPC command.\n   *\n   * Set pen color of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */Cea708Stream.prototype.setPenColor=function(i,service){var packetData=this.current708Packet.data;var b=packetData[i];var penColor=service.currentWindow.penColor;b=packetData[++i];penColor.fgOpacity=(b&0xc0)>>6;// fo\npenColor.fgRed=(b&0x30)>>4;// fr\npenColor.fgGreen=(b&0x0c)>>2;// fg\npenColor.fgBlue=b&0x03;// fb\nb=packetData[++i];penColor.bgOpacity=(b&0xc0)>>6;// bo\npenColor.bgRed=(b&0x30)>>4;// br\npenColor.bgGreen=(b&0x0c)>>2;// bg\npenColor.bgBlue=b&0x03;// bb\nb=packetData[++i];penColor.edgeRed=(b&0x30)>>4;// er\npenColor.edgeGreen=(b&0x0c)>>2;// eg\npenColor.edgeBlue=b&0x03;// eb\nreturn i;};/**\n   * Parse and execute the SPL command.\n   *\n   * Set pen location of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */Cea708Stream.prototype.setPenLocation=function(i,service){var packetData=this.current708Packet.data;var b=packetData[i];var penLoc=service.currentWindow.penLoc;// Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\nservice.currentWindow.pendingNewLine=true;b=packetData[++i];penLoc.row=b&0x0f;// r\nb=packetData[++i];penLoc.column=b&0x3f;// c\nreturn i;};/**\n   * Execute the RST command.\n   *\n   * Reset service to a clean slate. Re-initialize.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Service}          Re-initialized service\n   */Cea708Stream.prototype.reset=function(i,service){var pts=this.getPts(i);this.flushDisplayed(pts,service);return this.initService(service.serviceNum,i);};// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION={0x2a:0xe1,// á\n0x5c:0xe9,// é\n0x5e:0xed,// í\n0x5f:0xf3,// ó\n0x60:0xfa,// ú\n0x7b:0xe7,// ç\n0x7c:0xf7,// ÷\n0x7d:0xd1,// Ñ\n0x7e:0xf1,// ñ\n0x7f:0x2588,// █\n0x0130:0xae,// ®\n0x0131:0xb0,// °\n0x0132:0xbd,// ½\n0x0133:0xbf,// ¿\n0x0134:0x2122,// ™\n0x0135:0xa2,// ¢\n0x0136:0xa3,// £\n0x0137:0x266a,// ♪\n0x0138:0xe0,// à\n0x0139:0xa0,//\n0x013a:0xe8,// è\n0x013b:0xe2,// â\n0x013c:0xea,// ê\n0x013d:0xee,// î\n0x013e:0xf4,// ô\n0x013f:0xfb,// û\n0x0220:0xc1,// Á\n0x0221:0xc9,// É\n0x0222:0xd3,// Ó\n0x0223:0xda,// Ú\n0x0224:0xdc,// Ü\n0x0225:0xfc,// ü\n0x0226:0x2018,// ‘\n0x0227:0xa1,// ¡\n0x0228:0x2a,// *\n0x0229:0x27,// '\n0x022a:0x2014,// —\n0x022b:0xa9,// ©\n0x022c:0x2120,// ℠\n0x022d:0x2022,// •\n0x022e:0x201c,// “\n0x022f:0x201d,// ”\n0x0230:0xc0,// À\n0x0231:0xc2,// Â\n0x0232:0xc7,// Ç\n0x0233:0xc8,// È\n0x0234:0xca,// Ê\n0x0235:0xcb,// Ë\n0x0236:0xeb,// ë\n0x0237:0xce,// Î\n0x0238:0xcf,// Ï\n0x0239:0xef,// ï\n0x023a:0xd4,// Ô\n0x023b:0xd9,// Ù\n0x023c:0xf9,// ù\n0x023d:0xdb,// Û\n0x023e:0xab,// «\n0x023f:0xbb,// »\n0x0320:0xc3,// Ã\n0x0321:0xe3,// ã\n0x0322:0xcd,// Í\n0x0323:0xcc,// Ì\n0x0324:0xec,// ì\n0x0325:0xd2,// Ò\n0x0326:0xf2,// ò\n0x0327:0xd5,// Õ\n0x0328:0xf5,// õ\n0x0329:0x7b,// {\n0x032a:0x7d,// }\n0x032b:0x5c,// \\\n0x032c:0x5e,// ^\n0x032d:0x5f,// _\n0x032e:0x7c,// |\n0x032f:0x7e,// ~\n0x0330:0xc4,// Ä\n0x0331:0xe4,// ä\n0x0332:0xd6,// Ö\n0x0333:0xf6,// ö\n0x0334:0xdf,// ß\n0x0335:0xa5,// ¥\n0x0336:0xa4,// ¤\n0x0337:0x2502,// │\n0x0338:0xc5,// Å\n0x0339:0xe5,// å\n0x033a:0xd8,// Ø\n0x033b:0xf8,// ø\n0x033c:0x250c,// ┌\n0x033d:0x2510,// ┐\n0x033e:0x2514,// └\n0x033f:0x2518// ┘\n};var getCharFromCode=function(code){if(code===null){return'';}code=CHARACTER_TRANSLATION[code]||code;return String.fromCharCode(code);};// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW=14;// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS=[0x1100,0x1120,0x1200,0x1220,0x1500,0x1520,0x1600,0x1620,0x1700,0x1720,0x1000,0x1300,0x1320,0x1400,0x1420];// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer=function(){var result=[],i=BOTTOM_ROW+1;while(i--){result.push('');}return result;};var Cea608Stream=function(field,dataChannel){Cea608Stream.prototype.init.call(this);this.field_=field||0;this.dataChannel_=dataChannel||0;this.name_='CC'+((this.field_<<1|this.dataChannel_)+1);this.setConstants();this.reset();this.push=function(packet){var data,swap,char0,char1,text;// remove the parity bits\ndata=packet.ccData&0x7f7f;// ignore duplicate control codes; the spec demands they're sent twice\nif(data===this.lastControlCode_){this.lastControlCode_=null;return;}// Store control codes\nif((data&0xf000)===0x1000){this.lastControlCode_=data;}else if(data!==this.PADDING_){this.lastControlCode_=null;}char0=data>>>8;char1=data&0xff;if(data===this.PADDING_){return;}else if(data===this.RESUME_CAPTION_LOADING_){this.mode_='popOn';}else if(data===this.END_OF_CAPTION_){// If an EOC is received while in paint-on mode, the displayed caption\n// text should be swapped to non-displayed memory as if it was a pop-on\n// caption. Because of that, we should explicitly switch back to pop-on\n// mode\nthis.mode_='popOn';this.clearFormatting(packet.pts);// if a caption was being displayed, it's gone now\nthis.flushDisplayed(packet.pts);// flip memory\nswap=this.displayed_;this.displayed_=this.nonDisplayed_;this.nonDisplayed_=swap;// start measuring the time to display the caption\nthis.startPts_=packet.pts;}else if(data===this.ROLL_UP_2_ROWS_){this.rollUpRows_=2;this.setRollUp(packet.pts);}else if(data===this.ROLL_UP_3_ROWS_){this.rollUpRows_=3;this.setRollUp(packet.pts);}else if(data===this.ROLL_UP_4_ROWS_){this.rollUpRows_=4;this.setRollUp(packet.pts);}else if(data===this.CARRIAGE_RETURN_){this.clearFormatting(packet.pts);this.flushDisplayed(packet.pts);this.shiftRowsUp_();this.startPts_=packet.pts;}else if(data===this.BACKSPACE_){if(this.mode_==='popOn'){this.nonDisplayed_[this.row_]=this.nonDisplayed_[this.row_].slice(0,-1);}else{this.displayed_[this.row_]=this.displayed_[this.row_].slice(0,-1);}}else if(data===this.ERASE_DISPLAYED_MEMORY_){this.flushDisplayed(packet.pts);this.displayed_=createDisplayBuffer();}else if(data===this.ERASE_NON_DISPLAYED_MEMORY_){this.nonDisplayed_=createDisplayBuffer();}else if(data===this.RESUME_DIRECT_CAPTIONING_){if(this.mode_!=='paintOn'){// NOTE: This should be removed when proper caption positioning is\n// implemented\nthis.flushDisplayed(packet.pts);this.displayed_=createDisplayBuffer();}this.mode_='paintOn';this.startPts_=packet.pts;// Append special characters to caption text\n}else if(this.isSpecialCharacter(char0,char1)){// Bitmask char0 so that we can apply character transformations\n// regardless of field and data channel.\n// Then byte-shift to the left and OR with char1 so we can pass the\n// entire character code to `getCharFromCode`.\nchar0=(char0&0x03)<<8;text=getCharFromCode(char0|char1);this[this.mode_](packet.pts,text);this.column_++;// Append extended characters to caption text\n}else if(this.isExtCharacter(char0,char1)){// Extended characters always follow their \"non-extended\" equivalents.\n// IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n// decoders are supposed to drop the \"è\", while compliant decoders\n// backspace the \"e\" and insert \"è\".\n// Delete the previous character\nif(this.mode_==='popOn'){this.nonDisplayed_[this.row_]=this.nonDisplayed_[this.row_].slice(0,-1);}else{this.displayed_[this.row_]=this.displayed_[this.row_].slice(0,-1);}// Bitmask char0 so that we can apply character transformations\n// regardless of field and data channel.\n// Then byte-shift to the left and OR with char1 so we can pass the\n// entire character code to `getCharFromCode`.\nchar0=(char0&0x03)<<8;text=getCharFromCode(char0|char1);this[this.mode_](packet.pts,text);this.column_++;// Process mid-row codes\n}else if(this.isMidRowCode(char0,char1)){// Attributes are not additive, so clear all formatting\nthis.clearFormatting(packet.pts);// According to the standard, mid-row codes\n// should be replaced with spaces, so add one now\nthis[this.mode_](packet.pts,' ');this.column_++;if((char1&0xe)===0xe){this.addFormatting(packet.pts,['i']);}if((char1&0x1)===0x1){this.addFormatting(packet.pts,['u']);}// Detect offset control codes and adjust cursor\n}else if(this.isOffsetControlCode(char0,char1)){// Cursor position is set by indent PAC (see below) in 4-column\n// increments, with an additional offset code of 1-3 to reach any\n// of the 32 columns specified by CEA-608. So all we need to do\n// here is increment the column cursor by the given offset.\nthis.column_+=char1&0x03;// Detect PACs (Preamble Address Codes)\n}else if(this.isPAC(char0,char1)){// There's no logic for PAC -> row mapping, so we have to just\n// find the row code in an array and use its index :(\nvar row=ROWS.indexOf(data&0x1f20);// Configure the caption window if we're in roll-up mode\nif(this.mode_==='rollUp'){// This implies that the base row is incorrectly set.\n// As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n// of roll-up rows set.\nif(row-this.rollUpRows_+1<0){row=this.rollUpRows_-1;}this.setRollUp(packet.pts,row);}if(row!==this.row_){// formatting is only persistent for current row\nthis.clearFormatting(packet.pts);this.row_=row;}// All PACs can apply underline, so detect and apply\n// (All odd-numbered second bytes set underline)\nif(char1&0x1&&this.formatting_.indexOf('u')===-1){this.addFormatting(packet.pts,['u']);}if((data&0x10)===0x10){// We've got an indent level code. Each successive even number\n// increments the column cursor by 4, so we can get the desired\n// column position by bit-shifting to the right (to get n/2)\n// and multiplying by 4.\nthis.column_=((data&0xe)>>1)*4;}if(this.isColorPAC(char1)){// it's a color code, though we only support white, which\n// can be either normal or italicized. white italics can be\n// either 0x4e or 0x6e depending on the row, so we just\n// bitwise-and with 0xe to see if italics should be turned on\nif((char1&0xe)===0xe){this.addFormatting(packet.pts,['i']);}}// We have a normal character in char0, and possibly one in char1\n}else if(this.isNormalChar(char0)){if(char1===0x00){char1=null;}text=getCharFromCode(char0);text+=getCharFromCode(char1);this[this.mode_](packet.pts,text);this.column_+=text.length;}// finish data processing\n};};Cea608Stream.prototype=new Stream$7();// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed=function(pts){var content=this.displayed_// remove spaces from the start and end of the string\n.map(function(row,index){try{return row.trim();}catch(e){// Ordinarily, this shouldn't happen. However, caption\n// parsing errors should not throw exceptions and\n// break playback.\nthis.trigger('log',{level:'warn',message:'Skipping a malformed 608 caption at index '+index+'.'});return'';}},this)// combine all text rows to display in one cue\n.join('\\n')// and remove blank rows from the start and end, but not the middle\n.replace(/^\\n+|\\n+$/g,'');if(content.length){this.trigger('data',{startPts:this.startPts_,endPts:pts,text:content,stream:this.name_});}};/**\n   * Zero out the data, used for startup and on seek\n   */Cea608Stream.prototype.reset=function(){this.mode_='popOn';// When in roll-up mode, the index of the last row that will\n// actually display captions. If a caption is shifted to a row\n// with a lower index than this, it is cleared from the display\n// buffer\nthis.topRow_=0;this.startPts_=0;this.displayed_=createDisplayBuffer();this.nonDisplayed_=createDisplayBuffer();this.lastControlCode_=null;// Track row and column for proper line-breaking and spacing\nthis.column_=0;this.row_=BOTTOM_ROW;this.rollUpRows_=2;// This variable holds currently-applied formatting\nthis.formatting_=[];};/**\n   * Sets up control code and related constants for this instance\n   */Cea608Stream.prototype.setConstants=function(){// The following attributes have these uses:\n// ext_ :    char0 for mid-row codes, and the base for extended\n//           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n//           extended codes)\n// control_: char0 for control codes, except byte-shifted to the\n//           left so that we can do this.control_ | CONTROL_CODE\n// offset_:  char0 for tab offset codes\n//\n// It's also worth noting that control codes, and _only_ control codes,\n// differ between field 1 and field2. Field 2 control codes are always\n// their field 1 value plus 1. That's why there's the \"| field\" on the\n// control value.\nif(this.dataChannel_===0){this.BASE_=0x10;this.EXT_=0x11;this.CONTROL_=(0x14|this.field_)<<8;this.OFFSET_=0x17;}else if(this.dataChannel_===1){this.BASE_=0x18;this.EXT_=0x19;this.CONTROL_=(0x1c|this.field_)<<8;this.OFFSET_=0x1f;}// Constants for the LSByte command codes recognized by Cea608Stream. This\n// list is not exhaustive. For a more comprehensive listing and semantics see\n// http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n// Padding\nthis.PADDING_=0x0000;// Pop-on Mode\nthis.RESUME_CAPTION_LOADING_=this.CONTROL_|0x20;this.END_OF_CAPTION_=this.CONTROL_|0x2f;// Roll-up Mode\nthis.ROLL_UP_2_ROWS_=this.CONTROL_|0x25;this.ROLL_UP_3_ROWS_=this.CONTROL_|0x26;this.ROLL_UP_4_ROWS_=this.CONTROL_|0x27;this.CARRIAGE_RETURN_=this.CONTROL_|0x2d;// paint-on mode\nthis.RESUME_DIRECT_CAPTIONING_=this.CONTROL_|0x29;// Erasure\nthis.BACKSPACE_=this.CONTROL_|0x21;this.ERASE_DISPLAYED_MEMORY_=this.CONTROL_|0x2c;this.ERASE_NON_DISPLAYED_MEMORY_=this.CONTROL_|0x2e;};/**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */Cea608Stream.prototype.isSpecialCharacter=function(char0,char1){return char0===this.EXT_&&char1>=0x30&&char1<=0x3f;};/**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */Cea608Stream.prototype.isExtCharacter=function(char0,char1){return(char0===this.EXT_+1||char0===this.EXT_+2)&&char1>=0x20&&char1<=0x3f;};/**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */Cea608Stream.prototype.isMidRowCode=function(char0,char1){return char0===this.EXT_&&char1>=0x20&&char1<=0x2f;};/**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */Cea608Stream.prototype.isOffsetControlCode=function(char0,char1){return char0===this.OFFSET_&&char1>=0x21&&char1<=0x23;};/**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */Cea608Stream.prototype.isPAC=function(char0,char1){return char0>=this.BASE_&&char0<this.BASE_+8&&char1>=0x40&&char1<=0x7f;};/**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */Cea608Stream.prototype.isColorPAC=function(char1){return char1>=0x40&&char1<=0x4f||char1>=0x60&&char1<=0x7f;};/**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */Cea608Stream.prototype.isNormalChar=function(char){return char>=0x20&&char<=0x7f;};/**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */Cea608Stream.prototype.setRollUp=function(pts,newBaseRow){// Reset the base row to the bottom row when switching modes\nif(this.mode_!=='rollUp'){this.row_=BOTTOM_ROW;this.mode_='rollUp';// Spec says to wipe memories when switching to roll-up\nthis.flushDisplayed(pts);this.nonDisplayed_=createDisplayBuffer();this.displayed_=createDisplayBuffer();}if(newBaseRow!==undefined&&newBaseRow!==this.row_){// move currently displayed captions (up or down) to the new base row\nfor(var i=0;i<this.rollUpRows_;i++){this.displayed_[newBaseRow-i]=this.displayed_[this.row_-i];this.displayed_[this.row_-i]='';}}if(newBaseRow===undefined){newBaseRow=this.row_;}this.topRow_=newBaseRow-this.rollUpRows_+1;};// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting=function(pts,format){this.formatting_=this.formatting_.concat(format);var text=format.reduce(function(text,format){return text+'<'+format+'>';},'');this[this.mode_](pts,text);};// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting=function(pts){if(!this.formatting_.length){return;}var text=this.formatting_.reverse().reduce(function(text,format){return text+'</'+format+'>';},'');this.formatting_=[];this[this.mode_](pts,text);};// Mode Implementations\nCea608Stream.prototype.popOn=function(pts,text){var baseRow=this.nonDisplayed_[this.row_];// buffer characters\nbaseRow+=text;this.nonDisplayed_[this.row_]=baseRow;};Cea608Stream.prototype.rollUp=function(pts,text){var baseRow=this.displayed_[this.row_];baseRow+=text;this.displayed_[this.row_]=baseRow;};Cea608Stream.prototype.shiftRowsUp_=function(){var i;// clear out inactive rows\nfor(i=0;i<this.topRow_;i++){this.displayed_[i]='';}for(i=this.row_+1;i<BOTTOM_ROW+1;i++){this.displayed_[i]='';}// shift displayed rows up\nfor(i=this.topRow_;i<this.row_;i++){this.displayed_[i]=this.displayed_[i+1];}// clear out the bottom row\nthis.displayed_[this.row_]='';};Cea608Stream.prototype.paintOn=function(pts,text){var baseRow=this.displayed_[this.row_];baseRow+=text;this.displayed_[this.row_]=baseRow;};// exports\nvar captionStream={CaptionStream:CaptionStream$2,Cea608Stream:Cea608Stream,Cea708Stream:Cea708Stream};/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */var streamTypes={H264_STREAM_TYPE:0x1B,ADTS_STREAM_TYPE:0x0F,METADATA_STREAM_TYPE:0x15};/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and corrects\n   * decode and presentation time stamps to account for a rollover\n   * of the 33 bit value.\n   */var Stream$6=stream;var MAX_TS=8589934592;var RO_THRESH=4294967296;var TYPE_SHARED='shared';var handleRollover$1=function(value,reference){var direction=1;if(value>reference){// If the current timestamp value is greater than our reference timestamp and we detect a\n// timestamp rollover, this means the roll over is happening in the opposite direction.\n// Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n// point will be set to a small number, e.g. 1. The user then seeks backwards over the\n// rollover point. In loading this segment, the timestamp values will be very large,\n// e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n// the time stamp to be `value - 2^33`.\ndirection=-1;}// Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n// cause an incorrect adjustment.\nwhile(Math.abs(reference-value)>RO_THRESH){value+=direction*MAX_TS;}return value;};var TimestampRolloverStream$1=function(type){var lastDTS,referenceDTS;TimestampRolloverStream$1.prototype.init.call(this);// The \"shared\" type is used in cases where a stream will contain muxed\n// video and audio. We could use `undefined` here, but having a string\n// makes debugging a little clearer.\nthis.type_=type||TYPE_SHARED;this.push=function(data){// Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n// streams will only accept data that matches their type.\nif(this.type_!==TYPE_SHARED&&data.type!==this.type_){return;}if(referenceDTS===undefined){referenceDTS=data.dts;}data.dts=handleRollover$1(data.dts,referenceDTS);data.pts=handleRollover$1(data.pts,referenceDTS);lastDTS=data.dts;this.trigger('data',data);};this.flush=function(){referenceDTS=lastDTS;this.trigger('done');};this.endTimeline=function(){this.flush();this.trigger('endedtimeline');};this.discontinuity=function(){referenceDTS=void 0;lastDTS=void 0;};this.reset=function(){this.discontinuity();this.trigger('reset');};};TimestampRolloverStream$1.prototype=new Stream$6();var timestampRolloverStream={TimestampRolloverStream:TimestampRolloverStream$1,handleRollover:handleRollover$1};// Once IE11 support is dropped, this function should be removed.\nvar typedArrayIndexOf$1=(typedArray,element,fromIndex)=>{if(!typedArray){return-1;}var currentIndex=fromIndex;for(;currentIndex<typedArray.length;currentIndex++){if(typedArray[currentIndex]===element){return currentIndex;}}return-1;};var typedArray={typedArrayIndexOf:typedArrayIndexOf$1};/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and parses out\n   * ID3 metadata from them, if present.\n   * @see http://id3.org/id3v2.3.0\n   */var Stream$5=stream,StreamTypes$3=streamTypes,typedArrayIndexOf=typedArray.typedArrayIndexOf,// Frames that allow different types of text encoding contain a text\n// encoding description byte [ID3v2.4.0 section 4.]\ntextEncodingDescriptionByte={Iso88591:0x00,// ISO-8859-1, terminated with \\0.\nUtf16:0x01,// UTF-16 encoded Unicode BOM, terminated with \\0\\0\nUtf16be:0x02,// UTF-16BE encoded Unicode, without BOM, terminated with \\0\\0\nUtf8:0x03// UTF-8 encoded Unicode, terminated with \\0\n},// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\npercentEncode$1=function(bytes,start,end){var i,result='';for(i=start;i<end;i++){result+='%'+('00'+bytes[i].toString(16)).slice(-2);}return result;},// return the string representation of the specified byte range,\n// interpreted as UTf-8.\nparseUtf8=function(bytes,start,end){return decodeURIComponent(percentEncode$1(bytes,start,end));},// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nparseIso88591$1=function(bytes,start,end){return unescape(percentEncode$1(bytes,start,end));// jshint ignore:line\n},parseSyncSafeInteger$1=function(data){return data[0]<<21|data[1]<<14|data[2]<<7|data[3];},frameParsers={'APIC':function(frame){var i=1,mimeTypeEndIndex,descriptionEndIndex,LINK_MIME_TYPE='-->';if(frame.data[0]!==textEncodingDescriptionByte.Utf8){// ignore frames with unrecognized character encodings\nreturn;}// parsing fields [ID3v2.4.0 section 4.14.]\nmimeTypeEndIndex=typedArrayIndexOf(frame.data,0,i);if(mimeTypeEndIndex<0){// malformed frame\nreturn;}// parsing Mime type field (terminated with \\0)\nframe.mimeType=parseIso88591$1(frame.data,i,mimeTypeEndIndex);i=mimeTypeEndIndex+1;// parsing 1-byte Picture Type field\nframe.pictureType=frame.data[i];i++;descriptionEndIndex=typedArrayIndexOf(frame.data,0,i);if(descriptionEndIndex<0){// malformed frame\nreturn;}// parsing Description field (terminated with \\0)\nframe.description=parseUtf8(frame.data,i,descriptionEndIndex);i=descriptionEndIndex+1;if(frame.mimeType===LINK_MIME_TYPE){// parsing Picture Data field as URL (always represented as ISO-8859-1 [ID3v2.4.0 section 4.])\nframe.url=parseIso88591$1(frame.data,i,frame.data.length);}else{// parsing Picture Data field as binary data\nframe.pictureData=frame.data.subarray(i,frame.data.length);}},'T*':function(frame){if(frame.data[0]!==textEncodingDescriptionByte.Utf8){// ignore frames with unrecognized character encodings\nreturn;}// parse text field, do not include null terminator in the frame value\n// frames that allow different types of encoding contain terminated text [ID3v2.4.0 section 4.]\nframe.value=parseUtf8(frame.data,1,frame.data.length).replace(/\\0*$/,'');// text information frames supports multiple strings, stored as a terminator separated list [ID3v2.4.0 section 4.2.]\nframe.values=frame.value.split('\\0');},'TXXX':function(frame){var descriptionEndIndex;if(frame.data[0]!==textEncodingDescriptionByte.Utf8){// ignore frames with unrecognized character encodings\nreturn;}descriptionEndIndex=typedArrayIndexOf(frame.data,0,1);if(descriptionEndIndex===-1){return;}// parse the text fields\nframe.description=parseUtf8(frame.data,1,descriptionEndIndex);// do not include the null terminator in the tag value\n// frames that allow different types of encoding contain terminated text\n// [ID3v2.4.0 section 4.]\nframe.value=parseUtf8(frame.data,descriptionEndIndex+1,frame.data.length).replace(/\\0*$/,'');frame.data=frame.value;},'W*':function(frame){// parse URL field; URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n// if the value is followed by a string termination all the following information should be ignored [ID3v2.4.0 section 4.3]\nframe.url=parseIso88591$1(frame.data,0,frame.data.length).replace(/\\0.*$/,'');},'WXXX':function(frame){var descriptionEndIndex;if(frame.data[0]!==textEncodingDescriptionByte.Utf8){// ignore frames with unrecognized character encodings\nreturn;}descriptionEndIndex=typedArrayIndexOf(frame.data,0,1);if(descriptionEndIndex===-1){return;}// parse the description and URL fields\nframe.description=parseUtf8(frame.data,1,descriptionEndIndex);// URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n// if the value is followed by a string termination all the following information\n// should be ignored [ID3v2.4.0 section 4.3]\nframe.url=parseIso88591$1(frame.data,descriptionEndIndex+1,frame.data.length).replace(/\\0.*$/,'');},'PRIV':function(frame){var i;for(i=0;i<frame.data.length;i++){if(frame.data[i]===0){// parse the description and URL fields\nframe.owner=parseIso88591$1(frame.data,0,i);break;}}frame.privateData=frame.data.subarray(i+1);frame.data=frame.privateData;}},MetadataStream;MetadataStream=function(options){var settings={// the bytes of the program-level descriptor field in MP2T\n// see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n// program element descriptors\"\ndescriptor:options&&options.descriptor},// the total size in bytes of the ID3 tag being parsed\ntagSize=0,// tag data that is not complete enough to be parsed\nbuffer=[],// the total number of bytes currently in the buffer\nbufferSize=0,i;MetadataStream.prototype.init.call(this);// calculate the text track in-band metadata track dispatch type\n// https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\nthis.dispatchType=StreamTypes$3.METADATA_STREAM_TYPE.toString(16);if(settings.descriptor){for(i=0;i<settings.descriptor.length;i++){this.dispatchType+=('00'+settings.descriptor[i].toString(16)).slice(-2);}}this.push=function(chunk){var tag,frameStart,frameSize,frame,i,frameHeader;if(chunk.type!=='timed-metadata'){return;}// if data_alignment_indicator is set in the PES header,\n// we must have the start of a new ID3 tag. Assume anything\n// remaining in the buffer was malformed and throw it out\nif(chunk.dataAlignmentIndicator){bufferSize=0;buffer.length=0;}// ignore events that don't look like ID3 data\nif(buffer.length===0&&(chunk.data.length<10||chunk.data[0]!=='I'.charCodeAt(0)||chunk.data[1]!=='D'.charCodeAt(0)||chunk.data[2]!=='3'.charCodeAt(0))){this.trigger('log',{level:'warn',message:'Skipping unrecognized metadata packet'});return;}// add this chunk to the data we've collected so far\nbuffer.push(chunk);bufferSize+=chunk.data.byteLength;// grab the size of the entire frame from the ID3 header\nif(buffer.length===1){// the frame size is transmitted as a 28-bit integer in the\n// last four bytes of the ID3 header.\n// The most significant bit of each byte is dropped and the\n// results concatenated to recover the actual value.\ntagSize=parseSyncSafeInteger$1(chunk.data.subarray(6,10));// ID3 reports the tag size excluding the header but it's more\n// convenient for our comparisons to include it\ntagSize+=10;}// if the entire frame has not arrived, wait for more data\nif(bufferSize<tagSize){return;}// collect the entire frame so it can be parsed\ntag={data:new Uint8Array(tagSize),frames:[],pts:buffer[0].pts,dts:buffer[0].dts};for(i=0;i<tagSize;){tag.data.set(buffer[0].data.subarray(0,tagSize-i),i);i+=buffer[0].data.byteLength;bufferSize-=buffer[0].data.byteLength;buffer.shift();}// find the start of the first frame and the end of the tag\nframeStart=10;if(tag.data[5]&0x40){// advance the frame start past the extended header\nframeStart+=4;// header size field\nframeStart+=parseSyncSafeInteger$1(tag.data.subarray(10,14));// clip any padding off the end\ntagSize-=parseSyncSafeInteger$1(tag.data.subarray(16,20));}// parse one or more ID3 frames\n// http://id3.org/id3v2.3.0#ID3v2_frame_overview\ndo{// determine the number of bytes in this frame\nframeSize=parseSyncSafeInteger$1(tag.data.subarray(frameStart+4,frameStart+8));if(frameSize<1){this.trigger('log',{level:'warn',message:'Malformed ID3 frame encountered. Skipping remaining metadata parsing.'});// If the frame is malformed, don't parse any further frames but allow previous valid parsed frames\n// to be sent along.\nbreak;}frameHeader=String.fromCharCode(tag.data[frameStart],tag.data[frameStart+1],tag.data[frameStart+2],tag.data[frameStart+3]);frame={id:frameHeader,data:tag.data.subarray(frameStart+10,frameStart+frameSize+10)};frame.key=frame.id;// parse frame values\nif(frameParsers[frame.id]){// use frame specific parser\nframeParsers[frame.id](frame);}else if(frame.id[0]==='T'){// use text frame generic parser\nframeParsers['T*'](frame);}else if(frame.id[0]==='W'){// use URL link frame generic parser\nframeParsers['W*'](frame);}// handle the special PRIV frame used to indicate the start\n// time for raw AAC data\nif(frame.owner==='com.apple.streaming.transportStreamTimestamp'){var d=frame.data,size=(d[3]&0x01)<<30|d[4]<<22|d[5]<<14|d[6]<<6|d[7]>>>2;size*=4;size+=d[7]&0x03;frame.timeStamp=size;// in raw AAC, all subsequent data will be timestamped based\n// on the value of this frame\n// we couldn't have known the appropriate pts and dts before\n// parsing this ID3 tag so set those values now\nif(tag.pts===undefined&&tag.dts===undefined){tag.pts=frame.timeStamp;tag.dts=frame.timeStamp;}this.trigger('timestamp',frame);}tag.frames.push(frame);frameStart+=10;// advance past the frame header\nframeStart+=frameSize;// advance past the frame body\n}while(frameStart<tagSize);this.trigger('data',tag);};};MetadataStream.prototype=new Stream$5();var metadataStream=MetadataStream;/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */var Stream$4=stream,CaptionStream$1=captionStream,StreamTypes$2=streamTypes,TimestampRolloverStream=timestampRolloverStream.TimestampRolloverStream;// object types\nvar TransportPacketStream,TransportParseStream,ElementaryStream;// constants\nvar MP2T_PACKET_LENGTH$1=188,// bytes\nSYNC_BYTE$1=0x47;/**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */TransportPacketStream=function(){var buffer=new Uint8Array(MP2T_PACKET_LENGTH$1),bytesInBuffer=0;TransportPacketStream.prototype.init.call(this);// Deliver new bytes to the stream.\n/**\n     * Split a stream of data into M2TS packets\n    **/this.push=function(bytes){var startIndex=0,endIndex=MP2T_PACKET_LENGTH$1,everything;// If there are bytes remaining from the last segment, prepend them to the\n// bytes that were pushed in\nif(bytesInBuffer){everything=new Uint8Array(bytes.byteLength+bytesInBuffer);everything.set(buffer.subarray(0,bytesInBuffer));everything.set(bytes,bytesInBuffer);bytesInBuffer=0;}else{everything=bytes;}// While we have enough data for a packet\nwhile(endIndex<everything.byteLength){// Look for a pair of start and end sync bytes in the data..\nif(everything[startIndex]===SYNC_BYTE$1&&everything[endIndex]===SYNC_BYTE$1){// We found a packet so emit it and jump one whole packet forward in\n// the stream\nthis.trigger('data',everything.subarray(startIndex,endIndex));startIndex+=MP2T_PACKET_LENGTH$1;endIndex+=MP2T_PACKET_LENGTH$1;continue;}// If we get here, we have somehow become de-synchronized and we need to step\n// forward one byte at a time until we find a pair of sync bytes that denote\n// a packet\nstartIndex++;endIndex++;}// If there was some data left over at the end of the segment that couldn't\n// possibly be a whole packet, keep it because it might be the start of a packet\n// that continues in the next segment\nif(startIndex<everything.byteLength){buffer.set(everything.subarray(startIndex),0);bytesInBuffer=everything.byteLength-startIndex;}};/**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/this.flush=function(){// If the buffer contains a whole packet when we are being flushed, emit it\n// and empty the buffer. Otherwise hold onto the data because it may be\n// important for decoding the next segment\nif(bytesInBuffer===MP2T_PACKET_LENGTH$1&&buffer[0]===SYNC_BYTE$1){this.trigger('data',buffer);bytesInBuffer=0;}this.trigger('done');};this.endTimeline=function(){this.flush();this.trigger('endedtimeline');};this.reset=function(){bytesInBuffer=0;this.trigger('reset');};};TransportPacketStream.prototype=new Stream$4();/**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */TransportParseStream=function(){var parsePsi,parsePat,parsePmt,self;TransportParseStream.prototype.init.call(this);self=this;this.packetsWaitingForPmt=[];this.programMapTable=undefined;parsePsi=function(payload,psi){var offset=0;// PSI packets may be split into multiple sections and those\n// sections may be split into multiple packets. If a PSI\n// section starts in this packet, the payload_unit_start_indicator\n// will be true and the first byte of the payload will indicate\n// the offset from the current position to the start of the\n// section.\nif(psi.payloadUnitStartIndicator){offset+=payload[offset]+1;}if(psi.type==='pat'){parsePat(payload.subarray(offset),psi);}else{parsePmt(payload.subarray(offset),psi);}};parsePat=function(payload,pat){pat.section_number=payload[7];// eslint-disable-line camelcase\npat.last_section_number=payload[8];// eslint-disable-line camelcase\n// skip the PSI header and parse the first PMT entry\nself.pmtPid=(payload[10]&0x1F)<<8|payload[11];pat.pmtPid=self.pmtPid;};/**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */parsePmt=function(payload,pmt){var sectionLength,tableEnd,programInfoLength,offset;// PMTs can be sent ahead of the time when they should actually\n// take effect. We don't believe this should ever be the case\n// for HLS but we'll ignore \"forward\" PMT declarations if we see\n// them. Future PMT declarations have the current_next_indicator\n// set to zero.\nif(!(payload[5]&0x01)){return;}// overwrite any existing program map table\nself.programMapTable={video:null,audio:null,'timed-metadata':{}};// the mapping table ends at the end of the current section\nsectionLength=(payload[1]&0x0f)<<8|payload[2];tableEnd=3+sectionLength-4;// to determine where the table is, we have to figure out how\n// long the program info descriptors are\nprogramInfoLength=(payload[10]&0x0f)<<8|payload[11];// advance the offset to the first entry in the mapping table\noffset=12+programInfoLength;while(offset<tableEnd){var streamType=payload[offset];var pid=(payload[offset+1]&0x1F)<<8|payload[offset+2];// only map a single elementary_pid for audio and video stream types\n// TODO: should this be done for metadata too? for now maintain behavior of\n//       multiple metadata streams\nif(streamType===StreamTypes$2.H264_STREAM_TYPE&&self.programMapTable.video===null){self.programMapTable.video=pid;}else if(streamType===StreamTypes$2.ADTS_STREAM_TYPE&&self.programMapTable.audio===null){self.programMapTable.audio=pid;}else if(streamType===StreamTypes$2.METADATA_STREAM_TYPE){// map pid to stream type for metadata streams\nself.programMapTable['timed-metadata'][pid]=streamType;}// move to the next table entry\n// skip past the elementary stream descriptors, if present\noffset+=((payload[offset+3]&0x0F)<<8|payload[offset+4])+5;}// record the map on the packet as well\npmt.programMapTable=self.programMapTable;};/**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */this.push=function(packet){var result={},offset=4;result.payloadUnitStartIndicator=!!(packet[1]&0x40);// pid is a 13-bit field starting at the last bit of packet[1]\nresult.pid=packet[1]&0x1f;result.pid<<=8;result.pid|=packet[2];// if an adaption field is present, its length is specified by the\n// fifth byte of the TS packet header. The adaptation field is\n// used to add stuffing to PES packets that don't fill a complete\n// TS packet, and to specify some forms of timing and control data\n// that we do not currently use.\nif((packet[3]&0x30)>>>4>0x01){offset+=packet[offset]+1;}// parse the rest of the packet based on the type\nif(result.pid===0){result.type='pat';parsePsi(packet.subarray(offset),result);this.trigger('data',result);}else if(result.pid===this.pmtPid){result.type='pmt';parsePsi(packet.subarray(offset),result);this.trigger('data',result);// if there are any packets waiting for a PMT to be found, process them now\nwhile(this.packetsWaitingForPmt.length){this.processPes_.apply(this,this.packetsWaitingForPmt.shift());}}else if(this.programMapTable===undefined){// When we have not seen a PMT yet, defer further processing of\n// PES packets until one has been parsed\nthis.packetsWaitingForPmt.push([packet,offset,result]);}else{this.processPes_(packet,offset,result);}};this.processPes_=function(packet,offset,result){// set the appropriate stream type\nif(result.pid===this.programMapTable.video){result.streamType=StreamTypes$2.H264_STREAM_TYPE;}else if(result.pid===this.programMapTable.audio){result.streamType=StreamTypes$2.ADTS_STREAM_TYPE;}else{// if not video or audio, it is timed-metadata or unknown\n// if unknown, streamType will be undefined\nresult.streamType=this.programMapTable['timed-metadata'][result.pid];}result.type='pes';result.data=packet.subarray(offset);this.trigger('data',result);};};TransportParseStream.prototype=new Stream$4();TransportParseStream.STREAM_TYPES={h264:0x1b,adts:0x0f};/**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */ElementaryStream=function(){var self=this,segmentHadPmt=false,// PES packet fragments\nvideo={data:[],size:0},audio={data:[],size:0},timedMetadata={data:[],size:0},programMapTable,parsePes=function(payload,pes){var ptsDtsFlags;const startPrefix=payload[0]<<16|payload[1]<<8|payload[2];// default to an empty array\npes.data=new Uint8Array();// In certain live streams, the start of a TS fragment has ts packets\n// that are frame data that is continuing from the previous fragment. This\n// is to check that the pes data is the start of a new pes payload\nif(startPrefix!==1){return;}// get the packet length, this will be 0 for video\npes.packetLength=6+(payload[4]<<8|payload[5]);// find out if this packets starts a new keyframe\npes.dataAlignmentIndicator=(payload[6]&0x04)!==0;// PES packets may be annotated with a PTS value, or a PTS value\n// and a DTS value. Determine what combination of values is\n// available to work with.\nptsDtsFlags=payload[7];// PTS and DTS are normally stored as a 33-bit number.  Javascript\n// performs all bitwise operations on 32-bit integers but javascript\n// supports a much greater range (52-bits) of integer using standard\n// mathematical operations.\n// We construct a 31-bit value using bitwise operators over the 31\n// most significant bits and then multiply by 4 (equal to a left-shift\n// of 2) before we add the final 2 least significant bits of the\n// timestamp (equal to an OR.)\nif(ptsDtsFlags&0xC0){// the PTS and DTS are not written out directly. For information\n// on how they are encoded, see\n// http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\npes.pts=(payload[9]&0x0E)<<27|(payload[10]&0xFF)<<20|(payload[11]&0xFE)<<12|(payload[12]&0xFF)<<5|(payload[13]&0xFE)>>>3;pes.pts*=4;// Left shift by 2\npes.pts+=(payload[13]&0x06)>>>1;// OR by the two LSBs\npes.dts=pes.pts;if(ptsDtsFlags&0x40){pes.dts=(payload[14]&0x0E)<<27|(payload[15]&0xFF)<<20|(payload[16]&0xFE)<<12|(payload[17]&0xFF)<<5|(payload[18]&0xFE)>>>3;pes.dts*=4;// Left shift by 2\npes.dts+=(payload[18]&0x06)>>>1;// OR by the two LSBs\n}}// the data section starts immediately after the PES header.\n// pes_header_data_length specifies the number of header bytes\n// that follow the last byte of the field.\npes.data=payload.subarray(9+payload[8]);},/**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/flushStream=function(stream,type,forceFlush){var packetData=new Uint8Array(stream.size),event={type:type},i=0,offset=0,packetFlushable=false,fragment;// do nothing if there is not enough buffered data for a complete\n// PES header\nif(!stream.data.length||stream.size<9){return;}event.trackId=stream.data[0].pid;// reassemble the packet\nfor(i=0;i<stream.data.length;i++){fragment=stream.data[i];packetData.set(fragment.data,offset);offset+=fragment.data.byteLength;}// parse assembled packet's PES header\nparsePes(packetData,event);// non-video PES packets MUST have a non-zero PES_packet_length\n// check that there is enough stream data to fill the packet\npacketFlushable=type==='video'||event.packetLength<=stream.size;// flush pending packets if the conditions are right\nif(forceFlush||packetFlushable){stream.size=0;stream.data.length=0;}// only emit packets that are complete. this is to avoid assembling\n// incomplete PES packets due to poor segmentation\nif(packetFlushable){self.trigger('data',event);}};ElementaryStream.prototype.init.call(this);/**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/this.push=function(data){({pat:function(){// we have to wait for the PMT to arrive as well before we\n// have any meaningful metadata\n},pes:function(){var stream,streamType;switch(data.streamType){case StreamTypes$2.H264_STREAM_TYPE:stream=video;streamType='video';break;case StreamTypes$2.ADTS_STREAM_TYPE:stream=audio;streamType='audio';break;case StreamTypes$2.METADATA_STREAM_TYPE:stream=timedMetadata;streamType='timed-metadata';break;default:// ignore unknown stream types\nreturn;}// if a new packet is starting, we can flush the completed\n// packet\nif(data.payloadUnitStartIndicator){flushStream(stream,streamType,true);}// buffer this fragment until we are sure we've received the\n// complete payload\nstream.data.push(data);stream.size+=data.data.byteLength;},pmt:function(){var event={type:'metadata',tracks:[]};programMapTable=data.programMapTable;// translate audio and video streams to tracks\nif(programMapTable.video!==null){event.tracks.push({timelineStartInfo:{baseMediaDecodeTime:0},id:+programMapTable.video,codec:'avc',type:'video'});}if(programMapTable.audio!==null){event.tracks.push({timelineStartInfo:{baseMediaDecodeTime:0},id:+programMapTable.audio,codec:'adts',type:'audio'});}segmentHadPmt=true;self.trigger('data',event);}})[data.type]();};this.reset=function(){video.size=0;video.data.length=0;audio.size=0;audio.data.length=0;this.trigger('reset');};/**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */this.flushStreams_=function(){// !!THIS ORDER IS IMPORTANT!!\n// video first then audio\nflushStream(video,'video');flushStream(audio,'audio');flushStream(timedMetadata,'timed-metadata');};this.flush=function(){// if on flush we haven't had a pmt emitted\n// and we have a pmt to emit. emit the pmt\n// so that we trigger a trackinfo downstream.\nif(!segmentHadPmt&&programMapTable){var pmt={type:'metadata',tracks:[]};// translate audio and video streams to tracks\nif(programMapTable.video!==null){pmt.tracks.push({timelineStartInfo:{baseMediaDecodeTime:0},id:+programMapTable.video,codec:'avc',type:'video'});}if(programMapTable.audio!==null){pmt.tracks.push({timelineStartInfo:{baseMediaDecodeTime:0},id:+programMapTable.audio,codec:'adts',type:'audio'});}self.trigger('data',pmt);}segmentHadPmt=false;this.flushStreams_();this.trigger('done');};};ElementaryStream.prototype=new Stream$4();var m2ts$1={PAT_PID:0x0000,MP2T_PACKET_LENGTH:MP2T_PACKET_LENGTH$1,TransportPacketStream:TransportPacketStream,TransportParseStream:TransportParseStream,ElementaryStream:ElementaryStream,TimestampRolloverStream:TimestampRolloverStream,CaptionStream:CaptionStream$1.CaptionStream,Cea608Stream:CaptionStream$1.Cea608Stream,Cea708Stream:CaptionStream$1.Cea708Stream,MetadataStream:metadataStream};for(var type in StreamTypes$2){if(StreamTypes$2.hasOwnProperty(type)){m2ts$1[type]=StreamTypes$2[type];}}var m2ts_1=m2ts$1;/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */var Stream$3=stream;var ONE_SECOND_IN_TS$2=clock$2.ONE_SECOND_IN_TS;var AdtsStream$1;var ADTS_SAMPLING_FREQUENCIES$1=[96000,88200,64000,48000,44100,32000,24000,22050,16000,12000,11025,8000,7350];/*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */AdtsStream$1=function(handlePartialSegments){var buffer,frameNum=0;AdtsStream$1.prototype.init.call(this);this.skipWarn_=function(start,end){this.trigger('log',{level:'warn',message:`adts skiping bytes ${start} to ${end} in frame ${frameNum} outside syncword`});};this.push=function(packet){var i=0,frameLength,protectionSkipBytes,oldBuffer,sampleCount,adtsFrameDuration;if(!handlePartialSegments){frameNum=0;}if(packet.type!=='audio'){// ignore non-audio data\nreturn;}// Prepend any data in the buffer to the input data so that we can parse\n// aac frames the cross a PES packet boundary\nif(buffer&&buffer.length){oldBuffer=buffer;buffer=new Uint8Array(oldBuffer.byteLength+packet.data.byteLength);buffer.set(oldBuffer);buffer.set(packet.data,oldBuffer.byteLength);}else{buffer=packet.data;}// unpack any ADTS frames which have been fully received\n// for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\nvar skip;// We use i + 7 here because we want to be able to parse the entire header.\n// If we don't have enough bytes to do that, then we definitely won't have a full frame.\nwhile(i+7<buffer.length){// Look for the start of an ADTS header..\nif(buffer[i]!==0xFF||(buffer[i+1]&0xF6)!==0xF0){if(typeof skip!=='number'){skip=i;}// If a valid header was not found,  jump one forward and attempt to\n// find a valid ADTS header starting at the next byte\ni++;continue;}if(typeof skip==='number'){this.skipWarn_(skip,i);skip=null;}// The protection skip bit tells us if we have 2 bytes of CRC data at the\n// end of the ADTS header\nprotectionSkipBytes=(~buffer[i+1]&0x01)*2;// Frame length is a 13 bit integer starting 16 bits from the\n// end of the sync sequence\n// NOTE: frame length includes the size of the header\nframeLength=(buffer[i+3]&0x03)<<11|buffer[i+4]<<3|(buffer[i+5]&0xe0)>>5;sampleCount=((buffer[i+6]&0x03)+1)*1024;adtsFrameDuration=sampleCount*ONE_SECOND_IN_TS$2/ADTS_SAMPLING_FREQUENCIES$1[(buffer[i+2]&0x3c)>>>2];// If we don't have enough data to actually finish this ADTS frame,\n// then we have to wait for more data\nif(buffer.byteLength-i<frameLength){break;}// Otherwise, deliver the complete AAC frame\nthis.trigger('data',{pts:packet.pts+frameNum*adtsFrameDuration,dts:packet.dts+frameNum*adtsFrameDuration,sampleCount:sampleCount,audioobjecttype:(buffer[i+2]>>>6&0x03)+1,channelcount:(buffer[i+2]&1)<<2|(buffer[i+3]&0xc0)>>>6,samplerate:ADTS_SAMPLING_FREQUENCIES$1[(buffer[i+2]&0x3c)>>>2],samplingfrequencyindex:(buffer[i+2]&0x3c)>>>2,// assume ISO/IEC 14496-12 AudioSampleEntry default of 16\nsamplesize:16,// data is the frame without it's header\ndata:buffer.subarray(i+7+protectionSkipBytes,i+frameLength)});frameNum++;i+=frameLength;}if(typeof skip==='number'){this.skipWarn_(skip,i);skip=null;}// remove processed bytes from the buffer.\nbuffer=buffer.subarray(i);};this.flush=function(){frameNum=0;this.trigger('done');};this.reset=function(){buffer=void 0;this.trigger('reset');};this.endTimeline=function(){buffer=void 0;this.trigger('endedtimeline');};};AdtsStream$1.prototype=new Stream$3();var adts=AdtsStream$1;/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */var ExpGolomb$1;/**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */ExpGolomb$1=function(workingData){var// the number of bytes left to examine in workingData\nworkingBytesAvailable=workingData.byteLength,// the current word being examined\nworkingWord=0,// :uint\n// the number of bits left to examine in the current word\nworkingBitsAvailable=0;// :uint;\n// ():uint\nthis.length=function(){return 8*workingBytesAvailable;};// ():uint\nthis.bitsAvailable=function(){return 8*workingBytesAvailable+workingBitsAvailable;};// ():void\nthis.loadWord=function(){var position=workingData.byteLength-workingBytesAvailable,workingBytes=new Uint8Array(4),availableBytes=Math.min(4,workingBytesAvailable);if(availableBytes===0){throw new Error('no bytes available');}workingBytes.set(workingData.subarray(position,position+availableBytes));workingWord=new DataView(workingBytes.buffer).getUint32(0);// track the amount of workingData that has been processed\nworkingBitsAvailable=availableBytes*8;workingBytesAvailable-=availableBytes;};// (count:int):void\nthis.skipBits=function(count){var skipBytes;// :int\nif(workingBitsAvailable>count){workingWord<<=count;workingBitsAvailable-=count;}else{count-=workingBitsAvailable;skipBytes=Math.floor(count/8);count-=skipBytes*8;workingBytesAvailable-=skipBytes;this.loadWord();workingWord<<=count;workingBitsAvailable-=count;}};// (size:int):uint\nthis.readBits=function(size){var bits=Math.min(workingBitsAvailable,size),// :uint\nvalu=workingWord>>>32-bits;// :uint\n// if size > 31, handle error\nworkingBitsAvailable-=bits;if(workingBitsAvailable>0){workingWord<<=bits;}else if(workingBytesAvailable>0){this.loadWord();}bits=size-bits;if(bits>0){return valu<<bits|this.readBits(bits);}return valu;};// ():uint\nthis.skipLeadingZeros=function(){var leadingZeroCount;// :uint\nfor(leadingZeroCount=0;leadingZeroCount<workingBitsAvailable;++leadingZeroCount){if((workingWord&0x80000000>>>leadingZeroCount)!==0){// the first bit of working word is 1\nworkingWord<<=leadingZeroCount;workingBitsAvailable-=leadingZeroCount;return leadingZeroCount;}}// we exhausted workingWord and still have not found a 1\nthis.loadWord();return leadingZeroCount+this.skipLeadingZeros();};// ():void\nthis.skipUnsignedExpGolomb=function(){this.skipBits(1+this.skipLeadingZeros());};// ():void\nthis.skipExpGolomb=function(){this.skipBits(1+this.skipLeadingZeros());};// ():uint\nthis.readUnsignedExpGolomb=function(){var clz=this.skipLeadingZeros();// :uint\nreturn this.readBits(clz+1)-1;};// ():int\nthis.readExpGolomb=function(){var valu=this.readUnsignedExpGolomb();// :int\nif(0x01&valu){// the number is odd if the low order bit is set\nreturn 1+valu>>>1;// add 1 to make it even, and divide by 2\n}return-1*(valu>>>1);// divide by two then make it negative\n};// Some convenience functions\n// :Boolean\nthis.readBoolean=function(){return this.readBits(1)===1;};// ():int\nthis.readUnsignedByte=function(){return this.readBits(8);};this.loadWord();};var expGolomb=ExpGolomb$1;/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */var Stream$2=stream;var ExpGolomb=expGolomb;var H264Stream$1,NalByteStream;var PROFILES_WITH_OPTIONAL_SPS_DATA;/**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */NalByteStream=function(){var syncPoint=0,i,buffer;NalByteStream.prototype.init.call(this);/*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */this.push=function(data){var swapBuffer;if(!buffer){buffer=data.data;}else{swapBuffer=new Uint8Array(buffer.byteLength+data.data.byteLength);swapBuffer.set(buffer);swapBuffer.set(data.data,buffer.byteLength);buffer=swapBuffer;}var len=buffer.byteLength;// Rec. ITU-T H.264, Annex B\n// scan for NAL unit boundaries\n// a match looks like this:\n// 0 0 1 .. NAL .. 0 0 1\n// ^ sync point        ^ i\n// or this:\n// 0 0 1 .. NAL .. 0 0 0\n// ^ sync point        ^ i\n// advance the sync point to a NAL start, if necessary\nfor(;syncPoint<len-3;syncPoint++){if(buffer[syncPoint+2]===1){// the sync point is properly aligned\ni=syncPoint+5;break;}}while(i<len){// look at the current byte to determine if we've hit the end of\n// a NAL unit boundary\nswitch(buffer[i]){case 0:// skip past non-sync sequences\nif(buffer[i-1]!==0){i+=2;break;}else if(buffer[i-2]!==0){i++;break;}// deliver the NAL unit if it isn't empty\nif(syncPoint+3!==i-2){this.trigger('data',buffer.subarray(syncPoint+3,i-2));}// drop trailing zeroes\ndo{i++;}while(buffer[i]!==1&&i<len);syncPoint=i-2;i+=3;break;case 1:// skip past non-sync sequences\nif(buffer[i-1]!==0||buffer[i-2]!==0){i+=3;break;}// deliver the NAL unit\nthis.trigger('data',buffer.subarray(syncPoint+3,i-2));syncPoint=i-2;i+=3;break;default:// the current byte isn't a one or zero, so it cannot be part\n// of a sync sequence\ni+=3;break;}}// filter out the NAL units that were delivered\nbuffer=buffer.subarray(syncPoint);i-=syncPoint;syncPoint=0;};this.reset=function(){buffer=null;syncPoint=0;this.trigger('reset');};this.flush=function(){// deliver the last buffered NAL unit\nif(buffer&&buffer.byteLength>3){this.trigger('data',buffer.subarray(syncPoint+3));}// reset the stream state\nbuffer=null;syncPoint=0;this.trigger('done');};this.endTimeline=function(){this.flush();this.trigger('endedtimeline');};};NalByteStream.prototype=new Stream$2();// values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\nPROFILES_WITH_OPTIONAL_SPS_DATA={100:true,110:true,122:true,244:true,44:true,83:true,86:true,118:true,128:true,// TODO: the three profiles below don't\n// appear to have sps data in the specificiation anymore?\n138:true,139:true,134:true};/**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */H264Stream$1=function(){var nalByteStream=new NalByteStream(),self,trackId,currentPts,currentDts,discardEmulationPreventionBytes,readSequenceParameterSet,skipScalingList;H264Stream$1.prototype.init.call(this);self=this;/*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */this.push=function(packet){if(packet.type!=='video'){return;}trackId=packet.trackId;currentPts=packet.pts;currentDts=packet.dts;nalByteStream.push(packet);};/*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */nalByteStream.on('data',function(data){var event={trackId:trackId,pts:currentPts,dts:currentDts,data:data,nalUnitTypeCode:data[0]&0x1f};switch(event.nalUnitTypeCode){case 0x05:event.nalUnitType='slice_layer_without_partitioning_rbsp_idr';break;case 0x06:event.nalUnitType='sei_rbsp';event.escapedRBSP=discardEmulationPreventionBytes(data.subarray(1));break;case 0x07:event.nalUnitType='seq_parameter_set_rbsp';event.escapedRBSP=discardEmulationPreventionBytes(data.subarray(1));event.config=readSequenceParameterSet(event.escapedRBSP);break;case 0x08:event.nalUnitType='pic_parameter_set_rbsp';break;case 0x09:event.nalUnitType='access_unit_delimiter_rbsp';break;}// This triggers data on the H264Stream\nself.trigger('data',event);});nalByteStream.on('done',function(){self.trigger('done');});nalByteStream.on('partialdone',function(){self.trigger('partialdone');});nalByteStream.on('reset',function(){self.trigger('reset');});nalByteStream.on('endedtimeline',function(){self.trigger('endedtimeline');});this.flush=function(){nalByteStream.flush();};this.partialFlush=function(){nalByteStream.partialFlush();};this.reset=function(){nalByteStream.reset();};this.endTimeline=function(){nalByteStream.endTimeline();};/**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */skipScalingList=function(count,expGolombDecoder){var lastScale=8,nextScale=8,j,deltaScale;for(j=0;j<count;j++){if(nextScale!==0){deltaScale=expGolombDecoder.readExpGolomb();nextScale=(lastScale+deltaScale+256)%256;}lastScale=nextScale===0?lastScale:nextScale;}};/**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */discardEmulationPreventionBytes=function(data){var length=data.byteLength,emulationPreventionBytesPositions=[],i=1,newLength,newData;// Find all `Emulation Prevention Bytes`\nwhile(i<length-2){if(data[i]===0&&data[i+1]===0&&data[i+2]===0x03){emulationPreventionBytesPositions.push(i+2);i+=2;}else{i++;}}// If no Emulation Prevention Bytes were found just return the original\n// array\nif(emulationPreventionBytesPositions.length===0){return data;}// Create a new array to hold the NAL unit data\nnewLength=length-emulationPreventionBytesPositions.length;newData=new Uint8Array(newLength);var sourceIndex=0;for(i=0;i<newLength;sourceIndex++,i++){if(sourceIndex===emulationPreventionBytesPositions[0]){// Skip this byte\nsourceIndex++;// Remove this position index\nemulationPreventionBytesPositions.shift();}newData[i]=data[sourceIndex];}return newData;};/**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */readSequenceParameterSet=function(data){var frameCropLeftOffset=0,frameCropRightOffset=0,frameCropTopOffset=0,frameCropBottomOffset=0,expGolombDecoder,profileIdc,levelIdc,profileCompatibility,chromaFormatIdc,picOrderCntType,numRefFramesInPicOrderCntCycle,picWidthInMbsMinus1,picHeightInMapUnitsMinus1,frameMbsOnlyFlag,scalingListCount,sarRatio=[1,1],aspectRatioIdc,i;expGolombDecoder=new ExpGolomb(data);profileIdc=expGolombDecoder.readUnsignedByte();// profile_idc\nprofileCompatibility=expGolombDecoder.readUnsignedByte();// constraint_set[0-5]_flag\nlevelIdc=expGolombDecoder.readUnsignedByte();// level_idc u(8)\nexpGolombDecoder.skipUnsignedExpGolomb();// seq_parameter_set_id\n// some profiles have more optional data we don't need\nif(PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]){chromaFormatIdc=expGolombDecoder.readUnsignedExpGolomb();if(chromaFormatIdc===3){expGolombDecoder.skipBits(1);// separate_colour_plane_flag\n}expGolombDecoder.skipUnsignedExpGolomb();// bit_depth_luma_minus8\nexpGolombDecoder.skipUnsignedExpGolomb();// bit_depth_chroma_minus8\nexpGolombDecoder.skipBits(1);// qpprime_y_zero_transform_bypass_flag\nif(expGolombDecoder.readBoolean()){// seq_scaling_matrix_present_flag\nscalingListCount=chromaFormatIdc!==3?8:12;for(i=0;i<scalingListCount;i++){if(expGolombDecoder.readBoolean()){// seq_scaling_list_present_flag[ i ]\nif(i<6){skipScalingList(16,expGolombDecoder);}else{skipScalingList(64,expGolombDecoder);}}}}}expGolombDecoder.skipUnsignedExpGolomb();// log2_max_frame_num_minus4\npicOrderCntType=expGolombDecoder.readUnsignedExpGolomb();if(picOrderCntType===0){expGolombDecoder.readUnsignedExpGolomb();// log2_max_pic_order_cnt_lsb_minus4\n}else if(picOrderCntType===1){expGolombDecoder.skipBits(1);// delta_pic_order_always_zero_flag\nexpGolombDecoder.skipExpGolomb();// offset_for_non_ref_pic\nexpGolombDecoder.skipExpGolomb();// offset_for_top_to_bottom_field\nnumRefFramesInPicOrderCntCycle=expGolombDecoder.readUnsignedExpGolomb();for(i=0;i<numRefFramesInPicOrderCntCycle;i++){expGolombDecoder.skipExpGolomb();// offset_for_ref_frame[ i ]\n}}expGolombDecoder.skipUnsignedExpGolomb();// max_num_ref_frames\nexpGolombDecoder.skipBits(1);// gaps_in_frame_num_value_allowed_flag\npicWidthInMbsMinus1=expGolombDecoder.readUnsignedExpGolomb();picHeightInMapUnitsMinus1=expGolombDecoder.readUnsignedExpGolomb();frameMbsOnlyFlag=expGolombDecoder.readBits(1);if(frameMbsOnlyFlag===0){expGolombDecoder.skipBits(1);// mb_adaptive_frame_field_flag\n}expGolombDecoder.skipBits(1);// direct_8x8_inference_flag\nif(expGolombDecoder.readBoolean()){// frame_cropping_flag\nframeCropLeftOffset=expGolombDecoder.readUnsignedExpGolomb();frameCropRightOffset=expGolombDecoder.readUnsignedExpGolomb();frameCropTopOffset=expGolombDecoder.readUnsignedExpGolomb();frameCropBottomOffset=expGolombDecoder.readUnsignedExpGolomb();}if(expGolombDecoder.readBoolean()){// vui_parameters_present_flag\nif(expGolombDecoder.readBoolean()){// aspect_ratio_info_present_flag\naspectRatioIdc=expGolombDecoder.readUnsignedByte();switch(aspectRatioIdc){case 1:sarRatio=[1,1];break;case 2:sarRatio=[12,11];break;case 3:sarRatio=[10,11];break;case 4:sarRatio=[16,11];break;case 5:sarRatio=[40,33];break;case 6:sarRatio=[24,11];break;case 7:sarRatio=[20,11];break;case 8:sarRatio=[32,11];break;case 9:sarRatio=[80,33];break;case 10:sarRatio=[18,11];break;case 11:sarRatio=[15,11];break;case 12:sarRatio=[64,33];break;case 13:sarRatio=[160,99];break;case 14:sarRatio=[4,3];break;case 15:sarRatio=[3,2];break;case 16:sarRatio=[2,1];break;case 255:{sarRatio=[expGolombDecoder.readUnsignedByte()<<8|expGolombDecoder.readUnsignedByte(),expGolombDecoder.readUnsignedByte()<<8|expGolombDecoder.readUnsignedByte()];break;}}if(sarRatio){sarRatio[0]/sarRatio[1];}}}return{profileIdc:profileIdc,levelIdc:levelIdc,profileCompatibility:profileCompatibility,width:(picWidthInMbsMinus1+1)*16-frameCropLeftOffset*2-frameCropRightOffset*2,height:(2-frameMbsOnlyFlag)*(picHeightInMapUnitsMinus1+1)*16-frameCropTopOffset*2-frameCropBottomOffset*2,// sar is sample aspect ratio\nsarRatio:sarRatio};};};H264Stream$1.prototype=new Stream$2();var h264={H264Stream:H264Stream$1,NalByteStream:NalByteStream};/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */var ADTS_SAMPLING_FREQUENCIES=[96000,88200,64000,48000,44100,32000,24000,22050,16000,12000,11025,8000,7350];var parseId3TagSize=function(header,byteIndex){var returnSize=header[byteIndex+6]<<21|header[byteIndex+7]<<14|header[byteIndex+8]<<7|header[byteIndex+9],flags=header[byteIndex+5],footerPresent=(flags&16)>>4;// if we get a negative returnSize clamp it to 0\nreturnSize=returnSize>=0?returnSize:0;if(footerPresent){return returnSize+20;}return returnSize+10;};var getId3Offset=function(data,offset){if(data.length-offset<10||data[offset]!=='I'.charCodeAt(0)||data[offset+1]!=='D'.charCodeAt(0)||data[offset+2]!=='3'.charCodeAt(0)){return offset;}offset+=parseId3TagSize(data,offset);return getId3Offset(data,offset);};// TODO: use vhs-utils\nvar isLikelyAacData$1=function(data){var offset=getId3Offset(data,0);return data.length>=offset+2&&(data[offset]&0xFF)===0xFF&&(data[offset+1]&0xF0)===0xF0&&// verify that the 2 layer bits are 0, aka this\n// is not mp3 data but aac data.\n(data[offset+1]&0x16)===0x10;};var parseSyncSafeInteger=function(data){return data[0]<<21|data[1]<<14|data[2]<<7|data[3];};// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode=function(bytes,start,end){var i,result='';for(i=start;i<end;i++){result+='%'+('00'+bytes[i].toString(16)).slice(-2);}return result;};// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591=function(bytes,start,end){return unescape(percentEncode(bytes,start,end));// jshint ignore:line\n};var parseAdtsSize=function(header,byteIndex){var lowThree=(header[byteIndex+5]&0xE0)>>5,middle=header[byteIndex+4]<<3,highTwo=header[byteIndex+3]&0x3<<11;return highTwo|middle|lowThree;};var parseType$4=function(header,byteIndex){if(header[byteIndex]==='I'.charCodeAt(0)&&header[byteIndex+1]==='D'.charCodeAt(0)&&header[byteIndex+2]==='3'.charCodeAt(0)){return'timed-metadata';}else if(header[byteIndex]&0xff===0xff&&(header[byteIndex+1]&0xf0)===0xf0){return'audio';}return null;};var parseSampleRate=function(packet){var i=0;while(i+5<packet.length){if(packet[i]!==0xFF||(packet[i+1]&0xF6)!==0xF0){// If a valid header was not found,  jump one forward and attempt to\n// find a valid ADTS header starting at the next byte\ni++;continue;}return ADTS_SAMPLING_FREQUENCIES[(packet[i+2]&0x3c)>>>2];}return null;};var parseAacTimestamp=function(packet){var frameStart,frameSize,frame,frameHeader;// find the start of the first frame and the end of the tag\nframeStart=10;if(packet[5]&0x40){// advance the frame start past the extended header\nframeStart+=4;// header size field\nframeStart+=parseSyncSafeInteger(packet.subarray(10,14));}// parse one or more ID3 frames\n// http://id3.org/id3v2.3.0#ID3v2_frame_overview\ndo{// determine the number of bytes in this frame\nframeSize=parseSyncSafeInteger(packet.subarray(frameStart+4,frameStart+8));if(frameSize<1){return null;}frameHeader=String.fromCharCode(packet[frameStart],packet[frameStart+1],packet[frameStart+2],packet[frameStart+3]);if(frameHeader==='PRIV'){frame=packet.subarray(frameStart+10,frameStart+frameSize+10);for(var i=0;i<frame.byteLength;i++){if(frame[i]===0){var owner=parseIso88591(frame,0,i);if(owner==='com.apple.streaming.transportStreamTimestamp'){var d=frame.subarray(i+1);var size=(d[3]&0x01)<<30|d[4]<<22|d[5]<<14|d[6]<<6|d[7]>>>2;size*=4;size+=d[7]&0x03;return size;}break;}}}frameStart+=10;// advance past the frame header\nframeStart+=frameSize;// advance past the frame body\n}while(frameStart<packet.byteLength);return null;};var utils={isLikelyAacData:isLikelyAacData$1,parseId3TagSize:parseId3TagSize,parseAdtsSize:parseAdtsSize,parseType:parseType$4,parseSampleRate:parseSampleRate,parseAacTimestamp:parseAacTimestamp};/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based aac to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */var Stream$1=stream;var aacUtils=utils;// Constants\nvar AacStream$1;/**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */AacStream$1=function(){var everything=new Uint8Array(),timeStamp=0;AacStream$1.prototype.init.call(this);this.setTimestamp=function(timestamp){timeStamp=timestamp;};this.push=function(bytes){var frameSize=0,byteIndex=0,bytesLeft,chunk,packet,tempLength;// If there are bytes remaining from the last segment, prepend them to the\n// bytes that were pushed in\nif(everything.length){tempLength=everything.length;everything=new Uint8Array(bytes.byteLength+tempLength);everything.set(everything.subarray(0,tempLength));everything.set(bytes,tempLength);}else{everything=bytes;}while(everything.length-byteIndex>=3){if(everything[byteIndex]==='I'.charCodeAt(0)&&everything[byteIndex+1]==='D'.charCodeAt(0)&&everything[byteIndex+2]==='3'.charCodeAt(0)){// Exit early because we don't have enough to parse\n// the ID3 tag header\nif(everything.length-byteIndex<10){break;}// check framesize\nframeSize=aacUtils.parseId3TagSize(everything,byteIndex);// Exit early if we don't have enough in the buffer\n// to emit a full packet\n// Add to byteIndex to support multiple ID3 tags in sequence\nif(byteIndex+frameSize>everything.length){break;}chunk={type:'timed-metadata',data:everything.subarray(byteIndex,byteIndex+frameSize)};this.trigger('data',chunk);byteIndex+=frameSize;continue;}else if((everything[byteIndex]&0xff)===0xff&&(everything[byteIndex+1]&0xf0)===0xf0){// Exit early because we don't have enough to parse\n// the ADTS frame header\nif(everything.length-byteIndex<7){break;}frameSize=aacUtils.parseAdtsSize(everything,byteIndex);// Exit early if we don't have enough in the buffer\n// to emit a full packet\nif(byteIndex+frameSize>everything.length){break;}packet={type:'audio',data:everything.subarray(byteIndex,byteIndex+frameSize),pts:timeStamp,dts:timeStamp};this.trigger('data',packet);byteIndex+=frameSize;continue;}byteIndex++;}bytesLeft=everything.length-byteIndex;if(bytesLeft>0){everything=everything.subarray(byteIndex);}else{everything=new Uint8Array();}};this.reset=function(){everything=new Uint8Array();this.trigger('reset');};this.endTimeline=function(){everything=new Uint8Array();this.trigger('endedtimeline');};};AacStream$1.prototype=new Stream$1();var aac=AacStream$1;var AUDIO_PROPERTIES$1=['audioobjecttype','channelcount','samplerate','samplingfrequencyindex','samplesize'];var audioProperties=AUDIO_PROPERTIES$1;var VIDEO_PROPERTIES$1=['width','height','profileIdc','levelIdc','profileCompatibility','sarRatio'];var videoProperties=VIDEO_PROPERTIES$1;/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */var Stream=stream;var mp4=mp4Generator;var frameUtils=frameUtils$1;var audioFrameUtils=audioFrameUtils$1;var trackDecodeInfo=trackDecodeInfo$1;var m2ts=m2ts_1;var clock=clock$2;var AdtsStream=adts;var H264Stream=h264.H264Stream;var AacStream=aac;var isLikelyAacData=utils.isLikelyAacData;var ONE_SECOND_IN_TS$1=clock$2.ONE_SECOND_IN_TS;var AUDIO_PROPERTIES=audioProperties;var VIDEO_PROPERTIES=videoProperties;// object types\nvar VideoSegmentStream,AudioSegmentStream,Transmuxer,CoalesceStream;var retriggerForStream=function(key,event){event.stream=key;this.trigger('log',event);};var addPipelineLogRetriggers=function(transmuxer,pipeline){var keys=Object.keys(pipeline);for(var i=0;i<keys.length;i++){var key=keys[i];// skip non-stream keys and headOfPipeline\n// which is just a duplicate\nif(key==='headOfPipeline'||!pipeline[key].on){continue;}pipeline[key].on('log',retriggerForStream.bind(transmuxer,key));}};/**\n   * Compare two arrays (even typed) for same-ness\n   */var arrayEquals=function(a,b){var i;if(a.length!==b.length){return false;}// compare the value of each element in the array\nfor(i=0;i<a.length;i++){if(a[i]!==b[i]){return false;}}return true;};var generateSegmentTimingInfo=function(baseMediaDecodeTime,startDts,startPts,endDts,endPts,prependedContentDuration){var ptsOffsetFromDts=startPts-startDts,decodeDuration=endDts-startDts,presentationDuration=endPts-startPts;// The PTS and DTS values are based on the actual stream times from the segment,\n// however, the player time values will reflect a start from the baseMediaDecodeTime.\n// In order to provide relevant values for the player times, base timing info on the\n// baseMediaDecodeTime and the DTS and PTS durations of the segment.\nreturn{start:{dts:baseMediaDecodeTime,pts:baseMediaDecodeTime+ptsOffsetFromDts},end:{dts:baseMediaDecodeTime+decodeDuration,pts:baseMediaDecodeTime+presentationDuration},prependedContentDuration:prependedContentDuration,baseMediaDecodeTime:baseMediaDecodeTime};};/**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */AudioSegmentStream=function(track,options){var adtsFrames=[],sequenceNumber,earliestAllowedDts=0,audioAppendStartTs=0,videoBaseMediaDecodeTime=Infinity;options=options||{};sequenceNumber=options.firstSequenceNumber||0;AudioSegmentStream.prototype.init.call(this);this.push=function(data){trackDecodeInfo.collectDtsInfo(track,data);if(track){AUDIO_PROPERTIES.forEach(function(prop){track[prop]=data[prop];});}// buffer audio data until end() is called\nadtsFrames.push(data);};this.setEarliestDts=function(earliestDts){earliestAllowedDts=earliestDts;};this.setVideoBaseMediaDecodeTime=function(baseMediaDecodeTime){videoBaseMediaDecodeTime=baseMediaDecodeTime;};this.setAudioAppendStart=function(timestamp){audioAppendStartTs=timestamp;};this.flush=function(){var frames,moof,mdat,boxes,frameDuration,segmentDuration,videoClockCyclesOfSilencePrefixed;// return early if no audio data has been observed\nif(adtsFrames.length===0){this.trigger('done','AudioSegmentStream');return;}frames=audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames,track,earliestAllowedDts);track.baseMediaDecodeTime=trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track,options.keepOriginalTimestamps);// amount of audio filled but the value is in video clock rather than audio clock\nvideoClockCyclesOfSilencePrefixed=audioFrameUtils.prefixWithSilence(track,frames,audioAppendStartTs,videoBaseMediaDecodeTime);// we have to build the index from byte locations to\n// samples (that is, adts frames) in the audio data\ntrack.samples=audioFrameUtils.generateSampleTable(frames);// concatenate the audio data to constuct the mdat\nmdat=mp4.mdat(audioFrameUtils.concatenateFrameData(frames));adtsFrames=[];moof=mp4.moof(sequenceNumber,[track]);boxes=new Uint8Array(moof.byteLength+mdat.byteLength);// bump the sequence number for next time\nsequenceNumber++;boxes.set(moof);boxes.set(mdat,moof.byteLength);trackDecodeInfo.clearDtsInfo(track);frameDuration=Math.ceil(ONE_SECOND_IN_TS$1*1024/track.samplerate);// TODO this check was added to maintain backwards compatibility (particularly with\n// tests) on adding the timingInfo event. However, it seems unlikely that there's a\n// valid use-case where an init segment/data should be triggered without associated\n// frames. Leaving for now, but should be looked into.\nif(frames.length){segmentDuration=frames.length*frameDuration;this.trigger('segmentTimingInfo',generateSegmentTimingInfo(// The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n// frame info is in video clock cycles. Convert to match expectation of\n// listeners (that all timestamps will be based on video clock cycles).\nclock.audioTsToVideoTs(track.baseMediaDecodeTime,track.samplerate),// frame times are already in video clock, as is segment duration\nframes[0].dts,frames[0].pts,frames[0].dts+segmentDuration,frames[0].pts+segmentDuration,videoClockCyclesOfSilencePrefixed||0));this.trigger('timingInfo',{start:frames[0].pts,end:frames[0].pts+segmentDuration});}this.trigger('data',{track:track,boxes:boxes});this.trigger('done','AudioSegmentStream');};this.reset=function(){trackDecodeInfo.clearDtsInfo(track);adtsFrames=[];this.trigger('reset');};};AudioSegmentStream.prototype=new Stream();/**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */VideoSegmentStream=function(track,options){var sequenceNumber,nalUnits=[],gopsToAlignWith=[],config,pps;options=options||{};sequenceNumber=options.firstSequenceNumber||0;VideoSegmentStream.prototype.init.call(this);delete track.minPTS;this.gopCache_=[];/**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/this.push=function(nalUnit){trackDecodeInfo.collectDtsInfo(track,nalUnit);// record the track config\nif(nalUnit.nalUnitType==='seq_parameter_set_rbsp'&&!config){config=nalUnit.config;track.sps=[nalUnit.data];VIDEO_PROPERTIES.forEach(function(prop){track[prop]=config[prop];},this);}if(nalUnit.nalUnitType==='pic_parameter_set_rbsp'&&!pps){pps=nalUnit.data;track.pps=[nalUnit.data];}// buffer video until flush() is called\nnalUnits.push(nalUnit);};/**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/this.flush=function(){var frames,gopForFusion,gops,moof,mdat,boxes,prependedContentDuration=0,firstGop,lastGop;// Throw away nalUnits at the start of the byte stream until\n// we find the first AUD\nwhile(nalUnits.length){if(nalUnits[0].nalUnitType==='access_unit_delimiter_rbsp'){break;}nalUnits.shift();}// Return early if no video data has been observed\nif(nalUnits.length===0){this.resetStream_();this.trigger('done','VideoSegmentStream');return;}// Organize the raw nal-units into arrays that represent\n// higher-level constructs such as frames and gops\n// (group-of-pictures)\nframes=frameUtils.groupNalsIntoFrames(nalUnits);gops=frameUtils.groupFramesIntoGops(frames);// If the first frame of this fragment is not a keyframe we have\n// a problem since MSE (on Chrome) requires a leading keyframe.\n//\n// We have two approaches to repairing this situation:\n// 1) GOP-FUSION:\n//    This is where we keep track of the GOPS (group-of-pictures)\n//    from previous fragments and attempt to find one that we can\n//    prepend to the current fragment in order to create a valid\n//    fragment.\n// 2) KEYFRAME-PULLING:\n//    Here we search for the first keyframe in the fragment and\n//    throw away all the frames between the start of the fragment\n//    and that keyframe. We then extend the duration and pull the\n//    PTS of the keyframe forward so that it covers the time range\n//    of the frames that were disposed of.\n//\n// #1 is far prefereable over #2 which can cause \"stuttering\" but\n// requires more things to be just right.\nif(!gops[0][0].keyFrame){// Search for a gop for fusion from our gopCache\ngopForFusion=this.getGopForFusion_(nalUnits[0],track);if(gopForFusion){// in order to provide more accurate timing information about the segment, save\n// the number of seconds prepended to the original segment due to GOP fusion\nprependedContentDuration=gopForFusion.duration;gops.unshift(gopForFusion);// Adjust Gops' metadata to account for the inclusion of the\n// new gop at the beginning\ngops.byteLength+=gopForFusion.byteLength;gops.nalCount+=gopForFusion.nalCount;gops.pts=gopForFusion.pts;gops.dts=gopForFusion.dts;gops.duration+=gopForFusion.duration;}else{// If we didn't find a candidate gop fall back to keyframe-pulling\ngops=frameUtils.extendFirstKeyFrame(gops);}}// Trim gops to align with gopsToAlignWith\nif(gopsToAlignWith.length){var alignedGops;if(options.alignGopsAtEnd){alignedGops=this.alignGopsAtEnd_(gops);}else{alignedGops=this.alignGopsAtStart_(gops);}if(!alignedGops){// save all the nals in the last GOP into the gop cache\nthis.gopCache_.unshift({gop:gops.pop(),pps:track.pps,sps:track.sps});// Keep a maximum of 6 GOPs in the cache\nthis.gopCache_.length=Math.min(6,this.gopCache_.length);// Clear nalUnits\nnalUnits=[];// return early no gops can be aligned with desired gopsToAlignWith\nthis.resetStream_();this.trigger('done','VideoSegmentStream');return;}// Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n// when recalculated before sending off to CoalesceStream\ntrackDecodeInfo.clearDtsInfo(track);gops=alignedGops;}trackDecodeInfo.collectDtsInfo(track,gops);// First, we have to build the index from byte locations to\n// samples (that is, frames) in the video data\ntrack.samples=frameUtils.generateSampleTable(gops);// Concatenate the video data and construct the mdat\nmdat=mp4.mdat(frameUtils.concatenateNalData(gops));track.baseMediaDecodeTime=trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track,options.keepOriginalTimestamps);this.trigger('processedGopsInfo',gops.map(function(gop){return{pts:gop.pts,dts:gop.dts,byteLength:gop.byteLength};}));firstGop=gops[0];lastGop=gops[gops.length-1];this.trigger('segmentTimingInfo',generateSegmentTimingInfo(track.baseMediaDecodeTime,firstGop.dts,firstGop.pts,lastGop.dts+lastGop.duration,lastGop.pts+lastGop.duration,prependedContentDuration));this.trigger('timingInfo',{start:gops[0].pts,end:gops[gops.length-1].pts+gops[gops.length-1].duration});// save all the nals in the last GOP into the gop cache\nthis.gopCache_.unshift({gop:gops.pop(),pps:track.pps,sps:track.sps});// Keep a maximum of 6 GOPs in the cache\nthis.gopCache_.length=Math.min(6,this.gopCache_.length);// Clear nalUnits\nnalUnits=[];this.trigger('baseMediaDecodeTime',track.baseMediaDecodeTime);this.trigger('timelineStartInfo',track.timelineStartInfo);moof=mp4.moof(sequenceNumber,[track]);// it would be great to allocate this array up front instead of\n// throwing away hundreds of media segment fragments\nboxes=new Uint8Array(moof.byteLength+mdat.byteLength);// Bump the sequence number for next time\nsequenceNumber++;boxes.set(moof);boxes.set(mdat,moof.byteLength);this.trigger('data',{track:track,boxes:boxes});this.resetStream_();// Continue with the flush process now\nthis.trigger('done','VideoSegmentStream');};this.reset=function(){this.resetStream_();nalUnits=[];this.gopCache_.length=0;gopsToAlignWith.length=0;this.trigger('reset');};this.resetStream_=function(){trackDecodeInfo.clearDtsInfo(track);// reset config and pps because they may differ across segments\n// for instance, when we are rendition switching\nconfig=undefined;pps=undefined;};// Search for a candidate Gop for gop-fusion from the gop cache and\n// return it or return null if no good candidate was found\nthis.getGopForFusion_=function(nalUnit){var halfSecond=45000,// Half-a-second in a 90khz clock\nallowableOverlap=10000,// About 3 frames @ 30fps\nnearestDistance=Infinity,dtsDistance,nearestGopObj,currentGop,currentGopObj,i;// Search for the GOP nearest to the beginning of this nal unit\nfor(i=0;i<this.gopCache_.length;i++){currentGopObj=this.gopCache_[i];currentGop=currentGopObj.gop;// Reject Gops with different SPS or PPS\nif(!(track.pps&&arrayEquals(track.pps[0],currentGopObj.pps[0]))||!(track.sps&&arrayEquals(track.sps[0],currentGopObj.sps[0]))){continue;}// Reject Gops that would require a negative baseMediaDecodeTime\nif(currentGop.dts<track.timelineStartInfo.dts){continue;}// The distance between the end of the gop and the start of the nalUnit\ndtsDistance=nalUnit.dts-currentGop.dts-currentGop.duration;// Only consider GOPS that start before the nal unit and end within\n// a half-second of the nal unit\nif(dtsDistance>=-allowableOverlap&&dtsDistance<=halfSecond){// Always use the closest GOP we found if there is more than\n// one candidate\nif(!nearestGopObj||nearestDistance>dtsDistance){nearestGopObj=currentGopObj;nearestDistance=dtsDistance;}}}if(nearestGopObj){return nearestGopObj.gop;}return null;};// trim gop list to the first gop found that has a matching pts with a gop in the list\n// of gopsToAlignWith starting from the START of the list\nthis.alignGopsAtStart_=function(gops){var alignIndex,gopIndex,align,gop,byteLength,nalCount,duration,alignedGops;byteLength=gops.byteLength;nalCount=gops.nalCount;duration=gops.duration;alignIndex=gopIndex=0;while(alignIndex<gopsToAlignWith.length&&gopIndex<gops.length){align=gopsToAlignWith[alignIndex];gop=gops[gopIndex];if(align.pts===gop.pts){break;}if(gop.pts>align.pts){// this current gop starts after the current gop we want to align on, so increment\n// align index\nalignIndex++;continue;}// current gop starts before the current gop we want to align on. so increment gop\n// index\ngopIndex++;byteLength-=gop.byteLength;nalCount-=gop.nalCount;duration-=gop.duration;}if(gopIndex===0){// no gops to trim\nreturn gops;}if(gopIndex===gops.length){// all gops trimmed, skip appending all gops\nreturn null;}alignedGops=gops.slice(gopIndex);alignedGops.byteLength=byteLength;alignedGops.duration=duration;alignedGops.nalCount=nalCount;alignedGops.pts=alignedGops[0].pts;alignedGops.dts=alignedGops[0].dts;return alignedGops;};// trim gop list to the first gop found that has a matching pts with a gop in the list\n// of gopsToAlignWith starting from the END of the list\nthis.alignGopsAtEnd_=function(gops){var alignIndex,gopIndex,align,gop,alignEndIndex,matchFound;alignIndex=gopsToAlignWith.length-1;gopIndex=gops.length-1;alignEndIndex=null;matchFound=false;while(alignIndex>=0&&gopIndex>=0){align=gopsToAlignWith[alignIndex];gop=gops[gopIndex];if(align.pts===gop.pts){matchFound=true;break;}if(align.pts>gop.pts){alignIndex--;continue;}if(alignIndex===gopsToAlignWith.length-1){// gop.pts is greater than the last alignment candidate. If no match is found\n// by the end of this loop, we still want to append gops that come after this\n// point\nalignEndIndex=gopIndex;}gopIndex--;}if(!matchFound&&alignEndIndex===null){return null;}var trimIndex;if(matchFound){trimIndex=gopIndex;}else{trimIndex=alignEndIndex;}if(trimIndex===0){return gops;}var alignedGops=gops.slice(trimIndex);var metadata=alignedGops.reduce(function(total,gop){total.byteLength+=gop.byteLength;total.duration+=gop.duration;total.nalCount+=gop.nalCount;return total;},{byteLength:0,duration:0,nalCount:0});alignedGops.byteLength=metadata.byteLength;alignedGops.duration=metadata.duration;alignedGops.nalCount=metadata.nalCount;alignedGops.pts=alignedGops[0].pts;alignedGops.dts=alignedGops[0].dts;return alignedGops;};this.alignGopsWith=function(newGopsToAlignWith){gopsToAlignWith=newGopsToAlignWith;};};VideoSegmentStream.prototype=new Stream();/**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */CoalesceStream=function(options,metadataStream){// Number of Tracks per output segment\n// If greater than 1, we combine multiple\n// tracks into a single segment\nthis.numberOfTracks=0;this.metadataStream=metadataStream;options=options||{};if(typeof options.remux!=='undefined'){this.remuxTracks=!!options.remux;}else{this.remuxTracks=true;}if(typeof options.keepOriginalTimestamps==='boolean'){this.keepOriginalTimestamps=options.keepOriginalTimestamps;}else{this.keepOriginalTimestamps=false;}this.pendingTracks=[];this.videoTrack=null;this.pendingBoxes=[];this.pendingCaptions=[];this.pendingMetadata=[];this.pendingBytes=0;this.emittedTracks=0;CoalesceStream.prototype.init.call(this);// Take output from multiple\nthis.push=function(output){// buffer incoming captions until the associated video segment\n// finishes\nif(output.text){return this.pendingCaptions.push(output);}// buffer incoming id3 tags until the final flush\nif(output.frames){return this.pendingMetadata.push(output);}// Add this track to the list of pending tracks and store\n// important information required for the construction of\n// the final segment\nthis.pendingTracks.push(output.track);this.pendingBytes+=output.boxes.byteLength;// TODO: is there an issue for this against chrome?\n// We unshift audio and push video because\n// as of Chrome 75 when switching from\n// one init segment to another if the video\n// mdat does not appear after the audio mdat\n// only audio will play for the duration of our transmux.\nif(output.track.type==='video'){this.videoTrack=output.track;this.pendingBoxes.push(output.boxes);}if(output.track.type==='audio'){this.audioTrack=output.track;this.pendingBoxes.unshift(output.boxes);}};};CoalesceStream.prototype=new Stream();CoalesceStream.prototype.flush=function(flushSource){var offset=0,event={captions:[],captionStreams:{},metadata:[],info:{}},caption,id3,initSegment,timelineStartPts=0,i;if(this.pendingTracks.length<this.numberOfTracks){if(flushSource!=='VideoSegmentStream'&&flushSource!=='AudioSegmentStream'){// Return because we haven't received a flush from a data-generating\n// portion of the segment (meaning that we have only recieved meta-data\n// or captions.)\nreturn;}else if(this.remuxTracks){// Return until we have enough tracks from the pipeline to remux (if we\n// are remuxing audio and video into a single MP4)\nreturn;}else if(this.pendingTracks.length===0){// In the case where we receive a flush without any data having been\n// received we consider it an emitted track for the purposes of coalescing\n// `done` events.\n// We do this for the case where there is an audio and video track in the\n// segment but no audio data. (seen in several playlists with alternate\n// audio tracks and no audio present in the main TS segments.)\nthis.emittedTracks++;if(this.emittedTracks>=this.numberOfTracks){this.trigger('done');this.emittedTracks=0;}return;}}if(this.videoTrack){timelineStartPts=this.videoTrack.timelineStartInfo.pts;VIDEO_PROPERTIES.forEach(function(prop){event.info[prop]=this.videoTrack[prop];},this);}else if(this.audioTrack){timelineStartPts=this.audioTrack.timelineStartInfo.pts;AUDIO_PROPERTIES.forEach(function(prop){event.info[prop]=this.audioTrack[prop];},this);}if(this.videoTrack||this.audioTrack){if(this.pendingTracks.length===1){event.type=this.pendingTracks[0].type;}else{event.type='combined';}this.emittedTracks+=this.pendingTracks.length;initSegment=mp4.initSegment(this.pendingTracks);// Create a new typed array to hold the init segment\nevent.initSegment=new Uint8Array(initSegment.byteLength);// Create an init segment containing a moov\n// and track definitions\nevent.initSegment.set(initSegment);// Create a new typed array to hold the moof+mdats\nevent.data=new Uint8Array(this.pendingBytes);// Append each moof+mdat (one per track) together\nfor(i=0;i<this.pendingBoxes.length;i++){event.data.set(this.pendingBoxes[i],offset);offset+=this.pendingBoxes[i].byteLength;}// Translate caption PTS times into second offsets to match the\n// video timeline for the segment, and add track info\nfor(i=0;i<this.pendingCaptions.length;i++){caption=this.pendingCaptions[i];caption.startTime=clock.metadataTsToSeconds(caption.startPts,timelineStartPts,this.keepOriginalTimestamps);caption.endTime=clock.metadataTsToSeconds(caption.endPts,timelineStartPts,this.keepOriginalTimestamps);event.captionStreams[caption.stream]=true;event.captions.push(caption);}// Translate ID3 frame PTS times into second offsets to match the\n// video timeline for the segment\nfor(i=0;i<this.pendingMetadata.length;i++){id3=this.pendingMetadata[i];id3.cueTime=clock.metadataTsToSeconds(id3.pts,timelineStartPts,this.keepOriginalTimestamps);event.metadata.push(id3);}// We add this to every single emitted segment even though we only need\n// it for the first\nevent.metadata.dispatchType=this.metadataStream.dispatchType;// Reset stream state\nthis.pendingTracks.length=0;this.videoTrack=null;this.pendingBoxes.length=0;this.pendingCaptions.length=0;this.pendingBytes=0;this.pendingMetadata.length=0;// Emit the built segment\n// We include captions and ID3 tags for backwards compatibility,\n// ideally we should send only video and audio in the data event\nthis.trigger('data',event);// Emit each caption to the outside world\n// Ideally, this would happen immediately on parsing captions,\n// but we need to ensure that video data is sent back first\n// so that caption timing can be adjusted to match video timing\nfor(i=0;i<event.captions.length;i++){caption=event.captions[i];this.trigger('caption',caption);}// Emit each id3 tag to the outside world\n// Ideally, this would happen immediately on parsing the tag,\n// but we need to ensure that video data is sent back first\n// so that ID3 frame timing can be adjusted to match video timing\nfor(i=0;i<event.metadata.length;i++){id3=event.metadata[i];this.trigger('id3Frame',id3);}}// Only emit `done` if all tracks have been flushed and emitted\nif(this.emittedTracks>=this.numberOfTracks){this.trigger('done');this.emittedTracks=0;}};CoalesceStream.prototype.setRemux=function(val){this.remuxTracks=val;};/**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */Transmuxer=function(options){var self=this,hasFlushed=true,videoTrack,audioTrack;Transmuxer.prototype.init.call(this);options=options||{};this.baseMediaDecodeTime=options.baseMediaDecodeTime||0;this.transmuxPipeline_={};this.setupAacPipeline=function(){var pipeline={};this.transmuxPipeline_=pipeline;pipeline.type='aac';pipeline.metadataStream=new m2ts.MetadataStream();// set up the parsing pipeline\npipeline.aacStream=new AacStream();pipeline.audioTimestampRolloverStream=new m2ts.TimestampRolloverStream('audio');pipeline.timedMetadataTimestampRolloverStream=new m2ts.TimestampRolloverStream('timed-metadata');pipeline.adtsStream=new AdtsStream();pipeline.coalesceStream=new CoalesceStream(options,pipeline.metadataStream);pipeline.headOfPipeline=pipeline.aacStream;pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);pipeline.metadataStream.on('timestamp',function(frame){pipeline.aacStream.setTimestamp(frame.timeStamp);});pipeline.aacStream.on('data',function(data){if(data.type!=='timed-metadata'&&data.type!=='audio'||pipeline.audioSegmentStream){return;}audioTrack=audioTrack||{timelineStartInfo:{baseMediaDecodeTime:self.baseMediaDecodeTime},codec:'adts',type:'audio'};// hook up the audio segment stream to the first track with aac data\npipeline.coalesceStream.numberOfTracks++;pipeline.audioSegmentStream=new AudioSegmentStream(audioTrack,options);pipeline.audioSegmentStream.on('log',self.getLogTrigger_('audioSegmentStream'));pipeline.audioSegmentStream.on('timingInfo',self.trigger.bind(self,'audioTimingInfo'));// Set up the final part of the audio pipeline\npipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);// emit pmt info\nself.trigger('trackinfo',{hasAudio:!!audioTrack,hasVideo:!!videoTrack});});// Re-emit any data coming from the coalesce stream to the outside world\npipeline.coalesceStream.on('data',this.trigger.bind(this,'data'));// Let the consumer know we have finished flushing the entire pipeline\npipeline.coalesceStream.on('done',this.trigger.bind(this,'done'));addPipelineLogRetriggers(this,pipeline);};this.setupTsPipeline=function(){var pipeline={};this.transmuxPipeline_=pipeline;pipeline.type='ts';pipeline.metadataStream=new m2ts.MetadataStream();// set up the parsing pipeline\npipeline.packetStream=new m2ts.TransportPacketStream();pipeline.parseStream=new m2ts.TransportParseStream();pipeline.elementaryStream=new m2ts.ElementaryStream();pipeline.timestampRolloverStream=new m2ts.TimestampRolloverStream();pipeline.adtsStream=new AdtsStream();pipeline.h264Stream=new H264Stream();pipeline.captionStream=new m2ts.CaptionStream(options);pipeline.coalesceStream=new CoalesceStream(options,pipeline.metadataStream);pipeline.headOfPipeline=pipeline.packetStream;// disassemble MPEG2-TS packets into elementary streams\npipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream);// !!THIS ORDER IS IMPORTANT!!\n// demux the streams\npipeline.timestampRolloverStream.pipe(pipeline.h264Stream);pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);// Hook up CEA-608/708 caption stream\npipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);pipeline.elementaryStream.on('data',function(data){var i;if(data.type==='metadata'){i=data.tracks.length;// scan the tracks listed in the metadata\nwhile(i--){if(!videoTrack&&data.tracks[i].type==='video'){videoTrack=data.tracks[i];videoTrack.timelineStartInfo.baseMediaDecodeTime=self.baseMediaDecodeTime;}else if(!audioTrack&&data.tracks[i].type==='audio'){audioTrack=data.tracks[i];audioTrack.timelineStartInfo.baseMediaDecodeTime=self.baseMediaDecodeTime;}}// hook up the video segment stream to the first track with h264 data\nif(videoTrack&&!pipeline.videoSegmentStream){pipeline.coalesceStream.numberOfTracks++;pipeline.videoSegmentStream=new VideoSegmentStream(videoTrack,options);pipeline.videoSegmentStream.on('log',self.getLogTrigger_('videoSegmentStream'));pipeline.videoSegmentStream.on('timelineStartInfo',function(timelineStartInfo){// When video emits timelineStartInfo data after a flush, we forward that\n// info to the AudioSegmentStream, if it exists, because video timeline\n// data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n// because this is a particularly subtle form of timestamp alteration.\nif(audioTrack&&!options.keepOriginalTimestamps){audioTrack.timelineStartInfo=timelineStartInfo;// On the first segment we trim AAC frames that exist before the\n// very earliest DTS we have seen in video because Chrome will\n// interpret any video track with a baseMediaDecodeTime that is\n// non-zero as a gap.\npipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts-self.baseMediaDecodeTime);}});pipeline.videoSegmentStream.on('processedGopsInfo',self.trigger.bind(self,'gopInfo'));pipeline.videoSegmentStream.on('segmentTimingInfo',self.trigger.bind(self,'videoSegmentTimingInfo'));pipeline.videoSegmentStream.on('baseMediaDecodeTime',function(baseMediaDecodeTime){if(audioTrack){pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);}});pipeline.videoSegmentStream.on('timingInfo',self.trigger.bind(self,'videoTimingInfo'));// Set up the final part of the video pipeline\npipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);}if(audioTrack&&!pipeline.audioSegmentStream){// hook up the audio segment stream to the first track with aac data\npipeline.coalesceStream.numberOfTracks++;pipeline.audioSegmentStream=new AudioSegmentStream(audioTrack,options);pipeline.audioSegmentStream.on('log',self.getLogTrigger_('audioSegmentStream'));pipeline.audioSegmentStream.on('timingInfo',self.trigger.bind(self,'audioTimingInfo'));pipeline.audioSegmentStream.on('segmentTimingInfo',self.trigger.bind(self,'audioSegmentTimingInfo'));// Set up the final part of the audio pipeline\npipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);}// emit pmt info\nself.trigger('trackinfo',{hasAudio:!!audioTrack,hasVideo:!!videoTrack});}});// Re-emit any data coming from the coalesce stream to the outside world\npipeline.coalesceStream.on('data',this.trigger.bind(this,'data'));pipeline.coalesceStream.on('id3Frame',function(id3Frame){id3Frame.dispatchType=pipeline.metadataStream.dispatchType;self.trigger('id3Frame',id3Frame);});pipeline.coalesceStream.on('caption',this.trigger.bind(this,'caption'));// Let the consumer know we have finished flushing the entire pipeline\npipeline.coalesceStream.on('done',this.trigger.bind(this,'done'));addPipelineLogRetriggers(this,pipeline);};// hook up the segment streams once track metadata is delivered\nthis.setBaseMediaDecodeTime=function(baseMediaDecodeTime){var pipeline=this.transmuxPipeline_;if(!options.keepOriginalTimestamps){this.baseMediaDecodeTime=baseMediaDecodeTime;}if(audioTrack){audioTrack.timelineStartInfo.dts=undefined;audioTrack.timelineStartInfo.pts=undefined;trackDecodeInfo.clearDtsInfo(audioTrack);if(pipeline.audioTimestampRolloverStream){pipeline.audioTimestampRolloverStream.discontinuity();}}if(videoTrack){if(pipeline.videoSegmentStream){pipeline.videoSegmentStream.gopCache_=[];}videoTrack.timelineStartInfo.dts=undefined;videoTrack.timelineStartInfo.pts=undefined;trackDecodeInfo.clearDtsInfo(videoTrack);pipeline.captionStream.reset();}if(pipeline.timestampRolloverStream){pipeline.timestampRolloverStream.discontinuity();}};this.setAudioAppendStart=function(timestamp){if(audioTrack){this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);}};this.setRemux=function(val){var pipeline=this.transmuxPipeline_;options.remux=val;if(pipeline&&pipeline.coalesceStream){pipeline.coalesceStream.setRemux(val);}};this.alignGopsWith=function(gopsToAlignWith){if(videoTrack&&this.transmuxPipeline_.videoSegmentStream){this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);}};this.getLogTrigger_=function(key){var self=this;return function(event){event.stream=key;self.trigger('log',event);};};// feed incoming data to the front of the parsing pipeline\nthis.push=function(data){if(hasFlushed){var isAac=isLikelyAacData(data);if(isAac&&this.transmuxPipeline_.type!=='aac'){this.setupAacPipeline();}else if(!isAac&&this.transmuxPipeline_.type!=='ts'){this.setupTsPipeline();}hasFlushed=false;}this.transmuxPipeline_.headOfPipeline.push(data);};// flush any buffered data\nthis.flush=function(){hasFlushed=true;// Start at the top of the pipeline and flush all pending work\nthis.transmuxPipeline_.headOfPipeline.flush();};this.endTimeline=function(){this.transmuxPipeline_.headOfPipeline.endTimeline();};this.reset=function(){if(this.transmuxPipeline_.headOfPipeline){this.transmuxPipeline_.headOfPipeline.reset();}};// Caption data has to be reset when seeking outside buffered range\nthis.resetCaptions=function(){if(this.transmuxPipeline_.captionStream){this.transmuxPipeline_.captionStream.reset();}};};Transmuxer.prototype=new Stream();var transmuxer={Transmuxer:Transmuxer,VideoSegmentStream:VideoSegmentStream,AudioSegmentStream:AudioSegmentStream,AUDIO_PROPERTIES:AUDIO_PROPERTIES,VIDEO_PROPERTIES:VIDEO_PROPERTIES,// exported for testing\ngenerateSegmentTimingInfo:generateSegmentTimingInfo};/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */var toUnsigned$3=function(value){return value>>>0;};var toHexString$1=function(value){return('00'+value.toString(16)).slice(-2);};var bin={toUnsigned:toUnsigned$3,toHexString:toHexString$1};var parseType$3=function(buffer){var result='';result+=String.fromCharCode(buffer[0]);result+=String.fromCharCode(buffer[1]);result+=String.fromCharCode(buffer[2]);result+=String.fromCharCode(buffer[3]);return result;};var parseType_1=parseType$3;var toUnsigned$2=bin.toUnsigned;var parseType$2=parseType_1;var findBox$2=function(data,path){var results=[],i,size,type,end,subresults;if(!path.length){// short-circuit the search for empty paths\nreturn null;}for(i=0;i<data.byteLength;){size=toUnsigned$2(data[i]<<24|data[i+1]<<16|data[i+2]<<8|data[i+3]);type=parseType$2(data.subarray(i+4,i+8));end=size>1?i+size:data.byteLength;if(type===path[0]){if(path.length===1){// this is the end of the path and we've found the box we were\n// looking for\nresults.push(data.subarray(i+8,end));}else{// recursively search for the next box along the path\nsubresults=findBox$2(data.subarray(i+8,end),path.slice(1));if(subresults.length){results=results.concat(subresults);}}}i=end;}// we've finished searching all of data\nreturn results;};var findBox_1=findBox$2;var toUnsigned$1=bin.toUnsigned;var getUint64$1=numbers.getUint64;var tfdt=function(data){var result={version:data[0],flags:new Uint8Array(data.subarray(1,4))};if(result.version===1){result.baseMediaDecodeTime=getUint64$1(data.subarray(4));}else{result.baseMediaDecodeTime=toUnsigned$1(data[4]<<24|data[5]<<16|data[6]<<8|data[7]);}return result;};var parseTfdt$2=tfdt;var parseSampleFlags$1=function(flags){return{isLeading:(flags[0]&0x0c)>>>2,dependsOn:flags[0]&0x03,isDependedOn:(flags[1]&0xc0)>>>6,hasRedundancy:(flags[1]&0x30)>>>4,paddingValue:(flags[1]&0x0e)>>>1,isNonSyncSample:flags[1]&0x01,degradationPriority:flags[2]<<8|flags[3]};};var parseSampleFlags_1=parseSampleFlags$1;var parseSampleFlags=parseSampleFlags_1;var trun=function(data){var result={version:data[0],flags:new Uint8Array(data.subarray(1,4)),samples:[]},view=new DataView(data.buffer,data.byteOffset,data.byteLength),// Flag interpretation\ndataOffsetPresent=result.flags[2]&0x01,// compare with 2nd byte of 0x1\nfirstSampleFlagsPresent=result.flags[2]&0x04,// compare with 2nd byte of 0x4\nsampleDurationPresent=result.flags[1]&0x01,// compare with 2nd byte of 0x100\nsampleSizePresent=result.flags[1]&0x02,// compare with 2nd byte of 0x200\nsampleFlagsPresent=result.flags[1]&0x04,// compare with 2nd byte of 0x400\nsampleCompositionTimeOffsetPresent=result.flags[1]&0x08,// compare with 2nd byte of 0x800\nsampleCount=view.getUint32(4),offset=8,sample;if(dataOffsetPresent){// 32 bit signed integer\nresult.dataOffset=view.getInt32(offset);offset+=4;}// Overrides the flags for the first sample only. The order of\n// optional values will be: duration, size, compositionTimeOffset\nif(firstSampleFlagsPresent&&sampleCount){sample={flags:parseSampleFlags(data.subarray(offset,offset+4))};offset+=4;if(sampleDurationPresent){sample.duration=view.getUint32(offset);offset+=4;}if(sampleSizePresent){sample.size=view.getUint32(offset);offset+=4;}if(sampleCompositionTimeOffsetPresent){if(result.version===1){sample.compositionTimeOffset=view.getInt32(offset);}else{sample.compositionTimeOffset=view.getUint32(offset);}offset+=4;}result.samples.push(sample);sampleCount--;}while(sampleCount--){sample={};if(sampleDurationPresent){sample.duration=view.getUint32(offset);offset+=4;}if(sampleSizePresent){sample.size=view.getUint32(offset);offset+=4;}if(sampleFlagsPresent){sample.flags=parseSampleFlags(data.subarray(offset,offset+4));offset+=4;}if(sampleCompositionTimeOffsetPresent){if(result.version===1){sample.compositionTimeOffset=view.getInt32(offset);}else{sample.compositionTimeOffset=view.getUint32(offset);}offset+=4;}result.samples.push(sample);}return result;};var parseTrun$2=trun;var tfhd=function(data){var view=new DataView(data.buffer,data.byteOffset,data.byteLength),result={version:data[0],flags:new Uint8Array(data.subarray(1,4)),trackId:view.getUint32(4)},baseDataOffsetPresent=result.flags[2]&0x01,sampleDescriptionIndexPresent=result.flags[2]&0x02,defaultSampleDurationPresent=result.flags[2]&0x08,defaultSampleSizePresent=result.flags[2]&0x10,defaultSampleFlagsPresent=result.flags[2]&0x20,durationIsEmpty=result.flags[0]&0x010000,defaultBaseIsMoof=result.flags[0]&0x020000,i;i=8;if(baseDataOffsetPresent){i+=4;// truncate top 4 bytes\n// FIXME: should we read the full 64 bits?\nresult.baseDataOffset=view.getUint32(12);i+=4;}if(sampleDescriptionIndexPresent){result.sampleDescriptionIndex=view.getUint32(i);i+=4;}if(defaultSampleDurationPresent){result.defaultSampleDuration=view.getUint32(i);i+=4;}if(defaultSampleSizePresent){result.defaultSampleSize=view.getUint32(i);i+=4;}if(defaultSampleFlagsPresent){result.defaultSampleFlags=view.getUint32(i);}if(durationIsEmpty){result.durationIsEmpty=true;}if(!baseDataOffsetPresent&&defaultBaseIsMoof){result.baseDataOffsetIsMoof=true;}return result;};var parseTfhd$2=tfhd;var win;if(typeof window!==\"undefined\"){win=window;}else if(typeof commonjsGlobal!==\"undefined\"){win=commonjsGlobal;}else if(typeof self!==\"undefined\"){win=self;}else{win={};}var window_1=win;/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band CEA-708 captions out of FMP4 segments.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   */var discardEmulationPreventionBytes=captionPacketParser.discardEmulationPreventionBytes;var CaptionStream=captionStream.CaptionStream;var findBox$1=findBox_1;var parseTfdt$1=parseTfdt$2;var parseTrun$1=parseTrun$2;var parseTfhd$1=parseTfhd$2;var window$2=window_1;/**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/var mapToSample=function(offset,samples){var approximateOffset=offset;for(var i=0;i<samples.length;i++){var sample=samples[i];if(approximateOffset<sample.size){return sample;}approximateOffset-=sample.size;}return null;};/**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/var findSeiNals=function(avcStream,samples,trackId){var avcView=new DataView(avcStream.buffer,avcStream.byteOffset,avcStream.byteLength),result={logs:[],seiNals:[]},seiNal,i,length,lastMatchedSample;for(i=0;i+4<avcStream.length;i+=length){length=avcView.getUint32(i);i+=4;// Bail if this doesn't appear to be an H264 stream\nif(length<=0){continue;}switch(avcStream[i]&0x1F){case 0x06:var data=avcStream.subarray(i+1,i+1+length);var matchingSample=mapToSample(i,samples);seiNal={nalUnitType:'sei_rbsp',size:length,data:data,escapedRBSP:discardEmulationPreventionBytes(data),trackId:trackId};if(matchingSample){seiNal.pts=matchingSample.pts;seiNal.dts=matchingSample.dts;lastMatchedSample=matchingSample;}else if(lastMatchedSample){// If a matching sample cannot be found, use the last\n// sample's values as they should be as close as possible\nseiNal.pts=lastMatchedSample.pts;seiNal.dts=lastMatchedSample.dts;}else{result.logs.push({level:'warn',message:'We\\'ve encountered a nal unit without data at '+i+' for trackId '+trackId+'. See mux.js#223.'});break;}result.seiNals.push(seiNal);break;}}return result;};/**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/var parseSamples=function(truns,baseMediaDecodeTime,tfhd){var currentDts=baseMediaDecodeTime;var defaultSampleDuration=tfhd.defaultSampleDuration||0;var defaultSampleSize=tfhd.defaultSampleSize||0;var trackId=tfhd.trackId;var allSamples=[];truns.forEach(function(trun){// Note: We currently do not parse the sample table as well\n// as the trun. It's possible some sources will require this.\n// moov > trak > mdia > minf > stbl\nvar trackRun=parseTrun$1(trun);var samples=trackRun.samples;samples.forEach(function(sample){if(sample.duration===undefined){sample.duration=defaultSampleDuration;}if(sample.size===undefined){sample.size=defaultSampleSize;}sample.trackId=trackId;sample.dts=currentDts;if(sample.compositionTimeOffset===undefined){sample.compositionTimeOffset=0;}if(typeof currentDts==='bigint'){sample.pts=currentDts+window$2.BigInt(sample.compositionTimeOffset);currentDts+=window$2.BigInt(sample.duration);}else{sample.pts=currentDts+sample.compositionTimeOffset;currentDts+=sample.duration;}});allSamples=allSamples.concat(samples);});return allSamples;};/**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/var parseCaptionNals=function(segment,videoTrackId){// To get the samples\nvar trafs=findBox$1(segment,['moof','traf']);// To get SEI NAL units\nvar mdats=findBox$1(segment,['mdat']);var captionNals={};var mdatTrafPairs=[];// Pair up each traf with a mdat as moofs and mdats are in pairs\nmdats.forEach(function(mdat,index){var matchingTraf=trafs[index];mdatTrafPairs.push({mdat:mdat,traf:matchingTraf});});mdatTrafPairs.forEach(function(pair){var mdat=pair.mdat;var traf=pair.traf;var tfhd=findBox$1(traf,['tfhd']);// Exactly 1 tfhd per traf\nvar headerInfo=parseTfhd$1(tfhd[0]);var trackId=headerInfo.trackId;var tfdt=findBox$1(traf,['tfdt']);// Either 0 or 1 tfdt per traf\nvar baseMediaDecodeTime=tfdt.length>0?parseTfdt$1(tfdt[0]).baseMediaDecodeTime:0;var truns=findBox$1(traf,['trun']);var samples;var result;// Only parse video data for the chosen video track\nif(videoTrackId===trackId&&truns.length>0){samples=parseSamples(truns,baseMediaDecodeTime,headerInfo);result=findSeiNals(mdat,samples,trackId);if(!captionNals[trackId]){captionNals[trackId]={seiNals:[],logs:[]};}captionNals[trackId].seiNals=captionNals[trackId].seiNals.concat(result.seiNals);captionNals[trackId].logs=captionNals[trackId].logs.concat(result.logs);}});return captionNals;};/**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {String} parsedCaptions[].text - The visible content of the caption\n   **/var parseEmbeddedCaptions=function(segment,trackId,timescale){var captionNals;// the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\nif(trackId===null){return null;}captionNals=parseCaptionNals(segment,trackId);var trackNals=captionNals[trackId]||{};return{seiNals:trackNals.seiNals,logs:trackNals.logs,timescale:timescale};};/**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/var CaptionParser=function(){var isInitialized=false;var captionStream;// Stores segments seen before trackId and timescale are set\nvar segmentCache;// Stores video track ID of the track being parsed\nvar trackId;// Stores the timescale of the track being parsed\nvar timescale;// Stores captions parsed so far\nvar parsedCaptions;// Stores whether we are receiving partial data or not\nvar parsingPartial;/**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/this.isInitialized=function(){return isInitialized;};/**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/this.init=function(options){captionStream=new CaptionStream();isInitialized=true;parsingPartial=options?options.isPartial:false;// Collect dispatched captions\ncaptionStream.on('data',function(event){// Convert to seconds in the source's timescale\nevent.startTime=event.startPts/timescale;event.endTime=event.endPts/timescale;parsedCaptions.captions.push(event);parsedCaptions.captionStreams[event.stream]=true;});captionStream.on('log',function(log){parsedCaptions.logs.push(log);});};/**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/this.isNewInit=function(videoTrackIds,timescales){if(videoTrackIds&&videoTrackIds.length===0||timescales&&typeof timescales==='object'&&Object.keys(timescales).length===0){return false;}return trackId!==videoTrackIds[0]||timescale!==timescales[trackId];};/**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/this.parse=function(segment,videoTrackIds,timescales){var parsedData;if(!this.isInitialized()){return null;// This is not likely to be a video segment\n}else if(!videoTrackIds||!timescales){return null;}else if(this.isNewInit(videoTrackIds,timescales)){// Use the first video track only as there is no\n// mechanism to switch to other video tracks\ntrackId=videoTrackIds[0];timescale=timescales[trackId];// If an init segment has not been seen yet, hold onto segment\n// data until we have one.\n// the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n}else if(trackId===null||!timescale){segmentCache.push(segment);return null;}// Now that a timescale and trackId is set, parse cached segments\nwhile(segmentCache.length>0){var cachedSegment=segmentCache.shift();this.parse(cachedSegment,videoTrackIds,timescales);}parsedData=parseEmbeddedCaptions(segment,trackId,timescale);if(parsedData&&parsedData.logs){parsedCaptions.logs=parsedCaptions.logs.concat(parsedData.logs);}if(parsedData===null||!parsedData.seiNals){if(parsedCaptions.logs.length){return{logs:parsedCaptions.logs,captions:[],captionStreams:[]};}return null;}this.pushNals(parsedData.seiNals);// Force the parsed captions to be dispatched\nthis.flushStream();return parsedCaptions;};/**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/this.pushNals=function(nals){if(!this.isInitialized()||!nals||nals.length===0){return null;}nals.forEach(function(nal){captionStream.push(nal);});};/**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/this.flushStream=function(){if(!this.isInitialized()){return null;}if(!parsingPartial){captionStream.flush();}else{captionStream.partialFlush();}};/**\n      * Reset caption buckets for new data\n     **/this.clearParsedCaptions=function(){parsedCaptions.captions=[];parsedCaptions.captionStreams={};parsedCaptions.logs=[];};/**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/this.resetCaptionStream=function(){if(!this.isInitialized()){return null;}captionStream.reset();};/**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/this.clearAllCaptions=function(){this.clearParsedCaptions();this.resetCaptionStream();};/**\n      * Reset caption parser\n     **/this.reset=function(){segmentCache=[];trackId=null;timescale=null;if(!parsedCaptions){parsedCaptions={captions:[],// CC1, CC2, CC3, CC4\ncaptionStreams:{},logs:[]};}else{this.clearParsedCaptions();}this.resetCaptionStream();};this.reset();};var captionParser=CaptionParser;/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about MP4s.\n   */var toUnsigned=bin.toUnsigned;var toHexString=bin.toHexString;var findBox=findBox_1;var parseType$1=parseType_1;var parseTfhd=parseTfhd$2;var parseTrun=parseTrun$2;var parseTfdt=parseTfdt$2;var getUint64=numbers.getUint64;var timescale,startTime,compositionStartTime,getVideoTrackIds,getTracks,getTimescaleFromMediaHeader;var window$1=window_1;/**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */timescale=function(init){var result={},traks=findBox(init,['moov','trak']);// mdhd timescale\nreturn traks.reduce(function(result,trak){var tkhd,version,index,id,mdhd;tkhd=findBox(trak,['tkhd'])[0];if(!tkhd){return null;}version=tkhd[0];index=version===0?12:20;id=toUnsigned(tkhd[index]<<24|tkhd[index+1]<<16|tkhd[index+2]<<8|tkhd[index+3]);mdhd=findBox(trak,['mdia','mdhd'])[0];if(!mdhd){return null;}version=mdhd[0];index=version===0?12:20;result[id]=toUnsigned(mdhd[index]<<24|mdhd[index+1]<<16|mdhd[index+2]<<8|mdhd[index+3]);return result;},result);};/**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */startTime=function(timescale,fragment){var trafs;// we need info from two childrend of each track fragment box\ntrafs=findBox(fragment,['moof','traf']);// determine the start times for each track\nvar lowestTime=trafs.reduce(function(acc,traf){var tfhd=findBox(traf,['tfhd'])[0];// get the track id from the tfhd\nvar id=toUnsigned(tfhd[4]<<24|tfhd[5]<<16|tfhd[6]<<8|tfhd[7]);// assume a 90kHz clock if no timescale was specified\nvar scale=timescale[id]||90e3;// get the base media decode time from the tfdt\nvar tfdt=findBox(traf,['tfdt'])[0];var dv=new DataView(tfdt.buffer,tfdt.byteOffset,tfdt.byteLength);var baseTime;// version 1 is 64 bit\nif(tfdt[0]===1){baseTime=getUint64(tfdt.subarray(4,12));}else{baseTime=dv.getUint32(4);}// convert base time to seconds if it is a valid number.\nlet seconds;if(typeof baseTime==='bigint'){seconds=baseTime/window$1.BigInt(scale);}else if(typeof baseTime==='number'&&!isNaN(baseTime)){seconds=baseTime/scale;}if(seconds<Number.MAX_SAFE_INTEGER){seconds=Number(seconds);}if(seconds<acc){acc=seconds;}return acc;},Infinity);return typeof lowestTime==='bigint'||isFinite(lowestTime)?lowestTime:0;};/**\n   * Determine the composition start, in seconds, for an MP4\n   * fragment.\n   *\n   * The composition start time of a fragment can be calculated using the base\n   * media decode time, composition time offset, and timescale, as follows:\n   *\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n   *\n   * All of the aforementioned information is contained within a media fragment's\n   * `traf` box, except for timescale info, which comes from the initialization\n   * segment, so a track id (also contained within a `traf`) is also necessary to\n   * associate it with a timescale\n   *\n   *\n   * @param timescales {object} - a hash of track ids to timescale values.\n   * @param fragment {Unit8Array} - the bytes of a media segment\n   * @return {number} the composition start time for the fragment, in seconds\n   **/compositionStartTime=function(timescales,fragment){var trafBoxes=findBox(fragment,['moof','traf']);var baseMediaDecodeTime=0;var compositionTimeOffset=0;var trackId;if(trafBoxes&&trafBoxes.length){// The spec states that track run samples contained within a `traf` box are contiguous, but\n// it does not explicitly state whether the `traf` boxes themselves are contiguous.\n// We will assume that they are, so we only need the first to calculate start time.\nvar tfhd=findBox(trafBoxes[0],['tfhd'])[0];var trun=findBox(trafBoxes[0],['trun'])[0];var tfdt=findBox(trafBoxes[0],['tfdt'])[0];if(tfhd){var parsedTfhd=parseTfhd(tfhd);trackId=parsedTfhd.trackId;}if(tfdt){var parsedTfdt=parseTfdt(tfdt);baseMediaDecodeTime=parsedTfdt.baseMediaDecodeTime;}if(trun){var parsedTrun=parseTrun(trun);if(parsedTrun.samples&&parsedTrun.samples.length){compositionTimeOffset=parsedTrun.samples[0].compositionTimeOffset||0;}}}// Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n// specified.\nvar timescale=timescales[trackId]||90e3;// return the composition start time, in seconds\nif(typeof baseMediaDecodeTime==='bigint'){compositionTimeOffset=window$1.BigInt(compositionTimeOffset);timescale=window$1.BigInt(timescale);}var result=(baseMediaDecodeTime+compositionTimeOffset)/timescale;if(typeof result==='bigint'&&result<Number.MAX_SAFE_INTEGER){result=Number(result);}return result;};/**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/getVideoTrackIds=function(init){var traks=findBox(init,['moov','trak']);var videoTrackIds=[];traks.forEach(function(trak){var hdlrs=findBox(trak,['mdia','hdlr']);var tkhds=findBox(trak,['tkhd']);hdlrs.forEach(function(hdlr,index){var handlerType=parseType$1(hdlr.subarray(8,12));var tkhd=tkhds[index];var view;var version;var trackId;if(handlerType==='vide'){view=new DataView(tkhd.buffer,tkhd.byteOffset,tkhd.byteLength);version=view.getUint8(0);trackId=version===0?view.getUint32(12):view.getUint32(20);videoTrackIds.push(trackId);}});});return videoTrackIds;};getTimescaleFromMediaHeader=function(mdhd){// mdhd is a FullBox, meaning it will have its own version as the first byte\nvar version=mdhd[0];var index=version===0?12:20;return toUnsigned(mdhd[index]<<24|mdhd[index+1]<<16|mdhd[index+2]<<8|mdhd[index+3]);};/**\n   * Get all the video, audio, and hint tracks from a non fragmented\n   * mp4 segment\n   */getTracks=function(init){var traks=findBox(init,['moov','trak']);var tracks=[];traks.forEach(function(trak){var track={};var tkhd=findBox(trak,['tkhd'])[0];var view,tkhdVersion;// id\nif(tkhd){view=new DataView(tkhd.buffer,tkhd.byteOffset,tkhd.byteLength);tkhdVersion=view.getUint8(0);track.id=tkhdVersion===0?view.getUint32(12):view.getUint32(20);}var hdlr=findBox(trak,['mdia','hdlr'])[0];// type\nif(hdlr){var type=parseType$1(hdlr.subarray(8,12));if(type==='vide'){track.type='video';}else if(type==='soun'){track.type='audio';}else{track.type=type;}}// codec\nvar stsd=findBox(trak,['mdia','minf','stbl','stsd'])[0];if(stsd){var sampleDescriptions=stsd.subarray(8);// gives the codec type string\ntrack.codec=parseType$1(sampleDescriptions.subarray(4,8));var codecBox=findBox(sampleDescriptions,[track.codec])[0];var codecConfig,codecConfigType;if(codecBox){// https://tools.ietf.org/html/rfc6381#section-3.3\nif(/^[asm]vc[1-9]$/i.test(track.codec)){// we don't need anything but the \"config\" parameter of the\n// avc1 codecBox\ncodecConfig=codecBox.subarray(78);codecConfigType=parseType$1(codecConfig.subarray(4,8));if(codecConfigType==='avcC'&&codecConfig.length>11){track.codec+='.';// left padded with zeroes for single digit hex\n// profile idc\ntrack.codec+=toHexString(codecConfig[9]);// the byte containing the constraint_set flags\ntrack.codec+=toHexString(codecConfig[10]);// level idc\ntrack.codec+=toHexString(codecConfig[11]);}else{// TODO: show a warning that we couldn't parse the codec\n// and are using the default\ntrack.codec='avc1.4d400d';}}else if(/^mp4[a,v]$/i.test(track.codec)){// we do not need anything but the streamDescriptor of the mp4a codecBox\ncodecConfig=codecBox.subarray(28);codecConfigType=parseType$1(codecConfig.subarray(4,8));if(codecConfigType==='esds'&&codecConfig.length>20&&codecConfig[19]!==0){track.codec+='.'+toHexString(codecConfig[19]);// this value is only a single digit\ntrack.codec+='.'+toHexString(codecConfig[20]>>>2&0x3f).replace(/^0/,'');}else{// TODO: show a warning that we couldn't parse the codec\n// and are using the default\ntrack.codec='mp4a.40.2';}}else{// flac, opus, etc\ntrack.codec=track.codec.toLowerCase();}}}var mdhd=findBox(trak,['mdia','mdhd'])[0];if(mdhd){track.timescale=getTimescaleFromMediaHeader(mdhd);}tracks.push(track);});return tracks;};var probe$2={// export mp4 inspector's findBox and parseType for backwards compatibility\nfindBox:findBox,parseType:parseType$1,timescale:timescale,startTime:startTime,compositionStartTime:compositionStartTime,videoTrackIds:getVideoTrackIds,tracks:getTracks,getTimescaleFromMediaHeader:getTimescaleFromMediaHeader};/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about TS Segments.\n   */var StreamTypes$1=streamTypes;var parsePid=function(packet){var pid=packet[1]&0x1f;pid<<=8;pid|=packet[2];return pid;};var parsePayloadUnitStartIndicator=function(packet){return!!(packet[1]&0x40);};var parseAdaptionField=function(packet){var offset=0;// if an adaption field is present, its length is specified by the\n// fifth byte of the TS packet header. The adaptation field is\n// used to add stuffing to PES packets that don't fill a complete\n// TS packet, and to specify some forms of timing and control data\n// that we do not currently use.\nif((packet[3]&0x30)>>>4>0x01){offset+=packet[4]+1;}return offset;};var parseType=function(packet,pmtPid){var pid=parsePid(packet);if(pid===0){return'pat';}else if(pid===pmtPid){return'pmt';}else if(pmtPid){return'pes';}return null;};var parsePat=function(packet){var pusi=parsePayloadUnitStartIndicator(packet);var offset=4+parseAdaptionField(packet);if(pusi){offset+=packet[offset]+1;}return(packet[offset+10]&0x1f)<<8|packet[offset+11];};var parsePmt=function(packet){var programMapTable={};var pusi=parsePayloadUnitStartIndicator(packet);var payloadOffset=4+parseAdaptionField(packet);if(pusi){payloadOffset+=packet[payloadOffset]+1;}// PMTs can be sent ahead of the time when they should actually\n// take effect. We don't believe this should ever be the case\n// for HLS but we'll ignore \"forward\" PMT declarations if we see\n// them. Future PMT declarations have the current_next_indicator\n// set to zero.\nif(!(packet[payloadOffset+5]&0x01)){return;}var sectionLength,tableEnd,programInfoLength;// the mapping table ends at the end of the current section\nsectionLength=(packet[payloadOffset+1]&0x0f)<<8|packet[payloadOffset+2];tableEnd=3+sectionLength-4;// to determine where the table is, we have to figure out how\n// long the program info descriptors are\nprogramInfoLength=(packet[payloadOffset+10]&0x0f)<<8|packet[payloadOffset+11];// advance the offset to the first entry in the mapping table\nvar offset=12+programInfoLength;while(offset<tableEnd){var i=payloadOffset+offset;// add an entry that maps the elementary_pid to the stream_type\nprogramMapTable[(packet[i+1]&0x1F)<<8|packet[i+2]]=packet[i];// move to the next table entry\n// skip past the elementary stream descriptors, if present\noffset+=((packet[i+3]&0x0F)<<8|packet[i+4])+5;}return programMapTable;};var parsePesType=function(packet,programMapTable){var pid=parsePid(packet);var type=programMapTable[pid];switch(type){case StreamTypes$1.H264_STREAM_TYPE:return'video';case StreamTypes$1.ADTS_STREAM_TYPE:return'audio';case StreamTypes$1.METADATA_STREAM_TYPE:return'timed-metadata';default:return null;}};var parsePesTime=function(packet){var pusi=parsePayloadUnitStartIndicator(packet);if(!pusi){return null;}var offset=4+parseAdaptionField(packet);if(offset>=packet.byteLength){// From the H 222.0 MPEG-TS spec\n// \"For transport stream packets carrying PES packets, stuffing is needed when there\n//  is insufficient PES packet data to completely fill the transport stream packet\n//  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n//  the sum of the lengths of the data elements in it, so that the payload bytes\n//  remaining after the adaptation field exactly accommodates the available PES packet\n//  data.\"\n//\n// If the offset is >= the length of the packet, then the packet contains no data\n// and instead is just adaption field stuffing bytes\nreturn null;}var pes=null;var ptsDtsFlags;// PES packets may be annotated with a PTS value, or a PTS value\n// and a DTS value. Determine what combination of values is\n// available to work with.\nptsDtsFlags=packet[offset+7];// PTS and DTS are normally stored as a 33-bit number.  Javascript\n// performs all bitwise operations on 32-bit integers but javascript\n// supports a much greater range (52-bits) of integer using standard\n// mathematical operations.\n// We construct a 31-bit value using bitwise operators over the 31\n// most significant bits and then multiply by 4 (equal to a left-shift\n// of 2) before we add the final 2 least significant bits of the\n// timestamp (equal to an OR.)\nif(ptsDtsFlags&0xC0){pes={};// the PTS and DTS are not written out directly. For information\n// on how they are encoded, see\n// http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\npes.pts=(packet[offset+9]&0x0E)<<27|(packet[offset+10]&0xFF)<<20|(packet[offset+11]&0xFE)<<12|(packet[offset+12]&0xFF)<<5|(packet[offset+13]&0xFE)>>>3;pes.pts*=4;// Left shift by 2\npes.pts+=(packet[offset+13]&0x06)>>>1;// OR by the two LSBs\npes.dts=pes.pts;if(ptsDtsFlags&0x40){pes.dts=(packet[offset+14]&0x0E)<<27|(packet[offset+15]&0xFF)<<20|(packet[offset+16]&0xFE)<<12|(packet[offset+17]&0xFF)<<5|(packet[offset+18]&0xFE)>>>3;pes.dts*=4;// Left shift by 2\npes.dts+=(packet[offset+18]&0x06)>>>1;// OR by the two LSBs\n}}return pes;};var parseNalUnitType=function(type){switch(type){case 0x05:return'slice_layer_without_partitioning_rbsp_idr';case 0x06:return'sei_rbsp';case 0x07:return'seq_parameter_set_rbsp';case 0x08:return'pic_parameter_set_rbsp';case 0x09:return'access_unit_delimiter_rbsp';default:return null;}};var videoPacketContainsKeyFrame=function(packet){var offset=4+parseAdaptionField(packet);var frameBuffer=packet.subarray(offset);var frameI=0;var frameSyncPoint=0;var foundKeyFrame=false;var nalType;// advance the sync point to a NAL start, if necessary\nfor(;frameSyncPoint<frameBuffer.byteLength-3;frameSyncPoint++){if(frameBuffer[frameSyncPoint+2]===1){// the sync point is properly aligned\nframeI=frameSyncPoint+5;break;}}while(frameI<frameBuffer.byteLength){// look at the current byte to determine if we've hit the end of\n// a NAL unit boundary\nswitch(frameBuffer[frameI]){case 0:// skip past non-sync sequences\nif(frameBuffer[frameI-1]!==0){frameI+=2;break;}else if(frameBuffer[frameI-2]!==0){frameI++;break;}if(frameSyncPoint+3!==frameI-2){nalType=parseNalUnitType(frameBuffer[frameSyncPoint+3]&0x1f);if(nalType==='slice_layer_without_partitioning_rbsp_idr'){foundKeyFrame=true;}}// drop trailing zeroes\ndo{frameI++;}while(frameBuffer[frameI]!==1&&frameI<frameBuffer.length);frameSyncPoint=frameI-2;frameI+=3;break;case 1:// skip past non-sync sequences\nif(frameBuffer[frameI-1]!==0||frameBuffer[frameI-2]!==0){frameI+=3;break;}nalType=parseNalUnitType(frameBuffer[frameSyncPoint+3]&0x1f);if(nalType==='slice_layer_without_partitioning_rbsp_idr'){foundKeyFrame=true;}frameSyncPoint=frameI-2;frameI+=3;break;default:// the current byte isn't a one or zero, so it cannot be part\n// of a sync sequence\nframeI+=3;break;}}frameBuffer=frameBuffer.subarray(frameSyncPoint);frameI-=frameSyncPoint;frameSyncPoint=0;// parse the final nal\nif(frameBuffer&&frameBuffer.byteLength>3){nalType=parseNalUnitType(frameBuffer[frameSyncPoint+3]&0x1f);if(nalType==='slice_layer_without_partitioning_rbsp_idr'){foundKeyFrame=true;}}return foundKeyFrame;};var probe$1={parseType:parseType,parsePat:parsePat,parsePmt:parsePmt,parsePayloadUnitStartIndicator:parsePayloadUnitStartIndicator,parsePesType:parsePesType,parsePesTime:parsePesTime,videoPacketContainsKeyFrame:videoPacketContainsKeyFrame};/**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Parse mpeg2 transport stream packets to extract basic timing information\n   */var StreamTypes=streamTypes;var handleRollover=timestampRolloverStream.handleRollover;var probe={};probe.ts=probe$1;probe.aac=utils;var ONE_SECOND_IN_TS=clock$2.ONE_SECOND_IN_TS;var MP2T_PACKET_LENGTH=188,// bytes\nSYNC_BYTE=0x47;/**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */var parsePsi_=function(bytes,pmt){var startIndex=0,endIndex=MP2T_PACKET_LENGTH,packet,type;while(endIndex<bytes.byteLength){// Look for a pair of start and end sync bytes in the data..\nif(bytes[startIndex]===SYNC_BYTE&&bytes[endIndex]===SYNC_BYTE){// We found a packet\npacket=bytes.subarray(startIndex,endIndex);type=probe.ts.parseType(packet,pmt.pid);switch(type){case'pat':pmt.pid=probe.ts.parsePat(packet);break;case'pmt':var table=probe.ts.parsePmt(packet);pmt.table=pmt.table||{};Object.keys(table).forEach(function(key){pmt.table[key]=table[key];});break;}startIndex+=MP2T_PACKET_LENGTH;endIndex+=MP2T_PACKET_LENGTH;continue;}// If we get here, we have somehow become de-synchronized and we need to step\n// forward one byte at a time until we find a pair of sync bytes that denote\n// a packet\nstartIndex++;endIndex++;}};/**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */var parseAudioPes_=function(bytes,pmt,result){var startIndex=0,endIndex=MP2T_PACKET_LENGTH,packet,type,pesType,pusi,parsed;var endLoop=false;// Start walking from start of segment to get first audio packet\nwhile(endIndex<=bytes.byteLength){// Look for a pair of start and end sync bytes in the data..\nif(bytes[startIndex]===SYNC_BYTE&&(bytes[endIndex]===SYNC_BYTE||endIndex===bytes.byteLength)){// We found a packet\npacket=bytes.subarray(startIndex,endIndex);type=probe.ts.parseType(packet,pmt.pid);switch(type){case'pes':pesType=probe.ts.parsePesType(packet,pmt.table);pusi=probe.ts.parsePayloadUnitStartIndicator(packet);if(pesType==='audio'&&pusi){parsed=probe.ts.parsePesTime(packet);if(parsed){parsed.type='audio';result.audio.push(parsed);endLoop=true;}}break;}if(endLoop){break;}startIndex+=MP2T_PACKET_LENGTH;endIndex+=MP2T_PACKET_LENGTH;continue;}// If we get here, we have somehow become de-synchronized and we need to step\n// forward one byte at a time until we find a pair of sync bytes that denote\n// a packet\nstartIndex++;endIndex++;}// Start walking from end of segment to get last audio packet\nendIndex=bytes.byteLength;startIndex=endIndex-MP2T_PACKET_LENGTH;endLoop=false;while(startIndex>=0){// Look for a pair of start and end sync bytes in the data..\nif(bytes[startIndex]===SYNC_BYTE&&(bytes[endIndex]===SYNC_BYTE||endIndex===bytes.byteLength)){// We found a packet\npacket=bytes.subarray(startIndex,endIndex);type=probe.ts.parseType(packet,pmt.pid);switch(type){case'pes':pesType=probe.ts.parsePesType(packet,pmt.table);pusi=probe.ts.parsePayloadUnitStartIndicator(packet);if(pesType==='audio'&&pusi){parsed=probe.ts.parsePesTime(packet);if(parsed){parsed.type='audio';result.audio.push(parsed);endLoop=true;}}break;}if(endLoop){break;}startIndex-=MP2T_PACKET_LENGTH;endIndex-=MP2T_PACKET_LENGTH;continue;}// If we get here, we have somehow become de-synchronized and we need to step\n// forward one byte at a time until we find a pair of sync bytes that denote\n// a packet\nstartIndex--;endIndex--;}};/**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */var parseVideoPes_=function(bytes,pmt,result){var startIndex=0,endIndex=MP2T_PACKET_LENGTH,packet,type,pesType,pusi,parsed,frame,i,pes;var endLoop=false;var currentFrame={data:[],size:0};// Start walking from start of segment to get first video packet\nwhile(endIndex<bytes.byteLength){// Look for a pair of start and end sync bytes in the data..\nif(bytes[startIndex]===SYNC_BYTE&&bytes[endIndex]===SYNC_BYTE){// We found a packet\npacket=bytes.subarray(startIndex,endIndex);type=probe.ts.parseType(packet,pmt.pid);switch(type){case'pes':pesType=probe.ts.parsePesType(packet,pmt.table);pusi=probe.ts.parsePayloadUnitStartIndicator(packet);if(pesType==='video'){if(pusi&&!endLoop){parsed=probe.ts.parsePesTime(packet);if(parsed){parsed.type='video';result.video.push(parsed);endLoop=true;}}if(!result.firstKeyFrame){if(pusi){if(currentFrame.size!==0){frame=new Uint8Array(currentFrame.size);i=0;while(currentFrame.data.length){pes=currentFrame.data.shift();frame.set(pes,i);i+=pes.byteLength;}if(probe.ts.videoPacketContainsKeyFrame(frame)){var firstKeyFrame=probe.ts.parsePesTime(frame);// PTS/DTS may not be available. Simply *not* setting\n// the keyframe seems to work fine with HLS playback\n// and definitely preferable to a crash with TypeError...\nif(firstKeyFrame){result.firstKeyFrame=firstKeyFrame;result.firstKeyFrame.type='video';}else{// eslint-disable-next-line\nconsole.warn('Failed to extract PTS/DTS from PES at first keyframe. '+'This could be an unusual TS segment, or else mux.js did not '+'parse your TS segment correctly. If you know your TS '+'segments do contain PTS/DTS on keyframes please file a bug '+'report! You can try ffprobe to double check for yourself.');}}currentFrame.size=0;}}currentFrame.data.push(packet);currentFrame.size+=packet.byteLength;}}break;}if(endLoop&&result.firstKeyFrame){break;}startIndex+=MP2T_PACKET_LENGTH;endIndex+=MP2T_PACKET_LENGTH;continue;}// If we get here, we have somehow become de-synchronized and we need to step\n// forward one byte at a time until we find a pair of sync bytes that denote\n// a packet\nstartIndex++;endIndex++;}// Start walking from end of segment to get last video packet\nendIndex=bytes.byteLength;startIndex=endIndex-MP2T_PACKET_LENGTH;endLoop=false;while(startIndex>=0){// Look for a pair of start and end sync bytes in the data..\nif(bytes[startIndex]===SYNC_BYTE&&bytes[endIndex]===SYNC_BYTE){// We found a packet\npacket=bytes.subarray(startIndex,endIndex);type=probe.ts.parseType(packet,pmt.pid);switch(type){case'pes':pesType=probe.ts.parsePesType(packet,pmt.table);pusi=probe.ts.parsePayloadUnitStartIndicator(packet);if(pesType==='video'&&pusi){parsed=probe.ts.parsePesTime(packet);if(parsed){parsed.type='video';result.video.push(parsed);endLoop=true;}}break;}if(endLoop){break;}startIndex-=MP2T_PACKET_LENGTH;endIndex-=MP2T_PACKET_LENGTH;continue;}// If we get here, we have somehow become de-synchronized and we need to step\n// forward one byte at a time until we find a pair of sync bytes that denote\n// a packet\nstartIndex--;endIndex--;}};/**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */var adjustTimestamp_=function(segmentInfo,baseTimestamp){if(segmentInfo.audio&&segmentInfo.audio.length){var audioBaseTimestamp=baseTimestamp;if(typeof audioBaseTimestamp==='undefined'||isNaN(audioBaseTimestamp)){audioBaseTimestamp=segmentInfo.audio[0].dts;}segmentInfo.audio.forEach(function(info){info.dts=handleRollover(info.dts,audioBaseTimestamp);info.pts=handleRollover(info.pts,audioBaseTimestamp);// time in seconds\ninfo.dtsTime=info.dts/ONE_SECOND_IN_TS;info.ptsTime=info.pts/ONE_SECOND_IN_TS;});}if(segmentInfo.video&&segmentInfo.video.length){var videoBaseTimestamp=baseTimestamp;if(typeof videoBaseTimestamp==='undefined'||isNaN(videoBaseTimestamp)){videoBaseTimestamp=segmentInfo.video[0].dts;}segmentInfo.video.forEach(function(info){info.dts=handleRollover(info.dts,videoBaseTimestamp);info.pts=handleRollover(info.pts,videoBaseTimestamp);// time in seconds\ninfo.dtsTime=info.dts/ONE_SECOND_IN_TS;info.ptsTime=info.pts/ONE_SECOND_IN_TS;});if(segmentInfo.firstKeyFrame){var frame=segmentInfo.firstKeyFrame;frame.dts=handleRollover(frame.dts,videoBaseTimestamp);frame.pts=handleRollover(frame.pts,videoBaseTimestamp);// time in seconds\nframe.dtsTime=frame.dts/ONE_SECOND_IN_TS;frame.ptsTime=frame.pts/ONE_SECOND_IN_TS;}}};/**\n   * inspects the aac data stream for start and end time information\n   */var inspectAac_=function(bytes){var endLoop=false,audioCount=0,sampleRate=null,timestamp=null,frameSize=0,byteIndex=0,packet;while(bytes.length-byteIndex>=3){var type=probe.aac.parseType(bytes,byteIndex);switch(type){case'timed-metadata':// Exit early because we don't have enough to parse\n// the ID3 tag header\nif(bytes.length-byteIndex<10){endLoop=true;break;}frameSize=probe.aac.parseId3TagSize(bytes,byteIndex);// Exit early if we don't have enough in the buffer\n// to emit a full packet\nif(frameSize>bytes.length){endLoop=true;break;}if(timestamp===null){packet=bytes.subarray(byteIndex,byteIndex+frameSize);timestamp=probe.aac.parseAacTimestamp(packet);}byteIndex+=frameSize;break;case'audio':// Exit early because we don't have enough to parse\n// the ADTS frame header\nif(bytes.length-byteIndex<7){endLoop=true;break;}frameSize=probe.aac.parseAdtsSize(bytes,byteIndex);// Exit early if we don't have enough in the buffer\n// to emit a full packet\nif(frameSize>bytes.length){endLoop=true;break;}if(sampleRate===null){packet=bytes.subarray(byteIndex,byteIndex+frameSize);sampleRate=probe.aac.parseSampleRate(packet);}audioCount++;byteIndex+=frameSize;break;default:byteIndex++;break;}if(endLoop){return null;}}if(sampleRate===null||timestamp===null){return null;}var audioTimescale=ONE_SECOND_IN_TS/sampleRate;var result={audio:[{type:'audio',dts:timestamp,pts:timestamp},{type:'audio',dts:timestamp+audioCount*1024*audioTimescale,pts:timestamp+audioCount*1024*audioTimescale}]};return result;};/**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */var inspectTs_=function(bytes){var pmt={pid:null,table:null};var result={};parsePsi_(bytes,pmt);for(var pid in pmt.table){if(pmt.table.hasOwnProperty(pid)){var type=pmt.table[pid];switch(type){case StreamTypes.H264_STREAM_TYPE:result.video=[];parseVideoPes_(bytes,pmt,result);if(result.video.length===0){delete result.video;}break;case StreamTypes.ADTS_STREAM_TYPE:result.audio=[];parseAudioPes_(bytes,pmt,result);if(result.audio.length===0){delete result.audio;}break;}}}return result;};/**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */var inspect=function(bytes,baseTimestamp){var isAacData=probe.aac.isLikelyAacData(bytes);var result;if(isAacData){result=inspectAac_(bytes);}else{result=inspectTs_(bytes);}if(!result||!result.audio&&!result.video){return null;}adjustTimestamp_(result,baseTimestamp);return result;};var tsInspector={inspect:inspect,parseAudioPes_:parseAudioPes_};/* global self */ /**\n   * Re-emits transmuxer events by converting them into messages to the\n   * world outside the worker.\n   *\n   * @param {Object} transmuxer the transmuxer to wire events on\n   * @private\n   */const wireTransmuxerEvents=function(self,transmuxer){transmuxer.on('data',function(segment){// transfer ownership of the underlying ArrayBuffer\n// instead of doing a copy to save memory\n// ArrayBuffers are transferable but generic TypedArrays are not\n// @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\nconst initArray=segment.initSegment;segment.initSegment={data:initArray.buffer,byteOffset:initArray.byteOffset,byteLength:initArray.byteLength};const typedArray=segment.data;segment.data=typedArray.buffer;self.postMessage({action:'data',segment,byteOffset:typedArray.byteOffset,byteLength:typedArray.byteLength},[segment.data]);});transmuxer.on('done',function(data){self.postMessage({action:'done'});});transmuxer.on('gopInfo',function(gopInfo){self.postMessage({action:'gopInfo',gopInfo});});transmuxer.on('videoSegmentTimingInfo',function(timingInfo){const videoSegmentTimingInfo={start:{decode:clock$2.videoTsToSeconds(timingInfo.start.dts),presentation:clock$2.videoTsToSeconds(timingInfo.start.pts)},end:{decode:clock$2.videoTsToSeconds(timingInfo.end.dts),presentation:clock$2.videoTsToSeconds(timingInfo.end.pts)},baseMediaDecodeTime:clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)};if(timingInfo.prependedContentDuration){videoSegmentTimingInfo.prependedContentDuration=clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);}self.postMessage({action:'videoSegmentTimingInfo',videoSegmentTimingInfo});});transmuxer.on('audioSegmentTimingInfo',function(timingInfo){// Note that all times for [audio/video]SegmentTimingInfo events are in video clock\nconst audioSegmentTimingInfo={start:{decode:clock$2.videoTsToSeconds(timingInfo.start.dts),presentation:clock$2.videoTsToSeconds(timingInfo.start.pts)},end:{decode:clock$2.videoTsToSeconds(timingInfo.end.dts),presentation:clock$2.videoTsToSeconds(timingInfo.end.pts)},baseMediaDecodeTime:clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)};if(timingInfo.prependedContentDuration){audioSegmentTimingInfo.prependedContentDuration=clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);}self.postMessage({action:'audioSegmentTimingInfo',audioSegmentTimingInfo});});transmuxer.on('id3Frame',function(id3Frame){self.postMessage({action:'id3Frame',id3Frame});});transmuxer.on('caption',function(caption){self.postMessage({action:'caption',caption});});transmuxer.on('trackinfo',function(trackInfo){self.postMessage({action:'trackinfo',trackInfo});});transmuxer.on('audioTimingInfo',function(audioTimingInfo){// convert to video TS since we prioritize video time over audio\nself.postMessage({action:'audioTimingInfo',audioTimingInfo:{start:clock$2.videoTsToSeconds(audioTimingInfo.start),end:clock$2.videoTsToSeconds(audioTimingInfo.end)}});});transmuxer.on('videoTimingInfo',function(videoTimingInfo){self.postMessage({action:'videoTimingInfo',videoTimingInfo:{start:clock$2.videoTsToSeconds(videoTimingInfo.start),end:clock$2.videoTsToSeconds(videoTimingInfo.end)}});});transmuxer.on('log',function(log){self.postMessage({action:'log',log});});};/**\n   * All incoming messages route through this hash. If no function exists\n   * to handle an incoming message, then we ignore the message.\n   *\n   * @class MessageHandlers\n   * @param {Object} options the options to initialize with\n   */class MessageHandlers{constructor(self,options){this.options=options||{};this.self=self;this.init();}/**\n     * initialize our web worker and wire all the events.\n     */init(){if(this.transmuxer){this.transmuxer.dispose();}this.transmuxer=new transmuxer.Transmuxer(this.options);wireTransmuxerEvents(this.self,this.transmuxer);}pushMp4Captions(data){if(!this.captionParser){this.captionParser=new captionParser();this.captionParser.init();}const segment=new Uint8Array(data.data,data.byteOffset,data.byteLength);const parsed=this.captionParser.parse(segment,data.trackIds,data.timescales);this.self.postMessage({action:'mp4Captions',captions:parsed&&parsed.captions||[],logs:parsed&&parsed.logs||[],data:segment.buffer},[segment.buffer]);}probeMp4StartTime({timescales,data}){const startTime=probe$2.startTime(timescales,data);this.self.postMessage({action:'probeMp4StartTime',startTime,data},[data.buffer]);}probeMp4Tracks({data}){const tracks=probe$2.tracks(data);this.self.postMessage({action:'probeMp4Tracks',tracks,data},[data.buffer]);}/**\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n     * internal \"media time,\" as well as whether it contains video and/or audio.\n     *\n     * @private\n     * @param {Uint8Array} bytes - segment bytes\n     * @param {number} baseStartTime\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\n     *        function body.\n     * @return {Object} The start time of the current segment in \"media time\" as well as\n     *                  whether it contains video and/or audio\n     */probeTs({data,baseStartTime}){const tsStartTime=typeof baseStartTime==='number'&&!isNaN(baseStartTime)?baseStartTime*clock$2.ONE_SECOND_IN_TS:void 0;const timeInfo=tsInspector.inspect(data,tsStartTime);let result=null;if(timeInfo){result={// each type's time info comes back as an array of 2 times, start and end\nhasVideo:timeInfo.video&&timeInfo.video.length===2||false,hasAudio:timeInfo.audio&&timeInfo.audio.length===2||false};if(result.hasVideo){result.videoStart=timeInfo.video[0].ptsTime;}if(result.hasAudio){result.audioStart=timeInfo.audio[0].ptsTime;}}this.self.postMessage({action:'probeTs',result,data},[data.buffer]);}clearAllMp4Captions(){if(this.captionParser){this.captionParser.clearAllCaptions();}}clearParsedMp4Captions(){if(this.captionParser){this.captionParser.clearParsedCaptions();}}/**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */push(data){// Cast array buffer to correct type for transmuxer\nconst segment=new Uint8Array(data.data,data.byteOffset,data.byteLength);this.transmuxer.push(segment);}/**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */reset(){this.transmuxer.reset();}/**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */setTimestampOffset(data){const timestampOffset=data.timestampOffset||0;this.transmuxer.setBaseMediaDecodeTime(Math.round(clock$2.secondsToVideoTs(timestampOffset)));}setAudioAppendStart(data){this.transmuxer.setAudioAppendStart(Math.ceil(clock$2.secondsToVideoTs(data.appendStart)));}setRemux(data){this.transmuxer.setRemux(data.remux);}/**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */flush(data){this.transmuxer.flush();// transmuxed done action is fired after both audio/video pipelines are flushed\nself.postMessage({action:'done',type:'transmuxed'});}endTimeline(){this.transmuxer.endTimeline();// transmuxed endedtimeline action is fired after both audio/video pipelines end their\n// timelines\nself.postMessage({action:'endedtimeline',type:'transmuxed'});}alignGopsWith(data){this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());}}/**\n   * Our web worker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */self.onmessage=function(event){if(event.data.action==='init'&&event.data.options){this.messageHandlers=new MessageHandlers(self,event.data.options);return;}if(!this.messageHandlers){this.messageHandlers=new MessageHandlers(self);}if(event.data&&event.data.action&&event.data.action!=='init'){if(this.messageHandlers[event.data.action]){this.messageHandlers[event.data.action](event.data);}}};}));var TransmuxWorker=factory(workerCode$1);/* rollup-plugin-worker-factory end for worker!/Users/poneill/dev/http-streaming/src/transmuxer-worker.js */const handleData_=(event,transmuxedData,callback)=>{const{type,initSegment,captions,captionStreams,metadata,videoFrameDtsTime,videoFramePtsTime}=event.data.segment;transmuxedData.buffer.push({captions,captionStreams,metadata});const boxes=event.data.segment.boxes||{data:event.data.segment.data};const result={type,// cast ArrayBuffer to TypedArray\ndata:new Uint8Array(boxes.data,boxes.data.byteOffset,boxes.data.byteLength),initSegment:new Uint8Array(initSegment.data,initSegment.byteOffset,initSegment.byteLength)};if(typeof videoFrameDtsTime!=='undefined'){result.videoFrameDtsTime=videoFrameDtsTime;}if(typeof videoFramePtsTime!=='undefined'){result.videoFramePtsTime=videoFramePtsTime;}callback(result);};const handleDone_=({transmuxedData,callback})=>{// Previously we only returned data on data events,\n// not on done events. Clear out the buffer to keep that consistent.\ntransmuxedData.buffer=[];// all buffers should have been flushed from the muxer, so start processing anything we\n// have received\ncallback(transmuxedData);};const handleGopInfo_=(event,transmuxedData)=>{transmuxedData.gopInfo=event.data.gopInfo;};const processTransmux=options=>{const{transmuxer,bytes,audioAppendStart,gopsToAlignWith,remux,onData,onTrackInfo,onAudioTimingInfo,onVideoTimingInfo,onVideoSegmentTimingInfo,onAudioSegmentTimingInfo,onId3,onCaptions,onDone,onEndedTimeline,onTransmuxerLog,isEndOfTimeline}=options;const transmuxedData={buffer:[]};let waitForEndedTimelineEvent=isEndOfTimeline;const handleMessage=event=>{if(transmuxer.currentTransmux!==options){// disposed\nreturn;}if(event.data.action==='data'){handleData_(event,transmuxedData,onData);}if(event.data.action==='trackinfo'){onTrackInfo(event.data.trackInfo);}if(event.data.action==='gopInfo'){handleGopInfo_(event,transmuxedData);}if(event.data.action==='audioTimingInfo'){onAudioTimingInfo(event.data.audioTimingInfo);}if(event.data.action==='videoTimingInfo'){onVideoTimingInfo(event.data.videoTimingInfo);}if(event.data.action==='videoSegmentTimingInfo'){onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);}if(event.data.action==='audioSegmentTimingInfo'){onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);}if(event.data.action==='id3Frame'){onId3([event.data.id3Frame],event.data.id3Frame.dispatchType);}if(event.data.action==='caption'){onCaptions(event.data.caption);}if(event.data.action==='endedtimeline'){waitForEndedTimelineEvent=false;onEndedTimeline();}if(event.data.action==='log'){onTransmuxerLog(event.data.log);}// wait for the transmuxed event since we may have audio and video\nif(event.data.type!=='transmuxed'){return;}// If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n// of a timeline, that means there may still be data events before the segment\n// processing can be considerred complete. In that case, the final event should be\n// an \"endedtimeline\" event with the type \"transmuxed.\"\nif(waitForEndedTimelineEvent){return;}transmuxer.onmessage=null;handleDone_({transmuxedData,callback:onDone});/* eslint-disable no-use-before-define */dequeue(transmuxer);/* eslint-enable */};transmuxer.onmessage=handleMessage;if(audioAppendStart){transmuxer.postMessage({action:'setAudioAppendStart',appendStart:audioAppendStart});}// allow empty arrays to be passed to clear out GOPs\nif(Array.isArray(gopsToAlignWith)){transmuxer.postMessage({action:'alignGopsWith',gopsToAlignWith});}if(typeof remux!=='undefined'){transmuxer.postMessage({action:'setRemux',remux});}if(bytes.byteLength){const buffer=bytes instanceof ArrayBuffer?bytes:bytes.buffer;const byteOffset=bytes instanceof ArrayBuffer?0:bytes.byteOffset;transmuxer.postMessage({action:'push',// Send the typed-array of data as an ArrayBuffer so that\n// it can be sent as a \"Transferable\" and avoid the costly\n// memory copy\ndata:buffer,// To recreate the original typed-array, we need information\n// about what portion of the ArrayBuffer it was a view into\nbyteOffset,byteLength:bytes.byteLength},[buffer]);}if(isEndOfTimeline){transmuxer.postMessage({action:'endTimeline'});}// even if we didn't push any bytes, we have to make sure we flush in case we reached\n// the end of the segment\ntransmuxer.postMessage({action:'flush'});};const dequeue=transmuxer=>{transmuxer.currentTransmux=null;if(transmuxer.transmuxQueue.length){transmuxer.currentTransmux=transmuxer.transmuxQueue.shift();if(typeof transmuxer.currentTransmux==='function'){transmuxer.currentTransmux();}else{processTransmux(transmuxer.currentTransmux);}}};const processAction=(transmuxer,action)=>{transmuxer.postMessage({action});dequeue(transmuxer);};const enqueueAction=(action,transmuxer)=>{if(!transmuxer.currentTransmux){transmuxer.currentTransmux=action;processAction(transmuxer,action);return;}transmuxer.transmuxQueue.push(processAction.bind(null,transmuxer,action));};const reset=transmuxer=>{enqueueAction('reset',transmuxer);};const endTimeline=transmuxer=>{enqueueAction('endTimeline',transmuxer);};const transmux=options=>{if(!options.transmuxer.currentTransmux){options.transmuxer.currentTransmux=options;processTransmux(options);return;}options.transmuxer.transmuxQueue.push(options);};const createTransmuxer=options=>{const transmuxer=new TransmuxWorker();transmuxer.currentTransmux=null;transmuxer.transmuxQueue=[];const term=transmuxer.terminate;transmuxer.terminate=()=>{transmuxer.currentTransmux=null;transmuxer.transmuxQueue.length=0;return term.call(transmuxer);};transmuxer.postMessage({action:'init',options});return transmuxer;};var segmentTransmuxer={reset,endTimeline,transmux,createTransmuxer};const workerCallback=function(options){const transmuxer=options.transmuxer;const endAction=options.endAction||options.action;const callback=options.callback;const message=_extends({},options,{endAction:null,transmuxer:null,callback:null});const listenForEndEvent=event=>{if(event.data.action!==endAction){return;}transmuxer.removeEventListener('message',listenForEndEvent);// transfer ownership of bytes back to us.\nif(event.data.data){event.data.data=new Uint8Array(event.data.data,options.byteOffset||0,options.byteLength||event.data.data.byteLength);if(options.data){options.data=event.data.data;}}callback(event.data);};transmuxer.addEventListener('message',listenForEndEvent);if(options.data){const isArrayBuffer=options.data instanceof ArrayBuffer;message.byteOffset=isArrayBuffer?0:options.data.byteOffset;message.byteLength=options.data.byteLength;const transfers=[isArrayBuffer?options.data:options.data.buffer];transmuxer.postMessage(message,transfers);}else{transmuxer.postMessage(message);}};const REQUEST_ERRORS={FAILURE:2,TIMEOUT:-101,ABORTED:-102};/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */const abortAll=activeXhrs=>{activeXhrs.forEach(xhr=>{xhr.abort();});};/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */const getRequestStats=request=>{return{bandwidth:request.bandwidth,bytesReceived:request.bytesReceived||0,roundTripTime:request.roundTripTime||0};};/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */const getProgressStats=progressEvent=>{const request=progressEvent.target;const roundTripTime=Date.now()-request.requestTime;const stats={bandwidth:Infinity,bytesReceived:0,roundTripTime:roundTripTime||0};stats.bytesReceived=progressEvent.loaded;// This can result in Infinity if stats.roundTripTime is 0 but that is ok\n// because we should only use bandwidth stats on progress to determine when\n// abort a request early due to insufficient bandwidth\nstats.bandwidth=Math.floor(stats.bytesReceived/stats.roundTripTime*8*1000);return stats;};/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */const handleErrors=(error,request)=>{if(request.timedout){return{status:request.status,message:'HLS request timed-out at URL: '+request.uri,code:REQUEST_ERRORS.TIMEOUT,xhr:request};}if(request.aborted){return{status:request.status,message:'HLS request aborted at URL: '+request.uri,code:REQUEST_ERRORS.ABORTED,xhr:request};}if(error){return{status:request.status,message:'HLS request errored at URL: '+request.uri,code:REQUEST_ERRORS.FAILURE,xhr:request};}if(request.responseType==='arraybuffer'&&request.response.byteLength===0){return{status:request.status,message:'Empty HLS response at URL: '+request.uri,code:REQUEST_ERRORS.FAILURE,xhr:request};}return null;};/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Array} objects - objects to add the key bytes to.\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */const handleKeyResponse=(segment,objects,finishProcessingFn)=>(error,request)=>{const response=request.response;const errorObj=handleErrors(error,request);if(errorObj){return finishProcessingFn(errorObj,segment);}if(response.byteLength!==16){return finishProcessingFn({status:request.status,message:'Invalid HLS key at URL: '+request.uri,code:REQUEST_ERRORS.FAILURE,xhr:request},segment);}const view=new DataView(response);const bytes=new Uint32Array([view.getUint32(0),view.getUint32(4),view.getUint32(8),view.getUint32(12)]);for(let i=0;i<objects.length;i++){objects[i].bytes=bytes;}return finishProcessingFn(null,segment);};const parseInitSegment=(segment,callback)=>{const type=detectContainerForBytes(segment.map.bytes);// TODO: We should also handle ts init segments here, but we\n// only know how to parse mp4 init segments at the moment\nif(type!=='mp4'){const uri=segment.map.resolvedUri||segment.map.uri;return callback({internal:true,message:`Found unsupported ${type||'unknown'} container for initialization segment at URL: ${uri}`,code:REQUEST_ERRORS.FAILURE});}workerCallback({action:'probeMp4Tracks',data:segment.map.bytes,transmuxer:segment.transmuxer,callback:({tracks,data})=>{// transfer bytes back to us\nsegment.map.bytes=data;tracks.forEach(function(track){segment.map.tracks=segment.map.tracks||{};// only support one track of each type for now\nif(segment.map.tracks[track.type]){return;}segment.map.tracks[track.type]=track;if(typeof track.id==='number'&&track.timescale){segment.map.timescales=segment.map.timescales||{};segment.map.timescales[track.id]=track.timescale;}});return callback(null);}});};/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */const handleInitSegmentResponse=({segment,finishProcessingFn})=>(error,request)=>{const errorObj=handleErrors(error,request);if(errorObj){return finishProcessingFn(errorObj,segment);}const bytes=new Uint8Array(request.response);// init segment is encypted, we will have to wait\n// until the key request is done to decrypt.\nif(segment.map.key){segment.map.encryptedBytes=bytes;return finishProcessingFn(null,segment);}segment.map.bytes=bytes;parseInitSegment(segment,function(parseError){if(parseError){parseError.xhr=request;parseError.status=request.status;return finishProcessingFn(parseError,segment);}finishProcessingFn(null,segment);});};/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */const handleSegmentResponse=({segment,finishProcessingFn,responseType})=>(error,request)=>{const errorObj=handleErrors(error,request);if(errorObj){return finishProcessingFn(errorObj,segment);}const newBytes=// although responseText \"should\" exist, this guard serves to prevent an error being\n// thrown for two primary cases:\n// 1. the mime type override stops working, or is not implemented for a specific\n//    browser\n// 2. when using mock XHR libraries like sinon that do not allow the override behavior\nresponseType==='arraybuffer'||!request.responseText?request.response:stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar||0));segment.stats=getRequestStats(request);if(segment.key){segment.encryptedBytes=new Uint8Array(newBytes);}else{segment.bytes=new Uint8Array(newBytes);}return finishProcessingFn(null,segment);};const transmuxAndNotify=({segment,bytes,trackInfoFn,timingInfoFn,videoSegmentTimingInfoFn,audioSegmentTimingInfoFn,id3Fn,captionsFn,isEndOfTimeline,endedTimelineFn,dataFn,doneFn,onTransmuxerLog})=>{const fmp4Tracks=segment.map&&segment.map.tracks||{};const isMuxed=Boolean(fmp4Tracks.audio&&fmp4Tracks.video);// Keep references to each function so we can null them out after we're done with them.\n// One reason for this is that in the case of full segments, we want to trust start\n// times from the probe, rather than the transmuxer.\nlet audioStartFn=timingInfoFn.bind(null,segment,'audio','start');const audioEndFn=timingInfoFn.bind(null,segment,'audio','end');let videoStartFn=timingInfoFn.bind(null,segment,'video','start');const videoEndFn=timingInfoFn.bind(null,segment,'video','end');const finish=()=>transmux({bytes,transmuxer:segment.transmuxer,audioAppendStart:segment.audioAppendStart,gopsToAlignWith:segment.gopsToAlignWith,remux:isMuxed,onData:result=>{result.type=result.type==='combined'?'video':result.type;dataFn(segment,result);},onTrackInfo:trackInfo=>{if(trackInfoFn){if(isMuxed){trackInfo.isMuxed=true;}trackInfoFn(segment,trackInfo);}},onAudioTimingInfo:audioTimingInfo=>{// we only want the first start value we encounter\nif(audioStartFn&&typeof audioTimingInfo.start!=='undefined'){audioStartFn(audioTimingInfo.start);audioStartFn=null;}// we want to continually update the end time\nif(audioEndFn&&typeof audioTimingInfo.end!=='undefined'){audioEndFn(audioTimingInfo.end);}},onVideoTimingInfo:videoTimingInfo=>{// we only want the first start value we encounter\nif(videoStartFn&&typeof videoTimingInfo.start!=='undefined'){videoStartFn(videoTimingInfo.start);videoStartFn=null;}// we want to continually update the end time\nif(videoEndFn&&typeof videoTimingInfo.end!=='undefined'){videoEndFn(videoTimingInfo.end);}},onVideoSegmentTimingInfo:videoSegmentTimingInfo=>{videoSegmentTimingInfoFn(videoSegmentTimingInfo);},onAudioSegmentTimingInfo:audioSegmentTimingInfo=>{audioSegmentTimingInfoFn(audioSegmentTimingInfo);},onId3:(id3Frames,dispatchType)=>{id3Fn(segment,id3Frames,dispatchType);},onCaptions:captions=>{captionsFn(segment,[captions]);},isEndOfTimeline,onEndedTimeline:()=>{endedTimelineFn();},onTransmuxerLog,onDone:result=>{if(!doneFn){return;}result.type=result.type==='combined'?'video':result.type;doneFn(null,segment,result);}});// In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n// Meaning cached frame data may corrupt our notion of where this segment\n// really starts. To get around this, probe for the info needed.\nworkerCallback({action:'probeTs',transmuxer:segment.transmuxer,data:bytes,baseStartTime:segment.baseStartTime,callback:data=>{segment.bytes=bytes=data.data;const probeResult=data.result;if(probeResult){trackInfoFn(segment,{hasAudio:probeResult.hasAudio,hasVideo:probeResult.hasVideo,isMuxed});trackInfoFn=null;if(probeResult.hasAudio&&!isMuxed){audioStartFn(probeResult.audioStart);}if(probeResult.hasVideo){videoStartFn(probeResult.videoStart);}audioStartFn=null;videoStartFn=null;}finish();}});};const handleSegmentBytes=({segment,bytes,trackInfoFn,timingInfoFn,videoSegmentTimingInfoFn,audioSegmentTimingInfoFn,id3Fn,captionsFn,isEndOfTimeline,endedTimelineFn,dataFn,doneFn,onTransmuxerLog})=>{let bytesAsUint8Array=new Uint8Array(bytes);// TODO:\n// We should have a handler that fetches the number of bytes required\n// to check if something is fmp4. This will allow us to save bandwidth\n// because we can only exclude a playlist and abort requests\n// by codec after trackinfo triggers.\nif(isLikelyFmp4MediaSegment(bytesAsUint8Array)){segment.isFmp4=true;const{tracks}=segment.map;const trackInfo={isFmp4:true,hasVideo:!!tracks.video,hasAudio:!!tracks.audio};// if we have a audio track, with a codec that is not set to\n// encrypted audio\nif(tracks.audio&&tracks.audio.codec&&tracks.audio.codec!=='enca'){trackInfo.audioCodec=tracks.audio.codec;}// if we have a video track, with a codec that is not set to\n// encrypted video\nif(tracks.video&&tracks.video.codec&&tracks.video.codec!=='encv'){trackInfo.videoCodec=tracks.video.codec;}if(tracks.video&&tracks.audio){trackInfo.isMuxed=true;}// since we don't support appending fmp4 data on progress, we know we have the full\n// segment here\ntrackInfoFn(segment,trackInfo);// The probe doesn't provide the segment end time, so only callback with the start\n// time. The end time can be roughly calculated by the receiver using the duration.\n//\n// Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n// that is the true start of the segment (where the playback engine should begin\n// decoding).\nconst finishLoading=captions=>{// if the track still has audio at this point it is only possible\n// for it to be audio only. See `tracks.video && tracks.audio` if statement\n// above.\n// we make sure to use segment.bytes here as that\ndataFn(segment,{data:bytesAsUint8Array,type:trackInfo.hasAudio&&!trackInfo.isMuxed?'audio':'video'});if(captions&&captions.length){captionsFn(segment,captions);}doneFn(null,segment,{});};workerCallback({action:'probeMp4StartTime',timescales:segment.map.timescales,data:bytesAsUint8Array,transmuxer:segment.transmuxer,callback:({data,startTime})=>{// transfer bytes back to us\nbytes=data.buffer;segment.bytes=bytesAsUint8Array=data;if(trackInfo.hasAudio&&!trackInfo.isMuxed){timingInfoFn(segment,'audio','start',startTime);}if(trackInfo.hasVideo){timingInfoFn(segment,'video','start',startTime);}// Run through the CaptionParser in case there are captions.\n// Initialize CaptionParser if it hasn't been yet\nif(!tracks.video||!data.byteLength||!segment.transmuxer){finishLoading();return;}workerCallback({action:'pushMp4Captions',endAction:'mp4Captions',transmuxer:segment.transmuxer,data:bytesAsUint8Array,timescales:segment.map.timescales,trackIds:[tracks.video.id],callback:message=>{// transfer bytes back to us\nbytes=message.data.buffer;segment.bytes=bytesAsUint8Array=message.data;message.logs.forEach(function(log){onTransmuxerLog(merge(log,{stream:'mp4CaptionParser'}));});finishLoading(message.captions);}});}});return;}// VTT or other segments that don't need processing\nif(!segment.transmuxer){doneFn(null,segment,{});return;}if(typeof segment.container==='undefined'){segment.container=detectContainerForBytes(bytesAsUint8Array);}if(segment.container!=='ts'&&segment.container!=='aac'){trackInfoFn(segment,{hasAudio:false,hasVideo:false});doneFn(null,segment,{});return;}// ts or aac\ntransmuxAndNotify({segment,bytes,trackInfoFn,timingInfoFn,videoSegmentTimingInfoFn,audioSegmentTimingInfoFn,id3Fn,captionsFn,isEndOfTimeline,endedTimelineFn,dataFn,doneFn,onTransmuxerLog});};const decrypt=function({id,key,encryptedBytes,decryptionWorker},callback){const decryptionHandler=event=>{if(event.data.source===id){decryptionWorker.removeEventListener('message',decryptionHandler);const decrypted=event.data.decrypted;callback(new Uint8Array(decrypted.bytes,decrypted.byteOffset,decrypted.byteLength));}};decryptionWorker.addEventListener('message',decryptionHandler);let keyBytes;if(key.bytes.slice){keyBytes=key.bytes.slice();}else{keyBytes=new Uint32Array(Array.prototype.slice.call(key.bytes));}// incrementally decrypt the bytes\ndecryptionWorker.postMessage(createTransferableMessage({source:id,encrypted:encryptedBytes,key:keyBytes,iv:key.iv}),[encryptedBytes.buffer,keyBytes.buffer]);};/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */const decryptSegment=({decryptionWorker,segment,trackInfoFn,timingInfoFn,videoSegmentTimingInfoFn,audioSegmentTimingInfoFn,id3Fn,captionsFn,isEndOfTimeline,endedTimelineFn,dataFn,doneFn,onTransmuxerLog})=>{decrypt({id:segment.requestId,key:segment.key,encryptedBytes:segment.encryptedBytes,decryptionWorker},decryptedBytes=>{segment.bytes=decryptedBytes;handleSegmentBytes({segment,bytes:segment.bytes,trackInfoFn,timingInfoFn,videoSegmentTimingInfoFn,audioSegmentTimingInfoFn,id3Fn,captionsFn,isEndOfTimeline,endedTimelineFn,dataFn,doneFn,onTransmuxerLog});});};/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */const waitForCompletion=({activeXhrs,decryptionWorker,trackInfoFn,timingInfoFn,videoSegmentTimingInfoFn,audioSegmentTimingInfoFn,id3Fn,captionsFn,isEndOfTimeline,endedTimelineFn,dataFn,doneFn,onTransmuxerLog})=>{let count=0;let didError=false;return(error,segment)=>{if(didError){return;}if(error){didError=true;// If there are errors, we have to abort any outstanding requests\nabortAll(activeXhrs);// Even though the requests above are aborted, and in theory we could wait until we\n// handle the aborted events from those requests, there are some cases where we may\n// never get an aborted event. For instance, if the network connection is lost and\n// there were two requests, the first may have triggered an error immediately, while\n// the second request remains unsent. In that case, the aborted algorithm will not\n// trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n//\n// We also can't rely on the ready state of the XHR, since the request that\n// triggered the connection error may also show as a ready state of 0 (unsent).\n// Therefore, we have to finish this group of requests immediately after the first\n// seen error.\nreturn doneFn(error,segment);}count+=1;if(count===activeXhrs.length){const segmentFinish=function(){if(segment.encryptedBytes){return decryptSegment({decryptionWorker,segment,trackInfoFn,timingInfoFn,videoSegmentTimingInfoFn,audioSegmentTimingInfoFn,id3Fn,captionsFn,isEndOfTimeline,endedTimelineFn,dataFn,doneFn,onTransmuxerLog});}// Otherwise, everything is ready just continue\nhandleSegmentBytes({segment,bytes:segment.bytes,trackInfoFn,timingInfoFn,videoSegmentTimingInfoFn,audioSegmentTimingInfoFn,id3Fn,captionsFn,isEndOfTimeline,endedTimelineFn,dataFn,doneFn,onTransmuxerLog});};// Keep track of when *all* of the requests have completed\nsegment.endOfAllRequests=Date.now();if(segment.map&&segment.map.encryptedBytes&&!segment.map.bytes){return decrypt({decryptionWorker,// add -init to the \"id\" to differentiate between segment\n// and init segment decryption, just in case they happen\n// at the same time at some point in the future.\nid:segment.requestId+'-init',encryptedBytes:segment.map.encryptedBytes,key:segment.map.key},decryptedBytes=>{segment.map.bytes=decryptedBytes;parseInitSegment(segment,parseError=>{if(parseError){abortAll(activeXhrs);return doneFn(parseError,segment);}segmentFinish();});});}segmentFinish();}};};/**\n * Calls the abort callback if any request within the batch was aborted. Will only call\n * the callback once per batch of requests, even if multiple were aborted.\n *\n * @param {Object} loadendState - state to check to see if the abort function was called\n * @param {Function} abortFn - callback to call for abort\n */const handleLoadEnd=({loadendState,abortFn})=>event=>{const request=event.target;if(request.aborted&&abortFn&&!loadendState.calledAbortFn){abortFn();loadendState.calledAbortFn=true;}};/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Event} event - the progress event object from XMLHttpRequest\n */const handleProgress=({segment,progressFn,trackInfoFn,timingInfoFn,videoSegmentTimingInfoFn,audioSegmentTimingInfoFn,id3Fn,captionsFn,isEndOfTimeline,endedTimelineFn,dataFn})=>event=>{const request=event.target;if(request.aborted){return;}segment.stats=merge(segment.stats,getProgressStats(event));// record the time that we receive the first byte of data\nif(!segment.stats.firstBytesReceivedAt&&segment.stats.bytesReceived){segment.stats.firstBytesReceivedAt=Date.now();}return progressFn(event,segment);};/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [transmuxer]: Object,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n *                             aborted\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n *                            request, transmuxed if needed\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @return {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */const mediaSegmentRequest=({xhr,xhrOptions,decryptionWorker,segment,abortFn,progressFn,trackInfoFn,timingInfoFn,videoSegmentTimingInfoFn,audioSegmentTimingInfoFn,id3Fn,captionsFn,isEndOfTimeline,endedTimelineFn,dataFn,doneFn,onTransmuxerLog})=>{const activeXhrs=[];const finishProcessingFn=waitForCompletion({activeXhrs,decryptionWorker,trackInfoFn,timingInfoFn,videoSegmentTimingInfoFn,audioSegmentTimingInfoFn,id3Fn,captionsFn,isEndOfTimeline,endedTimelineFn,dataFn,doneFn,onTransmuxerLog});// optionally, request the decryption key\nif(segment.key&&!segment.key.bytes){const objects=[segment.key];if(segment.map&&!segment.map.bytes&&segment.map.key&&segment.map.key.resolvedUri===segment.key.resolvedUri){objects.push(segment.map.key);}const keyRequestOptions=merge(xhrOptions,{uri:segment.key.resolvedUri,responseType:'arraybuffer'});const keyRequestCallback=handleKeyResponse(segment,objects,finishProcessingFn);const keyXhr=xhr(keyRequestOptions,keyRequestCallback);activeXhrs.push(keyXhr);}// optionally, request the associated media init segment\nif(segment.map&&!segment.map.bytes){const differentMapKey=segment.map.key&&(!segment.key||segment.key.resolvedUri!==segment.map.key.resolvedUri);if(differentMapKey){const mapKeyRequestOptions=merge(xhrOptions,{uri:segment.map.key.resolvedUri,responseType:'arraybuffer'});const mapKeyRequestCallback=handleKeyResponse(segment,[segment.map.key],finishProcessingFn);const mapKeyXhr=xhr(mapKeyRequestOptions,mapKeyRequestCallback);activeXhrs.push(mapKeyXhr);}const initSegmentOptions=merge(xhrOptions,{uri:segment.map.resolvedUri,responseType:'arraybuffer',headers:segmentXhrHeaders(segment.map)});const initSegmentRequestCallback=handleInitSegmentResponse({segment,finishProcessingFn});const initSegmentXhr=xhr(initSegmentOptions,initSegmentRequestCallback);activeXhrs.push(initSegmentXhr);}const segmentRequestOptions=merge(xhrOptions,{uri:segment.part&&segment.part.resolvedUri||segment.resolvedUri,responseType:'arraybuffer',headers:segmentXhrHeaders(segment)});const segmentRequestCallback=handleSegmentResponse({segment,finishProcessingFn,responseType:segmentRequestOptions.responseType});const segmentXhr=xhr(segmentRequestOptions,segmentRequestCallback);segmentXhr.addEventListener('progress',handleProgress({segment,progressFn,trackInfoFn,timingInfoFn,videoSegmentTimingInfoFn,audioSegmentTimingInfoFn,id3Fn,captionsFn,isEndOfTimeline,endedTimelineFn,dataFn}));activeXhrs.push(segmentXhr);// since all parts of the request must be considered, but should not make callbacks\n// multiple times, provide a shared state object\nconst loadendState={};activeXhrs.forEach(activeXhr=>{activeXhr.addEventListener('loadend',handleLoadEnd({loadendState,abortFn}));});return()=>abortAll(activeXhrs);};/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */const logFn$1=logger('CodecUtils');/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n *\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */const getCodecs=function(media){// if the codecs were explicitly specified, use them instead of the\n// defaults\nconst mediaAttributes=media.attributes||{};if(mediaAttributes.CODECS){return parseCodecs(mediaAttributes.CODECS);}};const isMaat=(main,media)=>{const mediaAttributes=media.attributes||{};return main&&main.mediaGroups&&main.mediaGroups.AUDIO&&mediaAttributes.AUDIO&&main.mediaGroups.AUDIO[mediaAttributes.AUDIO];};const isMuxed=(main,media)=>{if(!isMaat(main,media)){return true;}const mediaAttributes=media.attributes||{};const audioGroup=main.mediaGroups.AUDIO[mediaAttributes.AUDIO];for(const groupId in audioGroup){// If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n// or there are listed playlists (the case for DASH, as the manifest will have already\n// provided all of the details necessary to generate the audio playlist, as opposed to\n// HLS' externally requested playlists), then the content is demuxed.\nif(!audioGroup[groupId].uri&&!audioGroup[groupId].playlists){return true;}}return false;};const unwrapCodecList=function(codecList){const codecs={};codecList.forEach(({mediaType,type,details})=>{codecs[mediaType]=codecs[mediaType]||[];codecs[mediaType].push(translateLegacyCodec(`${type}${details}`));});Object.keys(codecs).forEach(function(mediaType){if(codecs[mediaType].length>1){logFn$1(`multiple ${mediaType} codecs found as attributes: ${codecs[mediaType].join(', ')}. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.`);codecs[mediaType]=null;return;}codecs[mediaType]=codecs[mediaType][0];});return codecs;};const codecCount=function(codecObj){let count=0;if(codecObj.audio){count++;}if(codecObj.video){count++;}return count;};/**\n * Calculates the codec strings for a working configuration of\n * SourceBuffers to play variant streams in a main playlist. If\n * there is no possible working configuration, an empty object will be\n * returned.\n *\n * @param main {Object} the m3u8 object for the main playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Object} the codec strings.\n *\n * @private\n */const codecsForPlaylist=function(main,media){const mediaAttributes=media.attributes||{};const codecInfo=unwrapCodecList(getCodecs(media)||[]);// HLS with multiple-audio tracks must always get an audio codec.\n// Put another way, there is no way to have a video-only multiple-audio HLS!\nif(isMaat(main,media)&&!codecInfo.audio){if(!isMuxed(main,media)){// It is possible for codecs to be specified on the audio media group playlist but\n// not on the rendition playlist. This is mostly the case for DASH, where audio and\n// video are always separate (and separately specified).\nconst defaultCodecs=unwrapCodecList(codecsFromDefault(main,mediaAttributes.AUDIO)||[]);if(defaultCodecs.audio){codecInfo.audio=defaultCodecs.audio;}}}return codecInfo;};const logFn=logger('PlaylistSelector');const representationToString=function(representation){if(!representation||!representation.playlist){return;}const playlist=representation.playlist;return JSON.stringify({id:playlist.id,bandwidth:representation.bandwidth,width:representation.width,height:representation.height,codecs:playlist.attributes&&playlist.attributes.CODECS||''});};// Utilities\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */const safeGetComputedStyle=function(el,property){if(!el){return'';}const result=window$1.getComputedStyle(el);if(!result){return'';}return result[property];};/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */const stableSort=function(array,sortFn){const newArray=array.slice();array.sort(function(left,right){const cmp=sortFn(left,right);if(cmp===0){return newArray.indexOf(left)-newArray.indexOf(right);}return cmp;});};/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */const comparePlaylistBandwidth=function(left,right){let leftBandwidth;let rightBandwidth;if(left.attributes.BANDWIDTH){leftBandwidth=left.attributes.BANDWIDTH;}leftBandwidth=leftBandwidth||window$1.Number.MAX_VALUE;if(right.attributes.BANDWIDTH){rightBandwidth=right.attributes.BANDWIDTH;}rightBandwidth=rightBandwidth||window$1.Number.MAX_VALUE;return leftBandwidth-rightBandwidth;};/**\n * A comparator function to sort two playlist object by resolution (width).\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */const comparePlaylistResolution=function(left,right){let leftWidth;let rightWidth;if(left.attributes.RESOLUTION&&left.attributes.RESOLUTION.width){leftWidth=left.attributes.RESOLUTION.width;}leftWidth=leftWidth||window$1.Number.MAX_VALUE;if(right.attributes.RESOLUTION&&right.attributes.RESOLUTION.width){rightWidth=right.attributes.RESOLUTION.width;}rightWidth=rightWidth||window$1.Number.MAX_VALUE;// NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n// have the same media dimensions/ resolution\nif(leftWidth===rightWidth&&left.attributes.BANDWIDTH&&right.attributes.BANDWIDTH){return left.attributes.BANDWIDTH-right.attributes.BANDWIDTH;}return leftWidth-rightWidth;};/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} main\n *        Object representation of the main manifest\n * @param {number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @param {Object} playlistController\n *        the current playlistController object\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */let simpleSelector=function(main,playerBandwidth,playerWidth,playerHeight,limitRenditionByPlayerDimensions,playlistController){// If we end up getting called before `main` is available, exit early\nif(!main){return;}const options={bandwidth:playerBandwidth,width:playerWidth,height:playerHeight,limitRenditionByPlayerDimensions};let playlists=main.playlists;// if playlist is audio only, select between currently active audio group playlists.\nif(Playlist.isAudioOnly(main)){playlists=playlistController.getAudioTrackPlaylists_();// add audioOnly to options so that we log audioOnly: true\n// at the buttom of this function for debugging.\noptions.audioOnly=true;}// convert the playlists to an intermediary representation to make comparisons easier\nlet sortedPlaylistReps=playlists.map(playlist=>{let bandwidth;const width=playlist.attributes&&playlist.attributes.RESOLUTION&&playlist.attributes.RESOLUTION.width;const height=playlist.attributes&&playlist.attributes.RESOLUTION&&playlist.attributes.RESOLUTION.height;bandwidth=playlist.attributes&&playlist.attributes.BANDWIDTH;bandwidth=bandwidth||window$1.Number.MAX_VALUE;return{bandwidth,width,height,playlist};});stableSort(sortedPlaylistReps,(left,right)=>left.bandwidth-right.bandwidth);// filter out any playlists that have been excluded due to\n// incompatible configurations\nsortedPlaylistReps=sortedPlaylistReps.filter(rep=>!Playlist.isIncompatible(rep.playlist));// filter out any playlists that have been disabled manually through the representations\n// api or excluded temporarily due to playback errors.\nlet enabledPlaylistReps=sortedPlaylistReps.filter(rep=>Playlist.isEnabled(rep.playlist));if(!enabledPlaylistReps.length){// if there are no enabled playlists, then they have all been excluded or disabled\n// by the user through the representations api. In this case, ignore exclusion and\n// fallback to what the user wants by using playlists the user has not disabled.\nenabledPlaylistReps=sortedPlaylistReps.filter(rep=>!Playlist.isDisabled(rep.playlist));}// filter out any variant that has greater effective bitrate\n// than the current estimated bandwidth\nconst bandwidthPlaylistReps=enabledPlaylistReps.filter(rep=>rep.bandwidth*Config.BANDWIDTH_VARIANCE<playerBandwidth);let highestRemainingBandwidthRep=bandwidthPlaylistReps[bandwidthPlaylistReps.length-1];// get all of the renditions with the same (highest) bandwidth\n// and then taking the very first element\nconst bandwidthBestRep=bandwidthPlaylistReps.filter(rep=>rep.bandwidth===highestRemainingBandwidthRep.bandwidth)[0];// if we're not going to limit renditions by player size, make an early decision.\nif(limitRenditionByPlayerDimensions===false){const chosenRep=bandwidthBestRep||enabledPlaylistReps[0]||sortedPlaylistReps[0];if(chosenRep&&chosenRep.playlist){let type='sortedPlaylistReps';if(bandwidthBestRep){type='bandwidthBestRep';}if(enabledPlaylistReps[0]){type='enabledPlaylistReps';}logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`,options);return chosenRep.playlist;}logFn('could not choose a playlist with options',options);return null;}// filter out playlists without resolution information\nconst haveResolution=bandwidthPlaylistReps.filter(rep=>rep.width&&rep.height);// sort variants by resolution\nstableSort(haveResolution,(left,right)=>left.width-right.width);// if we have the exact resolution as the player use it\nconst resolutionBestRepList=haveResolution.filter(rep=>rep.width===playerWidth&&rep.height===playerHeight);highestRemainingBandwidthRep=resolutionBestRepList[resolutionBestRepList.length-1];// ensure that we pick the highest bandwidth variant that have exact resolution\nconst resolutionBestRep=resolutionBestRepList.filter(rep=>rep.bandwidth===highestRemainingBandwidthRep.bandwidth)[0];let resolutionPlusOneList;let resolutionPlusOneSmallest;let resolutionPlusOneRep;// find the smallest variant that is larger than the player\n// if there is no match of exact resolution\nif(!resolutionBestRep){resolutionPlusOneList=haveResolution.filter(rep=>rep.width>playerWidth||rep.height>playerHeight);// find all the variants have the same smallest resolution\nresolutionPlusOneSmallest=resolutionPlusOneList.filter(rep=>rep.width===resolutionPlusOneList[0].width&&rep.height===resolutionPlusOneList[0].height);// ensure that we also pick the highest bandwidth variant that\n// is just-larger-than the video player\nhighestRemainingBandwidthRep=resolutionPlusOneSmallest[resolutionPlusOneSmallest.length-1];resolutionPlusOneRep=resolutionPlusOneSmallest.filter(rep=>rep.bandwidth===highestRemainingBandwidthRep.bandwidth)[0];}let leastPixelDiffRep;// If this selector proves to be better than others,\n// resolutionPlusOneRep and resolutionBestRep and all\n// the code involving them should be removed.\nif(playlistController.leastPixelDiffSelector){// find the variant that is closest to the player's pixel size\nconst leastPixelDiffList=haveResolution.map(rep=>{rep.pixelDiff=Math.abs(rep.width-playerWidth)+Math.abs(rep.height-playerHeight);return rep;});// get the highest bandwidth, closest resolution playlist\nstableSort(leastPixelDiffList,(left,right)=>{// sort by highest bandwidth if pixelDiff is the same\nif(left.pixelDiff===right.pixelDiff){return right.bandwidth-left.bandwidth;}return left.pixelDiff-right.pixelDiff;});leastPixelDiffRep=leastPixelDiffList[0];}// fallback chain of variants\nconst chosenRep=leastPixelDiffRep||resolutionPlusOneRep||resolutionBestRep||bandwidthBestRep||enabledPlaylistReps[0]||sortedPlaylistReps[0];if(chosenRep&&chosenRep.playlist){let type='sortedPlaylistReps';if(leastPixelDiffRep){type='leastPixelDiffRep';}else if(resolutionPlusOneRep){type='resolutionPlusOneRep';}else if(resolutionBestRep){type='resolutionBestRep';}else if(bandwidthBestRep){type='bandwidthBestRep';}else if(enabledPlaylistReps[0]){type='enabledPlaylistReps';}logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`,options);return chosenRep.playlist;}logFn('could not choose a playlist with options',options);return null;};/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */const lastBandwidthSelector=function(){const pixelRatio=this.useDevicePixelRatio?window$1.devicePixelRatio||1:1;return simpleSelector(this.playlists.main,this.systemBandwidth,parseInt(safeGetComputedStyle(this.tech_.el(),'width'),10)*pixelRatio,parseInt(safeGetComputedStyle(this.tech_.el(),'height'),10)*pixelRatio,this.limitRenditionByPlayerDimensions,this.playlistController_);};/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @param {number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */const movingAverageBandwidthSelector=function(decay){let average=-1;let lastSystemBandwidth=-1;if(decay<0||decay>1){throw new Error('Moving average bandwidth decay must be between 0 and 1.');}return function(){const pixelRatio=this.useDevicePixelRatio?window$1.devicePixelRatio||1:1;if(average<0){average=this.systemBandwidth;lastSystemBandwidth=this.systemBandwidth;}// stop the average value from decaying for every 250ms\n// when the systemBandwidth is constant\n// and\n// stop average from setting to a very low value when the\n// systemBandwidth becomes 0 in case of chunk cancellation\nif(this.systemBandwidth>0&&this.systemBandwidth!==lastSystemBandwidth){average=decay*this.systemBandwidth+(1-decay)*average;lastSystemBandwidth=this.systemBandwidth;}return simpleSelector(this.playlists.main,average,parseInt(safeGetComputedStyle(this.tech_.el(),'width'),10)*pixelRatio,parseInt(safeGetComputedStyle(this.tech_.el(),'height'),10)*pixelRatio,this.limitRenditionByPlayerDimensions,this.playlistController_);};};/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.main\n *        Object representation of the main manifest\n * @param {number} settings.currentTime\n *        The current time of the player\n * @param {number} settings.bandwidth\n *        Current measured bandwidth\n * @param {number} settings.duration\n *        Duration of the media\n * @param {number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */const minRebufferMaxBandwidthSelector=function(settings){const{main,currentTime,bandwidth,duration,segmentDuration,timeUntilRebuffer,currentTimeline,syncController}=settings;// filter out any playlists that have been excluded due to\n// incompatible configurations\nconst compatiblePlaylists=main.playlists.filter(playlist=>!Playlist.isIncompatible(playlist));// filter out any playlists that have been disabled manually through the representations\n// api or excluded temporarily due to playback errors.\nlet enabledPlaylists=compatiblePlaylists.filter(Playlist.isEnabled);if(!enabledPlaylists.length){// if there are no enabled playlists, then they have all been excluded or disabled\n// by the user through the representations api. In this case, ignore exclusion and\n// fallback to what the user wants by using playlists the user has not disabled.\nenabledPlaylists=compatiblePlaylists.filter(playlist=>!Playlist.isDisabled(playlist));}const bandwidthPlaylists=enabledPlaylists.filter(Playlist.hasAttribute.bind(null,'BANDWIDTH'));const rebufferingEstimates=bandwidthPlaylists.map(playlist=>{const syncPoint=syncController.getSyncPoint(playlist,duration,currentTimeline,currentTime);// If there is no sync point for this playlist, switching to it will require a\n// sync request first. This will double the request time\nconst numRequests=syncPoint?1:2;const requestTimeEstimate=Playlist.estimateSegmentRequestTime(segmentDuration,bandwidth,playlist);const rebufferingImpact=requestTimeEstimate*numRequests-timeUntilRebuffer;return{playlist,rebufferingImpact};});const noRebufferingPlaylists=rebufferingEstimates.filter(estimate=>estimate.rebufferingImpact<=0);// Sort by bandwidth DESC\nstableSort(noRebufferingPlaylists,(a,b)=>comparePlaylistBandwidth(b.playlist,a.playlist));if(noRebufferingPlaylists.length){return noRebufferingPlaylists[0];}stableSort(rebufferingEstimates,(a,b)=>a.rebufferingImpact-b.rebufferingImpact);return rebufferingEstimates[0]||null;};/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */const lowestBitrateCompatibleVariantSelector=function(){// filter out any playlists that have been excluded due to\n// incompatible configurations or playback errors\nconst playlists=this.playlists.main.playlists.filter(Playlist.isEnabled);// Sort ascending by bitrate\nstableSort(playlists,(a,b)=>comparePlaylistBandwidth(a,b));// Parse and assume that playlists with no video codec have no video\n// (this is not necessarily true, although it is generally true).\n//\n// If an entire manifest has no valid videos everything will get filtered\n// out.\nconst playlistsWithVideo=playlists.filter(playlist=>!!codecsForPlaylist(this.playlists.main,playlist).video);return playlistsWithVideo[0]||null;};/**\n * Combine all segments into a single Uint8Array\n *\n * @param {Object} segmentObj\n * @return {Uint8Array} concatenated bytes\n * @private\n */const concatSegments=segmentObj=>{let offset=0;let tempBuffer;if(segmentObj.bytes){tempBuffer=new Uint8Array(segmentObj.bytes);// combine the individual segments into one large typed-array\nsegmentObj.segments.forEach(segment=>{tempBuffer.set(segment,offset);offset+=segment.byteLength;});}return tempBuffer;};/**\n * @file text-tracks.js\n */ /**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStream the caption stream to create\n * @private\n */const createCaptionsTrackIfNotExists=function(inbandTextTracks,tech,captionStream){if(!inbandTextTracks[captionStream]){tech.trigger({type:'usage',name:'vhs-608'});let instreamId=captionStream;// we need to translate SERVICEn for 708 to how mux.js currently labels them\nif(/^cc708_/.test(captionStream)){instreamId='SERVICE'+captionStream.split('_')[1];}const track=tech.textTracks().getTrackById(instreamId);if(track){// Resuse an existing track with a CC# id because this was\n// very likely created by videojs-contrib-hls from information\n// in the m3u8 for us to use\ninbandTextTracks[captionStream]=track;}else{// This section gets called when we have caption services that aren't specified in the manifest.\n// Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\nconst captionServices=tech.options_.vhs&&tech.options_.vhs.captionServices||{};let label=captionStream;let language=captionStream;let def=false;const captionService=captionServices[instreamId];if(captionService){label=captionService.label;language=captionService.language;def=captionService.default;}// Otherwise, create a track with the default `CC#` label and\n// without a language\ninbandTextTracks[captionStream]=tech.addRemoteTextTrack({kind:'captions',id:instreamId,// TODO: investigate why this doesn't seem to turn the caption on by default\ndefault:def,label,language},false).track;}}};/**\n * Add caption text track data to a source handler given an array of captions\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {Array} captionArray an array of caption data\n * @private\n */const addCaptionData=function({inbandTextTracks,captionArray,timestampOffset}){if(!captionArray){return;}const Cue=window$1.WebKitDataCue||window$1.VTTCue;captionArray.forEach(caption=>{const track=caption.stream;inbandTextTracks[track].addCue(new Cue(caption.startTime+timestampOffset,caption.endTime+timestampOffset,caption.text));});};/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */const deprecateOldCue=function(cue){Object.defineProperties(cue.frame,{id:{get(){videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');return cue.value.key;}},value:{get(){videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');return cue.value.data;}},privateData:{get(){videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');return cue.value.data;}}});};/**\n * Add metadata text track data to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} metadataArray an array of meta data\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {number} videoDuration the duration of the video\n * @private\n */const addMetadata=({inbandTextTracks,metadataArray,timestampOffset,videoDuration})=>{if(!metadataArray){return;}const Cue=window$1.WebKitDataCue||window$1.VTTCue;const metadataTrack=inbandTextTracks.metadataTrack_;if(!metadataTrack){return;}metadataArray.forEach(metadata=>{const time=metadata.cueTime+timestampOffset;// if time isn't a finite number between 0 and Infinity, like NaN,\n// ignore this bit of metadata.\n// This likely occurs when you have an non-timed ID3 tag like TIT2,\n// which is the \"Title/Songname/Content description\" frame\nif(typeof time!=='number'||window$1.isNaN(time)||time<0||!(time<Infinity)){return;}metadata.frames.forEach(frame=>{const cue=new Cue(time,time,frame.value||frame.url||frame.data||'');cue.frame=frame;cue.value=frame;deprecateOldCue(cue);metadataTrack.addCue(cue);});});if(!metadataTrack.cues||!metadataTrack.cues.length){return;}// Updating the metadeta cues so that\n// the endTime of each cue is the startTime of the next cue\n// the endTime of last cue is the duration of the video\nconst cues=metadataTrack.cues;const cuesArray=[];// Create a copy of the TextTrackCueList...\n// ...disregarding cues with a falsey value\nfor(let i=0;i<cues.length;i++){if(cues[i]){cuesArray.push(cues[i]);}}// Group cues by their startTime value\nconst cuesGroupedByStartTime=cuesArray.reduce((obj,cue)=>{const timeSlot=obj[cue.startTime]||[];timeSlot.push(cue);obj[cue.startTime]=timeSlot;return obj;},{});// Sort startTimes by ascending order\nconst sortedStartTimes=Object.keys(cuesGroupedByStartTime).sort((a,b)=>Number(a)-Number(b));// Map each cue group's endTime to the next group's startTime\nsortedStartTimes.forEach((startTime,idx)=>{const cueGroup=cuesGroupedByStartTime[startTime];const nextTime=Number(sortedStartTimes[idx+1])||videoDuration;// Map each cue's endTime the next group's startTime\ncueGroup.forEach(cue=>{cue.endTime=nextTime;});});};/**\n * Create metadata text track on video.js if it does not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {string} dispatchType the inband metadata track dispatch type\n * @param {Object} tech the video.js tech\n * @private\n */const createMetadataTrackIfNotExists=(inbandTextTracks,dispatchType,tech)=>{if(inbandTextTracks.metadataTrack_){return;}inbandTextTracks.metadataTrack_=tech.addRemoteTextTrack({kind:'metadata',label:'Timed Metadata'},false).track;inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType=dispatchType;};/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */const removeCuesFromTrack=function(start,end,track){let i;let cue;if(!track){return;}if(!track.cues){return;}i=track.cues.length;while(i--){cue=track.cues[i];// Remove any cue within the provided start and end time\nif(cue.startTime>=start&&cue.endTime<=end){track.removeCue(cue);}}};/**\n * Remove duplicate cues from a track on video.js (a cue is considered a\n * duplicate if it has the same time interval and text as another)\n *\n * @param {Object} track the text track to remove the duplicate cues from\n * @private\n */const removeDuplicateCuesFromTrack=function(track){const cues=track.cues;if(!cues){return;}for(let i=0;i<cues.length;i++){const duplicates=[];let occurrences=0;for(let j=0;j<cues.length;j++){if(cues[i].startTime===cues[j].startTime&&cues[i].endTime===cues[j].endTime&&cues[i].text===cues[j].text){occurrences++;if(occurrences>1){duplicates.push(cues[j]);}}}if(duplicates.length){duplicates.forEach(dupe=>track.removeCue(dupe));}}};/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */const gopsSafeToAlignWith=(buffer,currentTime,mapping)=>{if(typeof currentTime==='undefined'||currentTime===null||!buffer.length){return[];}// pts value for current time + 3 seconds to give a bit more wiggle room\nconst currentTimePts=Math.ceil((currentTime-mapping+3)*ONE_SECOND_IN_TS);let i;for(i=0;i<buffer.length;i++){if(buffer[i].pts>currentTimePts){break;}}return buffer.slice(i);};/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */const updateGopBuffer=(buffer,gops,replace)=>{if(!gops.length){return buffer;}if(replace){// If we are in safe append mode, then completely overwrite the gop buffer\n// with the most recent appeneded data. This will make sure that when appending\n// future segments, we only try to align with gops that are both ahead of current\n// time and in the last segment appended.\nreturn gops.slice();}const start=gops[0].pts;let i=0;for(i;i<buffer.length;i++){if(buffer[i].pts>=start){break;}}return buffer.slice(0,i).concat(gops);};/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */const removeGopBuffer=(buffer,start,end,mapping)=>{const startPts=Math.ceil((start-mapping)*ONE_SECOND_IN_TS);const endPts=Math.ceil((end-mapping)*ONE_SECOND_IN_TS);const updatedBuffer=buffer.slice();let i=buffer.length;while(i--){if(buffer[i].pts<=endPts){break;}}if(i===-1){// no removal because end of remove range is before start of buffer\nreturn updatedBuffer;}let j=i+1;while(j--){if(buffer[j].pts<=startPts){break;}}// clamp remove range start to 0 index\nj=Math.max(j,0);updatedBuffer.splice(j,i-j+1);return updatedBuffer;};const shallowEqual=function(a,b){// if both are undefined\n// or one or the other is undefined\n// they are not equal\nif(!a&&!b||!a&&b||a&&!b){return false;}// they are the same object and thus, equal\nif(a===b){return true;}// sort keys so we can make sure they have\n// all the same keys later.\nconst akeys=Object.keys(a).sort();const bkeys=Object.keys(b).sort();// different number of keys, not equal\nif(akeys.length!==bkeys.length){return false;}for(let i=0;i<akeys.length;i++){const key=akeys[i];// different sorted keys, not equal\nif(key!==bkeys[i]){return false;}// different values, not equal\nif(a[key]!==b[key]){return false;}}return true;};// https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\nconst QUOTA_EXCEEDED_ERR=22;/**\n * The segment loader has no recourse except to fetch a segment in the\n * current playlist and use the internal timestamps in that segment to\n * generate a syncPoint. This function returns a good candidate index\n * for that process.\n *\n * @param {Array} segments - the segments array from a playlist.\n * @return {number} An index of a segment from the playlist to load\n */const getSyncSegmentCandidate=function(currentTimeline,segments,targetTime){segments=segments||[];const timelineSegments=[];let time=0;for(let i=0;i<segments.length;i++){const segment=segments[i];if(currentTimeline===segment.timeline){timelineSegments.push(i);time+=segment.duration;if(time>targetTime){return i;}}}if(timelineSegments.length===0){return 0;}// default to the last timeline segment\nreturn timelineSegments[timelineSegments.length-1];};// In the event of a quota exceeded error, keep at least one second of back buffer. This\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n// as a start to prevent any potential issues with removing content too close to the\n// playhead.\nconst MIN_BACK_BUFFER=1;// in ms\nconst CHECK_BUFFER_DELAY=500;const finite=num=>typeof num==='number'&&isFinite(num);// With most content hovering around 30fps, if a segment has a duration less than a half\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n// not accurately reflect the rest of the content.\nconst MIN_SEGMENT_DURATION_TO_SAVE_STATS=1/60;const illegalMediaSwitch=(loaderType,startingMedia,trackInfo)=>{// Although these checks should most likely cover non 'main' types, for now it narrows\n// the scope of our checks.\nif(loaderType!=='main'||!startingMedia||!trackInfo){return null;}if(!trackInfo.hasAudio&&!trackInfo.hasVideo){return'Neither audio nor video found in segment.';}if(startingMedia.hasVideo&&!trackInfo.hasVideo){return'Only audio found in segment when we expected video.'+' We can\\'t switch to audio only from a stream that had video.'+' To get rid of this message, please add codec information to the manifest.';}if(!startingMedia.hasVideo&&trackInfo.hasVideo){return'Video found in segment when we expected only audio.'+' We can\\'t switch to a stream with video from an audio only stream.'+' To get rid of this message, please add codec information to the manifest.';}return null;};/**\n * Calculates a time value that is safe to remove from the back buffer without interrupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {number} currentTime\n *        The current time of the player\n * @param {number} targetDuration\n *        The target duration of the current playlist\n * @return {number}\n *         Time that is safe to remove from the back buffer without interrupting playback\n */const safeBackBufferTrimTime=(seekable,currentTime,targetDuration)=>{// 30 seconds before the playhead provides a safe default for trimming.\n//\n// Choosing a reasonable default is particularly important for high bitrate content and\n// VOD videos/live streams with large windows, as the buffer may end up overfilled and\n// throw an APPEND_BUFFER_ERR.\nlet trimTime=currentTime-Config.BACK_BUFFER_LENGTH;if(seekable.length){// Some live playlists may have a shorter window of content than the full allowed back\n// buffer. For these playlists, don't save content that's no longer within the window.\ntrimTime=Math.max(trimTime,seekable.start(0));}// Don't remove within target duration of the current time to avoid the possibility of\n// removing the GOP currently being played, as removing it can cause playback stalls.\nconst maxTrimTime=currentTime-targetDuration;return Math.min(maxTrimTime,trimTime);};const segmentInfoString=segmentInfo=>{const{startOfSegment,duration,segment,part,playlist:{mediaSequence:seq,id,segments=[]},mediaIndex:index,partIndex,timeline}=segmentInfo;const segmentLen=segments.length-1;let selection='mediaIndex/partIndex increment';if(segmentInfo.getMediaInfoForTime){selection=`getMediaInfoForTime (${segmentInfo.getMediaInfoForTime})`;}else if(segmentInfo.isSyncRequest){selection='getSyncSegmentCandidate (isSyncRequest)';}if(segmentInfo.independent){selection+=` with independent ${segmentInfo.independent}`;}const hasPartIndex=typeof partIndex==='number';const name=segmentInfo.segment.uri?'segment':'pre-segment';const zeroBasedPartCount=hasPartIndex?getKnownPartCount({preloadSegment:segment})-1:0;return`${name} [${seq+index}/${seq+segmentLen}]`+(hasPartIndex?` part [${partIndex}/${zeroBasedPartCount}]`:'')+` segment start/end [${segment.start} => ${segment.end}]`+(hasPartIndex?` part start/end [${part.start} => ${part.end}]`:'')+` startOfSegment [${startOfSegment}]`+` duration [${duration}]`+` timeline [${timeline}]`+` selected by [${selection}]`+` playlist [${id}]`;};const timingInfoPropertyForMedia=mediaType=>`${mediaType}TimingInfo`;/**\n * Returns the timestamp offset to use for the segment.\n *\n * @param {number} segmentTimeline\n *        The timeline of the segment\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} startOfSegment\n *        The estimated segment start\n * @param {TimeRange[]} buffered\n *        The loader's buffer\n * @param {boolean} overrideCheck\n *        If true, no checks are made to see if the timestamp offset value should be set,\n *        but sets it directly to a value.\n *\n * @return {number|null}\n *         Either a number representing a new timestamp offset, or null if the segment is\n *         part of the same timeline\n */const timestampOffsetForSegment=({segmentTimeline,currentTimeline,startOfSegment,buffered,overrideCheck})=>{// Check to see if we are crossing a discontinuity to see if we need to set the\n// timestamp offset on the transmuxer and source buffer.\n//\n// Previously, we changed the timestampOffset if the start of this segment was less than\n// the currently set timestampOffset, but this isn't desirable as it can produce bad\n// behavior, especially around long running live streams.\nif(!overrideCheck&&segmentTimeline===currentTimeline){return null;}// When changing renditions, it's possible to request a segment on an older timeline. For\n// instance, given two renditions with the following:\n//\n// #EXTINF:10\n// segment1\n// #EXT-X-DISCONTINUITY\n// #EXTINF:10\n// segment2\n// #EXTINF:10\n// segment3\n//\n// And the current player state:\n//\n// current time: 8\n// buffer: 0 => 20\n//\n// The next segment on the current rendition would be segment3, filling the buffer from\n// 20s onwards. However, if a rendition switch happens after segment2 was requested,\n// then the next segment to be requested will be segment1 from the new rendition in\n// order to fill time 8 and onwards. Using the buffered end would result in repeated\n// content (since it would position segment1 of the new rendition starting at 20s). This\n// case can be identified when the new segment's timeline is a prior value. Instead of\n// using the buffered end, the startOfSegment can be used, which, hopefully, will be\n// more accurate to the actual start time of the segment.\nif(segmentTimeline<currentTimeline){return startOfSegment;}// segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n// value uses the end of the last segment if it is available. While this value\n// should often be correct, it's better to rely on the buffered end, as the new\n// content post discontinuity should line up with the buffered end as if it were\n// time 0 for the new content.\nreturn buffered.length?buffered.end(buffered.length-1):startOfSegment;};/**\n * Returns whether or not the loader should wait for a timeline change from the timeline\n * change controller before processing the segment.\n *\n * Primary timing in VHS goes by video. This is different from most media players, as\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\n * will continue to use video as the primary timing source, due to the current logic and\n * expectations built around it.\n\n * Since the timing follows video, in order to maintain sync, the video loader is\n * responsible for setting both audio and video source buffer timestamp offsets.\n *\n * Setting different values for audio and video source buffers could lead to\n * desyncing. The following examples demonstrate some of the situations where this\n * distinction is important. Note that all of these cases involve demuxed content. When\n * content is muxed, the audio and video are packaged together, therefore syncing\n * separate media playlists is not an issue.\n *\n * CASE 1: Audio prepares to load a new timeline before video:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:                     ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader              ^\n *\n * In the above example, the audio loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the video loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n * the audio loader must provide the audioAppendStart value to trim the content in the\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n * segment until that value is provided.\n *\n * CASE 2: Video prepares to load a new timeline before audio:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:             ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader                      ^\n *\n * In the above example, the video loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\n * segment is loaded and processed, both the video and audio timestamp offsets will be\n * set, since video is used as the primary timing source. This is to ensure content lines\n * up appropriately, as any modifications to the video timing are reflected by audio when\n * the video loader sets the audio and video timestamp offsets to the same value. However,\n * setting the timestamp offset for audio before audio has had a chance to change\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n *\n * CASE 3: When seeking, audio prepares to load a new timeline before video\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:           ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader            ^\n *\n * In the above example, both audio and video loaders are loading segments from timeline\n * 0, but imagine that the seek originated from timeline 1.\n *\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\n * must wait for the video loader to load its segment and update both the audio and video\n * timestamp offsets before it may load and append its own segment. This is the case\n * whether the seek results in a mismatched segment request (e.g., the audio loader\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n * loaders choose to load the same segment index from each playlist, as the segments may\n * not be aligned perfectly, even for matching segment indexes.\n *\n * @param {Object} timelinechangeController\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} segmentTimeline\n *        The timeline of the segment being loaded\n * @param {('main'|'audio')} loaderType\n *        The loader type\n * @param {boolean} audioDisabled\n *        Whether the audio is disabled for the loader. This should only be true when the\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\n *        the main loader when an alternate audio playlist is active.\n *\n * @return {boolean}\n *         Whether the loader should wait for a timeline change from the timeline change\n *         controller before processing the segment\n */const shouldWaitForTimelineChange=({timelineChangeController,currentTimeline,segmentTimeline,loaderType,audioDisabled})=>{if(currentTimeline===segmentTimeline){return false;}if(loaderType==='audio'){const lastMainTimelineChange=timelineChangeController.lastTimelineChange({type:'main'});// Audio loader should wait if:\n//\n// * main hasn't had a timeline change yet (thus has not loaded its first segment)\n// * main hasn't yet changed to the timeline audio is looking to load\nreturn!lastMainTimelineChange||lastMainTimelineChange.to!==segmentTimeline;}// The main loader only needs to wait for timeline changes if there's demuxed audio.\n// Otherwise, there's nothing to wait for, since audio would be muxed into the main\n// loader's segments (or the content is audio/video only and handled by the main\n// loader).\nif(loaderType==='main'&&audioDisabled){const pendingAudioTimelineChange=timelineChangeController.pendingTimelineChange({type:'audio'});// Main loader should wait for the audio loader if audio is not pending a timeline\n// change to the current timeline.\n//\n// Since the main loader is responsible for setting the timestamp offset for both\n// audio and video, the main loader must wait for audio to be about to change to its\n// timeline before setting the offset, otherwise, if audio is behind in loading,\n// segments from the previous timeline would be adjusted by the new timestamp offset.\n//\n// This requirement means that video will not cross a timeline until the audio is\n// about to cross to it, so that way audio and video will always cross the timeline\n// together.\n//\n// In addition to normal timeline changes, these rules also apply to the start of a\n// stream (going from a non-existent timeline, -1, to timeline 0). It's important\n// that these rules apply to the first timeline change because if they did not, it's\n// possible that the main loader will cross two timelines before the audio loader has\n// crossed one. Logic may be implemented to handle the startup as a special case, but\n// it's easier to simply treat all timeline changes the same.\nif(pendingAudioTimelineChange&&pendingAudioTimelineChange.to===segmentTimeline){return false;}return true;}return false;};const mediaDuration=timingInfos=>{let maxDuration=0;['video','audio'].forEach(function(type){const typeTimingInfo=timingInfos[`${type}TimingInfo`];if(!typeTimingInfo){return;}const{start,end}=typeTimingInfo;let duration;if(typeof start==='bigint'||typeof end==='bigint'){duration=window$1.BigInt(end)-window$1.BigInt(start);}else if(typeof start==='number'&&typeof end==='number'){duration=end-start;}if(typeof duration!=='undefined'&&duration>maxDuration){maxDuration=duration;}});// convert back to a number if it is lower than MAX_SAFE_INTEGER\n// as we only need BigInt when we are above that.\nif(typeof maxDuration==='bigint'&&maxDuration<Number.MAX_SAFE_INTEGER){maxDuration=Number(maxDuration);}return maxDuration;};const segmentTooLong=({segmentDuration,maxDuration})=>{// 0 duration segments are most likely due to metadata only segments or a lack of\n// information.\nif(!segmentDuration){return false;}// For HLS:\n//\n// https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n// The EXTINF duration of each Media Segment in the Playlist\n// file, when rounded to the nearest integer, MUST be less than or equal\n// to the target duration; longer segments can trigger playback stalls\n// or other errors.\n//\n// For DASH, the mpd-parser uses the largest reported segment duration as the target\n// duration. Although that reported duration is occasionally approximate (i.e., not\n// exact), a strict check may report that a segment is too long more often in DASH.\nreturn Math.round(segmentDuration)>maxDuration+TIME_FUDGE_FACTOR;};const getTroublesomeSegmentDurationMessage=(segmentInfo,sourceType)=>{// Right now we aren't following DASH's timing model exactly, so only perform\n// this check for HLS content.\nif(sourceType!=='hls'){return null;}const segmentDuration=mediaDuration({audioTimingInfo:segmentInfo.audioTimingInfo,videoTimingInfo:segmentInfo.videoTimingInfo});// Don't report if we lack information.\n//\n// If the segment has a duration of 0 it is either a lack of information or a\n// metadata only segment and shouldn't be reported here.\nif(!segmentDuration){return null;}const targetDuration=segmentInfo.playlist.targetDuration;const isSegmentWayTooLong=segmentTooLong({segmentDuration,maxDuration:targetDuration*2});const isSegmentSlightlyTooLong=segmentTooLong({segmentDuration,maxDuration:targetDuration});const segmentTooLongMessage=`Segment with index ${segmentInfo.mediaIndex} `+`from playlist ${segmentInfo.playlist.id} `+`has a duration of ${segmentDuration} `+`when the reported duration is ${segmentInfo.duration} `+`and the target duration is ${targetDuration}. `+'For HLS content, a duration in excess of the target duration may result in '+'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for '+'more details: '+'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';if(isSegmentWayTooLong||isSegmentSlightlyTooLong){return{severity:isSegmentWayTooLong?'warn':'info',message:segmentTooLongMessage};}return null;};/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */class SegmentLoader extends videojs.EventTarget{constructor(settings,options={}){super();// check pre-conditions\nif(!settings){throw new TypeError('Initialization settings are required');}if(typeof settings.currentTime!=='function'){throw new TypeError('No currentTime getter specified');}if(!settings.mediaSource){throw new TypeError('No MediaSource specified');}// public properties\nthis.bandwidth=settings.bandwidth;this.throughput={rate:0,count:0};this.roundTrip=NaN;this.resetStats_();this.mediaIndex=null;this.partIndex=null;// private settings\nthis.hasPlayed_=settings.hasPlayed;this.currentTime_=settings.currentTime;this.seekable_=settings.seekable;this.seeking_=settings.seeking;this.duration_=settings.duration;this.mediaSource_=settings.mediaSource;this.vhs_=settings.vhs;this.loaderType_=settings.loaderType;this.currentMediaInfo_=void 0;this.startingMediaInfo_=void 0;this.segmentMetadataTrack_=settings.segmentMetadataTrack;this.goalBufferLength_=settings.goalBufferLength;this.sourceType_=settings.sourceType;this.sourceUpdater_=settings.sourceUpdater;this.inbandTextTracks_=settings.inbandTextTracks;this.state_='INIT';this.timelineChangeController_=settings.timelineChangeController;this.shouldSaveSegmentTimingInfo_=true;this.parse708captions_=settings.parse708captions;this.useDtsForTimestampOffset_=settings.useDtsForTimestampOffset;this.captionServices_=settings.captionServices;this.exactManifestTimings=settings.exactManifestTimings;// private instance variables\nthis.checkBufferTimeout_=null;this.error_=void 0;this.currentTimeline_=-1;this.pendingSegment_=null;this.xhrOptions_=null;this.pendingSegments_=[];this.audioDisabled_=false;this.isPendingTimestampOffset_=false;// TODO possibly move gopBuffer and timeMapping info to a separate controller\nthis.gopBuffer_=[];this.timeMapping_=0;this.safeAppend_=videojs.browser.IE_VERSION>=11;this.appendInitSegment_={audio:true,video:true};this.playlistOfLastInitSegment_={audio:null,video:null};this.callQueue_=[];// If the segment loader prepares to load a segment, but does not have enough\n// information yet to start the loading process (e.g., if the audio loader wants to\n// load a segment from the next timeline but the main loader hasn't yet crossed that\n// timeline), then the load call will be added to the queue until it is ready to be\n// processed.\nthis.loadQueue_=[];this.metadataQueue_={id3:[],caption:[]};this.waitingOnRemove_=false;this.quotaExceededErrorRetryTimeout_=null;// Fragmented mp4 playback\nthis.activeInitSegmentId_=null;this.initSegments_={};// HLSe playback\nthis.cacheEncryptionKeys_=settings.cacheEncryptionKeys;this.keyCache_={};this.decrypter_=settings.decrypter;// Manages the tracking and generation of sync-points, mappings\n// between a time in the display time and a segment index within\n// a playlist\nthis.syncController_=settings.syncController;this.syncPoint_={segmentIndex:0,time:0};this.transmuxer_=this.createTransmuxer_();this.triggerSyncInfoUpdate_=()=>this.trigger('syncinfoupdate');this.syncController_.on('syncinfoupdate',this.triggerSyncInfoUpdate_);this.mediaSource_.addEventListener('sourceopen',()=>{if(!this.isEndOfStream_()){this.ended_=false;}});// ...for determining the fetch location\nthis.fetchAtBuffer_=false;this.logger_=logger(`SegmentLoader[${this.loaderType_}]`);Object.defineProperty(this,'state',{get(){return this.state_;},set(newState){if(newState!==this.state_){this.logger_(`${this.state_} -> ${newState}`);this.state_=newState;this.trigger('statechange');}}});this.sourceUpdater_.on('ready',()=>{if(this.hasEnoughInfoToAppend_()){this.processCallQueue_();}});// Only the main loader needs to listen for pending timeline changes, as the main\n// loader should wait for audio to be ready to change its timeline so that both main\n// and audio timelines change together. For more details, see the\n// shouldWaitForTimelineChange function.\nif(this.loaderType_==='main'){this.timelineChangeController_.on('pendingtimelinechange',()=>{if(this.hasEnoughInfoToAppend_()){this.processCallQueue_();}});}// The main loader only listens on pending timeline changes, but the audio loader,\n// since its loads follow main, needs to listen on timeline changes. For more details,\n// see the shouldWaitForTimelineChange function.\nif(this.loaderType_==='audio'){this.timelineChangeController_.on('timelinechange',()=>{if(this.hasEnoughInfoToLoad_()){this.processLoadQueue_();}if(this.hasEnoughInfoToAppend_()){this.processCallQueue_();}});}}createTransmuxer_(){return segmentTransmuxer.createTransmuxer({remux:false,alignGopsAtEnd:this.safeAppend_,keepOriginalTimestamps:true,parse708captions:this.parse708captions_,captionServices:this.captionServices_});}/**\n   * reset all of our media stats\n   *\n   * @private\n   */resetStats_(){this.mediaBytesTransferred=0;this.mediaRequests=0;this.mediaRequestsAborted=0;this.mediaRequestsTimedout=0;this.mediaRequestsErrored=0;this.mediaTransferDuration=0;this.mediaSecondsLoaded=0;this.mediaAppends=0;}/**\n   * dispose of the SegmentLoader and reset to the default state\n   */dispose(){this.trigger('dispose');this.state='DISPOSED';this.pause();this.abort_();if(this.transmuxer_){this.transmuxer_.terminate();}this.resetStats_();if(this.checkBufferTimeout_){window$1.clearTimeout(this.checkBufferTimeout_);}if(this.syncController_&&this.triggerSyncInfoUpdate_){this.syncController_.off('syncinfoupdate',this.triggerSyncInfoUpdate_);}this.off();}setAudio(enable){this.audioDisabled_=!enable;if(enable){this.appendInitSegment_.audio=true;}else{// remove current track audio if it gets disabled\nthis.sourceUpdater_.removeAudio(0,this.duration_());}}/**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */abort(){if(this.state!=='WAITING'){if(this.pendingSegment_){this.pendingSegment_=null;}return;}this.abort_();// We aborted the requests we were waiting on, so reset the loader's state to READY\n// since we are no longer \"waiting\" on any requests. XHR callback is not always run\n// when the request is aborted. This will prevent the loader from being stuck in the\n// WAITING state indefinitely.\nthis.state='READY';// don't wait for buffer check timeouts to begin fetching the\n// next segment\nif(!this.paused()){this.monitorBuffer_();}}/**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */abort_(){if(this.pendingSegment_&&this.pendingSegment_.abortRequests){this.pendingSegment_.abortRequests();}// clear out the segment being processed\nthis.pendingSegment_=null;this.callQueue_=[];this.loadQueue_=[];this.metadataQueue_.id3=[];this.metadataQueue_.caption=[];this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);this.waitingOnRemove_=false;window$1.clearTimeout(this.quotaExceededErrorRetryTimeout_);this.quotaExceededErrorRetryTimeout_=null;}checkForAbort_(requestId){// If the state is APPENDING, then aborts will not modify the state, meaning the first\n// callback that happens should reset the state to READY so that loading can continue.\nif(this.state==='APPENDING'&&!this.pendingSegment_){this.state='READY';return true;}if(!this.pendingSegment_||this.pendingSegment_.requestId!==requestId){return true;}return false;}/**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */error(error){if(typeof error!=='undefined'){this.logger_('error occurred:',error);this.error_=error;}this.pendingSegment_=null;return this.error_;}endOfStream(){this.ended_=true;if(this.transmuxer_){// need to clear out any cached data to prepare for the new segment\nsegmentTransmuxer.reset(this.transmuxer_);}this.gopBuffer_.length=0;this.pause();this.trigger('ended');}/**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */buffered_(){const trackInfo=this.getMediaInfo_();if(!this.sourceUpdater_||!trackInfo){return createTimeRanges();}if(this.loaderType_==='main'){const{hasAudio,hasVideo,isMuxed}=trackInfo;if(hasVideo&&hasAudio&&!this.audioDisabled_&&!isMuxed){return this.sourceUpdater_.buffered();}if(hasVideo){return this.sourceUpdater_.videoBuffered();}}// One case that can be ignored for now is audio only with alt audio,\n// as we don't yet have proper support for that.\nreturn this.sourceUpdater_.audioBuffered();}/**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */initSegmentForMap(map,set=false){if(!map){return null;}const id=initSegmentId(map);let storedMap=this.initSegments_[id];if(set&&!storedMap&&map.bytes){this.initSegments_[id]=storedMap={resolvedUri:map.resolvedUri,byterange:map.byterange,bytes:map.bytes,tracks:map.tracks,timescales:map.timescales};}return storedMap||map;}/**\n   * Gets and sets key for the provided key\n   *\n   * @param {Object} key\n   *        The key object representing the key to get or set\n   * @param {boolean=} set\n   *        If true, the key for the provided key should be saved\n   * @return {Object}\n   *         Key object for desired key\n   */segmentKey(key,set=false){if(!key){return null;}const id=segmentKeyId(key);let storedKey=this.keyCache_[id];// TODO: We should use the HTTP Expires header to invalidate our cache per\n// https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\nif(this.cacheEncryptionKeys_&&set&&!storedKey&&key.bytes){this.keyCache_[id]=storedKey={resolvedUri:key.resolvedUri,bytes:key.bytes};}const result={resolvedUri:(storedKey||key).resolvedUri};if(storedKey){result.bytes=storedKey.bytes;}return result;}/**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */couldBeginLoading_(){return this.playlist_&&!this.paused();}/**\n   * load a playlist and start to fill the buffer\n   */load(){// un-pause\nthis.monitorBuffer_();// if we don't have a playlist yet, keep waiting for one to be\n// specified\nif(!this.playlist_){return;}// if all the configuration is ready, initialize and begin loading\nif(this.state==='INIT'&&this.couldBeginLoading_()){return this.init_();}// if we're in the middle of processing a segment already, don't\n// kick off an additional segment request\nif(!this.couldBeginLoading_()||this.state!=='READY'&&this.state!=='INIT'){return;}this.state='READY';}/**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */init_(){this.state='READY';// if this is the audio segment loader, and it hasn't been inited before, then any old\n// audio data from the muxed content should be removed\nthis.resetEverything();return this.monitorBuffer_();}/**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */playlist(newPlaylist,options={}){if(!newPlaylist){return;}const oldPlaylist=this.playlist_;const segmentInfo=this.pendingSegment_;this.playlist_=newPlaylist;this.xhrOptions_=options;// when we haven't started playing yet, the start of a live playlist\n// is always our zero-time so force a sync update each time the playlist\n// is refreshed from the server\n//\n// Use the INIT state to determine if playback has started, as the playlist sync info\n// should be fixed once requests begin (as sync points are generated based on sync\n// info), but not before then.\nif(this.state==='INIT'){newPlaylist.syncInfo={mediaSequence:newPlaylist.mediaSequence,time:0};// Setting the date time mapping means mapping the program date time (if available)\n// to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n// purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n// be updated as the playlist is refreshed before the loader starts loading, the\n// program date time mapping needs to be updated as well.\n//\n// This mapping is only done for the main loader because a program date time should\n// map equivalently between playlists.\nif(this.loaderType_==='main'){this.syncController_.setDateTimeMappingForStart(newPlaylist);}}let oldId=null;if(oldPlaylist){if(oldPlaylist.id){oldId=oldPlaylist.id;}else if(oldPlaylist.uri){oldId=oldPlaylist.uri;}}this.logger_(`playlist update [${oldId} => ${newPlaylist.id||newPlaylist.uri}]`);// in VOD, this is always a rendition switch (or we updated our syncInfo above)\n// in LIVE, we always want to update with new playlists (including refreshes)\nthis.trigger('syncinfoupdate');// if we were unpaused but waiting for a playlist, start\n// buffering now\nif(this.state==='INIT'&&this.couldBeginLoading_()){return this.init_();}if(!oldPlaylist||oldPlaylist.uri!==newPlaylist.uri){if(this.mediaIndex!==null){// we must reset/resync the segment loader when we switch renditions and\n// the segment loader is already synced to the previous rendition\n// on playlist changes we want it to be possible to fetch\n// at the buffer for vod but not for live. So we use resetLoader\n// for live and resyncLoader for vod. We want this because\n// if a playlist uses independent and non-independent segments/parts the\n// buffer may not accurately reflect the next segment that we should try\n// downloading.\nif(!newPlaylist.endList){this.resetLoader();}else{this.resyncLoader();}}this.currentMediaInfo_=void 0;this.trigger('playlistupdate');// the rest of this function depends on `oldPlaylist` being defined\nreturn;}// we reloaded the same playlist so we are in a live scenario\n// and we will likely need to adjust the mediaIndex\nconst mediaSequenceDiff=newPlaylist.mediaSequence-oldPlaylist.mediaSequence;this.logger_(`live window shift [${mediaSequenceDiff}]`);// update the mediaIndex on the SegmentLoader\n// this is important because we can abort a request and this value must be\n// equal to the last appended mediaIndex\nif(this.mediaIndex!==null){this.mediaIndex-=mediaSequenceDiff;// this can happen if we are going to load the first segment, but get a playlist\n// update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n// new playlist was incremented by 1.\nif(this.mediaIndex<0){this.mediaIndex=null;this.partIndex=null;}else{const segment=this.playlist_.segments[this.mediaIndex];// partIndex should remain the same for the same segment\n// unless parts fell off of the playlist for this segment.\n// In that case we need to reset partIndex and resync\nif(this.partIndex&&(!segment.parts||!segment.parts.length||!segment.parts[this.partIndex])){const mediaIndex=this.mediaIndex;this.logger_(`currently processing part (index ${this.partIndex}) no longer exists.`);this.resetLoader();// We want to throw away the partIndex and the data associated with it,\n// as the part was dropped from our current playlists segment.\n// The mediaIndex will still be valid so keep that around.\nthis.mediaIndex=mediaIndex;}}}// update the mediaIndex on the SegmentInfo object\n// this is important because we will update this.mediaIndex with this value\n// in `handleAppendsDone_` after the segment has been successfully appended\nif(segmentInfo){segmentInfo.mediaIndex-=mediaSequenceDiff;if(segmentInfo.mediaIndex<0){segmentInfo.mediaIndex=null;segmentInfo.partIndex=null;}else{// we need to update the referenced segment so that timing information is\n// saved for the new playlist's segment, however, if the segment fell off the\n// playlist, we can leave the old reference and just lose the timing info\nif(segmentInfo.mediaIndex>=0){segmentInfo.segment=newPlaylist.segments[segmentInfo.mediaIndex];}if(segmentInfo.partIndex>=0&&segmentInfo.segment.parts){segmentInfo.part=segmentInfo.segment.parts[segmentInfo.partIndex];}}}this.syncController_.saveExpiredSegmentInfo(oldPlaylist,newPlaylist);}/**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */pause(){if(this.checkBufferTimeout_){window$1.clearTimeout(this.checkBufferTimeout_);this.checkBufferTimeout_=null;}}/**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */paused(){return this.checkBufferTimeout_===null;}/**\n   * Delete all the buffered data and reset the SegmentLoader\n   *\n   * @param {Function} [done] an optional callback to be executed when the remove\n   * operation is complete\n   */resetEverything(done){this.ended_=false;this.appendInitSegment_={audio:true,video:true};this.resetLoader();// remove from 0, the earliest point, to Infinity, to signify removal of everything.\n// VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n// we then clamp the value to duration if necessary.\nthis.remove(0,Infinity,done);// clears fmp4 captions\nif(this.transmuxer_){this.transmuxer_.postMessage({action:'clearAllMp4Captions'});// reset the cache in the transmuxer\nthis.transmuxer_.postMessage({action:'reset'});}}/**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */resetLoader(){this.fetchAtBuffer_=false;this.resyncLoader();}/**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */resyncLoader(){if(this.transmuxer_){// need to clear out any cached data to prepare for the new segment\nsegmentTransmuxer.reset(this.transmuxer_);}this.mediaIndex=null;this.partIndex=null;this.syncPoint_=null;this.isPendingTimestampOffset_=false;this.callQueue_=[];this.loadQueue_=[];this.metadataQueue_.id3=[];this.metadataQueue_.caption=[];this.abort();if(this.transmuxer_){this.transmuxer_.postMessage({action:'clearParsedMp4Captions'});}}/**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   * @param {Function} [done] - an optional callback to be executed when the remove\n   * @param {boolean} force - force all remove operations to happen\n   * operation is complete\n   */remove(start,end,done=()=>{},force=false){// clamp end to duration if we need to remove everything.\n// This is due to a browser bug that causes issues if we remove to Infinity.\n// videojs/videojs-contrib-hls#1225\nif(end===Infinity){end=this.duration_();}// skip removes that would throw an error\n// commonly happens during a rendition switch at the start of a video\n// from start 0 to end 0\nif(end<=start){this.logger_('skipping remove because end ${end} is <= start ${start}');return;}if(!this.sourceUpdater_||!this.getMediaInfo_()){this.logger_('skipping remove because no source updater or starting media info');// nothing to remove if we haven't processed any media\nreturn;}// set it to one to complete this function's removes\nlet removesRemaining=1;const removeFinished=()=>{removesRemaining--;if(removesRemaining===0){done();}};if(force||!this.audioDisabled_){removesRemaining++;this.sourceUpdater_.removeAudio(start,end,removeFinished);}// While it would be better to only remove video if the main loader has video, this\n// should be safe with audio only as removeVideo will call back even if there's no\n// video buffer.\n//\n// In theory we can check to see if there's video before calling the remove, but in\n// the event that we're switching between renditions and from video to audio only\n// (when we add support for that), we may need to clear the video contents despite\n// what the new media will contain.\nif(force||this.loaderType_==='main'){this.gopBuffer_=removeGopBuffer(this.gopBuffer_,start,end,this.timeMapping_);removesRemaining++;this.sourceUpdater_.removeVideo(start,end,removeFinished);}// remove any captions and ID3 tags\nfor(const track in this.inbandTextTracks_){removeCuesFromTrack(start,end,this.inbandTextTracks_[track]);}removeCuesFromTrack(start,end,this.segmentMetadataTrack_);// finished this function's removes\nremoveFinished();}/**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */monitorBuffer_(){if(this.checkBufferTimeout_){window$1.clearTimeout(this.checkBufferTimeout_);}this.checkBufferTimeout_=window$1.setTimeout(this.monitorBufferTick_.bind(this),1);}/**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */monitorBufferTick_(){if(this.state==='READY'){this.fillBuffer_();}if(this.checkBufferTimeout_){window$1.clearTimeout(this.checkBufferTimeout_);}this.checkBufferTimeout_=window$1.setTimeout(this.monitorBufferTick_.bind(this),CHECK_BUFFER_DELAY);}/**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */fillBuffer_(){// TODO since the source buffer maintains a queue, and we shouldn't call this function\n// except when we're ready for the next segment, this check can most likely be removed\nif(this.sourceUpdater_.updating()){return;}// see if we need to begin loading immediately\nconst segmentInfo=this.chooseNextRequest_();if(!segmentInfo){return;}if(typeof segmentInfo.timestampOffset==='number'){this.isPendingTimestampOffset_=false;this.timelineChangeController_.pendingTimelineChange({type:this.loaderType_,from:this.currentTimeline_,to:segmentInfo.timeline});}this.loadSegment_(segmentInfo);}/**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {number} [mediaIndex] the media index of segment we last appended\n   * @param {Object} [playlist] a media playlist object\n   * @return {boolean} do we need to call endOfStream on the MediaSource\n   */isEndOfStream_(mediaIndex=this.mediaIndex,playlist=this.playlist_,partIndex=this.partIndex){if(!playlist||!this.mediaSource_){return false;}const segment=typeof mediaIndex==='number'&&playlist.segments[mediaIndex];// mediaIndex is zero based but length is 1 based\nconst appendedLastSegment=mediaIndex+1===playlist.segments.length;// true if there are no parts, or this is the last part.\nconst appendedLastPart=!segment||!segment.parts||partIndex+1===segment.parts.length;// if we've buffered to the end of the video, we need to call endOfStream\n// so that MediaSources can trigger the `ended` event when it runs out of\n// buffered data instead of waiting for me\nreturn playlist.endList&&this.mediaSource_.readyState==='open'&&appendedLastSegment&&appendedLastPart;}/**\n   * Determines what request should be made given current segment loader state.\n   *\n   * @return {Object} a request object that describes the segment/part to load\n   */chooseNextRequest_(){const buffered=this.buffered_();const bufferedEnd=lastBufferedEnd(buffered)||0;const bufferedTime=timeAheadOf(buffered,this.currentTime_());const preloaded=!this.hasPlayed_()&&bufferedTime>=1;const haveEnoughBuffer=bufferedTime>=this.goalBufferLength_();const segments=this.playlist_.segments;// return no segment if:\n// 1. we don't have segments\n// 2. The video has not yet played and we already downloaded a segment\n// 3. we already have enough buffered time\nif(!segments.length||preloaded||haveEnoughBuffer){return null;}this.syncPoint_=this.syncPoint_||this.syncController_.getSyncPoint(this.playlist_,this.duration_(),this.currentTimeline_,this.currentTime_());const next={partIndex:null,mediaIndex:null,startOfSegment:null,playlist:this.playlist_,isSyncRequest:Boolean(!this.syncPoint_)};if(next.isSyncRequest){next.mediaIndex=getSyncSegmentCandidate(this.currentTimeline_,segments,bufferedEnd);}else if(this.mediaIndex!==null){const segment=segments[this.mediaIndex];const partIndex=typeof this.partIndex==='number'?this.partIndex:-1;next.startOfSegment=segment.end?segment.end:bufferedEnd;if(segment.parts&&segment.parts[partIndex+1]){next.mediaIndex=this.mediaIndex;next.partIndex=partIndex+1;}else{next.mediaIndex=this.mediaIndex+1;}}else{// Find the segment containing the end of the buffer or current time.\nconst{segmentIndex,startTime,partIndex}=Playlist.getMediaInfoForTime({exactManifestTimings:this.exactManifestTimings,playlist:this.playlist_,currentTime:this.fetchAtBuffer_?bufferedEnd:this.currentTime_(),startingPartIndex:this.syncPoint_.partIndex,startingSegmentIndex:this.syncPoint_.segmentIndex,startTime:this.syncPoint_.time});next.getMediaInfoForTime=this.fetchAtBuffer_?`bufferedEnd ${bufferedEnd}`:`currentTime ${this.currentTime_()}`;next.mediaIndex=segmentIndex;next.startOfSegment=startTime;next.partIndex=partIndex;}const nextSegment=segments[next.mediaIndex];let nextPart=nextSegment&&typeof next.partIndex==='number'&&nextSegment.parts&&nextSegment.parts[next.partIndex];// if the next segment index is invalid or\n// the next partIndex is invalid do not choose a next segment.\nif(!nextSegment||typeof next.partIndex==='number'&&!nextPart){return null;}// if the next segment has parts, and we don't have a partIndex.\n// Set partIndex to 0\nif(typeof next.partIndex!=='number'&&nextSegment.parts){next.partIndex=0;nextPart=nextSegment.parts[0];}// if we have no buffered data then we need to make sure\n// that the next part we append is \"independent\" if possible.\n// So we check if the previous part is independent, and request\n// it if it is.\nif(!bufferedTime&&nextPart&&!nextPart.independent){if(next.partIndex===0){const lastSegment=segments[next.mediaIndex-1];const lastSegmentLastPart=lastSegment.parts&&lastSegment.parts.length&&lastSegment.parts[lastSegment.parts.length-1];if(lastSegmentLastPart&&lastSegmentLastPart.independent){next.mediaIndex-=1;next.partIndex=lastSegment.parts.length-1;next.independent='previous segment';}}else if(nextSegment.parts[next.partIndex-1].independent){next.partIndex-=1;next.independent='previous part';}}const ended=this.mediaSource_&&this.mediaSource_.readyState==='ended';// do not choose a next segment if all of the following:\n// 1. this is the last segment in the playlist\n// 2. end of stream has been called on the media source already\n// 3. the player is not seeking\nif(next.mediaIndex>=segments.length-1&&ended&&!this.seeking_()){return null;}return this.generateSegmentInfo_(next);}generateSegmentInfo_(options){const{independent,playlist,mediaIndex,startOfSegment,isSyncRequest,partIndex,forceTimestampOffset,getMediaInfoForTime}=options;const segment=playlist.segments[mediaIndex];const part=typeof partIndex==='number'&&segment.parts[partIndex];const segmentInfo={requestId:'segment-loader-'+Math.random(),// resolve the segment URL relative to the playlist\nuri:part&&part.resolvedUri||segment.resolvedUri,// the segment's mediaIndex at the time it was requested\nmediaIndex,partIndex:part?partIndex:null,// whether or not to update the SegmentLoader's state with this\n// segment's mediaIndex\nisSyncRequest,startOfSegment,// the segment's playlist\nplaylist,// unencrypted bytes of the segment\nbytes:null,// when a key is defined for this segment, the encrypted bytes\nencryptedBytes:null,// The target timestampOffset for this segment when we append it\n// to the source buffer\ntimestampOffset:null,// The timeline that the segment is in\ntimeline:segment.timeline,// The expected duration of the segment in seconds\nduration:part&&part.duration||segment.duration,// retain the segment in case the playlist updates while doing an async process\nsegment,part,byteLength:0,transmuxer:this.transmuxer_,// type of getMediaInfoForTime that was used to get this segment\ngetMediaInfoForTime,independent};const overrideCheck=typeof forceTimestampOffset!=='undefined'?forceTimestampOffset:this.isPendingTimestampOffset_;segmentInfo.timestampOffset=this.timestampOffsetForSegment_({segmentTimeline:segment.timeline,currentTimeline:this.currentTimeline_,startOfSegment,buffered:this.buffered_(),overrideCheck});const audioBufferedEnd=lastBufferedEnd(this.sourceUpdater_.audioBuffered());if(typeof audioBufferedEnd==='number'){// since the transmuxer is using the actual timing values, but the buffer is\n// adjusted by the timestamp offset, we must adjust the value here\nsegmentInfo.audioAppendStart=audioBufferedEnd-this.sourceUpdater_.audioTimestampOffset();}if(this.sourceUpdater_.videoBuffered().length){segmentInfo.gopsToAlignWith=gopsSafeToAlignWith(this.gopBuffer_,// since the transmuxer is using the actual timing values, but the time is\n// adjusted by the timestmap offset, we must adjust the value here\nthis.currentTime_()-this.sourceUpdater_.videoTimestampOffset(),this.timeMapping_);}return segmentInfo;}// get the timestampoffset for a segment,\n// added so that vtt segment loader can override and prevent\n// adding timestamp offsets.\ntimestampOffsetForSegment_(options){return timestampOffsetForSegment(options);}/**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @private\n   */earlyAbortWhenNeeded_(stats){if(this.vhs_.tech_.paused()||// Don't abort if the current playlist is on the lowestEnabledRendition\n// TODO: Replace using timeout with a boolean indicating whether this playlist is\n//       the lowestEnabledRendition.\n!this.xhrOptions_.timeout||// Don't abort if we have no bandwidth information to estimate segment sizes\n!this.playlist_.attributes.BANDWIDTH){return;}// Wait at least 1 second since the first byte of data has been received before\n// using the calculated bandwidth from the progress event to allow the bitrate\n// to stabilize\nif(Date.now()-(stats.firstBytesReceivedAt||Date.now())<1000){return;}const currentTime=this.currentTime_();const measuredBandwidth=stats.bandwidth;const segmentDuration=this.pendingSegment_.duration;const requestTimeRemaining=Playlist.estimateSegmentRequestTime(segmentDuration,measuredBandwidth,this.playlist_,stats.bytesReceived);// Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n// if we are only left with less than 1 second when the request completes.\n// A negative timeUntilRebuffering indicates we are already rebuffering\nconst timeUntilRebuffer$1=timeUntilRebuffer(this.buffered_(),currentTime,this.vhs_.tech_.playbackRate())-1;// Only consider aborting early if the estimated time to finish the download\n// is larger than the estimated time until the player runs out of forward buffer\nif(requestTimeRemaining<=timeUntilRebuffer$1){return;}const switchCandidate=minRebufferMaxBandwidthSelector({main:this.vhs_.playlists.main,currentTime,bandwidth:measuredBandwidth,duration:this.duration_(),segmentDuration,timeUntilRebuffer:timeUntilRebuffer$1,currentTimeline:this.currentTimeline_,syncController:this.syncController_});if(!switchCandidate){return;}const rebufferingImpact=requestTimeRemaining-timeUntilRebuffer$1;const timeSavedBySwitching=rebufferingImpact-switchCandidate.rebufferingImpact;let minimumTimeSaving=0.5;// If we are already rebuffering, increase the amount of variance we add to the\n// potential round trip time of the new request so that we are not too aggressive\n// with switching to a playlist that might save us a fraction of a second.\nif(timeUntilRebuffer$1<=TIME_FUDGE_FACTOR){minimumTimeSaving=1;}if(!switchCandidate.playlist||switchCandidate.playlist.uri===this.playlist_.uri||timeSavedBySwitching<minimumTimeSaving){return;}// set the bandwidth to that of the desired playlist being sure to scale by\n// BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n// don't trigger a bandwidthupdate as the bandwidth is artifial\nthis.bandwidth=switchCandidate.playlist.attributes.BANDWIDTH*Config.BANDWIDTH_VARIANCE+1;this.trigger('earlyabort');}handleAbort_(segmentInfo){this.logger_(`Aborting ${segmentInfoString(segmentInfo)}`);this.mediaRequestsAborted+=1;}/**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */handleProgress_(event,simpleSegment){this.earlyAbortWhenNeeded_(simpleSegment.stats);if(this.checkForAbort_(simpleSegment.requestId)){return;}this.trigger('progress');}handleTrackInfo_(simpleSegment,trackInfo){this.earlyAbortWhenNeeded_(simpleSegment.stats);if(this.checkForAbort_(simpleSegment.requestId)){return;}if(this.checkForIllegalMediaSwitch(trackInfo)){return;}trackInfo=trackInfo||{};// When we have track info, determine what media types this loader is dealing with.\n// Guard against cases where we're not getting track info at all until we are\n// certain that all streams will provide it.\nif(!shallowEqual(this.currentMediaInfo_,trackInfo)){this.appendInitSegment_={audio:true,video:true};this.startingMediaInfo_=trackInfo;this.currentMediaInfo_=trackInfo;this.logger_('trackinfo update',trackInfo);this.trigger('trackinfo');}// trackinfo may cause an abort if the trackinfo\n// causes a codec change to an unsupported codec.\nif(this.checkForAbort_(simpleSegment.requestId)){return;}// set trackinfo on the pending segment so that\n// it can append.\nthis.pendingSegment_.trackInfo=trackInfo;// check if any calls were waiting on the track info\nif(this.hasEnoughInfoToAppend_()){this.processCallQueue_();}}handleTimingInfo_(simpleSegment,mediaType,timeType,time){this.earlyAbortWhenNeeded_(simpleSegment.stats);if(this.checkForAbort_(simpleSegment.requestId)){return;}const segmentInfo=this.pendingSegment_;const timingInfoProperty=timingInfoPropertyForMedia(mediaType);segmentInfo[timingInfoProperty]=segmentInfo[timingInfoProperty]||{};segmentInfo[timingInfoProperty][timeType]=time;this.logger_(`timinginfo: ${mediaType} - ${timeType} - ${time}`);// check if any calls were waiting on the timing info\nif(this.hasEnoughInfoToAppend_()){this.processCallQueue_();}}handleCaptions_(simpleSegment,captionData){this.earlyAbortWhenNeeded_(simpleSegment.stats);if(this.checkForAbort_(simpleSegment.requestId)){return;}// This could only happen with fmp4 segments, but\n// should still not happen in general\nif(captionData.length===0){this.logger_('SegmentLoader received no captions from a caption event');return;}const segmentInfo=this.pendingSegment_;// Wait until we have some video data so that caption timing\n// can be adjusted by the timestamp offset\nif(!segmentInfo.hasAppendedData_){this.metadataQueue_.caption.push(this.handleCaptions_.bind(this,simpleSegment,captionData));return;}const timestampOffset=this.sourceUpdater_.videoTimestampOffset()===null?this.sourceUpdater_.audioTimestampOffset():this.sourceUpdater_.videoTimestampOffset();const captionTracks={};// get total start/end and captions for each track/stream\ncaptionData.forEach(caption=>{// caption.stream is actually a track name...\n// set to the existing values in tracks or default values\ncaptionTracks[caption.stream]=captionTracks[caption.stream]||{// Infinity, as any other value will be less than this\nstartTime:Infinity,captions:[],// 0 as an other value will be more than this\nendTime:0};const captionTrack=captionTracks[caption.stream];captionTrack.startTime=Math.min(captionTrack.startTime,caption.startTime+timestampOffset);captionTrack.endTime=Math.max(captionTrack.endTime,caption.endTime+timestampOffset);captionTrack.captions.push(caption);});Object.keys(captionTracks).forEach(trackName=>{const{startTime,endTime,captions}=captionTracks[trackName];const inbandTextTracks=this.inbandTextTracks_;this.logger_(`adding cues from ${startTime} -> ${endTime} for ${trackName}`);createCaptionsTrackIfNotExists(inbandTextTracks,this.vhs_.tech_,trackName);// clear out any cues that start and end at the same time period for the same track.\n// We do this because a rendition change that also changes the timescale for captions\n// will result in captions being re-parsed for certain segments. If we add them again\n// without clearing we will have two of the same captions visible.\nremoveCuesFromTrack(startTime,endTime,inbandTextTracks[trackName]);addCaptionData({captionArray:captions,inbandTextTracks,timestampOffset});});// Reset stored captions since we added parsed\n// captions to a text track at this point\nif(this.transmuxer_){this.transmuxer_.postMessage({action:'clearParsedMp4Captions'});}}handleId3_(simpleSegment,id3Frames,dispatchType){this.earlyAbortWhenNeeded_(simpleSegment.stats);if(this.checkForAbort_(simpleSegment.requestId)){return;}const segmentInfo=this.pendingSegment_;// we need to have appended data in order for the timestamp offset to be set\nif(!segmentInfo.hasAppendedData_){this.metadataQueue_.id3.push(this.handleId3_.bind(this,simpleSegment,id3Frames,dispatchType));return;}const timestampOffset=this.sourceUpdater_.videoTimestampOffset()===null?this.sourceUpdater_.audioTimestampOffset():this.sourceUpdater_.videoTimestampOffset();// There's potentially an issue where we could double add metadata if there's a muxed\n// audio/video source with a metadata track, and an alt audio with a metadata track.\n// However, this probably won't happen, and if it does it can be handled then.\ncreateMetadataTrackIfNotExists(this.inbandTextTracks_,dispatchType,this.vhs_.tech_);addMetadata({inbandTextTracks:this.inbandTextTracks_,metadataArray:id3Frames,timestampOffset,videoDuration:this.duration_()});}processMetadataQueue_(){this.metadataQueue_.id3.forEach(fn=>fn());this.metadataQueue_.caption.forEach(fn=>fn());this.metadataQueue_.id3=[];this.metadataQueue_.caption=[];}processCallQueue_(){const callQueue=this.callQueue_;// Clear out the queue before the queued functions are run, since some of the\n// functions may check the length of the load queue and default to pushing themselves\n// back onto the queue.\nthis.callQueue_=[];callQueue.forEach(fun=>fun());}processLoadQueue_(){const loadQueue=this.loadQueue_;// Clear out the queue before the queued functions are run, since some of the\n// functions may check the length of the load queue and default to pushing themselves\n// back onto the queue.\nthis.loadQueue_=[];loadQueue.forEach(fun=>fun());}/**\n   * Determines whether the loader has enough info to load the next segment.\n   *\n   * @return {boolean}\n   *         Whether or not the loader has enough info to load the next segment\n   */hasEnoughInfoToLoad_(){// Since primary timing goes by video, only the audio loader potentially needs to wait\n// to load.\nif(this.loaderType_!=='audio'){return true;}const segmentInfo=this.pendingSegment_;// A fill buffer must have already run to establish a pending segment before there's\n// enough info to load.\nif(!segmentInfo){return false;}// The first segment can and should be loaded immediately so that source buffers are\n// created together (before appending). Source buffer creation uses the presence of\n// audio and video data to determine whether to create audio/video source buffers, and\n// uses processed (transmuxed or parsed) media to determine the types required.\nif(!this.getCurrentMediaInfo_()){return true;}if(// Technically, instead of waiting to load a segment on timeline changes, a segment\n// can be requested and downloaded and only wait before it is transmuxed or parsed.\n// But in practice, there are a few reasons why it is better to wait until a loader\n// is ready to append that segment before requesting and downloading:\n//\n// 1. Because audio and main loaders cross discontinuities together, if this loader\n//    is waiting for the other to catch up, then instead of requesting another\n//    segment and using up more bandwidth, by not yet loading, more bandwidth is\n//    allotted to the loader currently behind.\n// 2. media-segment-request doesn't have to have logic to consider whether a segment\n// is ready to be processed or not, isolating the queueing behavior to the loader.\n// 3. The audio loader bases some of its segment properties on timing information\n//    provided by the main loader, meaning that, if the logic for waiting on\n//    processing was in media-segment-request, then it would also need to know how\n//    to re-generate the segment information after the main loader caught up.\nshouldWaitForTimelineChange({timelineChangeController:this.timelineChangeController_,currentTimeline:this.currentTimeline_,segmentTimeline:segmentInfo.timeline,loaderType:this.loaderType_,audioDisabled:this.audioDisabled_})){return false;}return true;}getCurrentMediaInfo_(segmentInfo=this.pendingSegment_){return segmentInfo&&segmentInfo.trackInfo||this.currentMediaInfo_;}getMediaInfo_(segmentInfo=this.pendingSegment_){return this.getCurrentMediaInfo_(segmentInfo)||this.startingMediaInfo_;}hasEnoughInfoToAppend_(){if(!this.sourceUpdater_.ready()){return false;}// If content needs to be removed or the loader is waiting on an append reattempt,\n// then no additional content should be appended until the prior append is resolved.\nif(this.waitingOnRemove_||this.quotaExceededErrorRetryTimeout_){return false;}const segmentInfo=this.pendingSegment_;const trackInfo=this.getCurrentMediaInfo_();// no segment to append any data for or\n// we do not have information on this specific\n// segment yet\nif(!segmentInfo||!trackInfo){return false;}const{hasAudio,hasVideo,isMuxed}=trackInfo;if(hasVideo&&!segmentInfo.videoTimingInfo){return false;}// muxed content only relies on video timing information for now.\nif(hasAudio&&!this.audioDisabled_&&!isMuxed&&!segmentInfo.audioTimingInfo){return false;}if(shouldWaitForTimelineChange({timelineChangeController:this.timelineChangeController_,currentTimeline:this.currentTimeline_,segmentTimeline:segmentInfo.timeline,loaderType:this.loaderType_,audioDisabled:this.audioDisabled_})){return false;}return true;}handleData_(simpleSegment,result){this.earlyAbortWhenNeeded_(simpleSegment.stats);if(this.checkForAbort_(simpleSegment.requestId)){return;}// If there's anything in the call queue, then this data came later and should be\n// executed after the calls currently queued.\nif(this.callQueue_.length||!this.hasEnoughInfoToAppend_()){this.callQueue_.push(this.handleData_.bind(this,simpleSegment,result));return;}const segmentInfo=this.pendingSegment_;// update the time mapping so we can translate from display time to media time\nthis.setTimeMapping_(segmentInfo.timeline);// for tracking overall stats\nthis.updateMediaSecondsLoaded_(segmentInfo.part||segmentInfo.segment);// Note that the state isn't changed from loading to appending. This is because abort\n// logic may change behavior depending on the state, and changing state too early may\n// inflate our estimates of bandwidth. In the future this should be re-examined to\n// note more granular states.\n// don't process and append data if the mediaSource is closed\nif(this.mediaSource_.readyState==='closed'){return;}// if this request included an initialization segment, save that data\n// to the initSegment cache\nif(simpleSegment.map){simpleSegment.map=this.initSegmentForMap(simpleSegment.map,true);// move over init segment properties to media request\nsegmentInfo.segment.map=simpleSegment.map;}// if this request included a segment key, save that data in the cache\nif(simpleSegment.key){this.segmentKey(simpleSegment.key,true);}segmentInfo.isFmp4=simpleSegment.isFmp4;segmentInfo.timingInfo=segmentInfo.timingInfo||{};if(segmentInfo.isFmp4){this.trigger('fmp4');segmentInfo.timingInfo.start=segmentInfo[timingInfoPropertyForMedia(result.type)].start;}else{const trackInfo=this.getCurrentMediaInfo_();const useVideoTimingInfo=this.loaderType_==='main'&&trackInfo&&trackInfo.hasVideo;let firstVideoFrameTimeForData;if(useVideoTimingInfo){firstVideoFrameTimeForData=segmentInfo.videoTimingInfo.start;}// Segment loader knows more about segment timing than the transmuxer (in certain\n// aspects), so make any changes required for a more accurate start time.\n// Don't set the end time yet, as the segment may not be finished processing.\nsegmentInfo.timingInfo.start=this.trueSegmentStart_({currentStart:segmentInfo.timingInfo.start,playlist:segmentInfo.playlist,mediaIndex:segmentInfo.mediaIndex,currentVideoTimestampOffset:this.sourceUpdater_.videoTimestampOffset(),useVideoTimingInfo,firstVideoFrameTimeForData,videoTimingInfo:segmentInfo.videoTimingInfo,audioTimingInfo:segmentInfo.audioTimingInfo});}// Init segments for audio and video only need to be appended in certain cases. Now\n// that data is about to be appended, we can check the final cases to determine\n// whether we should append an init segment.\nthis.updateAppendInitSegmentStatus(segmentInfo,result.type);// Timestamp offset should be updated once we get new data and have its timing info,\n// as we use the start of the segment to offset the best guess (playlist provided)\n// timestamp offset.\nthis.updateSourceBufferTimestampOffset_(segmentInfo);// if this is a sync request we need to determine whether it should\n// be appended or not.\nif(segmentInfo.isSyncRequest){// first save/update our timing info for this segment.\n// this is what allows us to choose an accurate segment\n// and the main reason we make a sync request.\nthis.updateTimingInfoEnd_(segmentInfo);this.syncController_.saveSegmentTimingInfo({segmentInfo,shouldSaveTimelineMapping:this.loaderType_==='main'});const next=this.chooseNextRequest_();// If the sync request isn't the segment that would be requested next\n// after taking into account its timing info, do not append it.\nif(next.mediaIndex!==segmentInfo.mediaIndex||next.partIndex!==segmentInfo.partIndex){this.logger_('sync segment was incorrect, not appending');return;}// otherwise append it like any other segment as our guess was correct.\nthis.logger_('sync segment was correct, appending');}// Save some state so that in the future anything waiting on first append (and/or\n// timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n// we need some notion of whether the timestamp offset or other relevant information\n// has had a chance to be set.\nsegmentInfo.hasAppendedData_=true;// Now that the timestamp offset should be set, we can append any waiting ID3 tags.\nthis.processMetadataQueue_();this.appendData_(segmentInfo,result);}updateAppendInitSegmentStatus(segmentInfo,type){// alt audio doesn't manage timestamp offset\nif(this.loaderType_==='main'&&typeof segmentInfo.timestampOffset==='number'&&// in the case that we're handling partial data, we don't want to append an init\n// segment for each chunk\n!segmentInfo.changedTimestampOffset){// if the timestamp offset changed, the timeline may have changed, so we have to re-\n// append init segments\nthis.appendInitSegment_={audio:true,video:true};}if(this.playlistOfLastInitSegment_[type]!==segmentInfo.playlist){// make sure we append init segment on playlist changes, in case the media config\n// changed\nthis.appendInitSegment_[type]=true;}}getInitSegmentAndUpdateState_({type,initSegment,map,playlist}){// \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n// (Section 3) required to parse the applicable Media Segments.  It applies to every\n// Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n// or until the end of the playlist.\"\n// https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\nif(map){const id=initSegmentId(map);if(this.activeInitSegmentId_===id){// don't need to re-append the init segment if the ID matches\nreturn null;}// a map-specified init segment takes priority over any transmuxed (or otherwise\n// obtained) init segment\n//\n// this also caches the init segment for later use\ninitSegment=this.initSegmentForMap(map,true).bytes;this.activeInitSegmentId_=id;}// We used to always prepend init segments for video, however, that shouldn't be\n// necessary. Instead, we should only append on changes, similar to what we've always\n// done for audio. This is more important (though may not be that important) for\n// frame-by-frame appending for LHLS, simply because of the increased quantity of\n// appends.\nif(initSegment&&this.appendInitSegment_[type]){// Make sure we track the playlist that we last used for the init segment, so that\n// we can re-append the init segment in the event that we get data from a new\n// playlist. Discontinuities and track changes are handled in other sections.\nthis.playlistOfLastInitSegment_[type]=playlist;// Disable future init segment appends for this type. Until a change is necessary.\nthis.appendInitSegment_[type]=false;// we need to clear out the fmp4 active init segment id, since\n// we are appending the muxer init segment\nthis.activeInitSegmentId_=null;return initSegment;}return null;}handleQuotaExceededError_({segmentInfo,type,bytes},error){const audioBuffered=this.sourceUpdater_.audioBuffered();const videoBuffered=this.sourceUpdater_.videoBuffered();// For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n// should be cleared out during the buffer removals. However, log in case it helps\n// debug.\nif(audioBuffered.length>1){this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: '+timeRangesToArray(audioBuffered).join(', '));}if(videoBuffered.length>1){this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: '+timeRangesToArray(videoBuffered).join(', '));}const audioBufferStart=audioBuffered.length?audioBuffered.start(0):0;const audioBufferEnd=audioBuffered.length?audioBuffered.end(audioBuffered.length-1):0;const videoBufferStart=videoBuffered.length?videoBuffered.start(0):0;const videoBufferEnd=videoBuffered.length?videoBuffered.end(videoBuffered.length-1):0;if(audioBufferEnd-audioBufferStart<=MIN_BACK_BUFFER&&videoBufferEnd-videoBufferStart<=MIN_BACK_BUFFER){// Can't remove enough buffer to make room for new segment (or the browser doesn't\n// allow for appends of segments this size). In the future, it may be possible to\n// split up the segment and append in pieces, but for now, error out this playlist\n// in an attempt to switch to a more manageable rendition.\nthis.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to '+'buffer, triggering an error. '+`Appended byte length: ${bytes.byteLength}, `+`audio buffer: ${timeRangesToArray(audioBuffered).join(', ')}, `+`video buffer: ${timeRangesToArray(videoBuffered).join(', ')}, `);this.error({message:'Quota exceeded error with append of a single segment of content',excludeUntil:Infinity});this.trigger('error');return;}// To try to resolve the quota exceeded error, clear back buffer and retry. This means\n// that the segment-loader should block on future events until this one is handled, so\n// that it doesn't keep moving onto further segments. Adding the call to the call\n// queue will prevent further appends until waitingOnRemove_ and\n// quotaExceededErrorRetryTimeout_ are cleared.\n//\n// Note that this will only block the current loader. In the case of demuxed content,\n// the other load may keep filling as fast as possible. In practice, this should be\n// OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n// source buffer, or video fills without enough room for audio to append (and without\n// the availability of clearing out seconds of back buffer to make room for audio).\n// But it might still be good to handle this case in the future as a TODO.\nthis.waitingOnRemove_=true;this.callQueue_.push(this.appendToSourceBuffer_.bind(this,{segmentInfo,type,bytes}));const currentTime=this.currentTime_();// Try to remove as much audio and video as possible to make room for new content\n// before retrying.\nconst timeToRemoveUntil=currentTime-MIN_BACK_BUFFER;this.logger_(`On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ${timeToRemoveUntil}`);this.remove(0,timeToRemoveUntil,()=>{this.logger_(`On QUOTA_EXCEEDED_ERR, retrying append in ${MIN_BACK_BUFFER}s`);this.waitingOnRemove_=false;// wait the length of time alotted in the back buffer to prevent wasted\n// attempts (since we can't clear less than the minimum)\nthis.quotaExceededErrorRetryTimeout_=window$1.setTimeout(()=>{this.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');this.quotaExceededErrorRetryTimeout_=null;this.processCallQueue_();},MIN_BACK_BUFFER*1000);},true);}handleAppendError_({segmentInfo,type,bytes},error){// if there's no error, nothing to do\nif(!error){return;}if(error.code===QUOTA_EXCEEDED_ERR){this.handleQuotaExceededError_({segmentInfo,type,bytes});// A quota exceeded error should be recoverable with a future re-append, so no need\n// to trigger an append error.\nreturn;}this.logger_('Received non QUOTA_EXCEEDED_ERR on append',error);this.error(`${type} append of ${bytes.length}b failed for segment `+`#${segmentInfo.mediaIndex} in playlist ${segmentInfo.playlist.id}`);// If an append errors, we often can't recover.\n// (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n//\n// Trigger a special error so that it can be handled separately from normal,\n// recoverable errors.\nthis.trigger('appenderror');}appendToSourceBuffer_({segmentInfo,type,initSegment,data,bytes}){// If this is a re-append, bytes were already created and don't need to be recreated\nif(!bytes){const segments=[data];let byteLength=data.byteLength;if(initSegment){// if the media initialization segment is changing, append it before the content\n// segment\nsegments.unshift(initSegment);byteLength+=initSegment.byteLength;}// Technically we should be OK appending the init segment separately, however, we\n// haven't yet tested that, and prepending is how we have always done things.\nbytes=concatSegments({bytes:byteLength,segments});}this.sourceUpdater_.appendBuffer({segmentInfo,type,bytes},this.handleAppendError_.bind(this,{segmentInfo,type,bytes}));}handleSegmentTimingInfo_(type,requestId,segmentTimingInfo){if(!this.pendingSegment_||requestId!==this.pendingSegment_.requestId){return;}const segment=this.pendingSegment_.segment;const timingInfoProperty=`${type}TimingInfo`;if(!segment[timingInfoProperty]){segment[timingInfoProperty]={};}segment[timingInfoProperty].transmuxerPrependedSeconds=segmentTimingInfo.prependedContentDuration||0;segment[timingInfoProperty].transmuxedPresentationStart=segmentTimingInfo.start.presentation;segment[timingInfoProperty].transmuxedDecodeStart=segmentTimingInfo.start.decode;segment[timingInfoProperty].transmuxedPresentationEnd=segmentTimingInfo.end.presentation;segment[timingInfoProperty].transmuxedDecodeEnd=segmentTimingInfo.end.decode;// mainly used as a reference for debugging\nsegment[timingInfoProperty].baseMediaDecodeTime=segmentTimingInfo.baseMediaDecodeTime;}appendData_(segmentInfo,result){const{type,data}=result;if(!data||!data.byteLength){return;}if(type==='audio'&&this.audioDisabled_){return;}const initSegment=this.getInitSegmentAndUpdateState_({type,initSegment:result.initSegment,playlist:segmentInfo.playlist,map:segmentInfo.isFmp4?segmentInfo.segment.map:null});this.appendToSourceBuffer_({segmentInfo,type,initSegment,data});}/**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */loadSegment_(segmentInfo){this.state='WAITING';this.pendingSegment_=segmentInfo;this.trimBackBuffer_(segmentInfo);if(typeof segmentInfo.timestampOffset==='number'){if(this.transmuxer_){this.transmuxer_.postMessage({action:'clearAllMp4Captions'});}}if(!this.hasEnoughInfoToLoad_()){this.loadQueue_.push(()=>{// regenerate the audioAppendStart, timestampOffset, etc as they\n// may have changed since this function was added to the queue.\nconst options=_extends({},segmentInfo,{forceTimestampOffset:true});_extends(segmentInfo,this.generateSegmentInfo_(options));this.isPendingTimestampOffset_=false;this.updateTransmuxerAndRequestSegment_(segmentInfo);});return;}this.updateTransmuxerAndRequestSegment_(segmentInfo);}updateTransmuxerAndRequestSegment_(segmentInfo){// We'll update the source buffer's timestamp offset once we have transmuxed data, but\n// the transmuxer still needs to be updated before then.\n//\n// Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n// offset must be passed to the transmuxer for stream correcting adjustments.\nif(this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)){this.gopBuffer_.length=0;// gopsToAlignWith was set before the GOP buffer was cleared\nsegmentInfo.gopsToAlignWith=[];this.timeMapping_=0;// reset values in the transmuxer since a discontinuity should start fresh\nthis.transmuxer_.postMessage({action:'reset'});this.transmuxer_.postMessage({action:'setTimestampOffset',timestampOffset:segmentInfo.timestampOffset});}const simpleSegment=this.createSimplifiedSegmentObj_(segmentInfo);const isEndOfStream=this.isEndOfStream_(segmentInfo.mediaIndex,segmentInfo.playlist,segmentInfo.partIndex);const isWalkingForward=this.mediaIndex!==null;const isDiscontinuity=segmentInfo.timeline!==this.currentTimeline_&&// currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n// the first timeline\nsegmentInfo.timeline>0;const isEndOfTimeline=isEndOfStream||isWalkingForward&&isDiscontinuity;this.logger_(`Requesting ${segmentInfoString(segmentInfo)}`);// If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n// then this init segment has never been seen before and should be appended.\n//\n// At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n// both to true and leave the decision of whether to append the init segment to append time.\nif(simpleSegment.map&&!simpleSegment.map.bytes){this.logger_('going to request init segment.');this.appendInitSegment_={video:true,audio:true};}segmentInfo.abortRequests=mediaSegmentRequest({xhr:this.vhs_.xhr,xhrOptions:this.xhrOptions_,decryptionWorker:this.decrypter_,segment:simpleSegment,abortFn:this.handleAbort_.bind(this,segmentInfo),progressFn:this.handleProgress_.bind(this),trackInfoFn:this.handleTrackInfo_.bind(this),timingInfoFn:this.handleTimingInfo_.bind(this),videoSegmentTimingInfoFn:this.handleSegmentTimingInfo_.bind(this,'video',segmentInfo.requestId),audioSegmentTimingInfoFn:this.handleSegmentTimingInfo_.bind(this,'audio',segmentInfo.requestId),captionsFn:this.handleCaptions_.bind(this),isEndOfTimeline,endedTimelineFn:()=>{this.logger_('received endedtimeline callback');},id3Fn:this.handleId3_.bind(this),dataFn:this.handleData_.bind(this),doneFn:this.segmentRequestFinished_.bind(this),onTransmuxerLog:({message,level,stream})=>{this.logger_(`${segmentInfoString(segmentInfo)} logged from transmuxer stream ${stream} as a ${level}: ${message}`);}});}/**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */trimBackBuffer_(segmentInfo){const removeToTime=safeBackBufferTrimTime(this.seekable_(),this.currentTime_(),this.playlist_.targetDuration||10);// Chrome has a hard limit of 150MB of\n// buffer and a very conservative \"garbage collector\"\n// We manually clear out the old buffer to ensure\n// we don't trigger the QuotaExceeded error\n// on the source buffer during subsequent appends\nif(removeToTime>0){this.remove(0,removeToTime);}}/**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @return {Object} a simplified segment object copy\n   */createSimplifiedSegmentObj_(segmentInfo){const segment=segmentInfo.segment;const part=segmentInfo.part;const simpleSegment={resolvedUri:part?part.resolvedUri:segment.resolvedUri,byterange:part?part.byterange:segment.byterange,requestId:segmentInfo.requestId,transmuxer:segmentInfo.transmuxer,audioAppendStart:segmentInfo.audioAppendStart,gopsToAlignWith:segmentInfo.gopsToAlignWith,part:segmentInfo.part};const previousSegment=segmentInfo.playlist.segments[segmentInfo.mediaIndex-1];if(previousSegment&&previousSegment.timeline===segment.timeline){// The baseStartTime of a segment is used to handle rollover when probing the TS\n// segment to retrieve timing information. Since the probe only looks at the media's\n// times (e.g., PTS and DTS values of the segment), and doesn't consider the\n// player's time (e.g., player.currentTime()), baseStartTime should reflect the\n// media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n// seconds of media time, so should be used here. The previous segment is used since\n// the end of the previous segment should represent the beginning of the current\n// segment, so long as they are on the same timeline.\nif(previousSegment.videoTimingInfo){simpleSegment.baseStartTime=previousSegment.videoTimingInfo.transmuxedDecodeEnd;}else if(previousSegment.audioTimingInfo){simpleSegment.baseStartTime=previousSegment.audioTimingInfo.transmuxedDecodeEnd;}}if(segment.key){// if the media sequence is greater than 2^32, the IV will be incorrect\n// assuming 10s segments, that would be about 1300 years\nconst iv=segment.key.iv||new Uint32Array([0,0,0,segmentInfo.mediaIndex+segmentInfo.playlist.mediaSequence]);simpleSegment.key=this.segmentKey(segment.key);simpleSegment.key.iv=iv;}if(segment.map){simpleSegment.map=this.initSegmentForMap(segment.map);}return simpleSegment;}saveTransferStats_(stats){// every request counts as a media request even if it has been aborted\n// or canceled due to a timeout\nthis.mediaRequests+=1;if(stats){this.mediaBytesTransferred+=stats.bytesReceived;this.mediaTransferDuration+=stats.roundTripTime;}}saveBandwidthRelatedStats_(duration,stats){// byteLength will be used for throughput, and should be based on bytes receieved,\n// which we only know at the end of the request and should reflect total bytes\n// downloaded rather than just bytes processed from components of the segment\nthis.pendingSegment_.byteLength=stats.bytesReceived;if(duration<MIN_SEGMENT_DURATION_TO_SAVE_STATS){this.logger_(`Ignoring segment's bandwidth because its duration of ${duration}`+` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);return;}this.bandwidth=stats.bandwidth;this.roundTrip=stats.roundTripTime;}handleTimeout_(){// although the VTT segment loader bandwidth isn't really used, it's good to\n// maintain functinality between segment loaders\nthis.mediaRequestsTimedout+=1;this.bandwidth=1;this.roundTrip=NaN;this.trigger('bandwidthupdate');this.trigger('timeout');}/**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */segmentRequestFinished_(error,simpleSegment,result){// TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n// check the call queue directly since this function doesn't need to deal with any\n// data, and can continue even if the source buffers are not set up and we didn't get\n// any data from the segment\nif(this.callQueue_.length){this.callQueue_.push(this.segmentRequestFinished_.bind(this,error,simpleSegment,result));return;}this.saveTransferStats_(simpleSegment.stats);// The request was aborted and the SegmentLoader has already been reset\nif(!this.pendingSegment_){return;}// the request was aborted and the SegmentLoader has already started\n// another request. this can happen when the timeout for an aborted\n// request triggers due to a limitation in the XHR library\n// do not count this as any sort of request or we risk double-counting\nif(simpleSegment.requestId!==this.pendingSegment_.requestId){return;}// an error occurred from the active pendingSegment_ so reset everything\nif(error){this.pendingSegment_=null;this.state='READY';// aborts are not a true error condition and nothing corrective needs to be done\nif(error.code===REQUEST_ERRORS.ABORTED){return;}this.pause();// the error is really just that at least one of the requests timed-out\n// set the bandwidth to a very low value and trigger an ABR switch to\n// take emergency action\nif(error.code===REQUEST_ERRORS.TIMEOUT){this.handleTimeout_();return;}// if control-flow has arrived here, then the error is real\n// emit an error event to exclude the current playlist\nthis.mediaRequestsErrored+=1;this.error(error);this.trigger('error');return;}const segmentInfo=this.pendingSegment_;// the response was a success so set any bandwidth stats the request\n// generated for ABR purposes\nthis.saveBandwidthRelatedStats_(segmentInfo.duration,simpleSegment.stats);segmentInfo.endOfAllRequests=simpleSegment.endOfAllRequests;if(result.gopInfo){this.gopBuffer_=updateGopBuffer(this.gopBuffer_,result.gopInfo,this.safeAppend_);}// Although we may have already started appending on progress, we shouldn't switch the\n// state away from loading until we are officially done loading the segment data.\nthis.state='APPENDING';// used for testing\nthis.trigger('appending');this.waitForAppendsToComplete_(segmentInfo);}setTimeMapping_(timeline){const timelineMapping=this.syncController_.mappingForTimeline(timeline);if(timelineMapping!==null){this.timeMapping_=timelineMapping;}}updateMediaSecondsLoaded_(segment){if(typeof segment.start==='number'&&typeof segment.end==='number'){this.mediaSecondsLoaded+=segment.end-segment.start;}else{this.mediaSecondsLoaded+=segment.duration;}}shouldUpdateTransmuxerTimestampOffset_(timestampOffset){if(timestampOffset===null){return false;}// note that we're potentially using the same timestamp offset for both video and\n// audio\nif(this.loaderType_==='main'&&timestampOffset!==this.sourceUpdater_.videoTimestampOffset()){return true;}if(!this.audioDisabled_&&timestampOffset!==this.sourceUpdater_.audioTimestampOffset()){return true;}return false;}trueSegmentStart_({currentStart,playlist,mediaIndex,firstVideoFrameTimeForData,currentVideoTimestampOffset,useVideoTimingInfo,videoTimingInfo,audioTimingInfo}){if(typeof currentStart!=='undefined'){// if start was set once, keep using it\nreturn currentStart;}if(!useVideoTimingInfo){return audioTimingInfo.start;}const previousSegment=playlist.segments[mediaIndex-1];// The start of a segment should be the start of the first full frame contained\n// within that segment. Since the transmuxer maintains a cache of incomplete data\n// from and/or the last frame seen, the start time may reflect a frame that starts\n// in the previous segment. Check for that case and ensure the start time is\n// accurate for the segment.\nif(mediaIndex===0||!previousSegment||typeof previousSegment.start==='undefined'||previousSegment.end!==firstVideoFrameTimeForData+currentVideoTimestampOffset){return firstVideoFrameTimeForData;}return videoTimingInfo.start;}waitForAppendsToComplete_(segmentInfo){const trackInfo=this.getCurrentMediaInfo_(segmentInfo);if(!trackInfo){this.error({message:'No starting media returned, likely due to an unsupported media format.',playlistExclusionDuration:Infinity});this.trigger('error');return;}// Although transmuxing is done, appends may not yet be finished. Throw a marker\n// on each queue this loader is responsible for to ensure that the appends are\n// complete.\nconst{hasAudio,hasVideo,isMuxed}=trackInfo;const waitForVideo=this.loaderType_==='main'&&hasVideo;const waitForAudio=!this.audioDisabled_&&hasAudio&&!isMuxed;segmentInfo.waitingOnAppends=0;// segments with no data\nif(!segmentInfo.hasAppendedData_){if(!segmentInfo.timingInfo&&typeof segmentInfo.timestampOffset==='number'){// When there's no audio or video data in the segment, there's no audio or video\n// timing information.\n//\n// If there's no audio or video timing information, then the timestamp offset\n// can't be adjusted to the appropriate value for the transmuxer and source\n// buffers.\n//\n// Therefore, the next segment should be used to set the timestamp offset.\nthis.isPendingTimestampOffset_=true;}// override settings for metadata only segments\nsegmentInfo.timingInfo={start:0};segmentInfo.waitingOnAppends++;if(!this.isPendingTimestampOffset_){// update the timestampoffset\nthis.updateSourceBufferTimestampOffset_(segmentInfo);// make sure the metadata queue is processed even though we have\n// no video/audio data.\nthis.processMetadataQueue_();}// append is \"done\" instantly with no data.\nthis.checkAppendsDone_(segmentInfo);return;}// Since source updater could call back synchronously, do the increments first.\nif(waitForVideo){segmentInfo.waitingOnAppends++;}if(waitForAudio){segmentInfo.waitingOnAppends++;}if(waitForVideo){this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this,segmentInfo));}if(waitForAudio){this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this,segmentInfo));}}checkAppendsDone_(segmentInfo){if(this.checkForAbort_(segmentInfo.requestId)){return;}segmentInfo.waitingOnAppends--;if(segmentInfo.waitingOnAppends===0){this.handleAppendsDone_();}}checkForIllegalMediaSwitch(trackInfo){const illegalMediaSwitchError=illegalMediaSwitch(this.loaderType_,this.getCurrentMediaInfo_(),trackInfo);if(illegalMediaSwitchError){this.error({message:illegalMediaSwitchError,playlistExclusionDuration:Infinity});this.trigger('error');return true;}return false;}updateSourceBufferTimestampOffset_(segmentInfo){if(segmentInfo.timestampOffset===null||// we don't yet have the start for whatever media type (video or audio) has\n// priority, timing-wise, so we must wait\ntypeof segmentInfo.timingInfo.start!=='number'||// already updated the timestamp offset for this segment\nsegmentInfo.changedTimestampOffset||// the alt audio loader should not be responsible for setting the timestamp offset\nthis.loaderType_!=='main'){return;}let didChange=false;// Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n// the timing info here comes from video. In the event that the audio is longer than\n// the video, this will trim the start of the audio.\n// This also trims any offset from 0 at the beginning of the media\nsegmentInfo.timestampOffset-=this.getSegmentStartTimeForTimestampOffsetCalculation_({videoTimingInfo:segmentInfo.segment.videoTimingInfo,audioTimingInfo:segmentInfo.segment.audioTimingInfo,timingInfo:segmentInfo.timingInfo});// In the event that there are part segment downloads, each will try to update the\n// timestamp offset. Retaining this bit of state prevents us from updating in the\n// future (within the same segment), however, there may be a better way to handle it.\nsegmentInfo.changedTimestampOffset=true;if(segmentInfo.timestampOffset!==this.sourceUpdater_.videoTimestampOffset()){this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);didChange=true;}if(segmentInfo.timestampOffset!==this.sourceUpdater_.audioTimestampOffset()){this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);didChange=true;}if(didChange){this.trigger('timestampoffset');}}getSegmentStartTimeForTimestampOffsetCalculation_({videoTimingInfo,audioTimingInfo,timingInfo}){if(!this.useDtsForTimestampOffset_){return timingInfo.start;}if(videoTimingInfo&&typeof videoTimingInfo.transmuxedDecodeStart==='number'){return videoTimingInfo.transmuxedDecodeStart;}// handle audio only\nif(audioTimingInfo&&typeof audioTimingInfo.transmuxedDecodeStart==='number'){return audioTimingInfo.transmuxedDecodeStart;}// handle content not transmuxed (e.g., MP4)\nreturn timingInfo.start;}updateTimingInfoEnd_(segmentInfo){segmentInfo.timingInfo=segmentInfo.timingInfo||{};const trackInfo=this.getMediaInfo_();const useVideoTimingInfo=this.loaderType_==='main'&&trackInfo&&trackInfo.hasVideo;const prioritizedTimingInfo=useVideoTimingInfo&&segmentInfo.videoTimingInfo?segmentInfo.videoTimingInfo:segmentInfo.audioTimingInfo;if(!prioritizedTimingInfo){return;}segmentInfo.timingInfo.end=typeof prioritizedTimingInfo.end==='number'?// End time may not exist in a case where we aren't parsing the full segment (one\n// current example is the case of fmp4), so use the rough duration to calculate an\n// end time.\nprioritizedTimingInfo.end:prioritizedTimingInfo.start+segmentInfo.duration;}/**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */handleAppendsDone_(){// appendsdone can cause an abort\nif(this.pendingSegment_){this.trigger('appendsdone');}if(!this.pendingSegment_){this.state='READY';// TODO should this move into this.checkForAbort to speed up requests post abort in\n// all appending cases?\nif(!this.paused()){this.monitorBuffer_();}return;}const segmentInfo=this.pendingSegment_;// Now that the end of the segment has been reached, we can set the end time. It's\n// best to wait until all appends are done so we're sure that the primary media is\n// finished (and we have its end time).\nthis.updateTimingInfoEnd_(segmentInfo);if(this.shouldSaveSegmentTimingInfo_){// Timeline mappings should only be saved for the main loader. This is for multiple\n// reasons:\n//\n// 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n//    and the main loader try to save the timeline mapping, whichever comes later\n//    will overwrite the first. In theory this is OK, as the mappings should be the\n//    same, however, it breaks for (2)\n// 2) In the event of a live stream, the initial live point will make for a somewhat\n//    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n//    the mapping will be off for one of the streams, dependent on which one was\n//    first saved (see (1)).\n// 3) Primary timing goes by video in VHS, so the mapping should be video.\n//\n// Since the audio loader will wait for the main loader to load the first segment,\n// the main loader will save the first timeline mapping, and ensure that there won't\n// be a case where audio loads two segments without saving a mapping (thus leading\n// to missing segment timing info).\nthis.syncController_.saveSegmentTimingInfo({segmentInfo,shouldSaveTimelineMapping:this.loaderType_==='main'});}const segmentDurationMessage=getTroublesomeSegmentDurationMessage(segmentInfo,this.sourceType_);if(segmentDurationMessage){if(segmentDurationMessage.severity==='warn'){videojs.log.warn(segmentDurationMessage.message);}else{this.logger_(segmentDurationMessage.message);}}this.recordThroughput_(segmentInfo);this.pendingSegment_=null;this.state='READY';if(segmentInfo.isSyncRequest){this.trigger('syncinfoupdate');// if the sync request was not appended\n// then it was not the correct segment.\n// throw it away and use the data it gave us\n// to get the correct one.\nif(!segmentInfo.hasAppendedData_){this.logger_(`Throwing away un-appended sync request ${segmentInfoString(segmentInfo)}`);return;}}this.logger_(`Appended ${segmentInfoString(segmentInfo)}`);this.addSegmentMetadataCue_(segmentInfo);this.fetchAtBuffer_=true;if(this.currentTimeline_!==segmentInfo.timeline){this.timelineChangeController_.lastTimelineChange({type:this.loaderType_,from:this.currentTimeline_,to:segmentInfo.timeline});// If audio is not disabled, the main segment loader is responsible for updating\n// the audio timeline as well. If the content is video only, this won't have any\n// impact.\nif(this.loaderType_==='main'&&!this.audioDisabled_){this.timelineChangeController_.lastTimelineChange({type:'audio',from:this.currentTimeline_,to:segmentInfo.timeline});}}this.currentTimeline_=segmentInfo.timeline;// We must update the syncinfo to recalculate the seekable range before\n// the following conditional otherwise it may consider this a bad \"guess\"\n// and attempt to resync when the post-update seekable window and live\n// point would mean that this was the perfect segment to fetch\nthis.trigger('syncinfoupdate');const segment=segmentInfo.segment;const part=segmentInfo.part;const badSegmentGuess=segment.end&&this.currentTime_()-segment.end>segmentInfo.playlist.targetDuration*3;const badPartGuess=part&&part.end&&this.currentTime_()-part.end>segmentInfo.playlist.partTargetDuration*3;// If we previously appended a segment/part that ends more than 3 part/targetDurations before\n// the currentTime_ that means that our conservative guess was too conservative.\n// In that case, reset the loader state so that we try to use any information gained\n// from the previous request to create a new, more accurate, sync-point.\nif(badSegmentGuess||badPartGuess){this.logger_(`bad ${badSegmentGuess?'segment':'part'} ${segmentInfoString(segmentInfo)}`);this.resetEverything();return;}const isWalkingForward=this.mediaIndex!==null;// Don't do a rendition switch unless we have enough time to get a sync segment\n// and conservatively guess\nif(isWalkingForward){this.trigger('bandwidthupdate');}this.trigger('progress');this.mediaIndex=segmentInfo.mediaIndex;this.partIndex=segmentInfo.partIndex;// any time an update finishes and the last segment is in the\n// buffer, end the stream. this ensures the \"ended\" event will\n// fire if playback reaches that point.\nif(this.isEndOfStream_(segmentInfo.mediaIndex,segmentInfo.playlist,segmentInfo.partIndex)){this.endOfStream();}// used for testing\nthis.trigger('appended');if(segmentInfo.hasAppendedData_){this.mediaAppends++;}if(!this.paused()){this.monitorBuffer_();}}/**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */recordThroughput_(segmentInfo){if(segmentInfo.duration<MIN_SEGMENT_DURATION_TO_SAVE_STATS){this.logger_(`Ignoring segment's throughput because its duration of ${segmentInfo.duration}`+` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);return;}const rate=this.throughput.rate;// Add one to the time to ensure that we don't accidentally attempt to divide\n// by zero in the case where the throughput is ridiculously high\nconst segmentProcessingTime=Date.now()-segmentInfo.endOfAllRequests+1;// Multiply by 8000 to convert from bytes/millisecond to bits/second\nconst segmentProcessingThroughput=Math.floor(segmentInfo.byteLength/segmentProcessingTime*8*1000);// This is just a cumulative moving average calculation:\n//   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\nthis.throughput.rate+=(segmentProcessingThroughput-rate)/++this.throughput.count;}/**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */addSegmentMetadataCue_(segmentInfo){if(!this.segmentMetadataTrack_){return;}const segment=segmentInfo.segment;const start=segment.start;const end=segment.end;// Do not try adding the cue if the start and end times are invalid.\nif(!finite(start)||!finite(end)){return;}removeCuesFromTrack(start,end,this.segmentMetadataTrack_);const Cue=window$1.WebKitDataCue||window$1.VTTCue;const value={custom:segment.custom,dateTimeObject:segment.dateTimeObject,dateTimeString:segment.dateTimeString,bandwidth:segmentInfo.playlist.attributes.BANDWIDTH,resolution:segmentInfo.playlist.attributes.RESOLUTION,codecs:segmentInfo.playlist.attributes.CODECS,byteLength:segmentInfo.byteLength,uri:segmentInfo.uri,timeline:segmentInfo.timeline,playlist:segmentInfo.playlist.id,start,end};const data=JSON.stringify(value);const cue=new Cue(start,end,data);// Attach the metadata to the value property of the cue to keep consistency between\n// the differences of WebKitDataCue in safari and VTTCue in other browsers\ncue.value=value;this.segmentMetadataTrack_.addCue(cue);}}function noop(){}const toTitleCase=function(string){if(typeof string!=='string'){return string;}return string.replace(/./,w=>w.toUpperCase());};/**\n * @file source-updater.js\n */const bufferTypes=['video','audio'];const updating=(type,sourceUpdater)=>{const sourceBuffer=sourceUpdater[`${type}Buffer`];return sourceBuffer&&sourceBuffer.updating||sourceUpdater.queuePending[type];};const nextQueueIndexOfType=(type,queue)=>{for(let i=0;i<queue.length;i++){const queueEntry=queue[i];if(queueEntry.type==='mediaSource'){// If the next entry is a media source entry (uses multiple source buffers), block\n// processing to allow it to go through first.\nreturn null;}if(queueEntry.type===type){return i;}}return null;};const shiftQueue=(type,sourceUpdater)=>{if(sourceUpdater.queue.length===0){return;}let queueIndex=0;let queueEntry=sourceUpdater.queue[queueIndex];if(queueEntry.type==='mediaSource'){if(!sourceUpdater.updating()&&sourceUpdater.mediaSource.readyState!=='closed'){sourceUpdater.queue.shift();queueEntry.action(sourceUpdater);if(queueEntry.doneFn){queueEntry.doneFn();}// Only specific source buffer actions must wait for async updateend events. Media\n// Source actions process synchronously. Therefore, both audio and video source\n// buffers are now clear to process the next queue entries.\nshiftQueue('audio',sourceUpdater);shiftQueue('video',sourceUpdater);}// Media Source actions require both source buffers, so if the media source action\n// couldn't process yet (because one or both source buffers are busy), block other\n// queue actions until both are available and the media source action can process.\nreturn;}if(type==='mediaSource'){// If the queue was shifted by a media source action (this happens when pushing a\n// media source action onto the queue), then it wasn't from an updateend event from an\n// audio or video source buffer, so there's no change from previous state, and no\n// processing should be done.\nreturn;}// Media source queue entries don't need to consider whether the source updater is\n// started (i.e., source buffers are created) as they don't need the source buffers, but\n// source buffer queue entries do.\nif(!sourceUpdater.ready()||sourceUpdater.mediaSource.readyState==='closed'||updating(type,sourceUpdater)){return;}if(queueEntry.type!==type){queueIndex=nextQueueIndexOfType(type,sourceUpdater.queue);if(queueIndex===null){// Either there's no queue entry that uses this source buffer type in the queue, or\n// there's a media source queue entry before the next entry of this type, in which\n// case wait for that action to process first.\nreturn;}queueEntry=sourceUpdater.queue[queueIndex];}sourceUpdater.queue.splice(queueIndex,1);// Keep a record that this source buffer type is in use.\n//\n// The queue pending operation must be set before the action is performed in the event\n// that the action results in a synchronous event that is acted upon. For instance, if\n// an exception is thrown that can be handled, it's possible that new actions will be\n// appended to an empty queue and immediately executed, but would not have the correct\n// pending information if this property was set after the action was performed.\nsourceUpdater.queuePending[type]=queueEntry;queueEntry.action(type,sourceUpdater);if(!queueEntry.doneFn){// synchronous operation, process next entry\nsourceUpdater.queuePending[type]=null;shiftQueue(type,sourceUpdater);return;}};const cleanupBuffer=(type,sourceUpdater)=>{const buffer=sourceUpdater[`${type}Buffer`];const titleType=toTitleCase(type);if(!buffer){return;}buffer.removeEventListener('updateend',sourceUpdater[`on${titleType}UpdateEnd_`]);buffer.removeEventListener('error',sourceUpdater[`on${titleType}Error_`]);sourceUpdater.codecs[type]=null;sourceUpdater[`${type}Buffer`]=null;};const inSourceBuffers=(mediaSource,sourceBuffer)=>mediaSource&&sourceBuffer&&Array.prototype.indexOf.call(mediaSource.sourceBuffers,sourceBuffer)!==-1;const actions={appendBuffer:(bytes,segmentInfo,onError)=>(type,sourceUpdater)=>{const sourceBuffer=sourceUpdater[`${type}Buffer`];// can't do anything if the media source / source buffer is null\n// or the media source does not contain this source buffer.\nif(!inSourceBuffers(sourceUpdater.mediaSource,sourceBuffer)){return;}sourceUpdater.logger_(`Appending segment ${segmentInfo.mediaIndex}'s ${bytes.length} bytes to ${type}Buffer`);try{sourceBuffer.appendBuffer(bytes);}catch(e){sourceUpdater.logger_(`Error with code ${e.code} `+(e.code===QUOTA_EXCEEDED_ERR?'(QUOTA_EXCEEDED_ERR) ':'')+`when appending segment ${segmentInfo.mediaIndex} to ${type}Buffer`);sourceUpdater.queuePending[type]=null;onError(e);}},remove:(start,end)=>(type,sourceUpdater)=>{const sourceBuffer=sourceUpdater[`${type}Buffer`];// can't do anything if the media source / source buffer is null\n// or the media source does not contain this source buffer.\nif(!inSourceBuffers(sourceUpdater.mediaSource,sourceBuffer)){return;}sourceUpdater.logger_(`Removing ${start} to ${end} from ${type}Buffer`);try{sourceBuffer.remove(start,end);}catch(e){sourceUpdater.logger_(`Remove ${start} to ${end} from ${type}Buffer failed`);}},timestampOffset:offset=>(type,sourceUpdater)=>{const sourceBuffer=sourceUpdater[`${type}Buffer`];// can't do anything if the media source / source buffer is null\n// or the media source does not contain this source buffer.\nif(!inSourceBuffers(sourceUpdater.mediaSource,sourceBuffer)){return;}sourceUpdater.logger_(`Setting ${type}timestampOffset to ${offset}`);sourceBuffer.timestampOffset=offset;},callback:callback=>(type,sourceUpdater)=>{callback();},endOfStream:error=>sourceUpdater=>{if(sourceUpdater.mediaSource.readyState!=='open'){return;}sourceUpdater.logger_(`Calling mediaSource endOfStream(${error||''})`);try{sourceUpdater.mediaSource.endOfStream(error);}catch(e){videojs.log.warn('Failed to call media source endOfStream',e);}},duration:duration=>sourceUpdater=>{sourceUpdater.logger_(`Setting mediaSource duration to ${duration}`);try{sourceUpdater.mediaSource.duration=duration;}catch(e){videojs.log.warn('Failed to set media source duration',e);}},abort:()=>(type,sourceUpdater)=>{if(sourceUpdater.mediaSource.readyState!=='open'){return;}const sourceBuffer=sourceUpdater[`${type}Buffer`];// can't do anything if the media source / source buffer is null\n// or the media source does not contain this source buffer.\nif(!inSourceBuffers(sourceUpdater.mediaSource,sourceBuffer)){return;}sourceUpdater.logger_(`calling abort on ${type}Buffer`);try{sourceBuffer.abort();}catch(e){videojs.log.warn(`Failed to abort on ${type}Buffer`,e);}},addSourceBuffer:(type,codec)=>sourceUpdater=>{const titleType=toTitleCase(type);const mime=getMimeForCodec(codec);sourceUpdater.logger_(`Adding ${type}Buffer with codec ${codec} to mediaSource`);const sourceBuffer=sourceUpdater.mediaSource.addSourceBuffer(mime);sourceBuffer.addEventListener('updateend',sourceUpdater[`on${titleType}UpdateEnd_`]);sourceBuffer.addEventListener('error',sourceUpdater[`on${titleType}Error_`]);sourceUpdater.codecs[type]=codec;sourceUpdater[`${type}Buffer`]=sourceBuffer;},removeSourceBuffer:type=>sourceUpdater=>{const sourceBuffer=sourceUpdater[`${type}Buffer`];cleanupBuffer(type,sourceUpdater);// can't do anything if the media source / source buffer is null\n// or the media source does not contain this source buffer.\nif(!inSourceBuffers(sourceUpdater.mediaSource,sourceBuffer)){return;}sourceUpdater.logger_(`Removing ${type}Buffer with codec ${sourceUpdater.codecs[type]} from mediaSource`);try{sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);}catch(e){videojs.log.warn(`Failed to removeSourceBuffer ${type}Buffer`,e);}},changeType:codec=>(type,sourceUpdater)=>{const sourceBuffer=sourceUpdater[`${type}Buffer`];const mime=getMimeForCodec(codec);// can't do anything if the media source / source buffer is null\n// or the media source does not contain this source buffer.\nif(!inSourceBuffers(sourceUpdater.mediaSource,sourceBuffer)){return;}// do not update codec if we don't need to.\nif(sourceUpdater.codecs[type]===codec){return;}sourceUpdater.logger_(`changing ${type}Buffer codec from ${sourceUpdater.codecs[type]} to ${codec}`);sourceBuffer.changeType(mime);sourceUpdater.codecs[type]=codec;}};const pushQueue=({type,sourceUpdater,action,doneFn,name})=>{sourceUpdater.queue.push({type,action,doneFn,name});shiftQueue(type,sourceUpdater);};const onUpdateend=(type,sourceUpdater)=>e=>{// Although there should, in theory, be a pending action for any updateend receieved,\n// there are some actions that may trigger updateend events without set definitions in\n// the w3c spec. For instance, setting the duration on the media source may trigger\n// updateend events on source buffers. This does not appear to be in the spec. As such,\n// if we encounter an updateend without a corresponding pending action from our queue\n// for that source buffer type, process the next action.\nif(sourceUpdater.queuePending[type]){const doneFn=sourceUpdater.queuePending[type].doneFn;sourceUpdater.queuePending[type]=null;if(doneFn){// if there's an error, report it\ndoneFn(sourceUpdater[`${type}Error_`]);}}shiftQueue(type,sourceUpdater);};/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n */class SourceUpdater extends videojs.EventTarget{constructor(mediaSource){super();this.mediaSource=mediaSource;this.sourceopenListener_=()=>shiftQueue('mediaSource',this);this.mediaSource.addEventListener('sourceopen',this.sourceopenListener_);this.logger_=logger('SourceUpdater');// initial timestamp offset is 0\nthis.audioTimestampOffset_=0;this.videoTimestampOffset_=0;this.queue=[];this.queuePending={audio:null,video:null};this.delayedAudioAppendQueue_=[];this.videoAppendQueued_=false;this.codecs={};this.onVideoUpdateEnd_=onUpdateend('video',this);this.onAudioUpdateEnd_=onUpdateend('audio',this);this.onVideoError_=e=>{// used for debugging\nthis.videoError_=e;};this.onAudioError_=e=>{// used for debugging\nthis.audioError_=e;};this.createdSourceBuffers_=false;this.initializedEme_=false;this.triggeredReady_=false;}initializedEme(){this.initializedEme_=true;this.triggerReady();}hasCreatedSourceBuffers(){// if false, likely waiting on one of the segment loaders to get enough data to create\n// source buffers\nreturn this.createdSourceBuffers_;}hasInitializedAnyEme(){return this.initializedEme_;}ready(){return this.hasCreatedSourceBuffers()&&this.hasInitializedAnyEme();}createSourceBuffers(codecs){if(this.hasCreatedSourceBuffers()){// already created them before\nreturn;}// the intial addOrChangeSourceBuffers will always be\n// two add buffers.\nthis.addOrChangeSourceBuffers(codecs);this.createdSourceBuffers_=true;this.trigger('createdsourcebuffers');this.triggerReady();}triggerReady(){// only allow ready to be triggered once, this prevents the case\n// where:\n// 1. we trigger createdsourcebuffers\n// 2. ie 11 synchronously initializates eme\n// 3. the synchronous initialization causes us to trigger ready\n// 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\nif(this.ready()&&!this.triggeredReady_){this.triggeredReady_=true;this.trigger('ready');}}/**\n   * Add a type of source buffer to the media source.\n   *\n   * @param {string} type\n   *        The type of source buffer to add.\n   *\n   * @param {string} codec\n   *        The codec to add the source buffer with.\n   */addSourceBuffer(type,codec){pushQueue({type:'mediaSource',sourceUpdater:this,action:actions.addSourceBuffer(type,codec),name:'addSourceBuffer'});}/**\n   * call abort on a source buffer.\n   *\n   * @param {string} type\n   *        The type of source buffer to call abort on.\n   */abort(type){pushQueue({type,sourceUpdater:this,action:actions.abort(type),name:'abort'});}/**\n   * Call removeSourceBuffer and remove a specific type\n   * of source buffer on the mediaSource.\n   *\n   * @param {string} type\n   *        The type of source buffer to remove.\n   */removeSourceBuffer(type){if(!this.canRemoveSourceBuffer()){videojs.log.error('removeSourceBuffer is not supported!');return;}pushQueue({type:'mediaSource',sourceUpdater:this,action:actions.removeSourceBuffer(type),name:'removeSourceBuffer'});}/**\n   * Whether or not the removeSourceBuffer function is supported\n   * on the mediaSource.\n   *\n   * @return {boolean}\n   *          if removeSourceBuffer can be called.\n   */canRemoveSourceBuffer(){// IE reports that it supports removeSourceBuffer, but often throws\n// errors when attempting to use the function. So we report that it\n// does not support removeSourceBuffer. As of Firefox 83 removeSourceBuffer\n// throws errors, so we report that it does not support this as well.\nreturn!videojs.browser.IE_VERSION&&!videojs.browser.IS_FIREFOX&&window$1.MediaSource&&window$1.MediaSource.prototype&&typeof window$1.MediaSource.prototype.removeSourceBuffer==='function';}/**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */static canChangeType(){return window$1.SourceBuffer&&window$1.SourceBuffer.prototype&&typeof window$1.SourceBuffer.prototype.changeType==='function';}/**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */canChangeType(){return this.constructor.canChangeType();}/**\n   * Call the changeType function on a source buffer, given the code and type.\n   *\n   * @param {string} type\n   *        The type of source buffer to call changeType on.\n   *\n   * @param {string} codec\n   *        The codec string to change type with on the source buffer.\n   */changeType(type,codec){if(!this.canChangeType()){videojs.log.error('changeType is not supported!');return;}pushQueue({type,sourceUpdater:this,action:actions.changeType(codec),name:'changeType'});}/**\n   * Add source buffers with a codec or, if they are already created,\n   * call changeType on source buffers using changeType.\n   *\n   * @param {Object} codecs\n   *        Codecs to switch to\n   */addOrChangeSourceBuffers(codecs){if(!codecs||typeof codecs!=='object'||Object.keys(codecs).length===0){throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');}Object.keys(codecs).forEach(type=>{const codec=codecs[type];if(!this.hasCreatedSourceBuffers()){return this.addSourceBuffer(type,codec);}if(this.canChangeType()){this.changeType(type,codec);}});}/**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */appendBuffer(options,doneFn){const{segmentInfo,type,bytes}=options;this.processedAppend_=true;if(type==='audio'&&this.videoBuffer&&!this.videoAppendQueued_){this.delayedAudioAppendQueue_.push([options,doneFn]);this.logger_(`delayed audio append of ${bytes.length} until video append`);return;}// In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n// not be fired. This means that the queue will be blocked until the next action\n// taken by the segment-loader. Provide a mechanism for segment-loader to handle\n// these errors by calling the doneFn with the specific error.\nconst onError=doneFn;pushQueue({type,sourceUpdater:this,action:actions.appendBuffer(bytes,segmentInfo||{mediaIndex:-1},onError),doneFn,name:'appendBuffer'});if(type==='video'){this.videoAppendQueued_=true;if(!this.delayedAudioAppendQueue_.length){return;}const queue=this.delayedAudioAppendQueue_.slice();this.logger_(`queuing delayed audio ${queue.length} appendBuffers`);this.delayedAudioAppendQueue_.length=0;queue.forEach(que=>{this.appendBuffer.apply(this,que);});}}/**\n   * Get the audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The audio buffer's buffered time range\n   */audioBuffered(){// no media source/source buffer or it isn't in the media sources\n// source buffer list\nif(!inSourceBuffers(this.mediaSource,this.audioBuffer)){return createTimeRanges();}return this.audioBuffer.buffered?this.audioBuffer.buffered:createTimeRanges();}/**\n   * Get the video buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The video buffer's buffered time range\n   */videoBuffered(){// no media source/source buffer or it isn't in the media sources\n// source buffer list\nif(!inSourceBuffers(this.mediaSource,this.videoBuffer)){return createTimeRanges();}return this.videoBuffer.buffered?this.videoBuffer.buffered:createTimeRanges();}/**\n   * Get a combined video/audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         the combined time range\n   */buffered(){const video=inSourceBuffers(this.mediaSource,this.videoBuffer)?this.videoBuffer:null;const audio=inSourceBuffers(this.mediaSource,this.audioBuffer)?this.audioBuffer:null;if(audio&&!video){return this.audioBuffered();}if(video&&!audio){return this.videoBuffered();}return bufferIntersection(this.audioBuffered(),this.videoBuffered());}/**\n   * Add a callback to the queue that will set duration on the mediaSource.\n   *\n   * @param {number} duration\n   *        The duration to set\n   *\n   * @param {Function} [doneFn]\n   *        function to run after duration has been set.\n   */setDuration(duration,doneFn=noop){// In order to set the duration on the media source, it's necessary to wait for all\n// source buffers to no longer be updating. \"If the updating attribute equals true on\n// any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n// abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\npushQueue({type:'mediaSource',sourceUpdater:this,action:actions.duration(duration),name:'duration',doneFn});}/**\n   * Add a mediaSource endOfStream call to the queue\n   *\n   * @param {Error} [error]\n   *        Call endOfStream with an error\n   *\n   * @param {Function} [doneFn]\n   *        A function that should be called when the\n   *        endOfStream call has finished.\n   */endOfStream(error=null,doneFn=noop){if(typeof error!=='string'){error=undefined;}// In order to set the duration on the media source, it's necessary to wait for all\n// source buffers to no longer be updating. \"If the updating attribute equals true on\n// any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n// abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\npushQueue({type:'mediaSource',sourceUpdater:this,action:actions.endOfStream(error),name:'endOfStream',doneFn});}/**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */removeAudio(start,end,done=noop){if(!this.audioBuffered().length||this.audioBuffered().end(0)===0){done();return;}pushQueue({type:'audio',sourceUpdater:this,action:actions.remove(start,end),doneFn:done,name:'remove'});}/**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */removeVideo(start,end,done=noop){if(!this.videoBuffered().length||this.videoBuffered().end(0)===0){done();return;}pushQueue({type:'video',sourceUpdater:this,action:actions.remove(start,end),doneFn:done,name:'remove'});}/**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {boolean} the updating status of the SourceBuffer\n   */updating(){// the audio/video source buffer is updating\nif(updating('audio',this)||updating('video',this)){return true;}return false;}/**\n   * Set/get the timestampoffset on the audio SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */audioTimestampOffset(offset){if(typeof offset!=='undefined'&&this.audioBuffer&&// no point in updating if it's the same\nthis.audioTimestampOffset_!==offset){pushQueue({type:'audio',sourceUpdater:this,action:actions.timestampOffset(offset),name:'timestampOffset'});this.audioTimestampOffset_=offset;}return this.audioTimestampOffset_;}/**\n   * Set/get the timestampoffset on the video SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */videoTimestampOffset(offset){if(typeof offset!=='undefined'&&this.videoBuffer&&// no point in updating if it's the same\nthis.videoTimestampOffset!==offset){pushQueue({type:'video',sourceUpdater:this,action:actions.timestampOffset(offset),name:'timestampOffset'});this.videoTimestampOffset_=offset;}return this.videoTimestampOffset_;}/**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the audio queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */audioQueueCallback(callback){if(!this.audioBuffer){return;}pushQueue({type:'audio',sourceUpdater:this,action:actions.callback(callback),name:'callback'});}/**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the video queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */videoQueueCallback(callback){if(!this.videoBuffer){return;}pushQueue({type:'video',sourceUpdater:this,action:actions.callback(callback),name:'callback'});}/**\n   * dispose of the source updater and the underlying sourceBuffer\n   */dispose(){this.trigger('dispose');bufferTypes.forEach(type=>{this.abort(type);if(this.canRemoveSourceBuffer()){this.removeSourceBuffer(type);}else{this[`${type}QueueCallback`](()=>cleanupBuffer(type,this));}});this.videoAppendQueued_=false;this.delayedAudioAppendQueue_.length=0;if(this.sourceopenListener_){this.mediaSource.removeEventListener('sourceopen',this.sourceopenListener_);}this.off();}}const uint8ToUtf8=uintArray=>decodeURIComponent(escape(String.fromCharCode.apply(null,uintArray)));/**\n * @file vtt-segment-loader.js\n */const VTT_LINE_TERMINATORS=new Uint8Array('\\n\\n'.split('').map(char=>char.charCodeAt(0)));/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */class VTTSegmentLoader extends SegmentLoader{constructor(settings,options={}){super(settings,options);// SegmentLoader requires a MediaSource be specified or it will throw an error;\n// however, VTTSegmentLoader has no need of a media source, so delete the reference\nthis.mediaSource_=null;this.subtitlesTrack_=null;this.loaderType_='subtitle';this.featuresNativeTextTracks_=settings.featuresNativeTextTracks;// The VTT segment will have its own time mappings. Saving VTT segment timing info in\n// the sync controller leads to improper behavior.\nthis.shouldSaveSegmentTimingInfo_=false;}createTransmuxer_(){// don't need to transmux any subtitles\nreturn null;}/**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */buffered_(){if(!this.subtitlesTrack_||!this.subtitlesTrack_.cues||!this.subtitlesTrack_.cues.length){return createTimeRanges();}const cues=this.subtitlesTrack_.cues;const start=cues[0].startTime;const end=cues[cues.length-1].startTime;return createTimeRanges([[start,end]]);}/**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */initSegmentForMap(map,set=false){if(!map){return null;}const id=initSegmentId(map);let storedMap=this.initSegments_[id];if(set&&!storedMap&&map.bytes){// append WebVTT line terminators to the media initialization segment if it exists\n// to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n// requires two or more WebVTT line terminators between the WebVTT header and the\n// rest of the file\nconst combinedByteLength=VTT_LINE_TERMINATORS.byteLength+map.bytes.byteLength;const combinedSegment=new Uint8Array(combinedByteLength);combinedSegment.set(map.bytes);combinedSegment.set(VTT_LINE_TERMINATORS,map.bytes.byteLength);this.initSegments_[id]=storedMap={resolvedUri:map.resolvedUri,byterange:map.byterange,bytes:combinedSegment};}return storedMap||map;}/**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */couldBeginLoading_(){return this.playlist_&&this.subtitlesTrack_&&!this.paused();}/**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */init_(){this.state='READY';this.resetEverything();return this.monitorBuffer_();}/**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */track(track){if(typeof track==='undefined'){return this.subtitlesTrack_;}this.subtitlesTrack_=track;// if we were unpaused but waiting for a sourceUpdater, start\n// buffering now\nif(this.state==='INIT'&&this.couldBeginLoading_()){this.init_();}return this.subtitlesTrack_;}/**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   */remove(start,end){removeCuesFromTrack(start,end,this.subtitlesTrack_);}/**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */fillBuffer_(){// see if we need to begin loading immediately\nconst segmentInfo=this.chooseNextRequest_();if(!segmentInfo){return;}if(this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline)===null){// We don't have the timestamp offset that we need to sync subtitles.\n// Rerun on a timestamp offset or user interaction.\nconst checkTimestampOffset=()=>{this.state='READY';if(!this.paused()){// if not paused, queue a buffer check as soon as possible\nthis.monitorBuffer_();}};this.syncController_.one('timestampoffset',checkTimestampOffset);this.state='WAITING_ON_TIMELINE';return;}this.loadSegment_(segmentInfo);}// never set a timestamp offset for vtt segments.\ntimestampOffsetForSegment_(){return null;}chooseNextRequest_(){return this.skipEmptySegments_(super.chooseNextRequest_());}/**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */skipEmptySegments_(segmentInfo){while(segmentInfo&&segmentInfo.segment.empty){// stop at the last possible segmentInfo\nif(segmentInfo.mediaIndex+1>=segmentInfo.playlist.segments.length){segmentInfo=null;break;}segmentInfo=this.generateSegmentInfo_({playlist:segmentInfo.playlist,mediaIndex:segmentInfo.mediaIndex+1,startOfSegment:segmentInfo.startOfSegment+segmentInfo.duration,isSyncRequest:segmentInfo.isSyncRequest});}return segmentInfo;}stopForError(error){this.error(error);this.state='READY';this.pause();this.trigger('error');}/**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */segmentRequestFinished_(error,simpleSegment,result){if(!this.subtitlesTrack_){this.state='READY';return;}this.saveTransferStats_(simpleSegment.stats);// the request was aborted\nif(!this.pendingSegment_){this.state='READY';this.mediaRequestsAborted+=1;return;}if(error){if(error.code===REQUEST_ERRORS.TIMEOUT){this.handleTimeout_();}if(error.code===REQUEST_ERRORS.ABORTED){this.mediaRequestsAborted+=1;}else{this.mediaRequestsErrored+=1;}this.stopForError(error);return;}const segmentInfo=this.pendingSegment_;// although the VTT segment loader bandwidth isn't really used, it's good to\n// maintain functionality between segment loaders\nthis.saveBandwidthRelatedStats_(segmentInfo.duration,simpleSegment.stats);// if this request included a segment key, save that data in the cache\nif(simpleSegment.key){this.segmentKey(simpleSegment.key,true);}this.state='APPENDING';// used for tests\nthis.trigger('appending');const segment=segmentInfo.segment;if(segment.map){segment.map.bytes=simpleSegment.map.bytes;}segmentInfo.bytes=simpleSegment.bytes;// Make sure that vttjs has loaded, otherwise, wait till it finished loading\nif(typeof window$1.WebVTT!=='function'&&this.subtitlesTrack_&&this.subtitlesTrack_.tech_){let loadHandler;const errorHandler=()=>{this.subtitlesTrack_.tech_.off('vttjsloaded',loadHandler);this.stopForError({message:'Error loading vtt.js'});return;};loadHandler=()=>{this.subtitlesTrack_.tech_.off('vttjserror',errorHandler);this.segmentRequestFinished_(error,simpleSegment,result);};this.state='WAITING_ON_VTTJS';this.subtitlesTrack_.tech_.one('vttjsloaded',loadHandler);this.subtitlesTrack_.tech_.one('vttjserror',errorHandler);return;}segment.requested=true;try{this.parseVTTCues_(segmentInfo);}catch(e){this.stopForError({message:e.message});return;}this.updateTimeMapping_(segmentInfo,this.syncController_.timelines[segmentInfo.timeline],this.playlist_);if(segmentInfo.cues.length){segmentInfo.timingInfo={start:segmentInfo.cues[0].startTime,end:segmentInfo.cues[segmentInfo.cues.length-1].endTime};}else{segmentInfo.timingInfo={start:segmentInfo.startOfSegment,end:segmentInfo.startOfSegment+segmentInfo.duration};}if(segmentInfo.isSyncRequest){this.trigger('syncinfoupdate');this.pendingSegment_=null;this.state='READY';return;}segmentInfo.byteLength=segmentInfo.bytes.byteLength;this.mediaSecondsLoaded+=segment.duration;// Create VTTCue instances for each cue in the new segment and add them to\n// the subtitle track\nsegmentInfo.cues.forEach(cue=>{this.subtitlesTrack_.addCue(this.featuresNativeTextTracks_?new window$1.VTTCue(cue.startTime,cue.endTime,cue.text):cue);});// Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n// cues to have identical time-intervals, but if the text is also identical\n// we can safely assume it is a duplicate that can be removed (ex. when a cue\n// \"overlaps\" VTT segments)\nremoveDuplicateCuesFromTrack(this.subtitlesTrack_);this.handleAppendsDone_();}handleData_(){// noop as we shouldn't be getting video/audio data captions\n// that we do not support here.\n}updateTimingInfoEnd_(){// noop\n}/**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */parseVTTCues_(segmentInfo){let decoder;let decodeBytesToString=false;if(typeof window$1.TextDecoder==='function'){decoder=new window$1.TextDecoder('utf8');}else{decoder=window$1.WebVTT.StringDecoder();decodeBytesToString=true;}const parser=new window$1.WebVTT.Parser(window$1,window$1.vttjs,decoder);segmentInfo.cues=[];segmentInfo.timestampmap={MPEGTS:0,LOCAL:0};parser.oncue=segmentInfo.cues.push.bind(segmentInfo.cues);parser.ontimestampmap=map=>{segmentInfo.timestampmap=map;};parser.onparsingerror=error=>{videojs.log.warn('Error encountered when parsing cues: '+error.message);};if(segmentInfo.segment.map){let mapData=segmentInfo.segment.map.bytes;if(decodeBytesToString){mapData=uint8ToUtf8(mapData);}parser.parse(mapData);}let segmentData=segmentInfo.bytes;if(decodeBytesToString){segmentData=uint8ToUtf8(segmentData);}parser.parse(segmentData);parser.flush();}/**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */updateTimeMapping_(segmentInfo,mappingObj,playlist){const segment=segmentInfo.segment;if(!mappingObj){// If the sync controller does not have a mapping of TS to Media Time for the\n// timeline, then we don't have enough information to update the cue\n// start/end times\nreturn;}if(!segmentInfo.cues.length){// If there are no cues, we also do not have enough information to figure out\n// segment timing. Mark that the segment contains no cues so we don't re-request\n// an empty segment.\nsegment.empty=true;return;}const timestampmap=segmentInfo.timestampmap;const diff=timestampmap.MPEGTS/ONE_SECOND_IN_TS-timestampmap.LOCAL+mappingObj.mapping;segmentInfo.cues.forEach(cue=>{// First convert cue time to TS time using the timestamp-map provided within the vtt\ncue.startTime+=diff;cue.endTime+=diff;});if(!playlist.syncInfo){const firstStart=segmentInfo.cues[0].startTime;const lastStart=segmentInfo.cues[segmentInfo.cues.length-1].startTime;playlist.syncInfo={mediaSequence:playlist.mediaSequence+segmentInfo.mediaIndex,time:Math.min(firstStart,lastStart-segment.duration)};}}}/**\n * @file ad-cue-tags.js\n */ /**\n * Searches for an ad cue that overlaps with the given mediaTime\n *\n * @param {Object} track\n *        the track to find the cue for\n *\n * @param {number} mediaTime\n *        the time to find the cue at\n *\n * @return {Object|null}\n *         the found cue or null\n */const findAdCue=function(track,mediaTime){const cues=track.cues;for(let i=0;i<cues.length;i++){const cue=cues[i];if(mediaTime>=cue.adStartTime&&mediaTime<=cue.adEndTime){return cue;}}return null;};const updateAdCues=function(media,track,offset=0){if(!media.segments){return;}let mediaTime=offset;let cue;for(let i=0;i<media.segments.length;i++){const segment=media.segments[i];if(!cue){// Since the cues will span for at least the segment duration, adding a fudge\n// factor of half segment duration will prevent duplicate cues from being\n// created when timing info is not exact (e.g. cue start time initialized\n// at 10.006677, but next call mediaTime is 10.003332 )\ncue=findAdCue(track,mediaTime+segment.duration/2);}if(cue){if('cueIn'in segment){// Found a CUE-IN so end the cue\ncue.endTime=mediaTime;cue.adEndTime=mediaTime;mediaTime+=segment.duration;cue=null;continue;}if(mediaTime<cue.endTime){// Already processed this mediaTime for this cue\nmediaTime+=segment.duration;continue;}// otherwise extend cue until a CUE-IN is found\ncue.endTime+=segment.duration;}else{if('cueOut'in segment){cue=new window$1.VTTCue(mediaTime,mediaTime+segment.duration,segment.cueOut);cue.adStartTime=mediaTime;// Assumes tag format to be\n// #EXT-X-CUE-OUT:30\ncue.adEndTime=mediaTime+parseFloat(segment.cueOut);track.addCue(cue);}if('cueOutCont'in segment){// Entered into the middle of an ad cue\n// Assumes tag formate to be\n// #EXT-X-CUE-OUT-CONT:10/30\nconst[adOffset,adTotal]=segment.cueOutCont.split('/').map(parseFloat);cue=new window$1.VTTCue(mediaTime,mediaTime+segment.duration,'');cue.adStartTime=mediaTime-adOffset;cue.adEndTime=cue.adStartTime+adTotal;track.addCue(cue);}}mediaTime+=segment.duration;}};/**\n * @file sync-controller.js\n */ // synchronize expired playlist segments.\n// the max media sequence diff is 48 hours of live stream\n// content with two second segments. Anything larger than that\n// will likely be invalid.\nconst MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC=86400;const syncPointStrategies=[// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{name:'VOD',run:(syncController,playlist,duration,currentTimeline,currentTime)=>{if(duration!==Infinity){const syncPoint={time:0,segmentIndex:0,partIndex:null};return syncPoint;}return null;}},// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{name:'ProgramDateTime',run:(syncController,playlist,duration,currentTimeline,currentTime)=>{if(!Object.keys(syncController.timelineToDatetimeMappings).length){return null;}let syncPoint=null;let lastDistance=null;const partsAndSegments=getPartsAndSegments(playlist);currentTime=currentTime||0;for(let i=0;i<partsAndSegments.length;i++){// start from the end and loop backwards for live\n// or start from the front and loop forwards for non-live\nconst index=playlist.endList||currentTime===0?i:partsAndSegments.length-(i+1);const partAndSegment=partsAndSegments[index];const segment=partAndSegment.segment;const datetimeMapping=syncController.timelineToDatetimeMappings[segment.timeline];if(!datetimeMapping||!segment.dateTimeObject){continue;}const segmentTime=segment.dateTimeObject.getTime()/1000;let start=segmentTime+datetimeMapping;// take part duration into account.\nif(segment.parts&&typeof partAndSegment.partIndex==='number'){for(let z=0;z<partAndSegment.partIndex;z++){start+=segment.parts[z].duration;}}const distance=Math.abs(currentTime-start);// Once the distance begins to increase, or if distance is 0, we have passed\n// currentTime and can stop looking for better candidates\nif(lastDistance!==null&&(distance===0||lastDistance<distance)){break;}lastDistance=distance;syncPoint={time:start,segmentIndex:partAndSegment.segmentIndex,partIndex:partAndSegment.partIndex};}return syncPoint;}},// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{name:'Segment',run:(syncController,playlist,duration,currentTimeline,currentTime)=>{let syncPoint=null;let lastDistance=null;currentTime=currentTime||0;const partsAndSegments=getPartsAndSegments(playlist);for(let i=0;i<partsAndSegments.length;i++){// start from the end and loop backwards for live\n// or start from the front and loop forwards for non-live\nconst index=playlist.endList||currentTime===0?i:partsAndSegments.length-(i+1);const partAndSegment=partsAndSegments[index];const segment=partAndSegment.segment;const start=partAndSegment.part&&partAndSegment.part.start||segment&&segment.start;if(segment.timeline===currentTimeline&&typeof start!=='undefined'){const distance=Math.abs(currentTime-start);// Once the distance begins to increase, we have passed\n// currentTime and can stop looking for better candidates\nif(lastDistance!==null&&lastDistance<distance){break;}if(!syncPoint||lastDistance===null||lastDistance>=distance){lastDistance=distance;syncPoint={time:start,segmentIndex:partAndSegment.segmentIndex,partIndex:partAndSegment.partIndex};}}}return syncPoint;}},// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{name:'Discontinuity',run:(syncController,playlist,duration,currentTimeline,currentTime)=>{let syncPoint=null;currentTime=currentTime||0;if(playlist.discontinuityStarts&&playlist.discontinuityStarts.length){let lastDistance=null;for(let i=0;i<playlist.discontinuityStarts.length;i++){const segmentIndex=playlist.discontinuityStarts[i];const discontinuity=playlist.discontinuitySequence+i+1;const discontinuitySync=syncController.discontinuities[discontinuity];if(discontinuitySync){const distance=Math.abs(currentTime-discontinuitySync.time);// Once the distance begins to increase, we have passed\n// currentTime and can stop looking for better candidates\nif(lastDistance!==null&&lastDistance<distance){break;}if(!syncPoint||lastDistance===null||lastDistance>=distance){lastDistance=distance;syncPoint={time:discontinuitySync.time,segmentIndex,partIndex:null};}}}}return syncPoint;}},// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{name:'Playlist',run:(syncController,playlist,duration,currentTimeline,currentTime)=>{if(playlist.syncInfo){const syncPoint={time:playlist.syncInfo.time,segmentIndex:playlist.syncInfo.mediaSequence-playlist.mediaSequence,partIndex:null};return syncPoint;}return null;}}];class SyncController extends videojs.EventTarget{constructor(options={}){super();// ...for synching across variants\nthis.timelines=[];this.discontinuities=[];this.timelineToDatetimeMappings={};this.logger_=logger('SyncController');}/**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Object}\n   *          A sync-point object\n   */getSyncPoint(playlist,duration,currentTimeline,currentTime){const syncPoints=this.runStrategies_(playlist,duration,currentTimeline,currentTime);if(!syncPoints.length){// Signal that we need to attempt to get a sync-point manually\n// by fetching a segment in the playlist and constructing\n// a sync-point from that information\nreturn null;}// Now find the sync-point that is closest to the currentTime because\n// that should result in the most accurate guess about which segment\n// to fetch\nreturn this.selectSyncPoint_(syncPoints,{key:'time',value:currentTime});}/**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @return {number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */getExpiredTime(playlist,duration){if(!playlist||!playlist.segments){return null;}const syncPoints=this.runStrategies_(playlist,duration,playlist.discontinuitySequence,0);// Without sync-points, there is not enough information to determine the expired time\nif(!syncPoints.length){return null;}const syncPoint=this.selectSyncPoint_(syncPoints,{key:'segmentIndex',value:0});// If the sync-point is beyond the start of the playlist, we want to subtract the\n// duration from index 0 to syncPoint.segmentIndex instead of adding.\nif(syncPoint.segmentIndex>0){syncPoint.time*=-1;}return Math.abs(syncPoint.time+sumDurations({defaultDuration:playlist.targetDuration,durationList:playlist.segments,startIndex:syncPoint.segmentIndex,endIndex:0}));}/**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Array}\n   *          A list of sync-point objects\n   */runStrategies_(playlist,duration,currentTimeline,currentTime){const syncPoints=[];// Try to find a sync-point in by utilizing various strategies...\nfor(let i=0;i<syncPointStrategies.length;i++){const strategy=syncPointStrategies[i];const syncPoint=strategy.run(this,playlist,duration,currentTimeline,currentTime);if(syncPoint){syncPoint.strategy=strategy.name;syncPoints.push({strategy:strategy.name,syncPoint});}}return syncPoints;}/**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {string} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {number} target.value\n   *        The value to target for the specified key.\n   * @return {Object}\n   *          The sync-point nearest the target\n   */selectSyncPoint_(syncPoints,target){let bestSyncPoint=syncPoints[0].syncPoint;let bestDistance=Math.abs(syncPoints[0].syncPoint[target.key]-target.value);let bestStrategy=syncPoints[0].strategy;for(let i=1;i<syncPoints.length;i++){const newDistance=Math.abs(syncPoints[i].syncPoint[target.key]-target.value);if(newDistance<bestDistance){bestDistance=newDistance;bestSyncPoint=syncPoints[i].syncPoint;bestStrategy=syncPoints[i].strategy;}}this.logger_(`syncPoint for [${target.key}: ${target.value}] chosen with strategy`+` [${bestStrategy}]: [time:${bestSyncPoint.time},`+` segmentIndex:${bestSyncPoint.segmentIndex}`+(typeof bestSyncPoint.partIndex==='number'?`,partIndex:${bestSyncPoint.partIndex}`:'')+']');return bestSyncPoint;}/**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */saveExpiredSegmentInfo(oldPlaylist,newPlaylist){const mediaSequenceDiff=newPlaylist.mediaSequence-oldPlaylist.mediaSequence;// Ignore large media sequence gaps\nif(mediaSequenceDiff>MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC){videojs.log.warn(`Not saving expired segment info. Media sequence gap ${mediaSequenceDiff} is too large.`);return;}// When a segment expires from the playlist and it has a start time\n// save that information as a possible sync-point reference in future\nfor(let i=mediaSequenceDiff-1;i>=0;i--){const lastRemovedSegment=oldPlaylist.segments[i];if(lastRemovedSegment&&typeof lastRemovedSegment.start!=='undefined'){newPlaylist.syncInfo={mediaSequence:oldPlaylist.mediaSequence+i,time:lastRemovedSegment.start};this.logger_(`playlist refresh sync: [time:${newPlaylist.syncInfo.time},`+` mediaSequence: ${newPlaylist.syncInfo.mediaSequence}]`);this.trigger('syncinfoupdate');break;}}}/**\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n   * before segments start to load.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */setDateTimeMappingForStart(playlist){// It's possible for the playlist to be updated before playback starts, meaning time\n// zero is not yet set. If, during these playlist refreshes, a discontinuity is\n// crossed, then the old time zero mapping (for the prior timeline) would be retained\n// unless the mappings are cleared.\nthis.timelineToDatetimeMappings={};if(playlist.segments&&playlist.segments.length&&playlist.segments[0].dateTimeObject){const firstSegment=playlist.segments[0];const playlistTimestamp=firstSegment.dateTimeObject.getTime()/1000;this.timelineToDatetimeMappings[firstSegment.timeline]=-playlistTimestamp;}}/**\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n   * based on the latest timing information.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {SegmentInfo} options.segmentInfo\n   *        The current active request information\n   * @param {boolean} options.shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved for timeline mapping and program date time mappings.\n   */saveSegmentTimingInfo({segmentInfo,shouldSaveTimelineMapping}){const didCalculateSegmentTimeMapping=this.calculateSegmentTimeMapping_(segmentInfo,segmentInfo.timingInfo,shouldSaveTimelineMapping);const segment=segmentInfo.segment;if(didCalculateSegmentTimeMapping){this.saveDiscontinuitySyncInfo_(segmentInfo);// If the playlist does not have sync information yet, record that information\n// now with segment timing information\nif(!segmentInfo.playlist.syncInfo){segmentInfo.playlist.syncInfo={mediaSequence:segmentInfo.playlist.mediaSequence+segmentInfo.mediaIndex,time:segment.start};}}const dateTime=segment.dateTimeObject;if(segment.discontinuity&&shouldSaveTimelineMapping&&dateTime){this.timelineToDatetimeMappings[segment.timeline]=-(dateTime.getTime()/1000);}}timestampOffsetForTimeline(timeline){if(typeof this.timelines[timeline]==='undefined'){return null;}return this.timelines[timeline].time;}mappingForTimeline(timeline){if(typeof this.timelines[timeline]==='undefined'){return null;}return this.timelines[timeline].mapping;}/**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {Object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @param {boolean} shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved in timelines.\n   * @return {boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */calculateSegmentTimeMapping_(segmentInfo,timingInfo,shouldSaveTimelineMapping){// TODO: remove side effects\nconst segment=segmentInfo.segment;const part=segmentInfo.part;let mappingObj=this.timelines[segmentInfo.timeline];let start;let end;if(typeof segmentInfo.timestampOffset==='number'){mappingObj={time:segmentInfo.startOfSegment,mapping:segmentInfo.startOfSegment-timingInfo.start};if(shouldSaveTimelineMapping){this.timelines[segmentInfo.timeline]=mappingObj;this.trigger('timestampoffset');this.logger_(`time mapping for timeline ${segmentInfo.timeline}: `+`[time: ${mappingObj.time}] [mapping: ${mappingObj.mapping}]`);}start=segmentInfo.startOfSegment;end=timingInfo.end+mappingObj.mapping;}else if(mappingObj){start=timingInfo.start+mappingObj.mapping;end=timingInfo.end+mappingObj.mapping;}else{return false;}if(part){part.start=start;part.end=end;}// If we don't have a segment start yet or the start value we got\n// is less than our current segment.start value, save a new start value.\n// We have to do this because parts will have segment timing info saved\n// multiple times and we want segment start to be the earliest part start\n// value for that segment.\nif(!segment.start||start<segment.start){segment.start=start;}segment.end=end;return true;}/**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */saveDiscontinuitySyncInfo_(segmentInfo){const playlist=segmentInfo.playlist;const segment=segmentInfo.segment;// If the current segment is a discontinuity then we know exactly where\n// the start of the range and it's accuracy is 0 (greater accuracy values\n// mean more approximation)\nif(segment.discontinuity){this.discontinuities[segment.timeline]={time:segment.start,accuracy:0};}else if(playlist.discontinuityStarts&&playlist.discontinuityStarts.length){// Search for future discontinuities that we can provide better timing\n// information for and save that information for sync purposes\nfor(let i=0;i<playlist.discontinuityStarts.length;i++){const segmentIndex=playlist.discontinuityStarts[i];const discontinuity=playlist.discontinuitySequence+i+1;const mediaIndexDiff=segmentIndex-segmentInfo.mediaIndex;const accuracy=Math.abs(mediaIndexDiff);if(!this.discontinuities[discontinuity]||this.discontinuities[discontinuity].accuracy>accuracy){let time;if(mediaIndexDiff<0){time=segment.start-sumDurations({defaultDuration:playlist.targetDuration,durationList:playlist.segments,startIndex:segmentInfo.mediaIndex,endIndex:segmentIndex});}else{time=segment.end+sumDurations({defaultDuration:playlist.targetDuration,durationList:playlist.segments,startIndex:segmentInfo.mediaIndex+1,endIndex:segmentIndex});}this.discontinuities[discontinuity]={time,accuracy};}}}}dispose(){this.trigger('dispose');this.off();}}/**\n * The TimelineChangeController acts as a source for segment loaders to listen for and\n * keep track of latest and pending timeline changes. This is useful to ensure proper\n * sync, as each loader may need to make a consideration for what timeline the other\n * loader is on before making changes which could impact the other loader's media.\n *\n * @class TimelineChangeController\n * @extends videojs.EventTarget\n */class TimelineChangeController extends videojs.EventTarget{constructor(){super();this.pendingTimelineChanges_={};this.lastTimelineChanges_={};}clearPendingTimelineChange(type){this.pendingTimelineChanges_[type]=null;this.trigger('pendingtimelinechange');}pendingTimelineChange({type,from,to}){if(typeof from==='number'&&typeof to==='number'){this.pendingTimelineChanges_[type]={type,from,to};this.trigger('pendingtimelinechange');}return this.pendingTimelineChanges_[type];}lastTimelineChange({type,from,to}){if(typeof from==='number'&&typeof to==='number'){this.lastTimelineChanges_[type]={type,from,to};delete this.pendingTimelineChanges_[type];this.trigger('timelinechange');}return this.lastTimelineChanges_[type];}dispose(){this.trigger('dispose');this.pendingTimelineChanges_={};this.lastTimelineChanges_={};this.off();}}/* rollup-plugin-worker-factory start for worker!/Users/poneill/dev/http-streaming/src/decrypter-worker.js */const workerCode=transform(getWorkerString(function(){/**\n   * @file stream.js\n   */ /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */var Stream=/*#__PURE__*/function(){function Stream(){this.listeners={};}/**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */var _proto=Stream.prototype;_proto.on=function on(type,listener){if(!this.listeners[type]){this.listeners[type]=[];}this.listeners[type].push(listener);}/**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */;_proto.off=function off(type,listener){if(!this.listeners[type]){return false;}var index=this.listeners[type].indexOf(listener);// TODO: which is better?\n// In Video.js we slice listener functions\n// on trigger so that it does not mess up the order\n// while we loop through.\n//\n// Here we slice on off so that the loop in trigger\n// can continue using it's old reference to loop without\n// messing up the order.\nthis.listeners[type]=this.listeners[type].slice(0);this.listeners[type].splice(index,1);return index>-1;}/**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */;_proto.trigger=function trigger(type){var callbacks=this.listeners[type];if(!callbacks){return;}// Slicing the arguments on every invocation of this method\n// can add a significant amount of overhead. Avoid the\n// intermediate object creation for the common case of a\n// single callback argument\nif(arguments.length===2){var length=callbacks.length;for(var i=0;i<length;++i){callbacks[i].call(this,arguments[1]);}}else{var args=Array.prototype.slice.call(arguments,1);var _length=callbacks.length;for(var _i=0;_i<_length;++_i){callbacks[_i].apply(this,args);}}}/**\n     * Destroys the stream and cleans up.\n     */;_proto.dispose=function dispose(){this.listeners={};}/**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */;_proto.pipe=function pipe(destination){this.on('data',function(data){destination.push(data);});};return Stream;}();/*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */ /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */function unpad(padded){return padded.subarray(0,padded.byteLength-padded[padded.byteLength-1]);}/*! @name aes-decrypter @version 4.0.1 @license Apache-2.0 */ /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */ /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */const precompute=function(){const tables=[[[],[],[],[],[]],[[],[],[],[],[]]];const encTable=tables[0];const decTable=tables[1];const sbox=encTable[4];const sboxInv=decTable[4];let i;let x;let xInv;const d=[];const th=[];let x2;let x4;let x8;let s;let tEnc;let tDec;// Compute double and third tables\nfor(i=0;i<256;i++){th[(d[i]=i<<1^(i>>7)*283)^i]=i;}for(x=xInv=0;!sbox[x];x^=x2||1,xInv=th[xInv]||1){// Compute sbox\ns=xInv^xInv<<1^xInv<<2^xInv<<3^xInv<<4;s=s>>8^s&255^99;sbox[x]=s;sboxInv[s]=x;// Compute MixColumns\nx8=d[x4=d[x2=d[x]]];tDec=x8*0x1010101^x4*0x10001^x2*0x101^x*0x1010100;tEnc=d[s]*0x101^s*0x1010100;for(i=0;i<4;i++){encTable[i][x]=tEnc=tEnc<<24^tEnc>>>8;decTable[i][s]=tDec=tDec<<24^tDec>>>8;}}// Compactify. Considerable speedup on Firefox.\nfor(i=0;i<5;i++){encTable[i]=encTable[i].slice(0);decTable[i]=decTable[i].slice(0);}return tables;};let aesTables=null;/**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */class AES{constructor(key){/**\n      * The expanded S-box and inverse S-box tables. These will be computed\n      * on the client so that we don't have to send them down the wire.\n      *\n      * There are two tables, _tables[0] is for encryption and\n      * _tables[1] is for decryption.\n      *\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\n      * last (_tables[01][4]) is the S-box itself.\n      *\n      * @private\n      */ // if we have yet to precompute the S-box tables\n// do so now\nif(!aesTables){aesTables=precompute();}// then make a copy of that object for use\nthis._tables=[[aesTables[0][0].slice(),aesTables[0][1].slice(),aesTables[0][2].slice(),aesTables[0][3].slice(),aesTables[0][4].slice()],[aesTables[1][0].slice(),aesTables[1][1].slice(),aesTables[1][2].slice(),aesTables[1][3].slice(),aesTables[1][4].slice()]];let i;let j;let tmp;const sbox=this._tables[0][4];const decTable=this._tables[1];const keyLen=key.length;let rcon=1;if(keyLen!==4&&keyLen!==6&&keyLen!==8){throw new Error('Invalid aes key size');}const encKey=key.slice(0);const decKey=[];this._key=[encKey,decKey];// schedule encryption keys\nfor(i=keyLen;i<4*keyLen+28;i++){tmp=encKey[i-1];// apply sbox\nif(i%keyLen===0||keyLen===8&&i%keyLen===4){tmp=sbox[tmp>>>24]<<24^sbox[tmp>>16&255]<<16^sbox[tmp>>8&255]<<8^sbox[tmp&255];// shift rows and add rcon\nif(i%keyLen===0){tmp=tmp<<8^tmp>>>24^rcon<<24;rcon=rcon<<1^(rcon>>7)*283;}}encKey[i]=encKey[i-keyLen]^tmp;}// schedule decryption keys\nfor(j=0;i;j++,i--){tmp=encKey[j&3?i:i-4];if(i<=4||j<4){decKey[j]=tmp;}else{decKey[j]=decTable[0][sbox[tmp>>>24]]^decTable[1][sbox[tmp>>16&255]]^decTable[2][sbox[tmp>>8&255]]^decTable[3][sbox[tmp&255]];}}}/**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {number} encrypted0 the first word to decrypt\n     * @param {number} encrypted1 the second word to decrypt\n     * @param {number} encrypted2 the third word to decrypt\n     * @param {number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */decrypt(encrypted0,encrypted1,encrypted2,encrypted3,out,offset){const key=this._key[1];// state variables a,b,c,d are loaded with pre-whitened data\nlet a=encrypted0^key[0];let b=encrypted3^key[1];let c=encrypted2^key[2];let d=encrypted1^key[3];let a2;let b2;let c2;// key.length === 2 ?\nconst nInnerRounds=key.length/4-2;let i;let kIndex=4;const table=this._tables[1];// load up the tables\nconst table0=table[0];const table1=table[1];const table2=table[2];const table3=table[3];const sbox=table[4];// Inner rounds. Cribbed from OpenSSL.\nfor(i=0;i<nInnerRounds;i++){a2=table0[a>>>24]^table1[b>>16&255]^table2[c>>8&255]^table3[d&255]^key[kIndex];b2=table0[b>>>24]^table1[c>>16&255]^table2[d>>8&255]^table3[a&255]^key[kIndex+1];c2=table0[c>>>24]^table1[d>>16&255]^table2[a>>8&255]^table3[b&255]^key[kIndex+2];d=table0[d>>>24]^table1[a>>16&255]^table2[b>>8&255]^table3[c&255]^key[kIndex+3];kIndex+=4;a=a2;b=b2;c=c2;}// Last round.\nfor(i=0;i<4;i++){out[(3&-i)+offset]=sbox[a>>>24]<<24^sbox[b>>16&255]<<16^sbox[c>>8&255]<<8^sbox[d&255]^key[kIndex++];a2=a;a=b;b=c;c=d;d=a2;}}}/**\n   * @file async-stream.js\n   */ /**\n   * A wrapper around the Stream class to use setTimeout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */class AsyncStream extends Stream{constructor(){super(Stream);this.jobs=[];this.delay=1;this.timeout_=null;}/**\n     * process an async job\n     *\n     * @private\n     */processJob_(){this.jobs.shift()();if(this.jobs.length){this.timeout_=setTimeout(this.processJob_.bind(this),this.delay);}else{this.timeout_=null;}}/**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */push(job){this.jobs.push(job);if(!this.timeout_){this.timeout_=setTimeout(this.processJob_.bind(this),this.delay);}}}/**\n   * @file decrypter.js\n   *\n   * An asynchronous implementation of AES-128 CBC decryption with\n   * PKCS#7 padding.\n   */ /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */const ntoh=function(word){return word<<24|(word&0xff00)<<8|(word&0xff0000)>>8|word>>>24;};/**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */const decrypt=function(encrypted,key,initVector){// word-level access to the encrypted bytes\nconst encrypted32=new Int32Array(encrypted.buffer,encrypted.byteOffset,encrypted.byteLength>>2);const decipher=new AES(Array.prototype.slice.call(key));// byte and word-level access for the decrypted output\nconst decrypted=new Uint8Array(encrypted.byteLength);const decrypted32=new Int32Array(decrypted.buffer);// temporary variables for working with the IV, encrypted, and\n// decrypted data\nlet init0;let init1;let init2;let init3;let encrypted0;let encrypted1;let encrypted2;let encrypted3;// iteration variable\nlet wordIx;// pull out the words of the IV to ensure we don't modify the\n// passed-in reference and easier access\ninit0=initVector[0];init1=initVector[1];init2=initVector[2];init3=initVector[3];// decrypt four word sequences, applying cipher-block chaining (CBC)\n// to each decrypted block\nfor(wordIx=0;wordIx<encrypted32.length;wordIx+=4){// convert big-endian (network order) words into little-endian\n// (javascript order)\nencrypted0=ntoh(encrypted32[wordIx]);encrypted1=ntoh(encrypted32[wordIx+1]);encrypted2=ntoh(encrypted32[wordIx+2]);encrypted3=ntoh(encrypted32[wordIx+3]);// decrypt the block\ndecipher.decrypt(encrypted0,encrypted1,encrypted2,encrypted3,decrypted32,wordIx);// XOR with the IV, and restore network byte-order to obtain the\n// plaintext\ndecrypted32[wordIx]=ntoh(decrypted32[wordIx]^init0);decrypted32[wordIx+1]=ntoh(decrypted32[wordIx+1]^init1);decrypted32[wordIx+2]=ntoh(decrypted32[wordIx+2]^init2);decrypted32[wordIx+3]=ntoh(decrypted32[wordIx+3]^init3);// setup the IV for the next round\ninit0=encrypted0;init1=encrypted1;init2=encrypted2;init3=encrypted3;}return decrypted;};/**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */class Decrypter{constructor(encrypted,key,initVector,done){const step=Decrypter.STEP;const encrypted32=new Int32Array(encrypted.buffer);const decrypted=new Uint8Array(encrypted.byteLength);let i=0;this.asyncStream_=new AsyncStream();// split up the encryption job and do the individual chunks asynchronously\nthis.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i,i+step),key,initVector,decrypted));for(i=step;i<encrypted32.length;i+=step){initVector=new Uint32Array([ntoh(encrypted32[i-4]),ntoh(encrypted32[i-3]),ntoh(encrypted32[i-2]),ntoh(encrypted32[i-1])]);this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i,i+step),key,initVector,decrypted));}// invoke the done() callback when everything is finished\nthis.asyncStream_.push(function(){// remove pkcs#7 padding from the decrypted bytes\ndone(null,unpad(decrypted));});}/**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {number} the value of step 32000\n     */static get STEP(){// 4 * 8000;\nreturn 32000;}/**\n     * @private\n     */decryptChunk_(encrypted,key,initVector,decrypted){return function(){const bytes=decrypt(encrypted,key,initVector);decrypted.set(bytes,encrypted.byteOffset);};}}var commonjsGlobal=typeof globalThis!=='undefined'?globalThis:typeof window!=='undefined'?window:typeof global!=='undefined'?global:typeof self!=='undefined'?self:{};var win;if(typeof window!==\"undefined\"){win=window;}else if(typeof commonjsGlobal!==\"undefined\"){win=commonjsGlobal;}else if(typeof self!==\"undefined\"){win=self;}else{win={};}var window_1=win;var isArrayBufferView=function isArrayBufferView(obj){if(ArrayBuffer.isView==='function'){return ArrayBuffer.isView(obj);}return obj&&obj.buffer instanceof ArrayBuffer;};var BigInt=window_1.BigInt||Number;[BigInt('0x1'),BigInt('0x100'),BigInt('0x10000'),BigInt('0x1000000'),BigInt('0x100000000'),BigInt('0x10000000000'),BigInt('0x1000000000000'),BigInt('0x100000000000000'),BigInt('0x10000000000000000')];(function(){var a=new Uint16Array([0xFFCC]);var b=new Uint8Array(a.buffer,a.byteOffset,a.byteLength);if(b[0]===0xFF){return'big';}if(b[0]===0xCC){return'little';}return'unknown';})();/**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */const createTransferableMessage=function(message){const transferable={};Object.keys(message).forEach(key=>{const value=message[key];if(isArrayBufferView(value)){transferable[key]={bytes:value.buffer,byteOffset:value.byteOffset,byteLength:value.byteLength};}else{transferable[key]=value;}});return transferable;};/* global self */ /**\n   * Our web worker interface so that things can talk to aes-decrypter\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   */self.onmessage=function(event){const data=event.data;const encrypted=new Uint8Array(data.encrypted.bytes,data.encrypted.byteOffset,data.encrypted.byteLength);const key=new Uint32Array(data.key.bytes,data.key.byteOffset,data.key.byteLength/4);const iv=new Uint32Array(data.iv.bytes,data.iv.byteOffset,data.iv.byteLength/4);/* eslint-disable no-new, handle-callback-err */new Decrypter(encrypted,key,iv,function(err,bytes){self.postMessage(createTransferableMessage({source:data.source,decrypted:bytes}),[bytes.buffer]);});/* eslint-enable */};}));var Decrypter=factory(workerCode);/* rollup-plugin-worker-factory end for worker!/Users/poneill/dev/http-streaming/src/decrypter-worker.js */ /**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */const audioTrackKind_=properties=>{let kind=properties.default?'main':'alternative';if(properties.characteristics&&properties.characteristics.indexOf('public.accessibility.describes-video')>=0){kind='main-desc';}return kind;};/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */const stopLoaders=(segmentLoader,mediaType)=>{segmentLoader.abort();segmentLoader.pause();if(mediaType&&mediaType.activePlaylistLoader){mediaType.activePlaylistLoader.pause();mediaType.activePlaylistLoader=null;}};/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */const startLoaders=(playlistLoader,mediaType)=>{// Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n// playlist loader\nmediaType.activePlaylistLoader=playlistLoader;playlistLoader.load();};/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */const onGroupChanged=(type,settings)=>()=>{const{segmentLoaders:{[type]:segmentLoader,main:mainSegmentLoader},mediaTypes:{[type]:mediaType}}=settings;const activeTrack=mediaType.activeTrack();const activeGroup=mediaType.getActiveGroup();const previousActiveLoader=mediaType.activePlaylistLoader;const lastGroup=mediaType.lastGroup_;// the group did not change do nothing\nif(activeGroup&&lastGroup&&activeGroup.id===lastGroup.id){return;}mediaType.lastGroup_=activeGroup;mediaType.lastTrack_=activeTrack;stopLoaders(segmentLoader,mediaType);if(!activeGroup||activeGroup.isMainPlaylist){// there is no group active or active group is a main playlist and won't change\nreturn;}if(!activeGroup.playlistLoader){if(previousActiveLoader){// The previous group had a playlist loader but the new active group does not\n// this means we are switching from demuxed to muxed audio. In this case we want to\n// do a destructive reset of the main segment loader and not restart the audio\n// loaders.\nmainSegmentLoader.resetEverything();}return;}// Non-destructive resync\nsegmentLoader.resyncLoader();startLoaders(activeGroup.playlistLoader,mediaType);};const onGroupChanging=(type,settings)=>()=>{const{segmentLoaders:{[type]:segmentLoader},mediaTypes:{[type]:mediaType}}=settings;mediaType.lastGroup_=null;segmentLoader.abort();segmentLoader.pause();};/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */const onTrackChanged=(type,settings)=>()=>{const{mainPlaylistLoader,segmentLoaders:{[type]:segmentLoader,main:mainSegmentLoader},mediaTypes:{[type]:mediaType}}=settings;const activeTrack=mediaType.activeTrack();const activeGroup=mediaType.getActiveGroup();const previousActiveLoader=mediaType.activePlaylistLoader;const lastTrack=mediaType.lastTrack_;// track did not change, do nothing\nif(lastTrack&&activeTrack&&lastTrack.id===activeTrack.id){return;}mediaType.lastGroup_=activeGroup;mediaType.lastTrack_=activeTrack;stopLoaders(segmentLoader,mediaType);if(!activeGroup){// there is no group active so we do not want to restart loaders\nreturn;}if(activeGroup.isMainPlaylist){// track did not change, do nothing\nif(!activeTrack||!lastTrack||activeTrack.id===lastTrack.id){return;}const pc=settings.vhs.playlistController_;const newPlaylist=pc.selectPlaylist();// media will not change do nothing\nif(pc.media()===newPlaylist){return;}mediaType.logger_(`track change. Switching main audio from ${lastTrack.id} to ${activeTrack.id}`);mainPlaylistLoader.pause();mainSegmentLoader.resetEverything();pc.fastQualityChange_(newPlaylist);return;}if(type==='AUDIO'){if(!activeGroup.playlistLoader){// when switching from demuxed audio/video to muxed audio/video (noted by no\n// playlist loader for the audio group), we want to do a destructive reset of the\n// main segment loader and not restart the audio loaders\nmainSegmentLoader.setAudio(true);// don't have to worry about disabling the audio of the audio segment loader since\n// it should be stopped\nmainSegmentLoader.resetEverything();return;}// although the segment loader is an audio segment loader, call the setAudio\n// function to ensure it is prepared to re-append the init segment (or handle other\n// config changes)\nsegmentLoader.setAudio(true);mainSegmentLoader.setAudio(false);}if(previousActiveLoader===activeGroup.playlistLoader){// Nothing has actually changed. This can happen because track change events can fire\n// multiple times for a \"single\" change. One for enabling the new active track, and\n// one for disabling the track that was active\nstartLoaders(activeGroup.playlistLoader,mediaType);return;}if(segmentLoader.track){// For WebVTT, set the new text track in the segmentloader\nsegmentLoader.track(activeTrack);}// destructive reset\nsegmentLoader.resetEverything();startLoaders(activeGroup.playlistLoader,mediaType);};const onError={/**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is excluded) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */AUDIO:(type,settings)=>()=>{const{segmentLoaders:{[type]:segmentLoader},mediaTypes:{[type]:mediaType},excludePlaylist}=settings;stopLoaders(segmentLoader,mediaType);// switch back to default audio track\nconst activeTrack=mediaType.activeTrack();const activeGroup=mediaType.activeGroup();const id=(activeGroup.filter(group=>group.default)[0]||activeGroup[0]).id;const defaultTrack=mediaType.tracks[id];if(activeTrack===defaultTrack){// Default track encountered an error. All we can do now is exclude the current\n// rendition and hope another will switch audio groups\nexcludePlaylist({error:{message:'Problem encountered loading the default audio track.'}});return;}videojs.log.warn('Problem encountered loading the alternate audio track.'+'Switching back to default.');for(const trackId in mediaType.tracks){mediaType.tracks[trackId].enabled=mediaType.tracks[trackId]===defaultTrack;}mediaType.onTrackChanged();},/**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */SUBTITLES:(type,settings)=>()=>{const{segmentLoaders:{[type]:segmentLoader},mediaTypes:{[type]:mediaType}}=settings;videojs.log.warn('Problem encountered loading the subtitle track.'+'Disabling subtitle track.');stopLoaders(segmentLoader,mediaType);const track=mediaType.activeTrack();if(track){track.mode='disabled';}mediaType.onTrackChanged();}};const setupListeners={/**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */AUDIO:(type,playlistLoader,settings)=>{if(!playlistLoader){// no playlist loader means audio will be muxed with the video\nreturn;}const{tech,requestOptions,segmentLoaders:{[type]:segmentLoader}}=settings;playlistLoader.on('loadedmetadata',()=>{const media=playlistLoader.media();segmentLoader.playlist(media,requestOptions);// if the video is already playing, or if this isn't a live video and preload\n// permits, start downloading segments\nif(!tech.paused()||media.endList&&tech.preload()!=='none'){segmentLoader.load();}});playlistLoader.on('loadedplaylist',()=>{segmentLoader.playlist(playlistLoader.media(),requestOptions);// If the player isn't paused, ensure that the segment loader is running\nif(!tech.paused()){segmentLoader.load();}});playlistLoader.on('error',onError[type](type,settings));},/**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */SUBTITLES:(type,playlistLoader,settings)=>{const{tech,requestOptions,segmentLoaders:{[type]:segmentLoader},mediaTypes:{[type]:mediaType}}=settings;playlistLoader.on('loadedmetadata',()=>{const media=playlistLoader.media();segmentLoader.playlist(media,requestOptions);segmentLoader.track(mediaType.activeTrack());// if the video is already playing, or if this isn't a live video and preload\n// permits, start downloading segments\nif(!tech.paused()||media.endList&&tech.preload()!=='none'){segmentLoader.load();}});playlistLoader.on('loadedplaylist',()=>{segmentLoader.playlist(playlistLoader.media(),requestOptions);// If the player isn't paused, ensure that the segment loader is running\nif(!tech.paused()){segmentLoader.load();}});playlistLoader.on('error',onError[type](type,settings));}};const initialize={/**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */'AUDIO':(type,settings)=>{const{vhs,sourceType,segmentLoaders:{[type]:segmentLoader},requestOptions,main:{mediaGroups},mediaTypes:{[type]:{groups,tracks,logger_}},mainPlaylistLoader}=settings;const audioOnlyMain=isAudioOnly(mainPlaylistLoader.main);// force a default if we have none\nif(!mediaGroups[type]||Object.keys(mediaGroups[type]).length===0){mediaGroups[type]={main:{default:{default:true}}};if(audioOnlyMain){mediaGroups[type].main.default.playlists=mainPlaylistLoader.main.playlists;}}for(const groupId in mediaGroups[type]){if(!groups[groupId]){groups[groupId]=[];}for(const variantLabel in mediaGroups[type][groupId]){let properties=mediaGroups[type][groupId][variantLabel];let playlistLoader;if(audioOnlyMain){logger_(`AUDIO group '${groupId}' label '${variantLabel}' is a main playlist`);properties.isMainPlaylist=true;playlistLoader=null;// if vhs-json was provided as the source, and the media playlist was resolved,\n// use the resolved media playlist object\n}else if(sourceType==='vhs-json'&&properties.playlists){playlistLoader=new PlaylistLoader(properties.playlists[0],vhs,requestOptions);}else if(properties.resolvedUri){playlistLoader=new PlaylistLoader(properties.resolvedUri,vhs,requestOptions);// TODO: dash isn't the only type with properties.playlists\n// should we even have properties.playlists in this check.\n}else if(properties.playlists&&sourceType==='dash'){playlistLoader=new DashPlaylistLoader(properties.playlists[0],vhs,requestOptions,mainPlaylistLoader);}else{// no resolvedUri means the audio is muxed with the video when using this\n// audio track\nplaylistLoader=null;}properties=merge({id:variantLabel,playlistLoader},properties);setupListeners[type](type,properties.playlistLoader,settings);groups[groupId].push(properties);if(typeof tracks[variantLabel]==='undefined'){const track=new videojs.AudioTrack({id:variantLabel,kind:audioTrackKind_(properties),enabled:false,language:properties.language,default:properties.default,label:variantLabel});tracks[variantLabel]=track;}}}// setup single error event handler for the segment loader\nsegmentLoader.on('error',onError[type](type,settings));},/**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */'SUBTITLES':(type,settings)=>{const{tech,vhs,sourceType,segmentLoaders:{[type]:segmentLoader},requestOptions,main:{mediaGroups},mediaTypes:{[type]:{groups,tracks}},mainPlaylistLoader}=settings;for(const groupId in mediaGroups[type]){if(!groups[groupId]){groups[groupId]=[];}for(const variantLabel in mediaGroups[type][groupId]){if(mediaGroups[type][groupId][variantLabel].forced){// Subtitle playlists with the forced attribute are not selectable in Safari.\n// According to Apple's HLS Authoring Specification:\n//   If content has forced subtitles and regular subtitles in a given language,\n//   the regular subtitles track in that language MUST contain both the forced\n//   subtitles and the regular subtitles for that language.\n// Because of this requirement and that Safari does not add forced subtitles,\n// forced subtitles are skipped here to maintain consistent experience across\n// all platforms\ncontinue;}let properties=mediaGroups[type][groupId][variantLabel];let playlistLoader;if(sourceType==='hls'){playlistLoader=new PlaylistLoader(properties.resolvedUri,vhs,requestOptions);}else if(sourceType==='dash'){const playlists=properties.playlists.filter(p=>p.excludeUntil!==Infinity);if(!playlists.length){return;}playlistLoader=new DashPlaylistLoader(properties.playlists[0],vhs,requestOptions,mainPlaylistLoader);}else if(sourceType==='vhs-json'){playlistLoader=new PlaylistLoader(// if the vhs-json object included the media playlist, use the media playlist\n// as provided, otherwise use the resolved URI to load the playlist\nproperties.playlists?properties.playlists[0]:properties.resolvedUri,vhs,requestOptions);}properties=merge({id:variantLabel,playlistLoader},properties);setupListeners[type](type,properties.playlistLoader,settings);groups[groupId].push(properties);if(typeof tracks[variantLabel]==='undefined'){const track=tech.addRemoteTextTrack({id:variantLabel,kind:'subtitles',default:properties.default&&properties.autoselect,language:properties.language,label:variantLabel},false).track;tracks[variantLabel]=track;}}}// setup single error event handler for the segment loader\nsegmentLoader.on('error',onError[type](type,settings));},/**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */'CLOSED-CAPTIONS':(type,settings)=>{const{tech,main:{mediaGroups},mediaTypes:{[type]:{groups,tracks}}}=settings;for(const groupId in mediaGroups[type]){if(!groups[groupId]){groups[groupId]=[];}for(const variantLabel in mediaGroups[type][groupId]){const properties=mediaGroups[type][groupId][variantLabel];// Look for either 608 (CCn) or 708 (SERVICEn) caption services\nif(!/^(?:CC|SERVICE)/.test(properties.instreamId)){continue;}const captionServices=tech.options_.vhs&&tech.options_.vhs.captionServices||{};let newProps={label:variantLabel,language:properties.language,instreamId:properties.instreamId,default:properties.default&&properties.autoselect};if(captionServices[newProps.instreamId]){newProps=merge(newProps,captionServices[newProps.instreamId]);}if(newProps.default===undefined){delete newProps.default;}// No PlaylistLoader is required for Closed-Captions because the captions are\n// embedded within the video stream\ngroups[groupId].push(merge({id:variantLabel},properties));if(typeof tracks[variantLabel]==='undefined'){const track=tech.addRemoteTextTrack({id:newProps.instreamId,kind:'captions',default:newProps.default,language:newProps.language,label:newProps.label},false).track;tracks[variantLabel]=track;}}}}};const groupMatch=(list,media)=>{for(let i=0;i<list.length;i++){if(playlistMatch(media,list[i])){return true;}if(list[i].playlists&&groupMatch(list[i].playlists,media)){return true;}}return false;};/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */const activeGroup=(type,settings)=>track=>{const{mainPlaylistLoader,mediaTypes:{[type]:{groups}}}=settings;const media=mainPlaylistLoader.media();if(!media){return null;}let variants=null;// set to variants to main media active group\nif(media.attributes[type]){variants=groups[media.attributes[type]];}const groupKeys=Object.keys(groups);if(!variants){// find the mainPlaylistLoader media\n// that is in a media group if we are dealing\n// with audio only\nif(type==='AUDIO'&&groupKeys.length>1&&isAudioOnly(settings.main)){for(let i=0;i<groupKeys.length;i++){const groupPropertyList=groups[groupKeys[i]];if(groupMatch(groupPropertyList,media)){variants=groupPropertyList;break;}}// use the main group if it exists\n}else if(groups.main){variants=groups.main;// only one group, use that one\n}else if(groupKeys.length===1){variants=groups[groupKeys[0]];}}if(typeof track==='undefined'){return variants;}if(track===null||!variants){// An active track was specified so a corresponding group is expected. track === null\n// means no track is currently active so there is no corresponding group\nreturn null;}return variants.filter(props=>props.id===track.id)[0]||null;};const activeTrack={/**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */AUDIO:(type,settings)=>()=>{const{mediaTypes:{[type]:{tracks}}}=settings;for(const id in tracks){if(tracks[id].enabled){return tracks[id];}}return null;},/**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */SUBTITLES:(type,settings)=>()=>{const{mediaTypes:{[type]:{tracks}}}=settings;for(const id in tracks){if(tracks[id].mode==='showing'||tracks[id].mode==='hidden'){return tracks[id];}}return null;}};const getActiveGroup=(type,{mediaTypes})=>()=>{const activeTrack_=mediaTypes[type].activeTrack();if(!activeTrack_){return null;}return mediaTypes[type].activeGroup(activeTrack_);};/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the main manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.mainPlaylistLoader\n *        PlaylistLoader for the main source\n * @param {VhsHandler} settings.vhs\n *        VHS SourceHandler\n * @param {Object} settings.main\n *        The parsed main manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.excludePlaylist\n *        Excludes the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */const setupMediaGroups=settings=>{['AUDIO','SUBTITLES','CLOSED-CAPTIONS'].forEach(type=>{initialize[type](type,settings);});const{mediaTypes,mainPlaylistLoader,tech,vhs,segmentLoaders:{['AUDIO']:audioSegmentLoader,main:mainSegmentLoader}}=settings;// setup active group and track getters and change event handlers\n['AUDIO','SUBTITLES'].forEach(type=>{mediaTypes[type].activeGroup=activeGroup(type,settings);mediaTypes[type].activeTrack=activeTrack[type](type,settings);mediaTypes[type].onGroupChanged=onGroupChanged(type,settings);mediaTypes[type].onGroupChanging=onGroupChanging(type,settings);mediaTypes[type].onTrackChanged=onTrackChanged(type,settings);mediaTypes[type].getActiveGroup=getActiveGroup(type,settings);});// DO NOT enable the default subtitle or caption track.\n// DO enable the default audio track\nconst audioGroup=mediaTypes.AUDIO.activeGroup();if(audioGroup){const groupId=(audioGroup.filter(group=>group.default)[0]||audioGroup[0]).id;mediaTypes.AUDIO.tracks[groupId].enabled=true;mediaTypes.AUDIO.onGroupChanged();mediaTypes.AUDIO.onTrackChanged();const activeAudioGroup=mediaTypes.AUDIO.getActiveGroup();// a similar check for handling setAudio on each loader is run again each time the\n// track is changed, but needs to be handled here since the track may not be considered\n// changed on the first call to onTrackChanged\nif(!activeAudioGroup.playlistLoader){// either audio is muxed with video or the stream is audio only\nmainSegmentLoader.setAudio(true);}else{// audio is demuxed\nmainSegmentLoader.setAudio(false);audioSegmentLoader.setAudio(true);}}mainPlaylistLoader.on('mediachange',()=>{['AUDIO','SUBTITLES'].forEach(type=>mediaTypes[type].onGroupChanged());});mainPlaylistLoader.on('mediachanging',()=>{['AUDIO','SUBTITLES'].forEach(type=>mediaTypes[type].onGroupChanging());});// custom audio track change event handler for usage event\nconst onAudioTrackChanged=()=>{mediaTypes.AUDIO.onTrackChanged();tech.trigger({type:'usage',name:'vhs-audio-change'});};tech.audioTracks().addEventListener('change',onAudioTrackChanged);tech.remoteTextTracks().addEventListener('change',mediaTypes.SUBTITLES.onTrackChanged);vhs.on('dispose',()=>{tech.audioTracks().removeEventListener('change',onAudioTrackChanged);tech.remoteTextTracks().removeEventListener('change',mediaTypes.SUBTITLES.onTrackChanged);});// clear existing audio tracks and add the ones we just created\ntech.clearTracks('audio');for(const id in mediaTypes.AUDIO.tracks){tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);}};/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */const createMediaTypes=()=>{const mediaTypes={};['AUDIO','SUBTITLES','CLOSED-CAPTIONS'].forEach(type=>{mediaTypes[type]={groups:{},tracks:{},activePlaylistLoader:null,activeGroup:noop,activeTrack:noop,getActiveGroup:noop,onGroupChanged:noop,onTrackChanged:noop,lastTrack_:null,logger_:logger(`MediaGroups[${type}]`)};});return mediaTypes;};/**\n * @file playlist-controller.js\n */const ABORT_EARLY_EXCLUSION_SECONDS=60*2;let Vhs$1;// SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\nconst loaderStats=['mediaRequests','mediaRequestsAborted','mediaRequestsTimedout','mediaRequestsErrored','mediaTransferDuration','mediaBytesTransferred','mediaAppends'];const sumLoaderStat=function(stat){return this.audioSegmentLoader_[stat]+this.mainSegmentLoader_[stat];};const shouldSwitchToMedia=function({currentPlaylist,buffered,currentTime,nextPlaylist,bufferLowWaterLine,bufferHighWaterLine,duration,bufferBasedABR,log}){// we have no other playlist to switch to\nif(!nextPlaylist){videojs.log.warn('We received no playlist to switch to. Please check your stream.');return false;}const sharedLogLine=`allowing switch ${currentPlaylist&&currentPlaylist.id||'null'} -> ${nextPlaylist.id}`;if(!currentPlaylist){log(`${sharedLogLine} as current playlist is not set`);return true;}// no need to switch if playlist is the same\nif(nextPlaylist.id===currentPlaylist.id){return false;}// determine if current time is in a buffered range.\nconst isBuffered=Boolean(findRange(buffered,currentTime).length);// If the playlist is live, then we want to not take low water line into account.\n// This is because in LIVE, the player plays 3 segments from the end of the\n// playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n// in those segments, a viewer will never experience a rendition upswitch.\nif(!currentPlaylist.endList){// For LLHLS live streams, don't switch renditions before playback has started, as it almost\n// doubles the time to first playback.\nif(!isBuffered&&typeof currentPlaylist.partTargetDuration==='number'){log(`not ${sharedLogLine} as current playlist is live llhls, but currentTime isn't in buffered.`);return false;}log(`${sharedLogLine} as current playlist is live`);return true;}const forwardBuffer=timeAheadOf(buffered,currentTime);const maxBufferLowWaterLine=bufferBasedABR?Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE:Config.MAX_BUFFER_LOW_WATER_LINE;// For the same reason as LIVE, we ignore the low water line when the VOD\n// duration is below the max potential low water line\nif(duration<maxBufferLowWaterLine){log(`${sharedLogLine} as duration < max low water line (${duration} < ${maxBufferLowWaterLine})`);return true;}const nextBandwidth=nextPlaylist.attributes.BANDWIDTH;const currBandwidth=currentPlaylist.attributes.BANDWIDTH;// when switching down, if our buffer is lower than the high water line,\n// we can switch down\nif(nextBandwidth<currBandwidth&&(!bufferBasedABR||forwardBuffer<bufferHighWaterLine)){let logLine=`${sharedLogLine} as next bandwidth < current bandwidth (${nextBandwidth} < ${currBandwidth})`;if(bufferBasedABR){logLine+=` and forwardBuffer < bufferHighWaterLine (${forwardBuffer} < ${bufferHighWaterLine})`;}log(logLine);return true;}// and if our buffer is higher than the low water line,\n// we can switch up\nif((!bufferBasedABR||nextBandwidth>currBandwidth)&&forwardBuffer>=bufferLowWaterLine){let logLine=`${sharedLogLine} as forwardBuffer >= bufferLowWaterLine (${forwardBuffer} >= ${bufferLowWaterLine})`;if(bufferBasedABR){logLine+=` and next bandwidth > current bandwidth (${nextBandwidth} > ${currBandwidth})`;}log(logLine);return true;}log(`not ${sharedLogLine} as no switching criteria met`);return false;};/**\n * the main playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a main playlist and a series of audio playlists\n * if they are available\n *\n * @class PlaylistController\n * @extends videojs.EventTarget\n */class PlaylistController extends videojs.EventTarget{constructor(options){super();const{src,withCredentials,tech,bandwidth,externVhs,useCueTags,playlistExclusionDuration,enableLowInitialPlaylist,sourceType,cacheEncryptionKeys,bufferBasedABR,leastPixelDiffSelector,captionServices}=options;if(!src){throw new Error('A non-empty playlist URL or JSON manifest string is required');}let{maxPlaylistRetries}=options;if(maxPlaylistRetries===null||typeof maxPlaylistRetries==='undefined'){maxPlaylistRetries=Infinity;}Vhs$1=externVhs;this.bufferBasedABR=Boolean(bufferBasedABR);this.leastPixelDiffSelector=Boolean(leastPixelDiffSelector);this.withCredentials=withCredentials;this.tech_=tech;this.vhs_=tech.vhs;this.sourceType_=sourceType;this.useCueTags_=useCueTags;this.playlistExclusionDuration=playlistExclusionDuration;this.maxPlaylistRetries=maxPlaylistRetries;this.enableLowInitialPlaylist=enableLowInitialPlaylist;if(this.useCueTags_){this.cueTagsTrack_=this.tech_.addTextTrack('metadata','ad-cues');this.cueTagsTrack_.inBandMetadataTrackDispatchType='';}this.requestOptions_={withCredentials,maxPlaylistRetries,timeout:null};this.on('error',this.pauseLoading);this.mediaTypes_=createMediaTypes();this.mediaSource=new window$1.MediaSource();this.handleDurationChange_=this.handleDurationChange_.bind(this);this.handleSourceOpen_=this.handleSourceOpen_.bind(this);this.handleSourceEnded_=this.handleSourceEnded_.bind(this);this.mediaSource.addEventListener('durationchange',this.handleDurationChange_);// load the media source into the player\nthis.mediaSource.addEventListener('sourceopen',this.handleSourceOpen_);this.mediaSource.addEventListener('sourceended',this.handleSourceEnded_);// we don't have to handle sourceclose since dispose will handle termination of\n// everything, and the MediaSource should not be detached without a proper disposal\nthis.seekable_=createTimeRanges();this.hasPlayed_=false;this.syncController_=new SyncController(options);this.segmentMetadataTrack_=tech.addRemoteTextTrack({kind:'metadata',label:'segment-metadata'},false).track;this.decrypter_=new Decrypter();this.sourceUpdater_=new SourceUpdater(this.mediaSource);this.inbandTextTracks_={};this.timelineChangeController_=new TimelineChangeController();const segmentLoaderSettings={vhs:this.vhs_,parse708captions:options.parse708captions,useDtsForTimestampOffset:options.useDtsForTimestampOffset,captionServices,mediaSource:this.mediaSource,currentTime:this.tech_.currentTime.bind(this.tech_),seekable:()=>this.seekable(),seeking:()=>this.tech_.seeking(),duration:()=>this.duration(),hasPlayed:()=>this.hasPlayed_,goalBufferLength:()=>this.goalBufferLength(),bandwidth,syncController:this.syncController_,decrypter:this.decrypter_,sourceType:this.sourceType_,inbandTextTracks:this.inbandTextTracks_,cacheEncryptionKeys,sourceUpdater:this.sourceUpdater_,timelineChangeController:this.timelineChangeController_,exactManifestTimings:options.exactManifestTimings};// The source type check not only determines whether a special DASH playlist loader\n// should be used, but also covers the case where the provided src is a vhs-json\n// manifest object (instead of a URL). In the case of vhs-json, the default\n// PlaylistLoader should be used.\nthis.mainPlaylistLoader_=this.sourceType_==='dash'?new DashPlaylistLoader(src,this.vhs_,this.requestOptions_):new PlaylistLoader(src,this.vhs_,this.requestOptions_);this.setupMainPlaylistLoaderListeners_();// setup segment loaders\n// combined audio/video or just video when alternate audio track is selected\nthis.mainSegmentLoader_=new SegmentLoader(merge(segmentLoaderSettings,{segmentMetadataTrack:this.segmentMetadataTrack_,loaderType:'main'}),options);// alternate audio track\nthis.audioSegmentLoader_=new SegmentLoader(merge(segmentLoaderSettings,{loaderType:'audio'}),options);this.subtitleSegmentLoader_=new VTTSegmentLoader(merge(segmentLoaderSettings,{loaderType:'vtt',featuresNativeTextTracks:this.tech_.featuresNativeTextTracks}),options);this.setupSegmentLoaderListeners_();if(this.bufferBasedABR){this.mainPlaylistLoader_.one('loadedplaylist',()=>this.startABRTimer_());this.tech_.on('pause',()=>this.stopABRTimer_());this.tech_.on('play',()=>this.startABRTimer_());}// Create SegmentLoader stat-getters\n// mediaRequests_\n// mediaRequestsAborted_\n// mediaRequestsTimedout_\n// mediaRequestsErrored_\n// mediaTransferDuration_\n// mediaBytesTransferred_\n// mediaAppends_\nloaderStats.forEach(stat=>{this[stat+'_']=sumLoaderStat.bind(this,stat);});this.logger_=logger('pc');this.triggeredFmp4Usage=false;if(this.tech_.preload()==='none'){this.loadOnPlay_=()=>{this.loadOnPlay_=null;this.mainPlaylistLoader_.load();};this.tech_.one('play',this.loadOnPlay_);}else{this.mainPlaylistLoader_.load();}this.timeToLoadedData__=-1;this.mainAppendsToLoadedData__=-1;this.audioAppendsToLoadedData__=-1;const event=this.tech_.preload()==='none'?'play':'loadstart';// start the first frame timer on loadstart or play (for preload none)\nthis.tech_.one(event,()=>{const timeToLoadedDataStart=Date.now();this.tech_.one('loadeddata',()=>{this.timeToLoadedData__=Date.now()-timeToLoadedDataStart;this.mainAppendsToLoadedData__=this.mainSegmentLoader_.mediaAppends;this.audioAppendsToLoadedData__=this.audioSegmentLoader_.mediaAppends;});});}mainAppendsToLoadedData_(){return this.mainAppendsToLoadedData__;}audioAppendsToLoadedData_(){return this.audioAppendsToLoadedData__;}appendsToLoadedData_(){const main=this.mainAppendsToLoadedData_();const audio=this.audioAppendsToLoadedData_();if(main===-1||audio===-1){return-1;}return main+audio;}timeToLoadedData_(){return this.timeToLoadedData__;}/**\n   * Run selectPlaylist and switch to the new playlist if we should\n   *\n   * @param {string} [reason=abr] a reason for why the ABR check is made\n   * @private\n   */checkABR_(reason='abr'){const nextPlaylist=this.selectPlaylist();if(nextPlaylist&&this.shouldSwitchToMedia_(nextPlaylist)){this.switchMedia_(nextPlaylist,reason);}}switchMedia_(playlist,cause,delay){const oldMedia=this.media();const oldId=oldMedia&&(oldMedia.id||oldMedia.uri);const newId=playlist.id||playlist.uri;if(oldId&&oldId!==newId){this.logger_(`switch media ${oldId} -> ${newId} from ${cause}`);this.tech_.trigger({type:'usage',name:`vhs-rendition-change-${cause}`});}this.mainPlaylistLoader_.media(playlist,delay);}/**\n   * Start a timer that periodically calls checkABR_\n   *\n   * @private\n   */startABRTimer_(){this.stopABRTimer_();this.abrTimer_=window$1.setInterval(()=>this.checkABR_(),250);}/**\n   * Stop the timer that periodically calls checkABR_\n   *\n   * @private\n   */stopABRTimer_(){// if we're scrubbing, we don't need to pause.\n// This getter will be added to Video.js in version 7.11.\nif(this.tech_.scrubbing&&this.tech_.scrubbing()){return;}window$1.clearInterval(this.abrTimer_);this.abrTimer_=null;}/**\n   * Get a list of playlists for the currently selected audio playlist\n   *\n   * @return {Array} the array of audio playlists\n   */getAudioTrackPlaylists_(){const main=this.main();const defaultPlaylists=main&&main.playlists||[];// if we don't have any audio groups then we can only\n// assume that the audio tracks are contained in main\n// playlist array, use that or an empty array.\nif(!main||!main.mediaGroups||!main.mediaGroups.AUDIO){return defaultPlaylists;}const AUDIO=main.mediaGroups.AUDIO;const groupKeys=Object.keys(AUDIO);let track;// get the current active track\nif(Object.keys(this.mediaTypes_.AUDIO.groups).length){track=this.mediaTypes_.AUDIO.activeTrack();// or get the default track from main if mediaTypes_ isn't setup yet\n}else{// default group is `main` or just the first group.\nconst defaultGroup=AUDIO.main||groupKeys.length&&AUDIO[groupKeys[0]];for(const label in defaultGroup){if(defaultGroup[label].default){track={label};break;}}}// no active track no playlists.\nif(!track){return defaultPlaylists;}const playlists=[];// get all of the playlists that are possible for the\n// active track.\nfor(const group in AUDIO){if(AUDIO[group][track.label]){const properties=AUDIO[group][track.label];if(properties.playlists&&properties.playlists.length){playlists.push.apply(playlists,properties.playlists);}else if(properties.uri){playlists.push(properties);}else if(main.playlists.length){// if an audio group does not have a uri\n// see if we have main playlists that use it as a group.\n// if we do then add those to the playlists list.\nfor(let i=0;i<main.playlists.length;i++){const playlist=main.playlists[i];if(playlist.attributes&&playlist.attributes.AUDIO&&playlist.attributes.AUDIO===group){playlists.push(playlist);}}}}}if(!playlists.length){return defaultPlaylists;}return playlists;}/**\n   * Register event handlers on the main playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */setupMainPlaylistLoaderListeners_(){this.mainPlaylistLoader_.on('loadedmetadata',()=>{const media=this.mainPlaylistLoader_.media();const requestTimeout=media.targetDuration*1.5*1000;// If we don't have any more available playlists, we don't want to\n// timeout the request.\nif(isLowestEnabledRendition(this.mainPlaylistLoader_.main,this.mainPlaylistLoader_.media())){this.requestOptions_.timeout=0;}else{this.requestOptions_.timeout=requestTimeout;}// if this isn't a live video and preload permits, start\n// downloading segments\nif(media.endList&&this.tech_.preload()!=='none'){this.mainSegmentLoader_.playlist(media,this.requestOptions_);this.mainSegmentLoader_.load();}setupMediaGroups({sourceType:this.sourceType_,segmentLoaders:{AUDIO:this.audioSegmentLoader_,SUBTITLES:this.subtitleSegmentLoader_,main:this.mainSegmentLoader_},tech:this.tech_,requestOptions:this.requestOptions_,mainPlaylistLoader:this.mainPlaylistLoader_,vhs:this.vhs_,main:this.main(),mediaTypes:this.mediaTypes_,excludePlaylist:this.excludePlaylist.bind(this)});this.triggerPresenceUsage_(this.main(),media);this.setupFirstPlay();if(!this.mediaTypes_.AUDIO.activePlaylistLoader||this.mediaTypes_.AUDIO.activePlaylistLoader.media()){this.trigger('selectedinitialmedia');}else{// We must wait for the active audio playlist loader to\n// finish setting up before triggering this event so the\n// representations API and EME setup is correct\nthis.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata',()=>{this.trigger('selectedinitialmedia');});}});this.mainPlaylistLoader_.on('loadedplaylist',()=>{if(this.loadOnPlay_){this.tech_.off('play',this.loadOnPlay_);}let updatedPlaylist=this.mainPlaylistLoader_.media();if(!updatedPlaylist){// exclude any variants that are not supported by the browser before selecting\n// an initial media as the playlist selectors do not consider browser support\nthis.excludeUnsupportedVariants_();let selectedMedia;if(this.enableLowInitialPlaylist){selectedMedia=this.selectInitialPlaylist();}if(!selectedMedia){selectedMedia=this.selectPlaylist();}if(!selectedMedia||!this.shouldSwitchToMedia_(selectedMedia)){return;}this.initialMedia_=selectedMedia;this.switchMedia_(this.initialMedia_,'initial');// Under the standard case where a source URL is provided, loadedplaylist will\n// fire again since the playlist will be requested. In the case of vhs-json\n// (where the manifest object is provided as the source), when the media\n// playlist's `segments` list is already available, a media playlist won't be\n// requested, and loadedplaylist won't fire again, so the playlist handler must be\n// called on its own here.\nconst haveJsonSource=this.sourceType_==='vhs-json'&&this.initialMedia_.segments;if(!haveJsonSource){return;}updatedPlaylist=this.initialMedia_;}this.handleUpdatedMediaPlaylist(updatedPlaylist);});this.mainPlaylistLoader_.on('error',()=>{const error=this.mainPlaylistLoader_.error;this.excludePlaylist({playlistToExclude:error.playlist,error});});this.mainPlaylistLoader_.on('mediachanging',()=>{this.mainSegmentLoader_.abort();this.mainSegmentLoader_.pause();});this.mainPlaylistLoader_.on('mediachange',()=>{const media=this.mainPlaylistLoader_.media();const requestTimeout=media.targetDuration*1.5*1000;// If we don't have any more available playlists, we don't want to\n// timeout the request.\nif(isLowestEnabledRendition(this.mainPlaylistLoader_.main,this.mainPlaylistLoader_.media())){this.requestOptions_.timeout=0;}else{this.requestOptions_.timeout=requestTimeout;}this.mainPlaylistLoader_.load();// TODO: Create a new event on the PlaylistLoader that signals\n// that the segments have changed in some way and use that to\n// update the SegmentLoader instead of doing it twice here and\n// on `loadedplaylist`\nthis.mainSegmentLoader_.playlist(media,this.requestOptions_);this.mainSegmentLoader_.load();this.tech_.trigger({type:'mediachange',bubbles:true});});this.mainPlaylistLoader_.on('playlistunchanged',()=>{const updatedPlaylist=this.mainPlaylistLoader_.media();// ignore unchanged playlists that have already been\n// excluded for not-changing. We likely just have a really slowly updating\n// playlist.\nif(updatedPlaylist.lastExcludeReason_==='playlist-unchanged'){return;}const playlistOutdated=this.stuckAtPlaylistEnd_(updatedPlaylist);if(playlistOutdated){// Playlist has stopped updating and we're stuck at its end. Try to\n// exclude it and switch to another playlist in the hope that that\n// one is updating (and give the player a chance to re-adjust to the\n// safe live point).\nthis.excludePlaylist({error:{message:'Playlist no longer updating.',reason:'playlist-unchanged'}});// useful for monitoring QoS\nthis.tech_.trigger('playliststuck');}});this.mainPlaylistLoader_.on('renditiondisabled',()=>{this.tech_.trigger({type:'usage',name:'vhs-rendition-disabled'});});this.mainPlaylistLoader_.on('renditionenabled',()=>{this.tech_.trigger({type:'usage',name:'vhs-rendition-enabled'});});}/**\n   * Given an updated media playlist (whether it was loaded for the first time, or\n   * refreshed for live playlists), update any relevant properties and state to reflect\n   * changes in the media that should be accounted for (e.g., cues and duration).\n   *\n   * @param {Object} updatedPlaylist the updated media playlist object\n   *\n   * @private\n   */handleUpdatedMediaPlaylist(updatedPlaylist){if(this.useCueTags_){this.updateAdCues_(updatedPlaylist);}// TODO: Create a new event on the PlaylistLoader that signals\n// that the segments have changed in some way and use that to\n// update the SegmentLoader instead of doing it twice here and\n// on `mediachange`\nthis.mainSegmentLoader_.playlist(updatedPlaylist,this.requestOptions_);this.updateDuration(!updatedPlaylist.endList);// If the player isn't paused, ensure that the segment loader is running,\n// as it is possible that it was temporarily stopped while waiting for\n// a playlist (e.g., in case the playlist errored and we re-requested it).\nif(!this.tech_.paused()){this.mainSegmentLoader_.load();if(this.audioSegmentLoader_){this.audioSegmentLoader_.load();}}}/**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */triggerPresenceUsage_(main,media){const mediaGroups=main.mediaGroups||{};let defaultDemuxed=true;const audioGroupKeys=Object.keys(mediaGroups.AUDIO);for(const mediaGroup in mediaGroups.AUDIO){for(const label in mediaGroups.AUDIO[mediaGroup]){const properties=mediaGroups.AUDIO[mediaGroup][label];if(!properties.uri){defaultDemuxed=false;}}}if(defaultDemuxed){this.tech_.trigger({type:'usage',name:'vhs-demuxed'});}if(Object.keys(mediaGroups.SUBTITLES).length){this.tech_.trigger({type:'usage',name:'vhs-webvtt'});}if(Vhs$1.Playlist.isAes(media)){this.tech_.trigger({type:'usage',name:'vhs-aes'});}if(audioGroupKeys.length&&Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length>1){this.tech_.trigger({type:'usage',name:'vhs-alternate-audio'});}if(this.useCueTags_){this.tech_.trigger({type:'usage',name:'vhs-playlist-cue-tags'});}}shouldSwitchToMedia_(nextPlaylist){const currentPlaylist=this.mainPlaylistLoader_.media()||this.mainPlaylistLoader_.pendingMedia_;const currentTime=this.tech_.currentTime();const bufferLowWaterLine=this.bufferLowWaterLine();const bufferHighWaterLine=this.bufferHighWaterLine();const buffered=this.tech_.buffered();return shouldSwitchToMedia({buffered,currentTime,currentPlaylist,nextPlaylist,bufferLowWaterLine,bufferHighWaterLine,duration:this.duration(),bufferBasedABR:this.bufferBasedABR,log:this.logger_});}/**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */setupSegmentLoaderListeners_(){this.mainSegmentLoader_.on('bandwidthupdate',()=>{// Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's\n// useful to check to see if a rendition switch should be made.\nthis.checkABR_('bandwidthupdate');this.tech_.trigger('bandwidthupdate');});this.mainSegmentLoader_.on('timeout',()=>{if(this.bufferBasedABR){// If a rendition change is needed, then it would've be done on `bandwidthupdate`.\n// Here the only consideration is that for buffer based ABR there's no guarantee\n// of an immediate switch (since the bandwidth is averaged with a timeout\n// bandwidth value of 1), so force a load on the segment loader to keep it going.\nthis.mainSegmentLoader_.load();}});// `progress` events are not reliable enough of a bandwidth measure to trigger buffer\n// based ABR.\nif(!this.bufferBasedABR){this.mainSegmentLoader_.on('progress',()=>{this.trigger('progress');});}this.mainSegmentLoader_.on('error',()=>{const error=this.mainSegmentLoader_.error();this.excludePlaylist({playlistToExclude:error.playlist,error});});this.mainSegmentLoader_.on('appenderror',()=>{this.error=this.mainSegmentLoader_.error_;this.trigger('error');});this.mainSegmentLoader_.on('syncinfoupdate',()=>{this.onSyncInfoUpdate_();});this.mainSegmentLoader_.on('timestampoffset',()=>{this.tech_.trigger({type:'usage',name:'vhs-timestamp-offset'});});this.audioSegmentLoader_.on('syncinfoupdate',()=>{this.onSyncInfoUpdate_();});this.audioSegmentLoader_.on('appenderror',()=>{this.error=this.audioSegmentLoader_.error_;this.trigger('error');});this.mainSegmentLoader_.on('ended',()=>{this.logger_('main segment loader ended');this.onEndOfStream();});this.mainSegmentLoader_.on('earlyabort',event=>{// never try to early abort with the new ABR algorithm\nif(this.bufferBasedABR){return;}this.delegateLoaders_('all',['abort']);this.excludePlaylist({error:{message:'Aborted early because there isn\\'t enough bandwidth to complete '+'the request without rebuffering.'},playlistExclusionDuration:ABORT_EARLY_EXCLUSION_SECONDS});});const updateCodecs=()=>{if(!this.sourceUpdater_.hasCreatedSourceBuffers()){return this.tryToCreateSourceBuffers_();}const codecs=this.getCodecsOrExclude_();// no codecs means that the playlist was excluded\nif(!codecs){return;}this.sourceUpdater_.addOrChangeSourceBuffers(codecs);};this.mainSegmentLoader_.on('trackinfo',updateCodecs);this.audioSegmentLoader_.on('trackinfo',updateCodecs);this.mainSegmentLoader_.on('fmp4',()=>{if(!this.triggeredFmp4Usage){this.tech_.trigger({type:'usage',name:'vhs-fmp4'});this.triggeredFmp4Usage=true;}});this.audioSegmentLoader_.on('fmp4',()=>{if(!this.triggeredFmp4Usage){this.tech_.trigger({type:'usage',name:'vhs-fmp4'});this.triggeredFmp4Usage=true;}});this.audioSegmentLoader_.on('ended',()=>{this.logger_('audioSegmentLoader ended');this.onEndOfStream();});}mediaSecondsLoaded_(){return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded+this.mainSegmentLoader_.mediaSecondsLoaded);}/**\n   * Call load on our SegmentLoaders\n   */load(){this.mainSegmentLoader_.load();if(this.mediaTypes_.AUDIO.activePlaylistLoader){this.audioSegmentLoader_.load();}if(this.mediaTypes_.SUBTITLES.activePlaylistLoader){this.subtitleSegmentLoader_.load();}}/**\n   * Re-tune playback quality level for the current player\n   * conditions. This method will perform destructive actions like removing\n   * already buffered content in order to readjust the currently active\n   * playlist quickly. This is good for manual quality changes\n   *\n   * @private\n   */fastQualityChange_(media=this.selectPlaylist()){if(media===this.mainPlaylistLoader_.media()){this.logger_('skipping fastQualityChange because new media is same as old');return;}this.switchMedia_(media,'fast-quality');// Delete all buffered data to allow an immediate quality switch, then seek to give\n// the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n// ahead is roughly the minimum that will accomplish this across a variety of content\n// in IE and Edge, but seeking in place is sufficient on all other browsers)\n// Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n// Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\nthis.mainSegmentLoader_.resetEverything(()=>{// Since this is not a typical seek, we avoid the seekTo method which can cause segments\n// from the previously enabled rendition to load before the new playlist has finished loading\nif(videojs.browser.IE_VERSION||videojs.browser.IS_EDGE){this.tech_.setCurrentTime(this.tech_.currentTime()+0.04);}else{this.tech_.setCurrentTime(this.tech_.currentTime());}});// don't need to reset audio as it is reset when media changes\n}/**\n   * Begin playback.\n   */play(){if(this.setupFirstPlay()){return;}if(this.tech_.ended()){this.tech_.setCurrentTime(0);}if(this.hasPlayed_){this.load();}const seekable=this.tech_.seekable();// if the viewer has paused and we fell out of the live window,\n// seek forward to the live point\nif(this.tech_.duration()===Infinity){if(this.tech_.currentTime()<seekable.start(0)){return this.tech_.setCurrentTime(seekable.end(seekable.length-1));}}}/**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */setupFirstPlay(){const media=this.mainPlaylistLoader_.media();// Check that everything is ready to begin buffering for the first call to play\n//  If 1) there is no active media\n//     2) the player is paused\n//     3) the first play has already been setup\n// then exit early\nif(!media||this.tech_.paused()||this.hasPlayed_){return false;}// when the video is a live stream\nif(!media.endList){const seekable=this.seekable();if(!seekable.length){// without a seekable range, the player cannot seek to begin buffering at the live\n// point\nreturn false;}if(videojs.browser.IE_VERSION&&this.tech_.readyState()===0){// IE11 throws an InvalidStateError if you try to set currentTime while the\n// readyState is 0, so it must be delayed until the tech fires loadedmetadata.\nthis.tech_.one('loadedmetadata',()=>{this.trigger('firstplay');this.tech_.setCurrentTime(seekable.end(0));this.hasPlayed_=true;});return false;}// trigger firstplay to inform the source handler to ignore the next seek event\nthis.trigger('firstplay');// seek to the live point\nthis.tech_.setCurrentTime(seekable.end(0));}this.hasPlayed_=true;// we can begin loading now that everything is ready\nthis.load();return true;}/**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */handleSourceOpen_(){// Only attempt to create the source buffer if none already exist.\n// handleSourceOpen is also called when we are \"re-opening\" a source buffer\n// after `endOfStream` has been called (in response to a seek for instance)\nthis.tryToCreateSourceBuffers_();// if autoplay is enabled, begin playback. This is duplicative of\n// code in video.js but is required because play() must be invoked\n// *after* the media source has opened.\nif(this.tech_.autoplay()){const playPromise=this.tech_.play();// Catch/silence error when a pause interrupts a play request\n// on browsers which return a promise\nif(typeof playPromise!=='undefined'&&typeof playPromise.then==='function'){playPromise.then(null,e=>{});}}this.trigger('sourceopen');}/**\n   * handle the sourceended event on the MediaSource\n   *\n   * @private\n   */handleSourceEnded_(){if(!this.inbandTextTracks_.metadataTrack_){return;}const cues=this.inbandTextTracks_.metadataTrack_.cues;if(!cues||!cues.length){return;}const duration=this.duration();cues[cues.length-1].endTime=isNaN(duration)||Math.abs(duration)===Infinity?Number.MAX_VALUE:duration;}/**\n   * handle the durationchange event on the MediaSource\n   *\n   * @private\n   */handleDurationChange_(){this.tech_.trigger('durationchange');}/**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */onEndOfStream(){let isEndOfStream=this.mainSegmentLoader_.ended_;if(this.mediaTypes_.AUDIO.activePlaylistLoader){const mainMediaInfo=this.mainSegmentLoader_.getCurrentMediaInfo_();// if the audio playlist loader exists, then alternate audio is active\nif(!mainMediaInfo||mainMediaInfo.hasVideo){// if we do not know if the main segment loader contains video yet or if we\n// definitively know the main segment loader contains video, then we need to wait\n// for both main and audio segment loaders to call endOfStream\nisEndOfStream=isEndOfStream&&this.audioSegmentLoader_.ended_;}else{// otherwise just rely on the audio loader\nisEndOfStream=this.audioSegmentLoader_.ended_;}}if(!isEndOfStream){return;}this.stopABRTimer_();this.sourceUpdater_.endOfStream();}/**\n   * Check if a playlist has stopped being updated\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */stuckAtPlaylistEnd_(playlist){const seekable=this.seekable();if(!seekable.length){// playlist doesn't have enough information to determine whether we are stuck\nreturn false;}const expired=this.syncController_.getExpiredTime(playlist,this.duration());if(expired===null){return false;}// does not use the safe live end to calculate playlist end, since we\n// don't want to say we are stuck while there is still content\nconst absolutePlaylistEnd=Vhs$1.Playlist.playlistEnd(playlist,expired);const currentTime=this.tech_.currentTime();const buffered=this.tech_.buffered();if(!buffered.length){// return true if the playhead reached the absolute end of the playlist\nreturn absolutePlaylistEnd-currentTime<=SAFE_TIME_DELTA;}const bufferedEnd=buffered.end(buffered.length-1);// return true if there is too little buffer left and buffer has reached absolute\n// end of playlist\nreturn bufferedEnd-currentTime<=SAFE_TIME_DELTA&&absolutePlaylistEnd-bufferedEnd<=SAFE_TIME_DELTA;}/**\n   * Exclude a playlist for a set amount of time, making it unavailable for selection by\n   * the rendition selection algorithm, then force a new playlist (rendition) selection.\n   *\n   * @param {Object=} playlistToExclude\n   *                  the playlist to exclude, defaults to the currently selected playlist\n   * @param {Object=} error\n   *                  an optional error\n   * @param {number=} playlistExclusionDuration\n   *                  an optional number of seconds to exclude the playlist\n   */excludePlaylist({playlistToExclude=this.mainPlaylistLoader_.media(),error={},playlistExclusionDuration}){// If the `error` was generated by the playlist loader, it will contain\n// the playlist we were trying to load (but failed) and that should be\n// excluded instead of the currently selected playlist which is likely\n// out-of-date in this scenario\nplaylistToExclude=playlistToExclude||this.mainPlaylistLoader_.media();playlistExclusionDuration=playlistExclusionDuration||error.playlistExclusionDuration||this.playlistExclusionDuration;// If there is no current playlist, then an error occurred while we were\n// trying to load the main OR while we were disposing of the tech\nif(!playlistToExclude){this.error=error;if(this.mediaSource.readyState!=='open'){this.trigger('error');}else{this.sourceUpdater_.endOfStream('network');}return;}playlistToExclude.playlistErrors_++;const playlists=this.mainPlaylistLoader_.main.playlists;const enabledPlaylists=playlists.filter(isEnabled);const isFinalRendition=enabledPlaylists.length===1&&enabledPlaylists[0]===playlistToExclude;// Don't exclude the only playlist unless it was excluded\n// forever\nif(playlists.length===1&&playlistExclusionDuration!==Infinity){videojs.log.warn(`Problem encountered with playlist ${playlistToExclude.id}. `+'Trying again since it is the only playlist.');this.tech_.trigger('retryplaylist');// if this is a final rendition, we should delay\nreturn this.mainPlaylistLoader_.load(isFinalRendition);}if(isFinalRendition){// Since we're on the final non-excluded playlist, and we're about to exclude\n// it, instead of erring the player or retrying this playlist, clear out the current\n// exclusion list. This allows other playlists to be attempted in case any have been\n// fixed.\nlet reincluded=false;playlists.forEach(playlist=>{// skip current playlist which is about to be excluded\nif(playlist===playlistToExclude){return;}const excludeUntil=playlist.excludeUntil;// a playlist cannot be reincluded if it wasn't excluded to begin with.\nif(typeof excludeUntil!=='undefined'&&excludeUntil!==Infinity){reincluded=true;delete playlist.excludeUntil;}});if(reincluded){videojs.log.warn('Removing other playlists from the exclusion list because the last '+'rendition is about to be excluded.');// Technically we are retrying a playlist, in that we are simply retrying a previous\n// playlist. This is needed for users relying on the retryplaylist event to catch a\n// case where the player might be stuck and looping through \"dead\" playlists.\nthis.tech_.trigger('retryplaylist');}}// Exclude this playlist\nlet excludeUntil;if(playlistToExclude.playlistErrors_>this.maxPlaylistRetries){excludeUntil=Infinity;}else{excludeUntil=Date.now()+playlistExclusionDuration*1000;}playlistToExclude.excludeUntil=excludeUntil;if(error.reason){playlistToExclude.lastExcludeReason_=error.reason;}this.tech_.trigger('excludeplaylist');this.tech_.trigger({type:'usage',name:'vhs-rendition-excluded'});// TODO: only load a new playlist if we're excluding the current playlist\n// If this function was called with a playlist that's not the current active playlist\n// (e.g., media().id !== playlistToExclude.id),\n// then a new playlist should not be selected and loaded, as there's nothing wrong with the current playlist.\nconst nextPlaylist=this.selectPlaylist();if(!nextPlaylist){this.error='Playback cannot continue. No available working or supported playlists.';this.trigger('error');return;}const logFn=error.internal?this.logger_:videojs.log.warn;const errorMessage=error.message?' '+error.message:'';logFn(`${error.internal?'Internal problem':'Problem'} encountered with playlist ${playlistToExclude.id}.`+`${errorMessage} Switching to playlist ${nextPlaylist.id}.`);// if audio group changed reset audio loaders\nif(nextPlaylist.attributes.AUDIO!==playlistToExclude.attributes.AUDIO){this.delegateLoaders_('audio',['abort','pause']);}// if subtitle group changed reset subtitle loaders\nif(nextPlaylist.attributes.SUBTITLES!==playlistToExclude.attributes.SUBTITLES){this.delegateLoaders_('subtitle',['abort','pause']);}this.delegateLoaders_('main',['abort','pause']);const delayDuration=nextPlaylist.targetDuration/2*1000||5*1000;const shouldDelay=typeof nextPlaylist.lastRequest==='number'&&Date.now()-nextPlaylist.lastRequest<=delayDuration;// delay if it's a final rendition or if the last refresh is sooner than half targetDuration\nreturn this.switchMedia_(nextPlaylist,'exclude',isFinalRendition||shouldDelay);}/**\n   * Pause all segment/playlist loaders\n   */pauseLoading(){this.delegateLoaders_('all',['abort','pause']);this.stopABRTimer_();}/**\n   * Call a set of functions in order on playlist loaders, segment loaders,\n   * or both types of loaders.\n   *\n   * @param {string} filter\n   *        Filter loaders that should call fnNames using a string. Can be:\n   *        * all - run on all loaders\n   *        * audio - run on all audio loaders\n   *        * subtitle - run on all subtitle loaders\n   *        * main - run on the main loaders\n   *\n   * @param {Array|string} fnNames\n   *        A string or array of function names to call.\n   */delegateLoaders_(filter,fnNames){const loaders=[];const dontFilterPlaylist=filter==='all';if(dontFilterPlaylist||filter==='main'){loaders.push(this.mainPlaylistLoader_);}const mediaTypes=[];if(dontFilterPlaylist||filter==='audio'){mediaTypes.push('AUDIO');}if(dontFilterPlaylist||filter==='subtitle'){mediaTypes.push('CLOSED-CAPTIONS');mediaTypes.push('SUBTITLES');}mediaTypes.forEach(mediaType=>{const loader=this.mediaTypes_[mediaType]&&this.mediaTypes_[mediaType].activePlaylistLoader;if(loader){loaders.push(loader);}});['main','audio','subtitle'].forEach(name=>{const loader=this[`${name}SegmentLoader_`];if(loader&&(filter===name||filter==='all')){loaders.push(loader);}});loaders.forEach(loader=>fnNames.forEach(fnName=>{if(typeof loader[fnName]==='function'){loader[fnName]();}}));}/**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */setCurrentTime(currentTime){const buffered=findRange(this.tech_.buffered(),currentTime);if(!(this.mainPlaylistLoader_&&this.mainPlaylistLoader_.media())){// return immediately if the metadata is not ready yet\nreturn 0;}// it's clearly an edge-case but don't thrown an error if asked to\n// seek within an empty playlist\nif(!this.mainPlaylistLoader_.media().segments){return 0;}// if the seek location is already buffered, continue buffering as usual\nif(buffered&&buffered.length){return currentTime;}// cancel outstanding requests so we begin buffering at the new\n// location\nthis.mainSegmentLoader_.resetEverything();this.mainSegmentLoader_.abort();if(this.mediaTypes_.AUDIO.activePlaylistLoader){this.audioSegmentLoader_.resetEverything();this.audioSegmentLoader_.abort();}if(this.mediaTypes_.SUBTITLES.activePlaylistLoader){this.subtitleSegmentLoader_.resetEverything();this.subtitleSegmentLoader_.abort();}// start segment loader loading in case they are paused\nthis.load();}/**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */duration(){if(!this.mainPlaylistLoader_){return 0;}const media=this.mainPlaylistLoader_.media();if(!media){// no playlists loaded yet, so can't determine a duration\nreturn 0;}// Don't rely on the media source for duration in the case of a live playlist since\n// setting the native MediaSource's duration to infinity ends up with consequences to\n// seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n//\n// This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n// however, few browsers have support for setLiveSeekableRange()\n// https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n//\n// Until a time when the duration of the media source can be set to infinity, and a\n// seekable range specified across browsers, just return Infinity.\nif(!media.endList){return Infinity;}// Since this is a VOD video, it is safe to rely on the media source's duration (if\n// available). If it's not available, fall back to a playlist-calculated estimate.\nif(this.mediaSource){return this.mediaSource.duration;}return Vhs$1.Playlist.duration(media);}/**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */seekable(){return this.seekable_;}onSyncInfoUpdate_(){let audioSeekable;// TODO check for creation of both source buffers before updating seekable\n//\n// A fix was made to this function where a check for\n// this.sourceUpdater_.hasCreatedSourceBuffers\n// was added to ensure that both source buffers were created before seekable was\n// updated. However, it originally had a bug where it was checking for a true and\n// returning early instead of checking for false. Setting it to check for false to\n// return early though created other issues. A call to play() would check for seekable\n// end without verifying that a seekable range was present. In addition, even checking\n// for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n// due to a media update calling load on the segment loaders, skipping a seek to live,\n// thereby starting live streams at the beginning of the stream rather than at the end.\n//\n// This conditional should be fixed to wait for the creation of two source buffers at\n// the same time as the other sections of code are fixed to properly seek to live and\n// not throw an error due to checking for a seekable end when no seekable range exists.\n//\n// For now, fall back to the older behavior, with the understanding that the seekable\n// range may not be completely correct, leading to a suboptimal initial live point.\nif(!this.mainPlaylistLoader_){return;}let media=this.mainPlaylistLoader_.media();if(!media){return;}let expired=this.syncController_.getExpiredTime(media,this.duration());if(expired===null){// not enough information to update seekable\nreturn;}const main=this.mainPlaylistLoader_.main;const mainSeekable=Vhs$1.Playlist.seekable(media,expired,Vhs$1.Playlist.liveEdgeDelay(main,media));if(mainSeekable.length===0){return;}if(this.mediaTypes_.AUDIO.activePlaylistLoader){media=this.mediaTypes_.AUDIO.activePlaylistLoader.media();expired=this.syncController_.getExpiredTime(media,this.duration());if(expired===null){return;}audioSeekable=Vhs$1.Playlist.seekable(media,expired,Vhs$1.Playlist.liveEdgeDelay(main,media));if(audioSeekable.length===0){return;}}let oldEnd;let oldStart;if(this.seekable_&&this.seekable_.length){oldEnd=this.seekable_.end(0);oldStart=this.seekable_.start(0);}if(!audioSeekable){// seekable has been calculated based on buffering video data so it\n// can be returned directly\nthis.seekable_=mainSeekable;}else if(audioSeekable.start(0)>mainSeekable.end(0)||mainSeekable.start(0)>audioSeekable.end(0)){// seekables are pretty far off, rely on main\nthis.seekable_=mainSeekable;}else{this.seekable_=createTimeRanges([[audioSeekable.start(0)>mainSeekable.start(0)?audioSeekable.start(0):mainSeekable.start(0),audioSeekable.end(0)<mainSeekable.end(0)?audioSeekable.end(0):mainSeekable.end(0)]]);}// seekable is the same as last time\nif(this.seekable_&&this.seekable_.length){if(this.seekable_.end(0)===oldEnd&&this.seekable_.start(0)===oldStart){return;}}this.logger_(`seekable updated [${printableRange(this.seekable_)}]`);this.tech_.trigger('seekablechanged');}/**\n   * Update the player duration\n   */updateDuration(isLive){if(this.updateDuration_){this.mediaSource.removeEventListener('sourceopen',this.updateDuration_);this.updateDuration_=null;}if(this.mediaSource.readyState!=='open'){this.updateDuration_=this.updateDuration.bind(this,isLive);this.mediaSource.addEventListener('sourceopen',this.updateDuration_);return;}if(isLive){const seekable=this.seekable();if(!seekable.length){return;}// Even in the case of a live playlist, the native MediaSource's duration should not\n// be set to Infinity (even though this would be expected for a live playlist), since\n// setting the native MediaSource's duration to infinity ends up with consequences to\n// seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n//\n// This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n// however, few browsers have support for setLiveSeekableRange()\n// https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n//\n// Until a time when the duration of the media source can be set to infinity, and a\n// seekable range specified across browsers, the duration should be greater than or\n// equal to the last possible seekable value.\n// MediaSource duration starts as NaN\n// It is possible (and probable) that this case will never be reached for many\n// sources, since the MediaSource reports duration as the highest value without\n// accounting for timestamp offset. For example, if the timestamp offset is -100 and\n// we buffered times 0 to 100 with real times of 100 to 200, even though current\n// time will be between 0 and 100, the native media source may report the duration\n// as 200. However, since we report duration separate from the media source (as\n// Infinity), and as long as the native media source duration value is greater than\n// our reported seekable range, seeks will work as expected. The large number as\n// duration for live is actually a strategy used by some players to work around the\n// issue of live seekable ranges cited above.\nif(isNaN(this.mediaSource.duration)||this.mediaSource.duration<seekable.end(seekable.length-1)){this.sourceUpdater_.setDuration(seekable.end(seekable.length-1));}return;}const buffered=this.tech_.buffered();let duration=Vhs$1.Playlist.duration(this.mainPlaylistLoader_.media());if(buffered.length>0){duration=Math.max(duration,buffered.end(buffered.length-1));}if(this.mediaSource.duration!==duration){this.sourceUpdater_.setDuration(duration);}}/**\n   * dispose of the PlaylistController and everything\n   * that it controls\n   */dispose(){this.trigger('dispose');this.decrypter_.terminate();this.mainPlaylistLoader_.dispose();this.mainSegmentLoader_.dispose();if(this.loadOnPlay_){this.tech_.off('play',this.loadOnPlay_);}['AUDIO','SUBTITLES'].forEach(type=>{const groups=this.mediaTypes_[type].groups;for(const id in groups){groups[id].forEach(group=>{if(group.playlistLoader){group.playlistLoader.dispose();}});}});this.audioSegmentLoader_.dispose();this.subtitleSegmentLoader_.dispose();this.sourceUpdater_.dispose();this.timelineChangeController_.dispose();this.stopABRTimer_();if(this.updateDuration_){this.mediaSource.removeEventListener('sourceopen',this.updateDuration_);}this.mediaSource.removeEventListener('durationchange',this.handleDurationChange_);// load the media source into the player\nthis.mediaSource.removeEventListener('sourceopen',this.handleSourceOpen_);this.mediaSource.removeEventListener('sourceended',this.handleSourceEnded_);this.off();}/**\n   * return the main playlist object if we have one\n   *\n   * @return {Object} the main playlist object that we parsed\n   */main(){return this.mainPlaylistLoader_.main;}/**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */media(){// playlist loader will not return media if it has not been fully loaded\nreturn this.mainPlaylistLoader_.media()||this.initialMedia_;}areMediaTypesKnown_(){const usingAudioLoader=!!this.mediaTypes_.AUDIO.activePlaylistLoader;const hasMainMediaInfo=!!this.mainSegmentLoader_.getCurrentMediaInfo_();// if we are not using an audio loader, then we have audio media info\n// otherwise check on the segment loader.\nconst hasAudioMediaInfo=!usingAudioLoader?true:!!this.audioSegmentLoader_.getCurrentMediaInfo_();// one or both loaders has not loaded sufficently to get codecs\nif(!hasMainMediaInfo||!hasAudioMediaInfo){return false;}return true;}getCodecsOrExclude_(){const media={main:this.mainSegmentLoader_.getCurrentMediaInfo_()||{},audio:this.audioSegmentLoader_.getCurrentMediaInfo_()||{}};// set \"main\" media equal to video\nmedia.video=media.main;const playlistCodecs=codecsForPlaylist(this.main(),this.media());const codecs={};const usingAudioLoader=!!this.mediaTypes_.AUDIO.activePlaylistLoader;if(media.main.hasVideo){codecs.video=playlistCodecs.video||media.main.videoCodec||DEFAULT_VIDEO_CODEC;}if(media.main.isMuxed){codecs.video+=`,${playlistCodecs.audio||media.main.audioCodec||DEFAULT_AUDIO_CODEC}`;}if(media.main.hasAudio&&!media.main.isMuxed||media.audio.hasAudio||usingAudioLoader){codecs.audio=playlistCodecs.audio||media.main.audioCodec||media.audio.audioCodec||DEFAULT_AUDIO_CODEC;// set audio isFmp4 so we use the correct \"supports\" function below\nmedia.audio.isFmp4=media.main.hasAudio&&!media.main.isMuxed?media.main.isFmp4:media.audio.isFmp4;}// no codecs, no playback.\nif(!codecs.audio&&!codecs.video){this.excludePlaylist({playlistToExclude:this.media(),error:{message:'Could not determine codecs for playlist.'},playlistExclusionDuration:Infinity});return;}// fmp4 relies on browser support, while ts relies on muxer support\nconst supportFunction=(isFmp4,codec)=>isFmp4?browserSupportsCodec(codec):muxerSupportsCodec(codec);const unsupportedCodecs={};let unsupportedAudio;['video','audio'].forEach(function(type){if(codecs.hasOwnProperty(type)&&!supportFunction(media[type].isFmp4,codecs[type])){const supporter=media[type].isFmp4?'browser':'muxer';unsupportedCodecs[supporter]=unsupportedCodecs[supporter]||[];unsupportedCodecs[supporter].push(codecs[type]);if(type==='audio'){unsupportedAudio=supporter;}}});if(usingAudioLoader&&unsupportedAudio&&this.media().attributes.AUDIO){const audioGroup=this.media().attributes.AUDIO;this.main().playlists.forEach(variant=>{const variantAudioGroup=variant.attributes&&variant.attributes.AUDIO;if(variantAudioGroup===audioGroup&&variant!==this.media()){variant.excludeUntil=Infinity;}});this.logger_(`excluding audio group ${audioGroup} as ${unsupportedAudio} does not support codec(s): \"${codecs.audio}\"`);}// if we have any unsupported codecs exclude this playlist.\nif(Object.keys(unsupportedCodecs).length){const message=Object.keys(unsupportedCodecs).reduce((acc,supporter)=>{if(acc){acc+=', ';}acc+=`${supporter} does not support codec(s): \"${unsupportedCodecs[supporter].join(',')}\"`;return acc;},'')+'.';this.excludePlaylist({playlistToExclude:this.media(),error:{internal:true,message},playlistExclusionDuration:Infinity});return;}// check if codec switching is happening\nif(this.sourceUpdater_.hasCreatedSourceBuffers()&&!this.sourceUpdater_.canChangeType()){const switchMessages=[];['video','audio'].forEach(type=>{const newCodec=(parseCodecs(this.sourceUpdater_.codecs[type]||'')[0]||{}).type;const oldCodec=(parseCodecs(codecs[type]||'')[0]||{}).type;if(newCodec&&oldCodec&&newCodec.toLowerCase()!==oldCodec.toLowerCase()){switchMessages.push(`\"${this.sourceUpdater_.codecs[type]}\" -> \"${codecs[type]}\"`);}});if(switchMessages.length){this.excludePlaylist({playlistToExclude:this.media(),error:{message:`Codec switching not supported: ${switchMessages.join(', ')}.`,internal:true},playlistExclusionDuration:Infinity});return;}}// TODO: when using the muxer shouldn't we just return\n// the codecs that the muxer outputs?\nreturn codecs;}/**\n   * Create source buffers and exlude any incompatible renditions.\n   *\n   * @private\n   */tryToCreateSourceBuffers_(){// media source is not ready yet or sourceBuffers are already\n// created.\nif(this.mediaSource.readyState!=='open'||this.sourceUpdater_.hasCreatedSourceBuffers()){return;}if(!this.areMediaTypesKnown_()){return;}const codecs=this.getCodecsOrExclude_();// no codecs means that the playlist was excluded\nif(!codecs){return;}this.sourceUpdater_.createSourceBuffers(codecs);const codecString=[codecs.video,codecs.audio].filter(Boolean).join(',');this.excludeIncompatibleVariants_(codecString);}/**\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\n   */excludeUnsupportedVariants_(){const playlists=this.main().playlists;const ids=[];// TODO: why don't we have a property to loop through all\n// playlist? Why did we ever mix indexes and keys?\nObject.keys(playlists).forEach(key=>{const variant=playlists[key];// check if we already processed this playlist.\nif(ids.indexOf(variant.id)!==-1){return;}ids.push(variant.id);const codecs=codecsForPlaylist(this.main,variant);const unsupported=[];if(codecs.audio&&!muxerSupportsCodec(codecs.audio)&&!browserSupportsCodec(codecs.audio)){unsupported.push(`audio codec ${codecs.audio}`);}if(codecs.video&&!muxerSupportsCodec(codecs.video)&&!browserSupportsCodec(codecs.video)){unsupported.push(`video codec ${codecs.video}`);}if(codecs.text&&codecs.text==='stpp.ttml.im1t'){unsupported.push(`text codec ${codecs.text}`);}if(unsupported.length){variant.excludeUntil=Infinity;this.logger_(`excluding ${variant.id} for unsupported: ${unsupported.join(', ')}`);}});}/**\n   * Exclude playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current main playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */excludeIncompatibleVariants_(codecString){const ids=[];const playlists=this.main().playlists;const codecs=unwrapCodecList(parseCodecs(codecString));const codecCount_=codecCount(codecs);const videoDetails=codecs.video&&parseCodecs(codecs.video)[0]||null;const audioDetails=codecs.audio&&parseCodecs(codecs.audio)[0]||null;Object.keys(playlists).forEach(key=>{const variant=playlists[key];// check if we already processed this playlist.\n// or it if it is already excluded forever.\nif(ids.indexOf(variant.id)!==-1||variant.excludeUntil===Infinity){return;}ids.push(variant.id);const exclusionReasons=[];// get codecs from the playlist for this variant\nconst variantCodecs=codecsForPlaylist(this.mainPlaylistLoader_.main,variant);const variantCodecCount=codecCount(variantCodecs);// if no codecs are listed, we cannot determine that this\n// variant is incompatible. Wait for mux.js to probe\nif(!variantCodecs.audio&&!variantCodecs.video){return;}// TODO: we can support this by removing the\n// old media source and creating a new one, but it will take some work.\n// The number of streams cannot change\nif(variantCodecCount!==codecCount_){exclusionReasons.push(`codec count \"${variantCodecCount}\" !== \"${codecCount_}\"`);}// only exclude playlists by codec change, if codecs cannot switch\n// during playback.\nif(!this.sourceUpdater_.canChangeType()){const variantVideoDetails=variantCodecs.video&&parseCodecs(variantCodecs.video)[0]||null;const variantAudioDetails=variantCodecs.audio&&parseCodecs(variantCodecs.audio)[0]||null;// the video codec cannot change\nif(variantVideoDetails&&videoDetails&&variantVideoDetails.type.toLowerCase()!==videoDetails.type.toLowerCase()){exclusionReasons.push(`video codec \"${variantVideoDetails.type}\" !== \"${videoDetails.type}\"`);}// the audio codec cannot change\nif(variantAudioDetails&&audioDetails&&variantAudioDetails.type.toLowerCase()!==audioDetails.type.toLowerCase()){exclusionReasons.push(`audio codec \"${variantAudioDetails.type}\" !== \"${audioDetails.type}\"`);}}if(exclusionReasons.length){variant.excludeUntil=Infinity;this.logger_(`excluding ${variant.id}: ${exclusionReasons.join(' && ')}`);}});}updateAdCues_(media){let offset=0;const seekable=this.seekable();if(seekable.length){offset=seekable.start(0);}updateAdCues(media,this.cueTagsTrack_,offset);}/**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {number} Desired forward buffer length in seconds\n   */goalBufferLength(){const currentTime=this.tech_.currentTime();const initial=Config.GOAL_BUFFER_LENGTH;const rate=Config.GOAL_BUFFER_LENGTH_RATE;const max=Math.max(initial,Config.MAX_GOAL_BUFFER_LENGTH);return Math.min(initial+currentTime*rate,max);}/**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {number} Desired buffer low water line in seconds\n   */bufferLowWaterLine(){const currentTime=this.tech_.currentTime();const initial=Config.BUFFER_LOW_WATER_LINE;const rate=Config.BUFFER_LOW_WATER_LINE_RATE;const max=Math.max(initial,Config.MAX_BUFFER_LOW_WATER_LINE);const newMax=Math.max(initial,Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);return Math.min(initial+currentTime*rate,this.bufferBasedABR?newMax:max);}bufferHighWaterLine(){return Config.BUFFER_HIGH_WATER_LINE;}}/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The main playlist loader\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */const enableFunction=(loader,playlistID,changePlaylistFn)=>enable=>{const playlist=loader.main.playlists[playlistID];const incompatible=isIncompatible(playlist);const currentlyEnabled=isEnabled(playlist);if(typeof enable==='undefined'){return currentlyEnabled;}if(enable){delete playlist.disabled;}else{playlist.disabled=true;}if(enable!==currentlyEnabled&&!incompatible){// Ensure the outside world knows about our changes\nchangePlaylistFn();if(enable){loader.trigger('renditionenabled');}else{loader.trigger('renditiondisabled');}}return enable;};/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */class Representation{constructor(vhsHandler,playlist,id){const{playlistController_:pc}=vhsHandler;const qualityChangeFunction=pc.fastQualityChange_.bind(pc);// some playlist attributes are optional\nif(playlist.attributes){const resolution=playlist.attributes.RESOLUTION;this.width=resolution&&resolution.width;this.height=resolution&&resolution.height;this.bandwidth=playlist.attributes.BANDWIDTH;this.frameRate=playlist.attributes['FRAME-RATE'];}this.codecs=codecsForPlaylist(pc.main(),playlist);this.playlist=playlist;// The id is simply the ordinality of the media playlist\n// within the main playlist\nthis.id=id;// Partially-apply the enableFunction to create a playlist-\n// specific variant\nthis.enabled=enableFunction(vhsHandler.playlists,playlist.id,qualityChangeFunction);}}/**\n * A mixin function that adds the `representations` api to an instance\n * of the VhsHandler class\n *\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n * representation API into\n */const renditionSelectionMixin=function(vhsHandler){// Add a single API-specific function to the VhsHandler instance\nvhsHandler.representations=()=>{const main=vhsHandler.playlistController_.main();const playlists=isAudioOnly(main)?vhsHandler.playlistController_.getAudioTrackPlaylists_():main.playlists;if(!playlists){return[];}return playlists.filter(media=>!isIncompatible(media)).map((e,i)=>new Representation(vhsHandler,e,e.id));};};/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */const timerCancelEvents=['seeking','seeked','pause','playing','error'];/**\n * @class PlaybackWatcher\n */class PlaybackWatcher{/**\n   * Represents an PlaybackWatcher object.\n   *\n   * @class\n   * @param {Object} options an object that includes the tech and settings\n   */constructor(options){this.playlistController_=options.playlistController;this.tech_=options.tech;this.seekable=options.seekable;this.allowSeeksWithinUnsafeLiveWindow=options.allowSeeksWithinUnsafeLiveWindow;this.liveRangeSafeTimeDelta=options.liveRangeSafeTimeDelta;this.media=options.media;this.consecutiveUpdates=0;this.lastRecordedTime=null;this.checkCurrentTimeTimeout_=null;this.logger_=logger('PlaybackWatcher');this.logger_('initialize');const playHandler=()=>this.monitorCurrentTime_();const canPlayHandler=()=>this.monitorCurrentTime_();const waitingHandler=()=>this.techWaiting_();const cancelTimerHandler=()=>this.resetTimeUpdate_();const pc=this.playlistController_;const loaderTypes=['main','subtitle','audio'];const loaderChecks={};loaderTypes.forEach(type=>{loaderChecks[type]={reset:()=>this.resetSegmentDownloads_(type),updateend:()=>this.checkSegmentDownloads_(type)};pc[`${type}SegmentLoader_`].on('appendsdone',loaderChecks[type].updateend);// If a rendition switch happens during a playback stall where the buffer\n// isn't changing we want to reset. We cannot assume that the new rendition\n// will also be stalled, until after new appends.\npc[`${type}SegmentLoader_`].on('playlistupdate',loaderChecks[type].reset);// Playback stalls should not be detected right after seeking.\n// This prevents one segment playlists (single vtt or single segment content)\n// from being detected as stalling. As the buffer will not change in those cases, since\n// the buffer is the entire video duration.\nthis.tech_.on(['seeked','seeking'],loaderChecks[type].reset);});/**\n     * We check if a seek was into a gap through the following steps:\n     * 1. We get a seeking event and we do not get a seeked event. This means that\n     *    a seek was attempted but not completed.\n     * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n     *    removed everything from our buffer and appended a segment, and should be ready\n     *    to check for gaps.\n     */const setSeekingHandlers=fn=>{['main','audio'].forEach(type=>{pc[`${type}SegmentLoader_`][fn]('appended',this.seekingAppendCheck_);});};this.seekingAppendCheck_=()=>{if(this.fixesBadSeeks_()){this.consecutiveUpdates=0;this.lastRecordedTime=this.tech_.currentTime();setSeekingHandlers('off');}};this.clearSeekingAppendCheck_=()=>setSeekingHandlers('off');this.watchForBadSeeking_=()=>{this.clearSeekingAppendCheck_();setSeekingHandlers('on');};this.tech_.on('seeked',this.clearSeekingAppendCheck_);this.tech_.on('seeking',this.watchForBadSeeking_);this.tech_.on('waiting',waitingHandler);this.tech_.on(timerCancelEvents,cancelTimerHandler);this.tech_.on('canplay',canPlayHandler);/*\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n      is surfaced in one of two ways:\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\n          even if the player is in a playing state\n    */this.tech_.one('play',playHandler);// Define the dispose function to clean up our events\nthis.dispose=()=>{this.clearSeekingAppendCheck_();this.logger_('dispose');this.tech_.off('waiting',waitingHandler);this.tech_.off(timerCancelEvents,cancelTimerHandler);this.tech_.off('canplay',canPlayHandler);this.tech_.off('play',playHandler);this.tech_.off('seeking',this.watchForBadSeeking_);this.tech_.off('seeked',this.clearSeekingAppendCheck_);loaderTypes.forEach(type=>{pc[`${type}SegmentLoader_`].off('appendsdone',loaderChecks[type].updateend);pc[`${type}SegmentLoader_`].off('playlistupdate',loaderChecks[type].reset);this.tech_.off(['seeked','seeking'],loaderChecks[type].reset);});if(this.checkCurrentTimeTimeout_){window$1.clearTimeout(this.checkCurrentTimeTimeout_);}this.resetTimeUpdate_();};}/**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */monitorCurrentTime_(){this.checkCurrentTime_();if(this.checkCurrentTimeTimeout_){window$1.clearTimeout(this.checkCurrentTimeTimeout_);}// 42 = 24 fps // 250 is what Webkit uses // FF uses 15\nthis.checkCurrentTimeTimeout_=window$1.setTimeout(this.monitorCurrentTime_.bind(this),250);}/**\n   * Reset stalled download stats for a specific type of loader\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#playlistupdate\n   * @listens Tech#seeking\n   * @listens Tech#seeked\n   */resetSegmentDownloads_(type){const loader=this.playlistController_[`${type}SegmentLoader_`];if(this[`${type}StalledDownloads_`]>0){this.logger_(`resetting possible stalled download count for ${type} loader`);}this[`${type}StalledDownloads_`]=0;this[`${type}Buffered_`]=loader.buffered_();}/**\n   * Checks on every segment `appendsdone` to see\n   * if segment appends are making progress. If they are not\n   * and we are still downloading bytes. We exclude the playlist.\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#appendsdone\n   */checkSegmentDownloads_(type){const pc=this.playlistController_;const loader=pc[`${type}SegmentLoader_`];const buffered=loader.buffered_();const isBufferedDifferent=isRangeDifferent(this[`${type}Buffered_`],buffered);this[`${type}Buffered_`]=buffered;// if another watcher is going to fix the issue or\n// the buffered value for this loader changed\n// appends are working\nif(isBufferedDifferent){this.resetSegmentDownloads_(type);return;}this[`${type}StalledDownloads_`]++;this.logger_(`found #${this[`${type}StalledDownloads_`]} ${type} appends that did not increase buffer (possible stalled download)`,{playlistId:loader.playlist_&&loader.playlist_.id,buffered:timeRangesToArray(buffered)});// after 10 possibly stalled appends with no reset, exclude\nif(this[`${type}StalledDownloads_`]<10){return;}this.logger_(`${type} loader stalled download exclusion`);this.resetSegmentDownloads_(type);this.tech_.trigger({type:'usage',name:`vhs-${type}-download-exclusion`});if(type==='subtitle'){return;}// TODO: should we exclude audio tracks rather than main tracks\n// when type is audio?\npc.excludePlaylist({error:{message:`Excessive ${type} segment downloading detected.`},playlistExclusionDuration:Infinity});}/**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */checkCurrentTime_(){if(this.tech_.paused()||this.tech_.seeking()){return;}const currentTime=this.tech_.currentTime();const buffered=this.tech_.buffered();if(this.lastRecordedTime===currentTime&&(!buffered.length||currentTime+SAFE_TIME_DELTA>=buffered.end(buffered.length-1))){// If current time is at the end of the final buffered region, then any playback\n// stall is most likely caused by buffering in a low bandwidth environment. The tech\n// should fire a `waiting` event in this scenario, but due to browser and tech\n// inconsistencies. Calling `techWaiting_` here allows us to simulate\n// responding to a native `waiting` event when the tech fails to emit one.\nreturn this.techWaiting_();}if(this.consecutiveUpdates>=5&&currentTime===this.lastRecordedTime){this.consecutiveUpdates++;this.waiting_();}else if(currentTime===this.lastRecordedTime){this.consecutiveUpdates++;}else{this.consecutiveUpdates=0;this.lastRecordedTime=currentTime;}}/**\n   * Resets the 'timeupdate' mechanism designed to detect that we are stalled\n   *\n   * @private\n   */resetTimeUpdate_(){this.consecutiveUpdates=0;}/**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {boolean} whether an action was taken to fix the seek\n   * @private\n   */fixesBadSeeks_(){const seeking=this.tech_.seeking();if(!seeking){return false;}// TODO: It's possible that these seekable checks should be moved out of this function\n// and into a function that runs on seekablechange. It's also possible that we only need\n// afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n// seekable range.\nconst seekable=this.seekable();const currentTime=this.tech_.currentTime();const isAfterSeekableRange=this.afterSeekableWindow_(seekable,currentTime,this.media(),this.allowSeeksWithinUnsafeLiveWindow);let seekTo;if(isAfterSeekableRange){const seekableEnd=seekable.end(seekable.length-1);// sync to live point (if VOD, our seekable was updated and we're simply adjusting)\nseekTo=seekableEnd;}if(this.beforeSeekableWindow_(seekable,currentTime)){const seekableStart=seekable.start(0);// sync to the beginning of the live window\n// provide a buffer of .1 seconds to handle rounding/imprecise numbers\nseekTo=seekableStart+(// if the playlist is too short and the seekable range is an exact time (can\n// happen in live with a 3 segment playlist), then don't use a time delta\nseekableStart===seekable.end(0)?0:SAFE_TIME_DELTA);}if(typeof seekTo!=='undefined'){this.logger_(`Trying to seek outside of seekable at time ${currentTime} with `+`seekable range ${printableRange(seekable)}. Seeking to `+`${seekTo}.`);this.tech_.setCurrentTime(seekTo);return true;}const sourceUpdater=this.playlistController_.sourceUpdater_;const buffered=this.tech_.buffered();const audioBuffered=sourceUpdater.audioBuffer?sourceUpdater.audioBuffered():null;const videoBuffered=sourceUpdater.videoBuffer?sourceUpdater.videoBuffered():null;const media=this.media();// verify that at least two segment durations or one part duration have been\n// appended before checking for a gap.\nconst minAppendedDuration=media.partTargetDuration?media.partTargetDuration:(media.targetDuration-TIME_FUDGE_FACTOR)*2;// verify that at least two segment durations have been\n// appended before checking for a gap.\nconst bufferedToCheck=[audioBuffered,videoBuffered];for(let i=0;i<bufferedToCheck.length;i++){// skip null buffered\nif(!bufferedToCheck[i]){continue;}const timeAhead=timeAheadOf(bufferedToCheck[i],currentTime);// if we are less than two video/audio segment durations or one part\n// duration behind we haven't appended enough to call this a bad seek.\nif(timeAhead<minAppendedDuration){return false;}}const nextRange=findNextRange(buffered,currentTime);// we have appended enough content, but we don't have anything buffered\n// to seek over the gap\nif(nextRange.length===0){return false;}seekTo=nextRange.start(0)+SAFE_TIME_DELTA;this.logger_(`Buffered region starts (${nextRange.start(0)}) `+` just beyond seek point (${currentTime}). Seeking to ${seekTo}.`);this.tech_.setCurrentTime(seekTo);return true;}/**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */waiting_(){if(this.techWaiting_()){return;}// All tech waiting checks failed. Use last resort correction\nconst currentTime=this.tech_.currentTime();const buffered=this.tech_.buffered();const currentRange=findRange(buffered,currentTime);// Sometimes the player can stall for unknown reasons within a contiguous buffered\n// region with no indication that anything is amiss (seen in Firefox). Seeking to\n// currentTime is usually enough to kickstart the player. This checks that the player\n// is currently within a buffered region before attempting a corrective seek.\n// Chrome does not appear to continue `timeupdate` events after a `waiting` event\n// until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n// make sure there is ~3 seconds of forward buffer before taking any corrective action\n// to avoid triggering an `unknownwaiting` event when the network is slow.\nif(currentRange.length&&currentTime+3<=currentRange.end(0)){this.resetTimeUpdate_();this.tech_.setCurrentTime(currentTime);this.logger_(`Stopped at ${currentTime} while inside a buffered region `+`[${currentRange.start(0)} -> ${currentRange.end(0)}]. Attempting to resume `+'playback by seeking to the current time.');// unknown waiting corrections may be useful for monitoring QoS\nthis.tech_.trigger({type:'usage',name:'vhs-unknown-waiting'});return;}}/**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */techWaiting_(){const seekable=this.seekable();const currentTime=this.tech_.currentTime();if(this.tech_.seeking()){// Tech is seeking or already waiting on another action, no action needed\nreturn true;}if(this.beforeSeekableWindow_(seekable,currentTime)){const livePoint=seekable.end(seekable.length-1);this.logger_(`Fell out of live window at time ${currentTime}. Seeking to `+`live point (seekable end) ${livePoint}`);this.resetTimeUpdate_();this.tech_.setCurrentTime(livePoint);// live window resyncs may be useful for monitoring QoS\nthis.tech_.trigger({type:'usage',name:'vhs-live-resync'});return true;}const sourceUpdater=this.tech_.vhs.playlistController_.sourceUpdater_;const buffered=this.tech_.buffered();const videoUnderflow=this.videoUnderflow_({audioBuffered:sourceUpdater.audioBuffered(),videoBuffered:sourceUpdater.videoBuffered(),currentTime});if(videoUnderflow){// Even though the video underflowed and was stuck in a gap, the audio overplayed\n// the gap, leading currentTime into a buffered range. Seeking to currentTime\n// allows the video to catch up to the audio position without losing any audio\n// (only suffering ~3 seconds of frozen video and a pause in audio playback).\nthis.resetTimeUpdate_();this.tech_.setCurrentTime(currentTime);// video underflow may be useful for monitoring QoS\nthis.tech_.trigger({type:'usage',name:'vhs-video-underflow'});return true;}const nextRange=findNextRange(buffered,currentTime);// check for gap\nif(nextRange.length>0){this.logger_(`Stopped at ${currentTime} and seeking to ${nextRange.start(0)}`);this.resetTimeUpdate_();this.skipTheGap_(currentTime);return true;}// All checks failed. Returning false to indicate failure to correct waiting\nreturn false;}afterSeekableWindow_(seekable,currentTime,playlist,allowSeeksWithinUnsafeLiveWindow=false){if(!seekable.length){// we can't make a solid case if there's no seekable, default to false\nreturn false;}let allowedEnd=seekable.end(seekable.length-1)+SAFE_TIME_DELTA;const isLive=!playlist.endList;if(isLive&&allowSeeksWithinUnsafeLiveWindow){allowedEnd=seekable.end(seekable.length-1)+playlist.targetDuration*3;}if(currentTime>allowedEnd){return true;}return false;}beforeSeekableWindow_(seekable,currentTime){if(seekable.length&&// can't fall before 0 and 0 seekable start identifies VOD stream\nseekable.start(0)>0&&currentTime<seekable.start(0)-this.liveRangeSafeTimeDelta){return true;}return false;}videoUnderflow_({videoBuffered,audioBuffered,currentTime}){// audio only content will not have video underflow :)\nif(!videoBuffered){return;}let gap;// find a gap in demuxed content.\nif(videoBuffered.length&&audioBuffered.length){// in Chrome audio will continue to play for ~3s when we run out of video\n// so we have to check that the video buffer did have some buffer in the\n// past.\nconst lastVideoRange=findRange(videoBuffered,currentTime-3);const videoRange=findRange(videoBuffered,currentTime);const audioRange=findRange(audioBuffered,currentTime);if(audioRange.length&&!videoRange.length&&lastVideoRange.length){gap={start:lastVideoRange.end(0),end:audioRange.end(0)};}// find a gap in muxed content.\n}else{const nextRange=findNextRange(videoBuffered,currentTime);// Even if there is no available next range, there is still a possibility we are\n// stuck in a gap due to video underflow.\nif(!nextRange.length){gap=this.gapFromVideoUnderflow_(videoBuffered,currentTime);}}if(gap){this.logger_(`Encountered a gap in video from ${gap.start} to ${gap.end}. `+`Seeking to current time ${currentTime}`);return true;}return false;}/**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */skipTheGap_(scheduledCurrentTime){const buffered=this.tech_.buffered();const currentTime=this.tech_.currentTime();const nextRange=findNextRange(buffered,currentTime);this.resetTimeUpdate_();if(nextRange.length===0||currentTime!==scheduledCurrentTime){return;}this.logger_('skipTheGap_:','currentTime:',currentTime,'scheduled currentTime:',scheduledCurrentTime,'nextRange start:',nextRange.start(0));// only seek if we still have not played\nthis.tech_.setCurrentTime(nextRange.start(0)+TIME_FUDGE_FACTOR);this.tech_.trigger({type:'usage',name:'vhs-gap-skip'});}gapFromVideoUnderflow_(buffered,currentTime){// At least in Chrome, if there is a gap in the video buffer, the audio will continue\n// playing for ~3 seconds after the video gap starts. This is done to account for\n// video buffer underflow/underrun (note that this is not done when there is audio\n// buffer underflow/underrun -- in that case the video will stop as soon as it\n// encounters the gap, as audio stalls are more noticeable/jarring to a user than\n// video stalls). The player's time will reflect the playthrough of audio, so the\n// time will appear as if we are in a buffered region, even if we are stuck in a\n// \"gap.\"\n//\n// Example:\n// video buffer:   0 => 10.1, 10.2 => 20\n// audio buffer:   0 => 20\n// overall buffer: 0 => 10.1, 10.2 => 20\n// current time: 13\n//\n// Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n// however, the audio continued playing until it reached ~3 seconds past the gap\n// (13 seconds), at which point it stops as well. Since current time is past the\n// gap, findNextRange will return no ranges.\n//\n// To check for this issue, we see if there is a gap that starts somewhere within\n// a 3 second range (3 seconds +/- 1 second) back from our current time.\nconst gaps=findGaps(buffered);for(let i=0;i<gaps.length;i++){const start=gaps.start(i);const end=gaps.end(i);// gap is starts no more than 4 seconds back\nif(currentTime-start<4&&currentTime-start>2){return{start,end};}}return null;}}const defaultOptions={errorInterval:30,getSource(next){const tech=this.tech({IWillNotUseThisInPlugins:true});const sourceObj=tech.currentSource_||this.currentSource();return next(sourceObj);}};/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */const initPlugin=function(player,options){let lastCalled=0;let seekTo=0;const localOptions=merge(defaultOptions,options);player.ready(()=>{player.trigger({type:'usage',name:'vhs-error-reload-initialized'});});/**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */const loadedMetadataHandler=function(){if(seekTo){player.currentTime(seekTo);}};/**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */const setSource=function(sourceObj){if(sourceObj===null||sourceObj===undefined){return;}seekTo=player.duration()!==Infinity&&player.currentTime()||0;player.one('loadedmetadata',loadedMetadataHandler);player.src(sourceObj);player.trigger({type:'usage',name:'vhs-error-reload'});player.play();};/**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */const errorHandler=function(){// Do not attempt to reload the source if a source-reload occurred before\n// 'errorInterval' time has elapsed since the last source-reload\nif(Date.now()-lastCalled<localOptions.errorInterval*1000){player.trigger({type:'usage',name:'vhs-error-reload-canceled'});return;}if(!localOptions.getSource||typeof localOptions.getSource!=='function'){videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');return;}lastCalled=Date.now();return localOptions.getSource.call(player,setSource);};/**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */const cleanupEvents=function(){player.off('loadedmetadata',loadedMetadataHandler);player.off('error',errorHandler);player.off('dispose',cleanupEvents);};/**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */const reinitPlugin=function(newOptions){cleanupEvents();initPlugin(player,newOptions);};player.on('error',errorHandler);player.on('dispose',cleanupEvents);// Overwrite the plugin function so that we can correctly cleanup before\n// initializing the plugin\nplayer.reloadSourceOnError=reinitPlugin;};/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */const reloadSourceOnError=function(options){initPlugin(this,options);};var version$4=\"3.0.0\";var version$3=\"6.2.0\";var version$2=\"1.0.1\";var version$1=\"6.0.0\";var version=\"4.0.1\";/**\n * @file videojs-http-streaming.js\n *\n * The main file for the VHS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/main/LICENSE\n */const Vhs={PlaylistLoader,Playlist,utils,STANDARD_PLAYLIST_SELECTOR:lastBandwidthSelector,INITIAL_PLAYLIST_SELECTOR:lowestBitrateCompatibleVariantSelector,lastBandwidthSelector,movingAverageBandwidthSelector,comparePlaylistBandwidth,comparePlaylistResolution,xhr:xhrFactory()};// Define getter/setters for config properties\nObject.keys(Config).forEach(prop=>{Object.defineProperty(Vhs,prop,{get(){videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);return Config[prop];},set(value){videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);if(typeof value!=='number'||value<0){videojs.log.warn(`value of Vhs.${prop} must be greater than or equal to 0`);return;}Config[prop]=value;}});});const LOCAL_STORAGE_KEY='videojs-vhs';/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleVhsMediaChange\n */const handleVhsMediaChange=function(qualityLevels,playlistLoader){const newPlaylist=playlistLoader.media();let selectedIndex=-1;for(let i=0;i<qualityLevels.length;i++){if(qualityLevels[i].id===newPlaylist.id){selectedIndex=i;break;}}qualityLevels.selectedIndex_=selectedIndex;qualityLevels.trigger({selectedIndex,type:'change'});};/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} vhs Vhs object to listen to for media events.\n * @function handleVhsLoadedMetadata\n */const handleVhsLoadedMetadata=function(qualityLevels,vhs){vhs.representations().forEach(rep=>{qualityLevels.addQualityLevel(rep);});handleVhsMediaChange(qualityLevels,vhs.playlists);};// VHS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\nVhs.canPlaySource=function(){return videojs.log.warn('VHS is no longer a tech. Please remove it from '+'your player\\'s techOrder.');};const emeKeySystems=(keySystemOptions,mainPlaylist,audioPlaylist)=>{if(!keySystemOptions){return keySystemOptions;}let codecs={};if(mainPlaylist&&mainPlaylist.attributes&&mainPlaylist.attributes.CODECS){codecs=unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));}if(audioPlaylist&&audioPlaylist.attributes&&audioPlaylist.attributes.CODECS){codecs.audio=audioPlaylist.attributes.CODECS;}const videoContentType=getMimeForCodec(codecs.video);const audioContentType=getMimeForCodec(codecs.audio);// upsert the content types based on the selected playlist\nconst keySystemContentTypes={};for(const keySystem in keySystemOptions){keySystemContentTypes[keySystem]={};if(audioContentType){keySystemContentTypes[keySystem].audioContentType=audioContentType;}if(videoContentType){keySystemContentTypes[keySystem].videoContentType=videoContentType;}// Default to using the video playlist's PSSH even though they may be different, as\n// videojs-contrib-eme will only accept one in the options.\n//\n// This shouldn't be an issue for most cases as early intialization will handle all\n// unique PSSH values, and if they aren't, then encrypted events should have the\n// specific information needed for the unique license.\nif(mainPlaylist.contentProtection&&mainPlaylist.contentProtection[keySystem]&&mainPlaylist.contentProtection[keySystem].pssh){keySystemContentTypes[keySystem].pssh=mainPlaylist.contentProtection[keySystem].pssh;}// videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n// so we need to prevent overwriting the URL entirely\nif(typeof keySystemOptions[keySystem]==='string'){keySystemContentTypes[keySystem].url=keySystemOptions[keySystem];}}return merge(keySystemOptions,keySystemContentTypes);};/**\n * @typedef {Object} KeySystems\n *\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n * Note: not all options are listed here.\n *\n * @property {Uint8Array} [pssh]\n *           Protection System Specific Header\n */ /**\n * Goes through all the playlists and collects an array of KeySystems options objects\n * containing each playlist's keySystems and their pssh values, if available.\n *\n * @param {Object[]} playlists\n *        The playlists to look through\n * @param {string[]} keySystems\n *        The keySystems to collect pssh values for\n *\n * @return {KeySystems[]}\n *         An array of KeySystems objects containing available key systems and their\n *         pssh values\n */const getAllPsshKeySystemsOptions=(playlists,keySystems)=>{return playlists.reduce((keySystemsArr,playlist)=>{if(!playlist.contentProtection){return keySystemsArr;}const keySystemsOptions=keySystems.reduce((keySystemsObj,keySystem)=>{const keySystemOptions=playlist.contentProtection[keySystem];if(keySystemOptions&&keySystemOptions.pssh){keySystemsObj[keySystem]={pssh:keySystemOptions.pssh};}return keySystemsObj;},{});if(Object.keys(keySystemsOptions).length){keySystemsArr.push(keySystemsOptions);}return keySystemsArr;},[]);};/**\n * Returns a promise that waits for the\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n *\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n * browsers.\n *\n * As per the above ticket, this is particularly important for Chrome, where, if\n * unencrypted content is appended before encrypted content and the key session has not\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n * during playback.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n * @param {Object[]} mainPlaylists\n *        The playlists found on the main playlist object\n *\n * @return {Object}\n *         Promise that resolves when the key session has been created\n */const waitForKeySessionCreation=({player,sourceKeySystems,audioMedia,mainPlaylists})=>{if(!player.eme.initializeMediaKeys){return Promise.resolve();}// TODO should all audio PSSH values be initialized for DRM?\n//\n// All unique video rendition pssh values are initialized for DRM, but here only\n// the initial audio playlist license is initialized. In theory, an encrypted\n// event should be fired if the user switches to an alternative audio playlist\n// where a license is required, but this case hasn't yet been tested. In addition, there\n// may be many alternate audio playlists unlikely to be used (e.g., multiple different\n// languages).\nconst playlists=audioMedia?mainPlaylists.concat([audioMedia]):mainPlaylists;const keySystemsOptionsArr=getAllPsshKeySystemsOptions(playlists,Object.keys(sourceKeySystems));const initializationFinishedPromises=[];const keySessionCreatedPromises=[];// Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n// only place where it should not be deduped is for ms-prefixed APIs, but the early\n// return for IE11 above, and the existence of modern EME APIs in addition to\n// ms-prefixed APIs on Edge should prevent this from being a concern.\n// initializeMediaKeys also won't use the webkit-prefixed APIs.\nkeySystemsOptionsArr.forEach(keySystemsOptions=>{keySessionCreatedPromises.push(new Promise((resolve,reject)=>{player.tech_.one('keysessioncreated',resolve);}));initializationFinishedPromises.push(new Promise((resolve,reject)=>{player.eme.initializeMediaKeys({keySystems:keySystemsOptions},err=>{if(err){reject(err);return;}resolve();});}));});// The reasons Promise.race is chosen over Promise.any:\n//\n// * Promise.any is only available in Safari 14+.\n// * None of these promises are expected to reject. If they do reject, it might be\n//   better here for the race to surface the rejection, rather than mask it by using\n//   Promise.any.\nreturn Promise.race([// If a session was previously created, these will all finish resolving without\n// creating a new session, otherwise it will take until the end of all license\n// requests, which is why the key session check is used (to make setup much faster).\nPromise.all(initializationFinishedPromises),// Once a single session is created, the browser knows DRM will be used.\nPromise.race(keySessionCreatedPromises)]);};/**\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n * there are keySystems on the source, sets up source options to prepare the source for\n * eme.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} media\n *        The active media playlist\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n *\n * @return {boolean}\n *         Whether or not options were configured and EME is available\n */const setupEmeOptions=({player,sourceKeySystems,media,audioMedia})=>{const sourceOptions=emeKeySystems(sourceKeySystems,media,audioMedia);if(!sourceOptions){return false;}player.currentSource().keySystems=sourceOptions;// eme handles the rest of the setup, so if it is missing\n// do nothing.\nif(sourceOptions&&!player.eme){videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');return false;}return true;};const getVhsLocalStorage=()=>{if(!window$1.localStorage){return null;}const storedObject=window$1.localStorage.getItem(LOCAL_STORAGE_KEY);if(!storedObject){return null;}try{return JSON.parse(storedObject);}catch(e){// someone may have tampered with the value\nreturn null;}};const updateVhsLocalStorage=options=>{if(!window$1.localStorage){return false;}let objectToStore=getVhsLocalStorage();objectToStore=objectToStore?merge(objectToStore,options):options;try{window$1.localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(objectToStore));}catch(e){// Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n// storage is set to 0).\n// https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n// No need to perform any operation.\nreturn false;}return objectToStore;};/**\n * Parses VHS-supported media types from data URIs. See\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n * for information on data URIs.\n *\n * @param {string} dataUri\n *        The data URI\n *\n * @return {string|Object}\n *         The parsed object/string, or the original string if no supported media type\n *         was found\n */const expandDataUri=dataUri=>{if(dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,')===0){return JSON.parse(dataUri.substring(dataUri.indexOf(',')+1));}// no known case for this data URI, return the string as-is\nreturn dataUri;};/**\n * Whether the browser has built-in HLS support.\n */Vhs.supportsNativeHls=function(){if(!document||!document.createElement){return false;}const video=document.createElement('video');// native HLS is definitely not supported if HTML5 video isn't\nif(!videojs.getTech('Html5').isSupported()){return false;}// HLS manifests can go by many mime-types\nconst canPlay=[// Apple santioned\n'application/vnd.apple.mpegurl',// Apple sanctioned for backwards compatibility\n'audio/mpegurl',// Very common\n'audio/x-mpegurl',// Very common\n'application/x-mpegurl',// Included for completeness\n'video/x-mpegurl','video/mpegurl','application/mpegurl'];return canPlay.some(function(canItPlay){return /maybe|probably/i.test(video.canPlayType(canItPlay));});}();Vhs.supportsNativeDash=function(){if(!document||!document.createElement||!videojs.getTech('Html5').isSupported()){return false;}return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));}();Vhs.supportsTypeNatively=type=>{if(type==='hls'){return Vhs.supportsNativeHls;}if(type==='dash'){return Vhs.supportsNativeDash;}return false;};/**\n * VHS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */Vhs.isSupported=function(){return videojs.log.warn('VHS is no longer a tech. Please remove it from '+'your player\\'s techOrder.');};const Component=videojs.getComponent('Component');/**\n * The Vhs Handler object, where we orchestrate all of the parts\n * of VHS to interact with video.js\n *\n * @class VhsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */class VhsHandler extends Component{constructor(source,tech,options){super(tech,options.vhs);// if a tech level `initialBandwidth` option was passed\n// use that over the VHS level `bandwidth` option\nif(typeof options.initialBandwidth==='number'){this.options_.bandwidth=options.initialBandwidth;}this.logger_=logger('VhsHandler');// we need access to the player in some cases,\n// so, get it from Video.js via the `playerId`\nif(tech.options_&&tech.options_.playerId){const _player=videojs.getPlayer(tech.options_.playerId);this.player_=_player;}this.tech_=tech;this.source_=source;this.stats={};this.ignoreNextSeekingEvent_=false;this.setOptions_();if(this.options_.overrideNative&&tech.overrideNativeAudioTracks&&tech.overrideNativeVideoTracks){tech.overrideNativeAudioTracks(true);tech.overrideNativeVideoTracks(true);}else if(this.options_.overrideNative&&(tech.featuresNativeVideoTracks||tech.featuresNativeAudioTracks)){// overriding native VHS only works if audio tracks have been emulated\n// error early if we're misconfigured\nthrow new Error('Overriding native VHS requires emulated tracks. '+'See https://git.io/vMpjB');}// listen for fullscreenchange events for this player so that we\n// can adjust our quality selection quickly\nthis.on(document,['fullscreenchange','webkitfullscreenchange','mozfullscreenchange','MSFullscreenChange'],event=>{const fullscreenElement=document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement;if(fullscreenElement&&fullscreenElement.contains(this.tech_.el())){this.playlistController_.fastQualityChange_();}else{// When leaving fullscreen, since the in page pixel dimensions should be smaller\n// than full screen, see if there should be a rendition switch down to preserve\n// bandwidth.\nthis.playlistController_.checkABR_();}});this.on(this.tech_,'seeking',function(){if(this.ignoreNextSeekingEvent_){this.ignoreNextSeekingEvent_=false;return;}this.setCurrentTime(this.tech_.currentTime());});this.on(this.tech_,'error',function(){// verify that the error was real and we are loaded\n// enough to have pc loaded.\nif(this.tech_.error()&&this.playlistController_){this.playlistController_.pauseLoading();}});this.on(this.tech_,'play',this.play);}setOptions_(){// defaults\nthis.options_.withCredentials=this.options_.withCredentials||false;this.options_.limitRenditionByPlayerDimensions=this.options_.limitRenditionByPlayerDimensions===false?false:true;this.options_.useDevicePixelRatio=this.options_.useDevicePixelRatio||false;this.options_.useBandwidthFromLocalStorage=typeof this.source_.useBandwidthFromLocalStorage!=='undefined'?this.source_.useBandwidthFromLocalStorage:this.options_.useBandwidthFromLocalStorage||false;this.options_.useNetworkInformationApi=this.options_.useNetworkInformationApi||false;this.options_.useDtsForTimestampOffset=this.options_.useDtsForTimestampOffset||false;this.options_.customTagParsers=this.options_.customTagParsers||[];this.options_.customTagMappers=this.options_.customTagMappers||[];this.options_.cacheEncryptionKeys=this.options_.cacheEncryptionKeys||false;this.options_.llhls=this.options_.llhls===false?false:true;this.options_.bufferBasedABR=this.options_.bufferBasedABR||false;if(typeof this.options_.playlistExclusionDuration!=='number'){this.options_.playlistExclusionDuration=5*60;}if(typeof this.options_.bandwidth!=='number'){if(this.options_.useBandwidthFromLocalStorage){const storedObject=getVhsLocalStorage();if(storedObject&&storedObject.bandwidth){this.options_.bandwidth=storedObject.bandwidth;this.tech_.trigger({type:'usage',name:'vhs-bandwidth-from-local-storage'});}if(storedObject&&storedObject.throughput){this.options_.throughput=storedObject.throughput;this.tech_.trigger({type:'usage',name:'vhs-throughput-from-local-storage'});}}}// if bandwidth was not set by options or pulled from local storage, start playlist\n// selection at a reasonable bandwidth\nif(typeof this.options_.bandwidth!=='number'){this.options_.bandwidth=Config.INITIAL_BANDWIDTH;}// If the bandwidth number is unchanged from the initial setting\n// then this takes precedence over the enableLowInitialPlaylist option\nthis.options_.enableLowInitialPlaylist=this.options_.enableLowInitialPlaylist&&this.options_.bandwidth===Config.INITIAL_BANDWIDTH;// grab options passed to player.src\n['withCredentials','useDevicePixelRatio','limitRenditionByPlayerDimensions','bandwidth','customTagParsers','customTagMappers','cacheEncryptionKeys','playlistSelector','initialPlaylistSelector','bufferBasedABR','liveRangeSafeTimeDelta','llhls','useNetworkInformationApi','useDtsForTimestampOffset','exactManifestTimings','leastPixelDiffSelector'].forEach(option=>{if(typeof this.source_[option]!=='undefined'){this.options_[option]=this.source_[option];}});this.limitRenditionByPlayerDimensions=this.options_.limitRenditionByPlayerDimensions;this.useDevicePixelRatio=this.options_.useDevicePixelRatio;}/**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */src(src,type){// do nothing if the src is falsey\nif(!src){return;}this.setOptions_();// add main playlist controller options\nthis.options_.src=expandDataUri(this.source_.src);this.options_.tech=this.tech_;this.options_.externVhs=Vhs;this.options_.sourceType=simpleTypeFromSourceType(type);// Whenever we seek internally, we should update the tech\nthis.options_.seekTo=time=>{this.tech_.setCurrentTime(time);};this.playlistController_=new PlaylistController(this.options_);const playbackWatcherOptions=merge({liveRangeSafeTimeDelta:SAFE_TIME_DELTA},this.options_,{seekable:()=>this.seekable(),media:()=>this.playlistController_.media(),playlistController:this.playlistController_});this.playbackWatcher_=new PlaybackWatcher(playbackWatcherOptions);this.playlistController_.on('error',()=>{const player=videojs.players[this.tech_.options_.playerId];let error=this.playlistController_.error;if(typeof error==='object'&&!error.code){error.code=3;}else if(typeof error==='string'){error={message:error,code:3};}player.error(error);});const defaultSelector=this.options_.bufferBasedABR?Vhs.movingAverageBandwidthSelector(0.55):Vhs.STANDARD_PLAYLIST_SELECTOR;// `this` in selectPlaylist should be the VhsHandler for backwards\n// compatibility with < v2\nthis.playlistController_.selectPlaylist=this.selectPlaylist?this.selectPlaylist.bind(this):defaultSelector.bind(this);this.playlistController_.selectInitialPlaylist=Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this);// re-expose some internal objects for backwards compatibility with < v2\nthis.playlists=this.playlistController_.mainPlaylistLoader_;this.mediaSource=this.playlistController_.mediaSource;// Proxy assignment of some properties to the main playlist\n// controller. Using a custom property for backwards compatibility\n// with < v2\nObject.defineProperties(this,{selectPlaylist:{get(){return this.playlistController_.selectPlaylist;},set(selectPlaylist){this.playlistController_.selectPlaylist=selectPlaylist.bind(this);}},throughput:{get(){return this.playlistController_.mainSegmentLoader_.throughput.rate;},set(throughput){this.playlistController_.mainSegmentLoader_.throughput.rate=throughput;// By setting `count` to 1 the throughput value becomes the starting value\n// for the cumulative average\nthis.playlistController_.mainSegmentLoader_.throughput.count=1;}},bandwidth:{get(){let playerBandwidthEst=this.playlistController_.mainSegmentLoader_.bandwidth;const networkInformation=window$1.navigator.connection||window$1.navigator.mozConnection||window$1.navigator.webkitConnection;const tenMbpsAsBitsPerSecond=10e6;if(this.options_.useNetworkInformationApi&&networkInformation){// downlink returns Mbps\n// https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\nconst networkInfoBandwidthEstBitsPerSec=networkInformation.downlink*1000*1000;// downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n// estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n// high quality streams are not filtered out.\nif(networkInfoBandwidthEstBitsPerSec>=tenMbpsAsBitsPerSecond&&playerBandwidthEst>=tenMbpsAsBitsPerSecond){playerBandwidthEst=Math.max(playerBandwidthEst,networkInfoBandwidthEstBitsPerSec);}else{playerBandwidthEst=networkInfoBandwidthEstBitsPerSec;}}return playerBandwidthEst;},set(bandwidth){this.playlistController_.mainSegmentLoader_.bandwidth=bandwidth;// setting the bandwidth manually resets the throughput counter\n// `count` is set to zero that current value of `rate` isn't included\n// in the cumulative average\nthis.playlistController_.mainSegmentLoader_.throughput={rate:0,count:0};}},/**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */systemBandwidth:{get(){const invBandwidth=1/(this.bandwidth||1);let invThroughput;if(this.throughput>0){invThroughput=1/this.throughput;}else{invThroughput=0;}const systemBitrate=Math.floor(1/(invBandwidth+invThroughput));return systemBitrate;},set(){videojs.log.error('The \"systemBandwidth\" property is read-only');}}});if(this.options_.bandwidth){this.bandwidth=this.options_.bandwidth;}if(this.options_.throughput){this.throughput=this.options_.throughput;}Object.defineProperties(this.stats,{bandwidth:{get:()=>this.bandwidth||0,enumerable:true},mediaRequests:{get:()=>this.playlistController_.mediaRequests_()||0,enumerable:true},mediaRequestsAborted:{get:()=>this.playlistController_.mediaRequestsAborted_()||0,enumerable:true},mediaRequestsTimedout:{get:()=>this.playlistController_.mediaRequestsTimedout_()||0,enumerable:true},mediaRequestsErrored:{get:()=>this.playlistController_.mediaRequestsErrored_()||0,enumerable:true},mediaTransferDuration:{get:()=>this.playlistController_.mediaTransferDuration_()||0,enumerable:true},mediaBytesTransferred:{get:()=>this.playlistController_.mediaBytesTransferred_()||0,enumerable:true},mediaSecondsLoaded:{get:()=>this.playlistController_.mediaSecondsLoaded_()||0,enumerable:true},mediaAppends:{get:()=>this.playlistController_.mediaAppends_()||0,enumerable:true},mainAppendsToLoadedData:{get:()=>this.playlistController_.mainAppendsToLoadedData_()||0,enumerable:true},audioAppendsToLoadedData:{get:()=>this.playlistController_.audioAppendsToLoadedData_()||0,enumerable:true},appendsToLoadedData:{get:()=>this.playlistController_.appendsToLoadedData_()||0,enumerable:true},timeToLoadedData:{get:()=>this.playlistController_.timeToLoadedData_()||0,enumerable:true},buffered:{get:()=>timeRangesToArray(this.tech_.buffered()),enumerable:true},currentTime:{get:()=>this.tech_.currentTime(),enumerable:true},currentSource:{get:()=>this.tech_.currentSource_,enumerable:true},currentTech:{get:()=>this.tech_.name_,enumerable:true},duration:{get:()=>this.tech_.duration(),enumerable:true},main:{get:()=>this.playlists.main,enumerable:true},playerDimensions:{get:()=>this.tech_.currentDimensions(),enumerable:true},seekable:{get:()=>timeRangesToArray(this.tech_.seekable()),enumerable:true},timestamp:{get:()=>Date.now(),enumerable:true},videoPlaybackQuality:{get:()=>this.tech_.getVideoPlaybackQuality(),enumerable:true}});this.tech_.one('canplay',this.playlistController_.setupFirstPlay.bind(this.playlistController_));this.tech_.on('bandwidthupdate',()=>{if(this.options_.useBandwidthFromLocalStorage){updateVhsLocalStorage({bandwidth:this.bandwidth,throughput:Math.round(this.throughput)});}});this.playlistController_.on('selectedinitialmedia',()=>{// Add the manual rendition mix-in to VhsHandler\nrenditionSelectionMixin(this);});this.playlistController_.sourceUpdater_.on('createdsourcebuffers',()=>{this.setupEme_();});// the bandwidth of the primary segment loader is our best\n// estimate of overall bandwidth\nthis.on(this.playlistController_,'progress',function(){this.tech_.trigger('progress');});// In the live case, we need to ignore the very first `seeking` event since\n// that will be the result of the seek-to-live behavior\nthis.on(this.playlistController_,'firstplay',function(){this.ignoreNextSeekingEvent_=true;});this.setupQualityLevels_();// do nothing if the tech has been disposed already\n// this can occur if someone sets the src in player.ready(), for instance\nif(!this.tech_.el()){return;}this.mediaSourceUrl_=window$1.URL.createObjectURL(this.playlistController_.mediaSource);this.tech_.src(this.mediaSourceUrl_);}createKeySessions_(){const audioPlaylistLoader=this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;this.logger_('waiting for EME key session creation');waitForKeySessionCreation({player:this.player_,sourceKeySystems:this.source_.keySystems,audioMedia:audioPlaylistLoader&&audioPlaylistLoader.media(),mainPlaylists:this.playlists.main.playlists}).then(()=>{this.logger_('created EME key session');this.playlistController_.sourceUpdater_.initializedEme();}).catch(err=>{this.logger_('error while creating EME key session',err);this.player_.error({message:'Failed to initialize media keys for EME',code:3});});}handleWaitingForKey_(){// If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n// the key is in the manifest. While this should've happened on initial source load, it\n// may happen again in live streams where the keys change, and the manifest info\n// reflects the update.\n//\n// Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n// already requested keys for, we don't have to worry about this generating extraneous\n// requests.\nthis.logger_('waitingforkey fired, attempting to create any new key sessions');this.createKeySessions_();}/**\n   * If necessary and EME is available, sets up EME options and waits for key session\n   * creation.\n   *\n   * This function also updates the source updater so taht it can be used, as for some\n   * browsers, EME must be configured before content is appended (if appending unencrypted\n   * content before encrypted content).\n   */setupEme_(){const audioPlaylistLoader=this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;const didSetupEmeOptions=setupEmeOptions({player:this.player_,sourceKeySystems:this.source_.keySystems,media:this.playlists.media(),audioMedia:audioPlaylistLoader&&audioPlaylistLoader.media()});this.player_.tech_.on('keystatuschange',e=>{if(e.status!=='output-restricted'){return;}const mainPlaylist=this.playlistController_.main();if(!mainPlaylist||!mainPlaylist.playlists){return;}const excludedHDPlaylists=[];// Assume all HD streams are unplayable and exclude them from ABR selection\nmainPlaylist.playlists.forEach(playlist=>{if(playlist&&playlist.attributes&&playlist.attributes.RESOLUTION&&playlist.attributes.RESOLUTION.height>=720){if(!playlist.excludeUntil||playlist.excludeUntil<Infinity){playlist.excludeUntil=Infinity;excludedHDPlaylists.push(playlist);}}});if(excludedHDPlaylists.length){videojs.log.warn('DRM keystatus changed to \"output-restricted.\" Removing the following HD playlists '+'that will most likely fail to play and clearing the buffer. '+'This may be due to HDCP restrictions on the stream and the capabilities of the current device.',...excludedHDPlaylists);// Clear the buffer before switching playlists, since it may already contain unplayable segments\nthis.playlistController_.fastQualityChange_();}});this.handleWaitingForKey_=this.handleWaitingForKey_.bind(this);this.player_.tech_.on('waitingforkey',this.handleWaitingForKey_);// In IE11 this is too early to initialize media keys, and IE11 does not support\n// promises.\nif(videojs.browser.IE_VERSION===11||!didSetupEmeOptions){// If EME options were not set up, we've done all we could to initialize EME.\nthis.playlistController_.sourceUpdater_.initializedEme();return;}this.createKeySessions_();}/**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */setupQualityLevels_(){const player=videojs.players[this.tech_.options_.playerId];// if there isn't a player or there isn't a qualityLevels plugin\n// or qualityLevels_ listeners have already been setup, do nothing.\nif(!player||!player.qualityLevels||this.qualityLevels_){return;}this.qualityLevels_=player.qualityLevels();this.playlistController_.on('selectedinitialmedia',()=>{handleVhsLoadedMetadata(this.qualityLevels_,this);});this.playlists.on('mediachange',()=>{handleVhsMediaChange(this.qualityLevels_,this.playlists);});}/**\n   * return the version\n   */static version(){return{'@videojs/http-streaming':version$4,'mux.js':version$3,'mpd-parser':version$2,'m3u8-parser':version$1,'aes-decrypter':version};}/**\n   * return the version\n   */version(){return this.constructor.version();}canChangeType(){return SourceUpdater.canChangeType();}/**\n   * Begin playing the video.\n   */play(){this.playlistController_.play();}/**\n   * a wrapper around the function in PlaylistController\n   */setCurrentTime(currentTime){this.playlistController_.setCurrentTime(currentTime);}/**\n   * a wrapper around the function in PlaylistController\n   */duration(){return this.playlistController_.duration();}/**\n   * a wrapper around the function in PlaylistController\n   */seekable(){return this.playlistController_.seekable();}/**\n   * Abort all outstanding work and cleanup.\n   */dispose(){if(this.playbackWatcher_){this.playbackWatcher_.dispose();}if(this.playlistController_){this.playlistController_.dispose();}if(this.qualityLevels_){this.qualityLevels_.dispose();}if(this.tech_&&this.tech_.vhs){delete this.tech_.vhs;}if(this.mediaSourceUrl_&&window$1.URL.revokeObjectURL){window$1.URL.revokeObjectURL(this.mediaSourceUrl_);this.mediaSourceUrl_=null;}if(this.tech_){this.tech_.off('waitingforkey',this.handleWaitingForKey_);}super.dispose();}convertToProgramTime(time,callback){return getProgramTime({playlist:this.playlistController_.media(),time,callback});}// the player must be playing before calling this\nseekToProgramTime(programTime,callback,pauseAfterSeek=true,retryCount=2){return seekToProgramTime({programTime,playlist:this.playlistController_.media(),retryCount,pauseAfterSeek,seekTo:this.options_.seekTo,tech:this.options_.tech,callback});}}/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */const VhsSourceHandler={name:'videojs-http-streaming',VERSION:version$4,canHandleSource(srcObj,options={}){const localOptions=merge(videojs.options,options);return VhsSourceHandler.canPlayType(srcObj.type,localOptions);},handleSource(source,tech,options={}){const localOptions=merge(videojs.options,options);tech.vhs=new VhsHandler(source,tech,localOptions);tech.vhs.xhr=xhrFactory();tech.vhs.src(source.src,source.type);return tech.vhs;},canPlayType(type,options={}){const{vhs:{overrideNative=!videojs.browser.IS_ANY_SAFARI}={}}=merge(videojs.options,options);const supportedType=simpleTypeFromSourceType(type);const canUseMsePlayback=supportedType&&(!Vhs.supportsTypeNatively(supportedType)||overrideNative);return canUseMsePlayback?'maybe':'';}};/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {boolean} if  native media sources are supported\n */const supportsNativeMediaSources=()=>{return browserSupportsCodec('avc1.4d400d,mp4a.40.2');};// register source handlers with the appropriate techs\nif(supportsNativeMediaSources()){videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler,0);}videojs.VhsHandler=VhsHandler;videojs.VhsSourceHandler=VhsSourceHandler;videojs.Vhs=Vhs;if(!videojs.use){videojs.registerComponent('Vhs',Vhs);}videojs.options.vhs=videojs.options.vhs||{};if(!videojs.getPlugin||!videojs.getPlugin('reloadSourceOnError')){videojs.registerPlugin('reloadSourceOnError',reloadSourceOnError);}export{videojs as default};","map":{"version":3,"names":["window$1","document","keycode","safeParseTuple","XHR","vtt","_resolveUrl","_extends","Parser","DEFAULT_VIDEO_CODEC","DEFAULT_AUDIO_CODEC","parseCodecs","muxerSupportsCodec","browserSupportsCodec","translateLegacyCodec","codecsFromDefault","isAudioCodec","getMimeForCodec","simpleTypeFromSourceType","isArrayBufferView","concatTypedArrays","stringToBytes","toUint8","generateSidxKey","parseUTCTiming","parse","addSidxSegmentsToPlaylist","parseSidx","getId3Offset","detectContainerForBytes","isLikelyFmp4MediaSegment","ONE_SECOND_IN_TS","version$6","hooks_","hooks","type","fn","concat","hook","removeHook","index","indexOf","slice","splice","hookOnce","map","original","wrapper","args","FullscreenApi","prefixed","apiMap","specApi","browserApi","i","length","history","LogByTypeFactory","name","log","level","lvl","levels","lvlRegExp","RegExp","unshift","toUpperCase","push","console","info","test","Array","isArray","createLogger$1","logByType","createLogger","subname","all","off","debug","warn","error","DEFAULT","hasOwnProperty","Error","filter","fname","historyItem","clear","disable","enable","log$1","toString","Object","prototype","keys","object","isObject","each","forEach","key","reduce","initial","accum","value","isPlain","call","constructor","merge$1","sources","result","source","defineLazyProperty","obj","getValue","setter","set","defineProperty","enumerable","writable","options","configurable","get","Obj","freeze","__proto__","merge","IS_IPOD","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","IS_FIREFOX","IS_EDGE","IS_CHROMIUM","IS_CHROME","CHROMIUM_VERSION","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_WINDOWS","IS_IPAD","IS_IPHONE","TOUCH_ENABLED","Boolean","isReal","navigator","maxTouchPoints","DocumentTouch","UAD","userAgentData","platform","brands","find","b","brand","version","USER_AGENT","userAgent","match","major","parseFloat","minor","exec","IS_IOS","IS_ANY_SAFARI","browser","isNonBlankString","str","trim","throwIfWhitespace","isEl","nodeType","isInFrame","parent","self","x","createQuerier","method","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","el","createElement","getOwnPropertyNames","propName","val","textContent","attrName","setAttribute","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","addClass","classesToAdd","add","prev","current","split","removeClass","classesToRemove","remove","toggleClass","classToToggle","predicate","undefined","className","toggle","setAttributes","attrValue","removeAttribute","getAttributes","tag","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","height","computedStyle","width","findPosition","offsetParent","left","top","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","event","translated","y","item","nodeName","toLowerCase","transform","values","Number","position","boxTarget","target","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","Math","max","min","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","$","$$","prop","getComputedStyle","computedStyleValue","e","getPropertyValue","Dom","_windowLoaded","videojs$1","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","player","autoSetupTimeout","wait","vjs","setTimeout","setWindowLoaded","removeEventListener","readyState","addEventListener","createStyleElement","style","setTextContent","styleSheet","cssText","DomData","WeakMap","_initialGuid","_guid","newGUID","_cleanUpEvents","elem","has","data","handlers","dispatcher","detachEvent","disabled","delete","_handleMultipleEvents","types","callback","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","doc","documentElement","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","_supportsPassive","supportsPassive","opts","passiveEvents","on","guid","hash","handlersCopy","m","n","passive","attachEvent","removeType","t","trigger","elemData","ownerDocument","bubbles","targetData","one","func","apply","arguments","any","Events","UPDATE_REFRESH_INTERVAL","bind_","uid","bound","bind","throttle","last","performance","now","throttled","debounce","immediate","timeout","cancel","clearTimeout","debounced","later","Fn","EVENT_MAP","EventTarget$2","ael","allowedEvents_","queueTrigger","Map","oldTimeout","size","dispatchEvent","objName","name_","isEvented","eventBusEl_","every","addEventedCallback","eventedCallbacks","isValidEventType","validateTarget","fnName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","removeListenerOnDispose","removeRemoverOnTargetDispose","largs","targetOrType","typeOrListener","evented","eventBusKey","assign","el_","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","string","replace","w","toTitleCase$1","titleCaseEquals","str1","str2","Str","toTitleCase","Component$1","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","c","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","Set","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","dispose","readyQueue_","restoreEl","replaceChild","isDisposed","localize","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","getDescendant","names","acc","currentChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","handleAdd","playerOptions","newChild","workingChildren","Tech","some","wchild","isTech","buildCSSClass","sync","isReady_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","isNaN","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","isEventKey","handleKeyPress","emitTapEvents","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","requestNamedAnimationFrame","cancelNamedAnimationFrame","cancelAnimationFrame","idName","cancelName","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","rangeCheck","maxIndex","getRange","valueIndex","ranges","rangeIndex","createTimeRangesObj","timeRangesObj","start","end","Symbol","iterator","createTimeRanges$1","defaultImplementation","seconds","guide","s","floor","h","gm","gh","Infinity","implementation","setFormatTime","customImplementation","resetFormatTime","formatTime","Time","createTimeRanges","createTimeRange","bufferedPercent","buffered","duration","bufferedDuration","MediaError","message","defaultMessages","status","errorTypes","errNum","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTracksToJson","tech","trackEls","trackObjs","tracks","trackEl","json","src","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","ModalDialog","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","label","previouslyActiveEl_","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","tracks_","addTrack","labelchange_","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","labelchange","disableOthers$1","list","enabled","AudioTrackList","changing_","enabledChange_","disableOthers","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","nonLanguageTextTrackKind","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","newLabel","parseUrl","url","props","a","href","details","protocol","host","location","getAbsoluteURL","getFileExtension","path","splitPathRe","pathParts","pop","isCrossOrigin","winLoc","urlInfo","srcProtocol","crossOrigin","Url","parseCues","srcContent","parser","WebVTT","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","uri","cors","withCredentials","tech_","err","response","responseBody","loaded_","TextTrack","settings","srclang","mode","default_","default","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","rvf_","requestVideoFrameCallback","disposeHandler","stopTracking","startTracking","defineProperties","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","VTTCue","originalCue_","removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","HTMLTrackElement","NONE","LOADED","load","LOADING","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","createTrackHelper","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","manualProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","setCrossOrigin","error_","played","setScrubbing","scrubbing","setCurrentTime","trackListChanges","addWebVttScript_","script","onload","onerror","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","Promise","reject","disablePictureInPicture","setDisablePictureInPicture","cb","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","videojs","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","use","middleware","next","setSourceHelper","setTech","mw","reduceRight","middlewareIterator","arg","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","muted","seekable","volume","ended","allowedSetters","setMuted","setVolume","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","mwf","mwi","lastRun","mwrest","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","aac","caf","flac","oga","wav","m3u8","mpd","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","update","update_","loading","alt","crossorigin","poster","setSrc","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","screenOrientation","screen","orientation","changeOrientationEvent","modes","trackList","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","clearDisplay","processCues","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","updateDisplayState","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","TimeDisplay","updateContent","updateTextNode_","span","labelText_","textNode_","time","formattedTime_","oldNode","CurrentTimeDisplay","getCache","DurationDisplay","TimeDivider","div","RemainingTimeDisplay","displayNegative","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","number","Num","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","vertical","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent","percent_","part","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","round","write","updateTime","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","STEP_SECONDS","PAGE_KEY_MULTIPLIER","SeekBar","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","visibilityState","getCurrentTime_","liveCurrentTime","currentTime_","userSeek_","nextSeekedFromUser","seekableStart","videoWasPlaying","mouseDown","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","codes","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","isSourceAudio","currentType","substring","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","pictureInPictureEnabled","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","requestFullscreen","exitFullscreen","checkVolumeSupport","VolumeLevel","VolumeLevelTooltip","rangeBarRect","rangeBarPoint","volumeBarPointPx","updateVolume","MouseVolumeLevelDisplay","bottom","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","handleKeyPressHandler_","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","haveTitle","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","title","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","join","allHidden","TextTrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","featuresNativeAudioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","playbackRateSupported","Spacer","CustomControlSpacer","ControlBar","ErrorDisplay","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","getSelectedOptionValue","selectedIndex","setSelectedOption","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","o","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","innerHTML","createElFont_","createElControls_","defaultsDescription","setValues","JSON","localStorage","getItem","setItem","stringify","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","abs","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","sort","seekableStarts","behindLiveEdge","TitleBar","updateDom_","els","techEl","techAriaAttrs","techAriaAttr","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","getInnerHTMLDescriptor","HTMLMediaElement","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","elTracks","proxyNativeTracksForType_","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","tagAttributes","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","webkitKeys","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","playerHeight","hiddenChildren","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","majorVersion","userActive","listenForUserActivity_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","links","linkEl","techGet_","techCall_","posterImage","privDimension","parsedVal","ratio","aspectRatio_","width_","height_","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","catch","promise","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","userActions","click","inAllowedEls","doubleClick","userWasActive","cancelable","toggleFullscreenClass_","targetPlayer","isFs","matches","fullscreen","msMatchesSelector","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","media","resolve","play_","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","percentAsDecimal","defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","errorHandler","requestFullscreenHelper_","fsOptions","preferFullWindow","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","excludeElement","isContentEditable","allowedInputTypes","excludedTags","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","FSToggle","selectSource","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","flip","finder","sourceOrder","handleSrc_","isRetry","resetRetryOnError_","notSupportedMessage","middlewareSource","src_","retry","stopListeningForErrors","sourceTech","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","durationDisplay","currentSources","techAutoplay","newPoster","usingNativeControls_","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","handleMouseUpAndMouseLeave","isAudio_","enableAudioOnlyUI_","playerChildren","controlBarHeight","disableAudioOnlyUI_","exitPromises","enablePosterModeUI_","disablePosterModeUI_","audioOnlyModePromise","String","toJSON","createModal","modal","currentBreakpoint","candidateBreakpoint","maxWidth","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","responsive_","loadMedia","artist","artwork","tt","titleBar","getMedia","baseOptions","tagOptions","dataSetup","childName","previousLogLevel_","newRates","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","instance","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","isBasic","p","registerPlugin","deregisterPlugin","getPlugins","getPluginVersion","usingPlugin","hasPlugin","deprecate","warned","deprecateForMajor","oldName","newName","normalizeId","getPlayer","TypeError","defaultView","PlayerComponent","getPlayers","nId","getAllPlayers","comp","writeable","mergeOptions","addLanguage","EventTarget","xhr","dom","QualityLevel","representation","bitrate","bandwidth","frameRate","QualityLevelList","levels_","selectedIndex_","addQualityLevel","qualityLevel","getQualityLevelById","removeQualityLevel","removed","addqualitylevel","removequalitylevel","version$5","initPlugin$1","originalPluginFn","qualityLevels","qualityLevelList","resolveUrl","resolveManifestRedirect","req","responseURL","logger","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","results","findRange","findNextRange","findGaps","bufferIntersection","bufferA","bufferB","arity","extents","count","printableRange","range","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","isRangeDifferent","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","playlist","segment","parts","preloadHints","partTargetDuration","getPartsAndSegments","segments","si","pi","segmentIndex","partIndex","getLastParts","lastSegment","getKnownPartCount","preloadSegment","partCount","hint","liveEdgeDelay","endList","suggestedPresentationDelay","hasParts","serverControl","partHoldBack","holdBack","targetDuration","backwardDuration","endSequence","mediaSequence","precise","forwardDuration","intervalDuration","expired","backward","forward","totalDuration","sumDurations","defaultDuration","durationList","startIndex","endIndex","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","exactManifestTimings","partsAndSegments","partAndSegment","isExcluded","excludeUntil","Date","isIncompatible","isEnabled","excluded","isDisabled","isAes","estimateSegmentRequestTime","segmentDuration","bytesReceived","BANDWIDTH","isLowestEnabledRendition","playlists","currentBandwidth","MAX_VALUE","playlistMatch","resolvedUri","someAudioVariant","AUDIO","mediaGroups","groupName","isAudioOnly","variant","CODECS","Playlist","createPlaylistID","parseManifest","onwarn","oninfo","manifestString","customTagParsers","customTagMappers","llhls","customParser","addParser","mapper","addTagMapper","manifest","forEachMediaGroup","mediaType","groupKey","labelKey","mediaProperties","setupMediaPlaylist","playlistErrors_","setupMediaPlaylists","resolveMediaGroupUris","mainForMedia","addPropertiesToMain","phonyUri","audioOnlyMain","groupId","EventTarget$1","addLLHLSQueryDirectives","parameters","canBlockReload","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","canSkipDateranges","parsedUri","URL","searchParams","updateSegment","skipped","updateSegments","offset","oldSegments","newSegments","currentMap","newIndex","oldSegment","newSegment","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMain$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skip","skippedSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","vhs","logger_","vhs_","vhsOptions","handleMediaupdatetimeout_","playlistRequestError","haveMetadata","playlistString","responseText","startingState","parseManifest_","playlistObject","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","onreadystatechange","abort","shouldDelay","delay","mediaChange","mainPlaylistRef","started","setupInitialPlaylist","srcUri","videojsXHR","callbackWrapper","reqResponse","responseType","responseTime","roundTripTime","requestTime","byteLength","headers","responseHeaders","timedout","aborted","statusCode","xhrFactory","XhrFunction","beforeRequest","Vhs","newOptions","xhrMethod","originalAbort","byterangeStr","byterange","byterangeEnd","byterangeStart","BigInt","segmentXhrHeaders","Range","textRange","formatHexString","formatAsciiString","fromCharCode","createTransferableMessage","transferable","bytes","buffer","byteOffset","initSegmentId","initSegment","segmentKeyId","hexDump","step","ascii","tagDump","textRanges","utils","SEGMENT_END_FUDGE_PERCENT","playerTimeToProgramTime","playerTime","dateTimeObject","transmuxerPrependedSeconds","videoTimingInfo","transmuxedStart","transmuxedPresentationStart","startOfSegment","offsetFromSegmentStart","getTime","originalSegmentVideoDuration","transmuxedPresentationEnd","findSegmentForProgramTime","programTime","nextSegmentStart","lastSegmentStart","lastSegmentDuration","lastSegmentEnd","estimatedStart","findSegmentForPlayerTime","segmentEnd","getOffsetFromTimestamp","comparisonTimeStamp","segmentDateTime","programDateTime","segmentTimeEpoch","programTimeEpoch","verifyProgramDateTimeTags","getProgramTime","matchedSegment","seekTime","programTimeObject","mediaSeconds","toISOString","seekToProgramTime","retryCount","seekTo","pauseAfterSeek","mediaOffset","seekToTime","seekedCallback","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","beforeSend","overrideMimeType","total","loaded","dashPlaylistUnchanged","sidx","aSegment","bSegment","aByterange","bByterange","parseMainXml","mainXml","srcUrl","clientOffset","sidxMapping","previousManifest","manifestUri","updateMain","oldMain","newMain","noChanges","minimumUpdatePeriod","timelineStarts","sidxKey","playlistUpdate","group","equivalentSidx","neitherMap","equivalentMap","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","filterChangedSidxMappings","videoSidx","mediaGroupSidx","DashPlaylistLoader","srcUrlOrPlaylist","mainPlaylistLoader","mainPlaylistLoader_","isMain_","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","childPlaylist_","requestErrored_","addSidxSegments_","mediaRequest_","fin","subarray","container","internal","playlistExclusionDuration","minimumUpdatePeriodTimeout_","createMupOnMedia_","hasPendingRequest","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","haveMain_","requestMain_","mainChanged","mainXml_","date","mainLoaded_","handleMain_","syncClientServerClock_","done","utcTiming","clientOffset_","serverTime","locations","mpl","mup","createMUPTimeout_","mediaID","mediaChanged","createMediaUpdateTimeout","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","stringToArrayBuffer","view","Uint8Array","ArrayBuffer","charCodeAt","browserWorkerPolyFill","workerObj","createObjectURL","Blob","blob","BlobBuilder","getBlob","factory","objectUrl","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","commonjsGlobal","globalThis","window","global","Stream$8","init","pipe","destination","flushSource","partialFlush","endTimeline","stream","MAX_UINT32$1","pow","getUint64$2","uint8","dv","DataView","getBigUint64","MAX_SAFE_INTEGER","getUint32","numbers","getUint64","MAX_UINT32","dinf","esds","ftyp","mdat","mfhd","minf","moof","moov","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","avc1","avcC","btrt","dref","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","samples","flags","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","sps","pps","sequenceParameterSets","pictureParameterSets","avc1Box","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","dataOffset","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","mp4Generator","fileType","movie","groupNalsIntoFrames","nalUnits","currentNal","currentFrame","frames","nalCount","nalUnitType","dts","pts","keyFrame","groupFramesIntoGops","currentGop","gops","extendFirstKeyFrame","createDefaultSample","sampleForFrame","frame","generateSampleTable$1","baseDataOffset","concatenateNalData","nalsByteLength","numberOfNals","totalByteLength","generateSampleTableForFrame","concatenateNalDataForFrame","frameUtils$1","generateSampleTable","highPrefix","lowPrefix","zeroFill","makeTable","metaTable","arr","silence","silence_1","coneOfSilence","ONE_SECOND_IN_TS$4","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","sampleRate","timestamp","timelineStartPts","keepOriginalTimestamps","clock$2","clock$1","sumFrameByteLengths","array","currentObj","sum","prefixWithSilence","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","audioGapDuration","audioFillFrameCount","audioFillDuration","silentFrame","firstFrame","ceil","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","concatenateFrameData","audioFrameUtils$1","ONE_SECOND_IN_TS$3","collectDtsInfo","timelineStartInfo","maxSegmentPts","maxSegmentDts","clearDtsInfo","calculateTrackBaseMediaDecodeTime","scale","trackDecodeInfo$1","USER_DATA_REGISTERED_ITU_T_T35","RBSP_TRAILING_BITS","parseSei","payloadType","payloadSize","userIdentifier","parseUserData","sei","parseCaptionPackets","userData","ccData","discardEmulationPreventionBytes$1","emulationPreventionBytesPositions","newLength","newData","sourceIndex","captionPacketParser","discardEmulationPreventionBytes","Stream$7","cea708Parser","CaptionStream$2","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","captionServices","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","get708CharFromCode","newCode","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","newLine","beforeRowOverflow","isEmpty","addText","backspace","row","substr","Cea708Service","serviceNum","encoding","currentWindow","windows","createTextDecoder","startPts","win","setCurrentWindow","TextDecoder","textDecoder_","captionServiceEncodings","serviceProps","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","service","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","byteIndex","flushDisplayed","isMultiByte","extended","currentByte","nextByte","char","charCodeArray","decode","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","BOTTOM_ROW","ROWS","createDisplayBuffer","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","newBaseRow","format","reverse","popOn","baseRow","rollUp","paintOn","captionStream","CaptionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","Stream$6","MAX_TS","RO_THRESH","TYPE_SHARED","handleRollover$1","reference","direction","TimestampRolloverStream$1","lastDTS","referenceDTS","type_","discontinuity","timestampRolloverStream","TimestampRolloverStream","handleRollover","typedArrayIndexOf$1","typedArray","fromIndex","currentIndex","typedArrayIndexOf","Stream$5","StreamTypes$3","textEncodingDescriptionByte","Iso88591","Utf16","Utf16be","Utf8","percentEncode$1","parseUtf8","decodeURIComponent","parseIso88591$1","unescape","parseSyncSafeInteger$1","frameParsers","mimeTypeEndIndex","descriptionEndIndex","LINK_MIME_TYPE","mimeType","pictureType","pictureData","owner","privateData","MetadataStream","tagSize","bufferSize","dispatchType","chunk","frameStart","frameSize","frameHeader","dataAlignmentIndicator","d","timeStamp","metadataStream","Stream$4","CaptionStream$1","StreamTypes$2","TransportPacketStream","TransportParseStream","ElementaryStream","MP2T_PACKET_LENGTH$1","SYNC_BYTE$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","sectionLength","tableEnd","programInfoLength","streamType","pid","processPes_","STREAM_TYPES","h264","adts","segmentHadPmt","timedMetadata","parsePes","pes","ptsDtsFlags","startPrefix","packetLength","forceFlush","packetFlushable","fragment","trackId","codec","flushStreams_","m2ts$1","PAT_PID","MP2T_PACKET_LENGTH","m2ts_1","Stream$3","ONE_SECOND_IN_TS$2","AdtsStream$1","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","ExpGolomb$1","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","expGolomb","Stream$2","ExpGolomb","H264Stream$1","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","syncPoint","swapBuffer","len","nalByteStream","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalUnitTypeCode","expGolombDecoder","lastScale","nextScale","deltaScale","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","aspectRatioIdc","H264Stream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","returnSize","footerPresent","isLikelyAacData$1","parseSyncSafeInteger","percentEncode","parseIso88591","parseAdtsSize","lowThree","middle","highTwo","parseType$4","parseSampleRate","parseAacTimestamp","isLikelyAacData","parseType","Stream$1","aacUtils","AacStream$1","setTimestamp","bytesLeft","tempLength","AUDIO_PROPERTIES$1","audioProperties","VIDEO_PROPERTIES$1","videoProperties","Stream","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","clock","AdtsStream","AacStream","ONE_SECOND_IN_TS$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","ptsOffsetFromDts","decodeDuration","presentationDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","halfSecond","allowableOverlap","nearestDistance","dtsDistance","nearestGopObj","currentGopObj","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","captionStreams","caption","id3","cueTime","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","parseStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","toUnsigned$3","toHexString$1","bin","toUnsigned","toHexString","parseType$3","parseType_1","toUnsigned$2","parseType$2","findBox$2","subresults","findBox_1","toUnsigned$1","getUint64$1","parseTfdt$2","parseSampleFlags$1","parseSampleFlags_1","parseSampleFlags","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTrun$2","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","parseTfhd$2","window_1","findBox$1","parseTfdt$1","parseTrun$1","parseTfhd$1","window$2","mapToSample","approximateOffset","findSeiNals","avcStream","avcView","logs","seiNals","seiNal","lastMatchedSample","matchingSample","parseSamples","truns","allSamples","trackRun","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","parseEmbeddedCaptions","timescale","trackNals","CaptionParser","isInitialized","segmentCache","parsedCaptions","parsingPartial","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","captionParser","findBox","parseType$1","parseTfhd","parseTrun","parseTfdt","compositionStartTime","getVideoTrackIds","getTracks","getTimescaleFromMediaHeader","traks","lowestTime","baseTime","isFinite","trafBoxes","parsedTfhd","parsedTfdt","parsedTrun","hdlrs","tkhds","handlerType","getUint8","tkhdVersion","sampleDescriptions","codecBox","codecConfig","codecConfigType","probe$2","StreamTypes$1","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","pusi","payloadOffset","parsePesType","parsePesTime","parseNalUnitType","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","nalType","probe$1","StreamTypes","probe","ts","SYNC_BYTE","parsePsi_","table","parseAudioPes_","pesType","parsed","endLoop","parseVideoPes_","firstKeyFrame","adjustTimestamp_","segmentInfo","baseTimestamp","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","inspectAac_","audioCount","audioTimescale","inspectTs_","inspect","isAacData","tsInspector","wireTransmuxerEvents","initArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","MessageHandlers","pushMp4Captions","trackIds","probeMp4StartTime","probeMp4Tracks","probeTs","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","clearAllMp4Captions","clearParsedMp4Captions","setTimestampOffset","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","handleData_","transmuxedData","videoFrameDtsTime","videoFramePtsTime","handleDone_","handleGopInfo_","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","waitForEndedTimelineEvent","handleMessage","currentTransmux","dequeue","transmuxQueue","processAction","enqueueAction","transmux","createTransmuxer","term","segmentTransmuxer","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","stats","handleErrors","handleKeyResponse","objects","finishProcessingFn","errorObj","Uint32Array","parseInitSegment","handleInitSegmentResponse","encryptedBytes","parseError","handleSegmentResponse","newBytes","lastReachedChar","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","finish","id3Frames","probeResult","handleSegmentBytes","bytesAsUint8Array","isFmp4","audioCodec","videoCodec","finishLoading","decrypt","decryptionWorker","decryptionHandler","decrypted","keyBytes","encrypted","iv","decryptSegment","requestId","decryptedBytes","waitForCompletion","didError","segmentFinish","endOfAllRequests","handleLoadEnd","loadendState","abortFn","calledAbortFn","handleProgress","progressFn","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","keyRequestOptions","keyRequestCallback","keyXhr","differentMapKey","mapKeyRequestOptions","mapKeyRequestCallback","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","segmentXhr","activeXhr","logFn$1","getCodecs","mediaAttributes","isMaat","audioGroup","unwrapCodecList","codecList","codecs","codecCount","codecObj","codecsForPlaylist","codecInfo","defaultCodecs","logFn","representationToString","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","comparePlaylistResolution","leftWidth","rightWidth","RESOLUTION","simpleSelector","playerBandwidth","playerWidth","limitRenditionByPlayerDimensions","playlistController","getAudioTrackPlaylists_","audioOnly","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","leastPixelDiffSelector","leastPixelDiffList","pixelDiff","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","devicePixelRatio","systemBandwidth","playlistController_","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","minRebufferMaxBandwidthSelector","currentTimeline","syncController","compatiblePlaylists","enabledPlaylists","bandwidthPlaylists","rebufferingEstimates","getSyncPoint","numRequests","requestTimeEstimate","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","playlistsWithVideo","concatSegments","segmentObj","tempBuffer","createCaptionsTrackIfNotExists","inbandTextTracks","instreamId","def","captionService","addCaptionData","captionArray","Cue","WebKitDataCue","deprecateOldCue","addMetadata","metadataArray","videoDuration","metadataTrack","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","createMetadataTrackIfNotExists","inBandMetadataTrackDispatchType","removeCuesFromTrack","removeDuplicateCuesFromTrack","duplicates","occurrences","dupe","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","shallowEqual","akeys","bkeys","QUOTA_EXCEEDED_ERR","getSyncSegmentCandidate","targetTime","timelineSegments","timeline","MIN_BACK_BUFFER","CHECK_BUFFER_DELAY","finite","MIN_SEGMENT_DURATION_TO_SAVE_STATS","illegalMediaSwitch","loaderType","startingMedia","safeBackBufferTrimTime","trimTime","maxTrimTime","segmentInfoString","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","timestampOffsetForSegment","segmentTimeline","overrideCheck","shouldWaitForTimelineChange","timelineChangeController","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","mediaDuration","timingInfos","maxDuration","typeTimingInfo","segmentTooLong","getTroublesomeSegmentDurationMessage","sourceType","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","captionServices_","checkBufferTimeout_","currentTimeline_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","setAudio","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","checkForAbort_","endOfStream","buffered_","getMediaInfo_","videoBuffered","audioBuffered","initSegmentForMap","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","init_","resetEverything","newPlaylist","oldPlaylist","syncInfo","setDateTimeMappingForStart","oldId","resetLoader","resyncLoader","mediaSequenceDiff","saveExpiredSegmentInfo","force","removesRemaining","removeFinished","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","bufferedTime","preloaded","haveEnoughBuffer","nextSegment","lastSegmentLastPart","generateSegmentInfo_","forceTimestampOffset","random","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","videoTimestampOffset","earlyAbortWhenNeeded_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","handleAbort_","handleProgress_","simpleSegment","handleTrackInfo_","checkForIllegalMediaSwitch","handleTimingInfo_","timeType","timingInfoProperty","handleCaptions_","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","handleId3_","processMetadataQueue_","callQueue","fun","loadQueue","getCurrentMediaInfo_","setTimeMapping_","updateMediaSecondsLoaded_","useVideoTimingInfo","firstVideoFrameTimeForData","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","appendData_","changedTimestampOffset","getInitSegmentAndUpdateState_","handleQuotaExceededError_","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","handleAppendError_","appendBuffer","handleSegmentTimingInfo_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","segmentRequestFinished_","removeToTime","previousSegment","saveTransferStats_","saveBandwidthRelatedStats_","handleTimeout_","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","segmentProcessingTime","segmentProcessingThroughput","custom","dateTimeString","resolution","bufferTypes","sourceBuffer","queuePending","nextQueueIndexOfType","queueEntry","shiftQueue","queueIndex","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","addSourceBuffer","mime","removeSourceBuffer","changeType","pushQueue","onUpdateend","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","initializedEme","hasCreatedSourceBuffers","hasInitializedAnyEme","createSourceBuffers","addOrChangeSourceBuffers","canRemoveSourceBuffer","MediaSource","canChangeType","SourceBuffer","processedAppend_","videoBuffer","que","audioBuffer","setDuration","uint8ToUtf8","uintArray","escape","VTT_LINE_TERMINATORS","VTTSegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","combinedByteLength","combinedSegment","timestampOffsetForTimeline","checkTimestampOffset","skipEmptySegments_","stopForError","loadHandler","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","updateAdCues","cueOut","adOffset","adTotal","cueOutCont","MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC","syncPointStrategies","run","timelineToDatetimeMappings","lastDistance","datetimeMapping","segmentTime","z","discontinuityStarts","discontinuitySequence","discontinuitySync","discontinuities","SyncController","syncPoints","runStrategies_","selectSyncPoint_","getExpiredTime","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","firstSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","workerCode","_proto","_length","_i","unpad","padded","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","aesTables","AES","_tables","tmp","keyLen","rcon","encKey","decKey","_key","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","jobs","timeout_","processJob_","job","ntoh","word","initVector","encrypted32","Int32Array","decipher","decrypted32","init0","init1","init2","init3","wordIx","Decrypter","STEP","asyncStream_","decryptChunk_","isView","Uint16Array","audioTrackKind_","characteristics","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onGroupChanged","segmentLoaders","mainSegmentLoader","mediaTypes","activeTrack","activeGroup","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","isMainPlaylist","onGroupChanging","onTrackChanged","lastTrack","pc","selectPlaylist","fastQualityChange_","excludePlaylist","defaultTrack","SUBTITLES","setupListeners","requestOptions","initialize","groups","variantLabel","forced","autoselect","newProps","groupMatch","variants","groupKeys","groupPropertyList","activeTrack_","setupMediaGroups","audioSegmentLoader","activeAudioGroup","onAudioTrackChanged","createMediaTypes","ABORT_EARLY_EXCLUSION_SECONDS","Vhs$1","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","shouldSwitchToMedia","currentPlaylist","nextPlaylist","bufferLowWaterLine","bufferHighWaterLine","bufferBasedABR","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","PlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","segmentLoaderSettings","setupMainPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","appendsToLoadedData_","timeToLoadedData_","checkABR_","shouldSwitchToMedia_","switchMedia_","cause","newId","abrTimer_","defaultPlaylists","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","initialMedia_","haveJsonSource","handleUpdatedMediaPlaylist","playlistToExclude","lastExcludeReason_","playlistOutdated","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","mediaGroup","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mediaSecondsLoaded_","mainMediaInfo","absolutePlaylistEnd","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","areMediaTypesKnown_","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","supportFunction","unsupportedCodecs","unsupportedAudio","supporter","variantAudioGroup","switchMessages","newCodec","oldCodec","codecString","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","exclusionReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","newMax","enableFunction","playlistID","changePlaylistFn","incompatible","currentlyEnabled","Representation","vhsHandler","qualityChangeFunction","renditionSelectionMixin","representations","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","resetTimeUpdate_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","playlistId","waiting_","isAfterSeekableRange","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","timeAhead","nextRange","currentRange","livePoint","videoUnderflow","videoUnderflow_","skipTheGap_","allowedEnd","gap","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reinitPlugin","reloadSourceOnError","version$4","version$3","version$2","version$1","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","LOCAL_STORAGE_KEY","handleVhsMediaChange","handleVhsLoadedMetadata","emeKeySystems","keySystemOptions","mainPlaylist","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","keySystem","contentProtection","pssh","getAllPsshKeySystemsOptions","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","eme","initializeMediaKeys","keySystemsOptionsArr","initializationFinishedPromises","keySessionCreatedPromises","race","setupEmeOptions","sourceOptions","getVhsLocalStorage","storedObject","updateVhsLocalStorage","objectToStore","expandDataUri","dataUri","supportsNativeHls","canPlay","canItPlay","supportsNativeDash","supportsTypeNatively","Component","VhsHandler","initialBandwidth","_player","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","useBandwidthFromLocalStorage","useNetworkInformationApi","option","playbackWatcherOptions","playbackWatcher_","defaultSelector","playerBandwidthEst","networkInformation","connection","mozConnection","webkitConnection","tenMbpsAsBitsPerSecond","networkInfoBandwidthEstBitsPerSec","downlink","invBandwidth","invThroughput","systemBitrate","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","timeToLoadedData","currentTech","playerDimensions","setupEme_","setupQualityLevels_","mediaSourceUrl_","createKeySessions_","audioPlaylistLoader","handleWaitingForKey_","didSetupEmeOptions","excludedHDPlaylists","qualityLevels_","convertToProgramTime","VhsSourceHandler","supportedType","canUseMsePlayback","supportsNativeMediaSources"],"sources":["/Users/liaozhu/lilyportfolio/node_modules/video.js/dist/video.es.js"],"sourcesContent":["/**\n * @license\n * Video.js 8.0.4 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport keycode from 'keycode';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _resolveUrl from '@videojs/vhs-utils/es/resolve-url.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport { Parser } from 'm3u8-parser';\nimport { DEFAULT_VIDEO_CODEC, DEFAULT_AUDIO_CODEC, parseCodecs, muxerSupportsCodec, browserSupportsCodec, translateLegacyCodec, codecsFromDefault, isAudioCodec, getMimeForCodec } from '@videojs/vhs-utils/es/codecs.js';\nimport { simpleTypeFromSourceType } from '@videojs/vhs-utils/es/media-types.js';\nimport { isArrayBufferView, concatTypedArrays, stringToBytes, toUint8 } from '@videojs/vhs-utils/es/byte-helpers';\nimport { generateSidxKey, parseUTCTiming, parse, addSidxSegmentsToPlaylist } from 'mpd-parser';\nimport parseSidx from 'mux.js/lib/tools/parse-sidx';\nimport { getId3Offset } from '@videojs/vhs-utils/es/id3-helpers';\nimport { detectContainerForBytes, isLikelyFmp4MediaSegment } from '@videojs/vhs-utils/es/containers';\nimport { ONE_SECOND_IN_TS } from 'mux.js/lib/utils/clock';\n\nvar version$6 = \"8.0.4\";\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\nconst hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nconst hooks = function (type, fn) {\n  hooks_[type] = hooks_[type] || [];\n  if (fn) {\n    hooks_[type] = hooks_[type].concat(fn);\n  }\n  return hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hook = function (type, fn) {\n  hooks(type, fn);\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nconst removeHook = function (type, fn) {\n  const index = hooks(type).indexOf(fn);\n  if (index <= -1) {\n    return false;\n  }\n  hooks_[type] = hooks_[type].slice();\n  hooks_[type].splice(index, 1);\n  return true;\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hookOnce = function (type, fn) {\n  hooks(type, [].concat(fn).map(original => {\n    const wrapper = (...args) => {\n      removeHook(type, wrapper);\n      return original(...args);\n    };\n    return wrapper;\n  }));\n};\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nconst FullscreenApi = {\n  prefixed: true\n};\n\n// browser API methods\nconst apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nconst specApi = apiMap[0];\nlet browserApi;\n\n// determine the supported set of functions\nfor (let i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (let i = 0; i < browserApi.length; i++) {\n    FullscreenApi[specApi[i]] = browserApi[i];\n  }\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n// This is the private tracking variable for the logging history.\nlet history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nconst LogByTypeFactory = (name, log) => (type, level, args) => {\n  const lvl = log.levels[level];\n  const lvlRegExp = new RegExp(`^(${lvl})$`);\n  if (type !== 'log') {\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift(name + ':');\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n\n    // only store 1000 history entries\n    const splice = history.length - 1000;\n    history.splice(0, splice > 0 ? splice : 0);\n  }\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  let fn = window$1.console[type];\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\nfunction createLogger$1(name) {\n  // This is the private tracking variable for logging level.\n  let level = 'info';\n\n  // the curried logByType bound to the specific log and history\n  let logByType;\n\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n  const log = function (...args) {\n    logByType('log', level, args);\n  };\n\n  // This is the logByType helper that the logging methods below use\n  logByType = LogByTypeFactory(name, log);\n\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n  log.createLogger = subname => createLogger$1(name + ': ' + subname);\n\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n  log.level = lvl => {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(`\"${lvl}\" in not a valid log level`);\n      }\n      level = lvl;\n    }\n    return level;\n  };\n\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n  log.history = () => history ? [].concat(history) : [];\n\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n  log.history.filter = fname => {\n    return (history || []).filter(historyItem => {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(`.*${fname}.*`).test(historyItem[0]);\n    });\n  };\n\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n  log.history.clear = () => {\n    if (history) {\n      history.length = 0;\n    }\n  };\n\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n  log.history.disable = () => {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n  log.history.enable = () => {\n    if (history === null) {\n      history = [];\n    }\n  };\n\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n  log.error = (...args) => logByType('error', level, args);\n\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n  log.warn = (...args) => logByType('warn', level, args);\n\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n  log.debug = (...args) => logByType('debug', level, args);\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nconst log$1 = createLogger$1('VIDEOJS');\nconst createLogger = log$1.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nconst toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nconst keys = function (object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(key => fn(object[key], key));\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn, initial = 0) {\n  return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction merge$1(...sources) {\n  const result = {};\n  sources.forEach(source => {\n    if (!source) {\n      return;\n    }\n    each(source, (value, key) => {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n      result[key] = merge$1(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it is retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter whether a setter should be allowed or not\n */\nfunction defineLazyProperty(obj, key, getValue, setter = true) {\n  const set = value => Object.defineProperty(obj, key, {\n    value,\n    enumerable: true,\n    writable: true\n  });\n  const options = {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const value = getValue();\n      set(value);\n      return value;\n    }\n  };\n  if (setter) {\n    options.set = set;\n  }\n  return Object.defineProperty(obj, key, options);\n}\n\nvar Obj = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  each: each,\n  reduce: reduce,\n  isObject: isObject,\n  isPlain: isPlain,\n  merge: merge$1,\n  defineLazyProperty: defineLazyProperty\n});\n\n/**\n * @file browser.js\n * @module browser\n */\n\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPOD = false;\n\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @type {string|null}\n */\nlet IOS_VERSION = null;\n\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_ANDROID = false;\n\n/**\n * The detected Android version - or `null` if not Android or indeterminable.\n *\n * @static\n * @type {number|string|null}\n */\nlet ANDROID_VERSION;\n\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_FIREFOX = false;\n\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_EDGE = false;\n\n/**\n * Whether or not this is any Chromium Browser\n *\n * @static\n * @type {Boolean}\n */\nlet IS_CHROMIUM = false;\n\n/**\n * Whether or not this is any Chromium browser that is not Edge.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * Depreacted, as the behaviour to not match Edge was to prevent Legacy Edge's UA matching.\n * IS_CHROMIUM should be used instead.\n * \"Chromium but not Edge\" could be explicitly tested with IS_CHROMIUM && !IS_EDGE\n *\n * @static\n * @deprecated\n * @type {Boolean}\n */\nlet IS_CHROME = false;\n\n/**\n * The detected Chromium version - or `null`.\n *\n * @static\n * @type {number|null}\n */\nlet CHROMIUM_VERSION = null;\n\n/**\n * The detected Google Chrome version - or `null`.\n * This has always been the _Chromium_ version, i.e. would return on Chromium Edge.\n * Depreacted, use CHROMIUM_VERSION instead.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet CHROME_VERSION = null;\n\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet IE_VERSION = null;\n\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_SAFARI = false;\n\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_WINDOWS = false;\n\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPAD = false;\n\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nlet IS_IPHONE = false;\n\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch));\nconst UAD = window$1.navigator && window$1.navigator.userAgentData;\nif (UAD) {\n  // If userAgentData is present, use it instead of userAgent to avoid warnings\n  // Currently only implemented on Chromium\n  // userAgentData does not expose Android version, so ANDROID_VERSION remains `null`\n\n  IS_ANDROID = UAD.platform === 'Android';\n  IS_EDGE = Boolean(UAD.brands.find(b => b.brand === 'Microsoft Edge'));\n  IS_CHROMIUM = Boolean(UAD.brands.find(b => b.brand === 'Chromium'));\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = (UAD.brands.find(b => b.brand === 'Chromium') || {}).version || null;\n  IS_WINDOWS = UAD.platform === 'Windows';\n}\n\n// If the broser is not Chromium, either userAgentData is not present which could be an old Chromium browser,\n//  or it's a browser that has added userAgentData since that we don't have tests for yet. In either case,\n// the checks need to be made agiainst the regular userAgent string.\nif (!IS_CHROMIUM) {\n  const USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\n  IS_IPOD = /iPod/i.test(USER_AGENT);\n  IOS_VERSION = function () {\n    const match = USER_AGENT.match(/OS (\\d+)_/i);\n    if (match && match[1]) {\n      return match[1];\n    }\n    return null;\n  }();\n  IS_ANDROID = /Android/i.test(USER_AGENT);\n  ANDROID_VERSION = function () {\n    // This matches Android Major.Minor.Patch versions\n    // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n    const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n    if (!match) {\n      return null;\n    }\n    const major = match[1] && parseFloat(match[1]);\n    const minor = match[2] && parseFloat(match[2]);\n    if (major && minor) {\n      return parseFloat(match[1] + '.' + match[2]);\n    } else if (major) {\n      return major;\n    }\n    return null;\n  }();\n  IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n  IS_EDGE = /Edg/i.test(USER_AGENT);\n  IS_CHROMIUM = /Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT);\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = function () {\n    const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n    if (match && match[2]) {\n      return parseFloat(match[2]);\n    }\n    return null;\n  }();\n  IE_VERSION = function () {\n    const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n    let version = result && parseFloat(result[1]);\n    if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n      // IE 11 has a different user agent string than other IE versions\n      version = 11.0;\n    }\n    return version;\n  }();\n  IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n  IS_WINDOWS = /Windows/i.test(USER_AGENT);\n  IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n  IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n}\n\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get IS_IPOD () { return IS_IPOD; },\n  get IOS_VERSION () { return IOS_VERSION; },\n  get IS_ANDROID () { return IS_ANDROID; },\n  get ANDROID_VERSION () { return ANDROID_VERSION; },\n  get IS_FIREFOX () { return IS_FIREFOX; },\n  get IS_EDGE () { return IS_EDGE; },\n  get IS_CHROMIUM () { return IS_CHROMIUM; },\n  get IS_CHROME () { return IS_CHROME; },\n  get CHROMIUM_VERSION () { return CHROMIUM_VERSION; },\n  get CHROME_VERSION () { return CHROME_VERSION; },\n  get IE_VERSION () { return IE_VERSION; },\n  get IS_SAFARI () { return IS_SAFARI; },\n  get IS_WINDOWS () { return IS_WINDOWS; },\n  get IS_IPAD () { return IS_IPAD; },\n  get IS_IPHONE () { return IS_IPHONE; },\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n\n/**\n * @file dom.js\n * @module dom\n */\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n    const ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n  const el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    const val = properties[propName];\n\n    // Handle textContent since it's not supported everywhere and we have a\n    // method for it.\n    if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val || propName === 'tabIndex') {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n  if (content) {\n    appendContent(el, content);\n  }\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  return element.classList.contains(classToCheck);\n}\n\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {...string} classesToAdd\n *         One or more class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\nfunction addClass(element, ...classesToAdd) {\n  element.classList.add(...classesToAdd.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {...string} classesToRemove\n *         One or more class name to remove.\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\nfunction removeClass(element, ...classesToRemove) {\n  // Protect in case the player gets disposed\n  if (!element) {\n    log$1.warn(\"removeClass was called with an element that doesn't exist\");\n    return null;\n  }\n  element.classList.remove(...classesToRemove.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n  if (typeof predicate !== 'boolean') {\n    predicate = undefined;\n  }\n  classToToggle.split(/\\s+/).forEach(className => element.classList.toggle(className, predicate));\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    const attrValue = attributes[attrName];\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\nfunction getAttributes(tag) {\n  const obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  const knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    const attrs = tag.attributes;\n    for (let i = attrs.length - 1; i >= 0; i--) {\n      const attrName = attrs[i].name;\n      let attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n      obj[attrName] = attrVal;\n    }\n  }\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text.\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking.\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    const rect = el.getBoundingClientRect();\n    const result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(k => {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n    return result;\n  }\n}\n\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const width = el.offsetWidth;\n  const height = el.offsetHeight;\n  let left = 0;\n  let top = 0;\n  while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  }\n  return {\n    left,\n    top,\n    width,\n    height\n  };\n}\n\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  const translated = {\n    x: 0,\n    y: 0\n  };\n  if (IS_IOS) {\n    let item = el;\n    while (item && item.nodeName.toLowerCase() !== 'html') {\n      const transform = computedStyle(item, 'transform');\n      if (/^matrix/.test(transform)) {\n        const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n        translated.x += values[4];\n        translated.y += values[5];\n      } else if (/^matrix3d/.test(transform)) {\n        const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n        translated.x += values[12];\n        translated.y += values[13];\n      }\n      item = item.parentNode;\n    }\n  }\n  const position = {};\n  const boxTarget = findPosition(event.target);\n  const box = findPosition(el);\n  const boxW = box.width;\n  const boxH = box.height;\n  let offsetY = event.offsetY - (box.top - boxTarget.top);\n  let offsetX = event.offsetX - (box.left - boxTarget.left);\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n    if (IS_IOS) {\n      offsetX -= translated.x;\n      offsetY -= translated.y;\n    }\n  }\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(value => {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(value => value);\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(node => el.appendChild(node));\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nconst $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\nconst $$ = createQuerier('querySelectorAll');\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n  if (typeof window$1.getComputedStyle === 'function') {\n    let computedStyleValue;\n    try {\n      computedStyleValue = window$1.getComputedStyle(el);\n    } catch (e) {\n      return '';\n    }\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n  return '';\n}\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$,\n  computedStyle: computedStyle\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nlet _windowLoaded = false;\nlet videojs$1;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nconst autoSetup = function () {\n  if (videojs$1.options.autoSetup === false) {\n    return;\n  }\n  const vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  const audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  const divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  const mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n    for (let i = 0, e = mediaEls.length; i < e; i++) {\n      const mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          const options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$1(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  // Protect against breakage in non-browser environments\n  if (!isReal()) {\n    return;\n  }\n  if (vjs) {\n    videojs$1 = vjs;\n  }\n  window$1.setTimeout(autoSetup, wait);\n}\n\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nconst createStyleElement = function (className) {\n  const style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nconst setTextContent = function (el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar DomData = new WeakMap();\n\n/**\n * @file guid.js\n * @module guid\n */\n\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nconst _initialGuid = 3;\n\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\nlet _guid = _initialGuid;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData.delete(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n  function returnTrue() {\n    return true;\n  }\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n    const old = event || window$1.event;\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (const key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      // Lighthouse complains if Event.path is copied\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY' && key !== 'path') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      const doc = document.documentElement;\n      const body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true;\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nlet _supportsPassive;\nconst supportsPassive = function () {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {\n      // disregard\n    }\n  }\n  return _supportsPassive;\n};\n\n/**\n * Touch events Chrome expects to be passive\n */\nconst passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n  const data = DomData.get(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n  data.handlers[type].push(fn);\n  if (!data.dispatcher) {\n    data.disabled = false;\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n      event = fixEvent(event);\n      const handlers = data.handlers[event.type];\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        const handlersCopy = handlers.slice(0);\n        for (let m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      let options = false;\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  const removeType = function (el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (const t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n  const handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (let n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  const parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n    const targetData = DomData.get(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction any(elem, type, fn) {\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n\n  // multiple ons, but one off for everything\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nconst UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * A private, internal-only function for changing the context of a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @private\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\nconst bind_ = function (context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  const bound = fn.bind(context);\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\nconst throttle = function (fn, wait) {\n  let last = window$1.performance.now();\n  const throttled = function (...args) {\n    const now = window$1.performance.now();\n    if (now - last >= wait) {\n      fn(...args);\n      last = now;\n    }\n  };\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\nconst debounce = function (func, wait, immediate, context = window$1) {\n  let timeout;\n  const cancel = () => {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  const debounced = function () {\n    const self = this;\n    const args = arguments;\n    let later = function () {\n      timeout = null;\n      later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\nvar Fn = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n  bind_: bind_,\n  throttle: throttle,\n  debounce: debounce\n});\n\n/**\n * @file src/js/event-target.js\n */\nlet EVENT_MAP;\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nclass EventTarget$2 {\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {\n    // Remove the addEventListener alias before calling Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    on(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to remove.\n   */\n  off(type, fn) {\n    off(this, type, fn);\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    one(this, type, fn);\n    this.addEventListener = ael;\n  }\n  any(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    any(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n  trigger(event) {\n    const type = event.type || event;\n\n    // deprecation\n    // In a future version we should default target to `this`\n    // similar to how we default the target to `elem` in\n    // `Events.trigger`. Right now the default `target` will be\n    // `document` due to the `Event.fixEvent` call.\n    if (typeof event === 'string') {\n      event = {\n        type\n      };\n    }\n    event = fixEvent(event);\n    if (this.allowedEvents_[type] && this['on' + type]) {\n      this['on' + type](event);\n    }\n    trigger(this, event);\n  }\n  queueTrigger(event) {\n    // only set up EVENT_MAP if it'll be used\n    if (!EVENT_MAP) {\n      EVENT_MAP = new Map();\n    }\n    const type = event.type || event;\n    let map = EVENT_MAP.get(this);\n    if (!map) {\n      map = new Map();\n      EVENT_MAP.set(this, map);\n    }\n    const oldTimeout = map.get(type);\n    map.delete(type);\n    window$1.clearTimeout(oldTimeout);\n    const timeout = window$1.setTimeout(() => {\n      map.delete(type);\n      // if we cleared out all timeouts for the current target, delete its map\n      if (map.size === 0) {\n        map = null;\n        EVENT_MAP.delete(this);\n      }\n      this.trigger(event);\n    }, 0);\n    map.set(type, timeout);\n  }\n}\n\n/**\n * A Custom DOM event.\n *\n * @typedef {EventTarget} Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget$2.prototype.allowedEvents_ = {};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\nconst objName = obj => {\n  if (typeof obj.name === 'function') {\n    return obj.name();\n  }\n  if (typeof obj.name === 'string') {\n    return obj.name;\n  }\n  if (obj.name_) {\n    return obj.name_;\n  }\n  if (obj.constructor && obj.constructor.name) {\n    return obj.constructor.name;\n  }\n  return typeof obj;\n};\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nconst isEvented = object => object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(k => typeof object[k] === 'function');\n\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\nconst addEventedCallback = (target, callback) => {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n    target.eventedCallbacks.push(callback);\n  }\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nconst isValidEventType = type =>\n// The regex here verifies that the `type` contains at least one non-\n// whitespace character.\ntypeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length;\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateTarget = (target, obj, fnName) => {\n  if (!target || !target.nodeName && !isEvented(target)) {\n    throw new Error(`Invalid target for ${objName(obj)}#${fnName}; must be a DOM node or evented object.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n *\n * @param  {Object} obj\n*         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateEventType = (type, obj, fnName) => {\n  if (!isValidEventType(type)) {\n    throw new Error(`Invalid event type for ${objName(obj)}#${fnName}; must be a non-empty string or array.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateListener = (listener, obj, fnName) => {\n  if (typeof listener !== 'function') {\n    throw new Error(`Invalid listener for ${objName(obj)}#${fnName}; must be a function.`);\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nconst normalizeListenArgs = (self, args, fnName) => {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  const isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  let target;\n  let type;\n  let listener;\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n    [type, listener] = args;\n  } else {\n    [target, type, listener] = args;\n  }\n  validateTarget(target, self, fnName);\n  validateEventType(type, self, fnName);\n  validateListener(listener, self, fnName);\n  listener = bind_(self, listener);\n  return {\n    isTargetingSelf,\n    target,\n    type,\n    listener\n  };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nconst listen = (target, method, type, listener) => {\n  validateTarget(target, target, method);\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nconst EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'on');\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      const removeListenerOnDispose = () => this.off(target, type, listener);\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      const removeRemoverOnTargetDispose = () => this.off('dispose', removeListenerOnDispose);\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'one');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'any');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      const target = targetOrType;\n      const type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target, this, 'off');\n      validateEventType(type, this, 'off');\n      validateListener(listener, this, 'off');\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind_(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger(event, hash) {\n    validateTarget(this.eventBusEl_, this, 'trigger');\n    const type = event && typeof event !== 'string' ? event.type : event;\n    if (!isValidEventType(type)) {\n      throw new Error(`Invalid event type for ${objName(this)}#trigger; ` + 'must be a non-empty string or object with a type key that has a non-empty value.');\n    }\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target, options = {}) {\n  const {\n    eventBusKey\n  } = options;\n\n  // Set or create the eventBusEl_.\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(`The eventBusKey \"${eventBusKey}\" does not refer to an element.`);\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n  Object.assign(target, EventedMixin);\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(callback => {\n      callback();\n    });\n  }\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', () => {\n    target.off();\n    [target, target.el_, target.eventBusEl_].forEach(function (val) {\n      if (val && DomData.has(val)) {\n        DomData.delete(val);\n      }\n    });\n    window$1.setTimeout(() => {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nconst StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState(stateUpdates) {\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n    let changes;\n    each(stateUpdates, (value, key) => {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: this.state[key],\n          to: value\n        };\n      }\n      this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes,\n        type: 'statechanged'\n      });\n    }\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  Object.assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = Object.assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n  return target;\n}\n\n/**\n * @file str.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nconst toLowerCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toLowerCase());\n};\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nconst toTitleCase$1 = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nconst titleCaseEquals = function (str1, str2) {\n  return toTitleCase$1(str1) === toTitleCase$1(str2);\n};\n\nvar Str = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  toLowerCase: toLowerCase,\n  toTitleCase: toTitleCase$1,\n  titleCaseEquals: titleCaseEquals\n});\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\nclass Component$1 {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * parameters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of component options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  constructor(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n    this.isDisposed_ = false;\n\n    // Hold the reference to the parent component via `addChild` method\n    this.parentComponent_ = null;\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = merge$1({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = merge$1(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      const id = player && player.id && player.id() || 'no_player';\n      this.id_ = `${id}_component_${newGUID()}`;\n    }\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n    if (options.className && this.el_) {\n      options.className.split(' ').forEach(c => this.addClass(c));\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n      this.handleLanguagechange = this.handleLanguagechange.bind(this);\n      this.on(this.player_, 'languagechange', this.handleLanguagechange);\n    }\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set();\n    this.setIntervalIds_ = new Set();\n    this.rafIds_ = new Set();\n    this.namedRafs_ = new Map();\n    this.clearingTimersOnDispose_ = false;\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    // Don't want to trigger ready here or it will go before init is actually\n    // finished for all children that run this constructor\n    this.ready(ready);\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   *\n   * @param {Object} options\n   * @param {Element} options.originalEl element with which to replace player element\n   */\n  dispose(options = {}) {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n    if (this.readyQueue_) {\n      this.readyQueue_.length = 0;\n    }\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true;\n\n    // Dispose all children.\n    if (this.children_) {\n      for (let i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        if (options.restoreEl) {\n          this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n        } else {\n          this.el_.parentNode.removeChild(this.el_);\n        }\n      }\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  }\n\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  player() {\n    return this.player_;\n  }\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:obj.merge}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n    this.options_ = merge$1(this.options_, obj);\n    return this.options_;\n  }\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  el() {\n    return this.el_;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  localize(string, tokens, defaultValue = string) {\n    const code = this.player_.language && this.player_.language();\n    const languages = this.player_.languages && this.player_.languages();\n    const language = languages && languages[code];\n    const primaryCode = code && code.split('-')[0];\n    const primaryLang = languages && languages[primaryCode];\n    let localizedString = defaultValue;\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        const value = tokens[index - 1];\n        let ret = value;\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n        return ret;\n      });\n    }\n    return localizedString;\n  }\n\n  /**\n   * Handles language change for the player in components. Should be overriden by sub-components.\n   *\n   * @abstract\n   */\n  handleLanguagechange() {}\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  id() {\n    return this.id_;\n  }\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  name() {\n    return this.name_;\n  }\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  children() {\n    return this.children_;\n  }\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  getChildById(id) {\n    return this.childIndex_[id];\n  }\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  getChild(name) {\n    if (!name) {\n      return;\n    }\n    return this.childNameIndex_[name];\n  }\n\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  getDescendant(...names) {\n    // flatten array argument into the main array\n    names = names.reduce((acc, n) => acc.concat(n), []);\n    let currentChild = this;\n    for (let i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n    return currentChild;\n  }\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  addChild(child, options = {}, index = this.children_.length) {\n    let component;\n    let componentName;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase$1(child);\n      const componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      const ComponentClass = Component$1.getComponent(componentClassName);\n      if (!ComponentClass) {\n        throw new Error(`Component ${componentClassName} does not exist`);\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase$1(component.name());\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      let refNode = null;\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  }\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    if (!component || !this.children_) {\n      return;\n    }\n    let childFound = false;\n    for (let i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n    if (!childFound) {\n      return;\n    }\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase$1(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    const compEl = component.el();\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  initChildren() {\n    const children = this.options_.children;\n    if (children) {\n      // `this` is `parent`\n      const parentOptions = this.options_;\n      const handleAdd = child => {\n        const name = child.name;\n        let opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        const newChild = this.addChild(name, opts);\n        if (newChild) {\n          this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      let workingChildren;\n      const Tech = Component$1.getComponent('Tech');\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(child => {\n        let name;\n        let opts;\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n        return {\n          name,\n          opts\n        };\n      }).filter(child => {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        const c = Component$1.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @param {Component~ReadyCallback} fn\n   *        Function that gets called when the `Component` is ready.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ready(fn, sync = false) {\n    if (!fn) {\n      return;\n    }\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      const readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  }\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $$(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  hasClass(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {...string} classesToAdd\n   *        One or more CSS class name to add.\n   */\n  addClass(...classesToAdd) {\n    addClass(this.el_, ...classesToAdd);\n  }\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {...string} classesToRemove\n   *        One or more CSS class name to remove.\n   */\n  removeClass(...classesToRemove) {\n    removeClass(this.el_, ...classesToRemove);\n  }\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  toggleClass(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  show() {\n    this.removeClass('vjs-hidden');\n  }\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  hide() {\n    this.addClass('vjs-hidden');\n  }\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  getAttribute(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  setAttribute(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  removeAttribute(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    const val = this.el_.style[widthOrHeight];\n    const pxIndex = val.indexOf('px');\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n  }\n\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  currentDimension(widthOrHeight) {\n    let computedWidthOrHeight = 0;\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      const rule = `offset${toTitleCase$1(widthOrHeight)}`;\n      computedWidthOrHeight = this.el_[rule];\n    }\n    return computedWidthOrHeight;\n  }\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  currentWidth() {\n    return this.currentDimension('width');\n  }\n\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  currentHeight() {\n    return this.currentDimension('height');\n  }\n\n  /**\n   * Set the focus to this component\n   */\n  focus() {\n    this.el_.focus();\n  }\n\n  /**\n   * Remove the focus from this component\n   */\n  blur() {\n    this.el_.blur();\n  }\n\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser. Exclude Tab for focus trapping.\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.stopPropagation();\n      }\n      this.player_.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    let touchStart = 0;\n    let firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    const tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    const touchTimeThreshold = 200;\n    let couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = window$1.performance.now();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        const xdiff = event.touches[0].pageX - firstTouch.pageX;\n        const ydiff = event.touches[0].pageY - firstTouch.pageY;\n        const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n    const noTap = function () {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        const touchTime = window$1.performance.now() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    const report = bind_(this.player(), this.player().reportUserActivity);\n    let touchHolding;\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n    const touchEnd = function (event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  setTimeout(fn, timeout) {\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(() => {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_.delete(timeoutId);\n      }\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_.delete(timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n    return timeoutId;\n  }\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  setInterval(fn, interval) {\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    const intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_.delete(intervalId);\n      window$1.clearInterval(intervalId);\n    }\n    return intervalId;\n  }\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  requestAnimationFrame(fn) {\n    this.clearTimersOnDispose_();\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id;\n    fn = bind_(this, fn);\n    id = window$1.requestAnimationFrame(() => {\n      if (this.rafIds_.has(id)) {\n        this.rafIds_.delete(id);\n      }\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  requestNamedAnimationFrame(name, fn) {\n    if (this.namedRafs_.has(name)) {\n      return;\n    }\n    this.clearTimersOnDispose_();\n    fn = bind_(this, fn);\n    const id = this.requestAnimationFrame(() => {\n      fn();\n      if (this.namedRafs_.has(name)) {\n        this.namedRafs_.delete(name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_.delete(name);\n  }\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  cancelAnimationFrame(id) {\n    if (this.rafIds_.has(id)) {\n      this.rafIds_.delete(id);\n      window$1.cancelAnimationFrame(id);\n    }\n    return id;\n  }\n\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  clearTimersOnDispose_() {\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', () => {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(([idName, cancelName]) => {\n        // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n        this[idName].forEach((val, key) => this[cancelName](key));\n      });\n      this.clearingTimersOnDispose_ = false;\n    });\n  }\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  static registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(`Illegal component name, \"${name}\"; must be a non-empty string.`);\n    }\n    const Tech = Component$1.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    const isTech = Tech && Tech.isTech(ComponentToRegister);\n    const isComp = Component$1 === ComponentToRegister || Component$1.prototype.isPrototypeOf(ComponentToRegister.prototype);\n    if (isTech || !isComp) {\n      let reason;\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n      throw new Error(`Illegal component, \"${name}\"; ${reason}.`);\n    }\n    name = toTitleCase$1(name);\n    if (!Component$1.components_) {\n      Component$1.components_ = {};\n    }\n    const Player = Component$1.getComponent('Player');\n    if (name === 'Player' && Player && Player.players) {\n      const players = Player.players;\n      const playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n    Component$1.components_[name] = ComponentToRegister;\n    Component$1.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   */\n  static getComponent(name) {\n    if (!name || !Component$1.components_) {\n      return;\n    }\n    return Component$1.components_[name];\n  }\n}\nComponent$1.registerComponent('Component', Component$1);\n\n/**\n * @file time.js\n * @module time\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(`Failed to execute '${fnName}' on 'TimeRanges': The index provided (${index}) is non-numeric or out of bounds (0-${maxIndex}).`);\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  let timeRangesObj;\n  if (ranges === undefined || ranges.length === 0) {\n    timeRangesObj = {\n      length: 0,\n      start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  } else {\n    timeRangesObj = {\n      length: ranges.length,\n      start: getRange.bind(null, 'start', 0, ranges),\n      end: getRange.bind(null, 'end', 1, ranges)\n    };\n  }\n  if (window$1.Symbol && window$1.Symbol.iterator) {\n    timeRangesObj[window$1.Symbol.iterator] = () => (ranges || []).values();\n  }\n  return timeRangesObj;\n}\n\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\nfunction createTimeRanges$1(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nconst defaultImplementation = function (seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  let s = Math.floor(seconds % 60);\n  let m = Math.floor(seconds / 60 % 60);\n  let h = Math.floor(seconds / 3600);\n  const gm = Math.floor(guide / 60 % 60);\n  const gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n};\n\n// Internal pointer to the current implementation.\nlet implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\nfunction formatTime(seconds, guide = seconds) {\n  return implementation(seconds, guide);\n}\n\nvar Time = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTimeRanges: createTimeRanges$1,\n  createTimeRange: createTimeRanges$1,\n  setFormatTime: setFormatTime,\n  resetFormatTime: resetFormatTime,\n  formatTime: formatTime\n});\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  let bufferedDuration = 0;\n  let start;\n  let end;\n  if (!duration) {\n    return 0;\n  }\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges$1(0, 0);\n  }\n  for (let i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n    bufferedDuration += end - start;\n  }\n  return bufferedDuration / duration;\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n    Object.assign(this, value);\n  }\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (let errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, e => {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nconst trackToJson_ = function (track) {\n  const ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce((acc, prop, i) => {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nconst textTracksToJson = function (tech) {\n  const trackEls = tech.$$('track');\n  const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n  const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    const json = trackToJson_(trackEl.track);\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nconst jsonToTextTracks = function (json, tech) {\n  json.forEach(function (track) {\n    const addedTrack = tech.addRemoteTextTrack(track).track;\n    if (!track.src && track.cues) {\n      track.cues.forEach(cue => addedTrack.addCue(cue));\n    }\n  });\n  return tech.textTracks();\n};\nvar textTrackConverter = {\n  textTracksToJson,\n  jsonToTextTracks,\n  trackToJson_\n};\n\n/**\n * @file modal-dialog.js\n */\nconst MODAL_CLASS_NAME = 'vjs-modal-dialog';\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\nclass ModalDialog extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.close_ = e => this.close(e);\n    this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n    this.closeable(!this.options_.uncloseable);\n    this.content(this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    this.contentEl_ = createEl('div', {\n      className: `${MODAL_CLASS_NAME}-content`\n    }, {\n      role: 'document'\n    });\n    this.descEl_ = createEl('p', {\n      className: `${MODAL_CLASS_NAME}-description vjs-control-text`,\n      id: this.el().getAttribute('aria-describedby')\n    });\n    textContent(this.descEl_, this.description());\n    this.el_.appendChild(this.descEl_);\n    this.el_.appendChild(this.contentEl_);\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': `${this.id()}_description`,\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `${MODAL_CLASS_NAME} vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  description() {\n    let desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n    return desc;\n  }\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  open() {\n    if (!this.opened_) {\n      const player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n      this.on('keydown', this.handleKeyDown_);\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  }\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  close() {\n    if (!this.opened_) {\n      return;\n    }\n    const player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n    this.off('keydown', this.handleKeyDown_);\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  closeable(value) {\n    if (typeof value === 'boolean') {\n      const closeable = this.closeable_ = !!value;\n      let close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        const temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close_);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close_);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  }\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  fill() {\n    this.fillWith(this.content());\n  }\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  fillWith(content) {\n    const contentEl = this.contentEl();\n    const parentEl = contentEl.parentNode;\n    const nextSiblingEl = contentEl.nextSibling;\n\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    const closeButton = this.getChild('closeButton');\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('modalempty');\n  }\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  }\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  conditionalFocus_() {\n    const activeEl = document.activeElement;\n    const playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    }\n\n    // exit early if it isn't a tab key\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n    const focusableEls = this.focusableEls_();\n    const activeEl = this.el_.querySelector(':focus');\n    let focusIndex;\n    for (let i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  focusableEls_() {\n    const allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, child => {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  }\n}\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent$1.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\nclass TrackList extends EventTarget$2 {\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  constructor(tracks = []) {\n    super();\n    this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.tracks_.length;\n      }\n    });\n    for (let i = 0; i < tracks.length; i++) {\n      this.addTrack(tracks[i]);\n    }\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    const index = this.tracks_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n\n    /**\n     * Triggered when a track label is changed.\n     *\n     * @event TrackList#addtrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was added.\n     */\n    track.labelchange_ = () => {\n      this.trigger({\n        track,\n        type: 'labelchange',\n        target: this\n      });\n    };\n    if (isEvented(track)) {\n      track.addEventListener('labelchange', track.labelchange_);\n    }\n  }\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  removeTrack(rtrack) {\n    let track;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  getTrackById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const track = this[i];\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack',\n  labelchange: 'labelchange'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (const event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers$1 = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\nclass AudioTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.enabled) {\n      disableOthers$1(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.enabledChange_ = () => {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers$1(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', track.enabledChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  }\n}\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\nclass VideoTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(this, 'selectedIndex', {\n      get() {\n        for (let i = 0; i < this.length; i++) {\n          if (this[i].selected) {\n            return i;\n          }\n        }\n        return -1;\n      },\n      set() {}\n    });\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.selectedChange_ = () => {\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', track.selectedChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  }\n}\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\nclass TextTrackList extends TrackList {\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    super.addTrack(track);\n    if (!this.queueChange_) {\n      this.queueChange_ = () => this.queueTrigger('change');\n    }\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n    }\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', this.queueChange_);\n    const nonLanguageTextTrackKind = ['metadata', 'chapters'];\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n\n    // manually remove the event handlers we added\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  }\n}\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nclass HtmlTrackElementList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  constructor(trackElements = []) {\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.trackElements_.length;\n      }\n    });\n    for (let i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n  addTrackElement_(trackElement) {\n    const index = this.trackElements_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  getTrackElementByTrack_(track) {\n    let trackElement_;\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n    return trackElement_;\n  }\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  removeTrackElement_(trackElement) {\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nclass TextTrackCueList {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  constructor(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n  setCues_(cues) {\n    const oldLength = this.length || 0;\n    let i = 0;\n    const l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n    const defineProp = function (index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n    if (oldLength < l) {\n      i = oldLength;\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  getCueById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const cue = this[i];\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nconst VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nconst AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nconst TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nconst TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\nclass Track extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  constructor(options = {}) {\n    super();\n    const trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      language: options.language || ''\n    };\n    let label = options.label || '';\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    for (const key in trackProps) {\n      Object.defineProperty(this, key, {\n        get() {\n          return trackProps[key];\n        },\n        set() {}\n      });\n    }\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @fires Track#labelchange\n     */\n    Object.defineProperty(this, 'label', {\n      get() {\n        return label;\n      },\n      set(newLabel) {\n        if (newLabel !== label) {\n          label = newLabel;\n\n          /**\n           * An event that fires when label changes on this track.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event Track#labelchange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('labelchange');\n        }\n      }\n    });\n  }\n}\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\nconst parseUrl = function (url) {\n  // This entire method can be replace with URL once we are able to drop IE11\n\n  const props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  const a = document.createElement('a');\n  a.href = url;\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE because the anchor loses its\n  // properties when it's removed from the dom\n  const details = {};\n  for (let i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  /* istanbul ignore if */\n  if (!details.host) {\n    details.host = window$1.location.host;\n  }\n  return details;\n};\n\n/**\n * Get absolute version of relative URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nconst getAbsoluteURL = function (url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Add the url to an anchor and let the browser parse it to convert to an absolute url\n    const a = document.createElement('a');\n    a.href = url;\n    url = a.href;\n  }\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\nconst getFileExtension = function (path) {\n  if (typeof path === 'string') {\n    const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    const pathParts = splitPathRe.exec(path);\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\nconst isCrossOrigin = function (url, winLoc = window$1.location) {\n  const urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  const srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  const crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nconst parseCues = function (srcContent, track) {\n  const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  const errors = [];\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(`Text Track parsing errors for ${track.src}`);\n    }\n    errors.forEach(error => log$1.error(error));\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nconst loadTrack = function (src, track) {\n  const opts = {\n    uri: src\n  };\n  const crossOrigin = isCrossOrigin(src);\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n  const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n  XHR(opts, bind_(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], event => {\n          if (event.type === 'vttjserror') {\n            log$1.error(`vttjs failed to load, stopping trying to process ${track.src}`);\n            return;\n          }\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\nclass TextTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n    const settings = merge$1(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    let mode = TextTrackMode[settings.mode] || 'disabled';\n    const default_ = settings.default;\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    super(settings);\n    this.tech_ = settings.tech;\n    this.cues_ = [];\n    this.activeCues_ = [];\n    this.preload_ = this.tech_.preloadTextTracks !== false;\n    const cues = new TextTrackCueList(this.cues_);\n    const activeCues = new TextTrackCueList(this.activeCues_);\n    let changed = false;\n    this.timeupdateHandler = bind_(this, function (event = {}) {\n      if (this.tech_.isDisposed()) {\n        return;\n      }\n      if (!this.tech_.isReady_) {\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n        return;\n      }\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n      if (event.type !== 'timeupdate') {\n        this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n      }\n    });\n    const disposeHandler = () => {\n      this.stopTracking();\n    };\n    this.tech_.one('dispose', disposeHandler);\n    if (mode !== 'disabled') {\n      this.startTracking();\n    }\n    Object.defineProperties(this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get() {\n          return default_;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get() {\n          return mode;\n        },\n        set(newMode) {\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          if (mode === newMode) {\n            return;\n          }\n          mode = newMode;\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n          this.stopTracking();\n          if (mode !== 'disabled') {\n            this.startTracking();\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n          return cues;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n          const ct = this.tech_.currentTime();\n          const active = [];\n          for (let i = 0, l = this.cues.length; i < l; i++) {\n            const cue = this.cues[i];\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            }\n          }\n          changed = false;\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (let i = 0; i < active.length; i++) {\n              if (this.activeCues_.indexOf(active[i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set() {}\n      }\n    });\n    if (settings.src) {\n      this.src = settings.src;\n      if (!this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        this.loaded_ = true;\n      }\n      if (this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(this.src, this);\n      }\n    } else {\n      this.loaded_ = true;\n    }\n  }\n  startTracking() {\n    // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n    // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n    this.tech_.on('timeupdate', this.timeupdateHandler);\n  }\n  stopTracking() {\n    if (this.rvf_) {\n      this.tech_.cancelVideoFrameCallback(this.rvf_);\n      this.rvf_ = undefined;\n    }\n    this.tech_.off('timeupdate', this.timeupdateHandler);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n  addCue(originalCue) {\n    let cue = originalCue;\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n      for (const prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n    const tracks = this.tech_.textTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  removeCue(removeCue) {\n    let i = this.cues_.length;\n    while (i--) {\n      const cue = this.cues_[i];\n      if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\nclass AudioTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'enabled', {\n      get() {\n        return enabled;\n      },\n      set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      this.enabled = settings.enabled;\n    }\n    this.loaded_ = true;\n  }\n}\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\nclass VideoTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'selected', {\n      get() {\n        return selected;\n      },\n      set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      this.selected = settings.selected;\n    }\n  }\n}\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\nclass HTMLTrackElement extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    super();\n    let readyState;\n    const track = new TextTrack(options);\n    this.kind = track.kind;\n    this.src = track.src;\n    this.srclang = track.language;\n    this.label = track.label;\n    this.default = track.default;\n    Object.defineProperties(this, {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get() {\n          return readyState;\n        }\n      },\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get() {\n          return track;\n        }\n      }\n    });\n    readyState = HTMLTrackElement.NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', () => {\n      readyState = HTMLTrackElement.LOADED;\n      this.trigger({\n        type: 'load',\n        target: this\n      });\n    });\n  }\n}\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\n/**\n * The text track not loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.NONE = 0;\n\n/**\n * The text track loading state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADING = 1;\n\n/**\n * The text track loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADED = 2;\n\n/**\n * The text track failed to load state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.ERROR = 3;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nconst NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = `${type}Tracks`;\n  NORMAL[type].privateName = `${type}Tracks_`;\n});\nconst REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nconst ALL = Object.assign({}, NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language, options = {}) {\n  const tracks = self.textTracks();\n  options.kind = kind;\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n  const track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link HTML5}\n *\n * @extends Component\n */\nclass Tech extends Component$1 {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options = {}, ready = function () {}) {\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    super(null, options, ready);\n    this.onDurationChange_ = e => this.onDurationChange(e);\n    this.trackProgress_ = e => this.trackProgress(e);\n    this.trackCurrentTime_ = e => this.trackCurrentTime(e);\n    this.stopTrackingCurrentTime_ = e => this.stopTrackingCurrentTime(e);\n    this.disposeSourceHandler_ = e => this.disposeSourceHandler(e);\n    this.queuedHanders_ = new Set();\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    this.hasStarted_ = false;\n    this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      if (options && options[props.getterName]) {\n        this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/tech doesn't report it.\n    if (!this.featuresProgressEvents) {\n      this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/tech doesn't report it.\n    if (!this.featuresTimeupdateEvents) {\n      this.manualTimeUpdatesOn();\n    }\n    ['Text', 'Audio', 'Video'].forEach(track => {\n      if (options[`native${track}Tracks`] === false) {\n        this[`featuresNative${track}Tracks`] = false;\n      }\n    });\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      this.featuresNativeTextTracks = true;\n    }\n    if (!this.featuresNativeTextTracks) {\n      this.emulateTextTracks();\n    }\n    this.preloadTextTracks = options.preloadTextTracks !== false;\n    this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n    this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      this.emitTapEvents();\n    }\n    if (this.constructor) {\n      this.name_ = this.constructor.name || 'Unknown Tech';\n    }\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n  triggerSourceset(src) {\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src,\n      type: 'sourceset'\n    });\n  }\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  manualProgressOn() {\n    this.on('durationchange', this.onDurationChange_);\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange_);\n  }\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind_(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      const numBufferedPercent = this.bufferedPercent();\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n      this.bufferedPercent_ = numBufferedPercent;\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  buffered() {\n    return createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime_);\n    this.on('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime_);\n    this.off('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n    super.dispose();\n  }\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  clearTracks(types) {\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(type => {\n      const list = this[`${type}Tracks`]() || [];\n      let i = list.length;\n      while (i--) {\n        const track = list[i];\n        if (type === 'text') {\n          this.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  }\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  cleanupAutoTextTracks() {\n    const list = this.autoRemoteTextTracks_ || [];\n    let i = list.length;\n    while (i--) {\n      const track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  crossOrigin() {}\n\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  setCrossOrigin() {}\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  }\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  played() {\n    if (this.hasStarted_) {\n      return createTimeRanges$1(0, 0);\n    }\n    return createTimeRanges$1();\n  }\n\n  /**\n   * Start playback\n   *\n   * @abstract\n   *\n   * @see {Html5#play}\n   */\n  play() {}\n\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#setScrubbing}\n   */\n  setScrubbing() {}\n\n  /**\n   * Get whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#scrubbing}\n   */\n  scrubbing() {}\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  initTrackListeners() {\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(name => {\n      const props = NORMAL[name];\n      const trackListChanges = () => {\n        this.trigger(`${name}trackchange`);\n      };\n      const tracks = this[props.getterName]();\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n      this.on('dispose', () => {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  addWebVttScript_() {\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      const script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = () => {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        this.trigger('vttjsloaded');\n      };\n      script.onerror = () => {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        this.trigger('vttjserror');\n      };\n      this.on('dispose', () => {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n\n  /**\n   * Emulate texttracks\n   *\n   */\n  emulateTextTracks() {\n    const tracks = this.textTracks();\n    const remoteTracks = this.remoteTextTracks();\n    const handleAddTrack = e => tracks.addTrack(e.track);\n    const handleRemoveTrack = e => tracks.removeTrack(e.track);\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n    const updateDisplay = () => this.trigger('texttrackchange');\n    const textTracksChanges = () => {\n      updateDisplay();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n    return createTrackHelper(this, kind, label, language);\n  }\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    const track = merge$1(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=false]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   */\n  addRemoteTextTrack(options = {}, manualCleanup) {\n    const htmlTrackElement = this.createRemoteTextTrack(options);\n    if (typeof manualCleanup !== 'boolean') {\n      manualCleanup = false;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n    if (manualCleanup === false) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  removeRemoteTextTrack(track) {\n    const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  getVideoPlaybackQuality() {\n    return {};\n  }\n\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  requestPictureInPicture() {\n    return Promise.reject();\n  }\n\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  disablePictureInPicture() {\n    return true;\n  }\n\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  setDisablePictureInPicture() {}\n\n  /**\n   * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n   *\n   * @param {function} cb\n   * @return {number} request id\n   */\n  requestVideoFrameCallback(cb) {\n    const id = newGUID();\n    if (!this.isReady_ || this.paused()) {\n      this.queuedHanders_.add(id);\n      this.one('playing', () => {\n        if (this.queuedHanders_.has(id)) {\n          this.queuedHanders_.delete(id);\n          cb();\n        }\n      });\n    } else {\n      this.requestNamedAnimationFrame(id, cb);\n    }\n    return id;\n  }\n\n  /**\n   * A fallback implementation of cancelVideoFrameCallback\n   *\n   * @param {number} id id of callback to be cancelled\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.queuedHanders_.has(id)) {\n      this.queuedHanders_.delete(id);\n    } else {\n      this.cancelNamedAnimationFrame(id);\n    }\n  }\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  setPoster() {}\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  playsinline() {}\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  setPlaysinline() {}\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeAudioTracks() {}\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeVideoTracks() {}\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  canPlayType() {\n    return '';\n  }\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  static canPlayType() {\n    return '';\n  }\n\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  static canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  static isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  static registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n    if (!Tech.isTech(tech)) {\n      throw new Error(`Tech ${name} must be a Tech`);\n    }\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n    name = toTitleCase$1(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  }\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  static getTech(name) {\n    if (!name) {\n      return;\n    }\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n    name = toTitleCase$1(name);\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn(`The ${name} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n      return window$1.videojs[name];\n    }\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event.\n * This will be used to determine if {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event.\n * This will be used to determine if {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVideoFrameCallback = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    let handlers = _Tech.sourceHandlers;\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n      if (can) {\n        return can;\n      }\n    }\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n      if (can) {\n        return handlers[i];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    const sh = _Tech.selectSourceHandler(srcObj, options);\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  const deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    const originalFn = this[fnName];\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    let sh = _Tech.selectSourceHandler(source, this.options_);\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler_);\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler_);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent$1.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nconst middlewares = {};\nconst middlewareInstances = {};\nconst TERMINATOR = {};\n\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\nfunction setSource(player, src, next) {\n  player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n}\n\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\nfunction setTech(middleware, tech) {\n  middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\nfunction mediate(middleware, tech, method, arg = null) {\n  const callMethod = 'call' + toTitleCase$1(method);\n  const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  const terminated = middlewareValue === TERMINATOR;\n  // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n  const returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1,\n  ended: 1\n};\n\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedMediators = {\n  play: 1,\n  pause: 1\n};\nfunction middlewareIterator(method) {\n  return (value, mw) => {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n    if (mw[method]) {\n      return mw[method](value);\n    }\n    return value;\n  };\n}\nfunction executeRight(mws, method, value, terminated) {\n  for (let i = mws.length - 1; i >= 0; i--) {\n    const mw = mws[i];\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  const mws = middlewareInstances[player.id()];\n  let mw = null;\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n  for (let i = 0; i < mws.length; i++) {\n    const [mwf, mwi] = mws[i];\n    if (mwf !== mwFactory) {\n      continue;\n    }\n    mw = mwi;\n  }\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n  return mw;\n}\nfunction setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n  const [mwFactory, ...mwrest] = middleware;\n\n  // if mwFactory is a string, then we're at a fork in the road\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    const mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n    mw.setSource(Object.assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n * @typedef Mimetypes~Kind\n * @enum\n */\nconst MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  mpd: 'application/dash+xml',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nconst getMimetype = function (src = '') {\n  const ext = getFileExtension(src);\n  const mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nconst findMimetype = (player, src) => {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  const matchingSources = player.cache_.sources.filter(s => s.src === src);\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  const sources = player.$$('source');\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nconst filterSource = function (src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    let newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  if (!src.type) {\n    const mimetype = getMimetype(src.src);\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n  return src;\n}\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\nclass MediaLoader extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  constructor(player, options, ready) {\n    // MediaLoader has no element\n    const options_ = merge$1({\n      createEl: false\n    }, options);\n    super(player, options_, ready);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        const techName = toTitleCase$1(j[i]);\n        let tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component$1.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (e.g. HTML5) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n  }\n}\nComponent$1.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\nclass ClickableComponent extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of component options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   *\n   * @param  {string} [options.controlText]\n   *         The text to set on the button\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (this.options_.controlText) {\n      this.controlText(this.options_.controlText);\n    }\n    this.handleMouseOver_ = e => this.handleMouseOver(e);\n    this.handleMouseOut_ = e => this.handleMouseOut(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.emitTapEvents();\n    this.enable();\n  }\n\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    props = Object.assign({\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n    if (tag === 'button') {\n      log$1.error(`Creating a ClickableComponent with an HTML element of ${tag} is not supported; use a Button instead.`);\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = Object.assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n    const el = createEl(tag, props, attributes);\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  }\n  dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.el()) {\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n    const localizedText = this.localize(text);\n\n    /** @protected */\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-control vjs-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enable this `ClickableComponent`\n   */\n  enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick_);\n      this.on('keydown', this.handleKeyDown_);\n    }\n  }\n\n  /**\n   * Disable this `ClickableComponent`\n   */\n  disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off('mouseover', this.handleMouseOver_);\n    this.off('mouseout', this.handleMouseOut_);\n    this.off(['tap', 'click'], this.handleClick_);\n    this.off('keydown', this.handleKeyDown_);\n  }\n\n  /**\n   * Handles language change in ClickableComponent for the player in components\n   *\n   *\n   */\n  handleLanguagechange() {\n    this.controlText(this.controlText_);\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\nclass PosterImage extends ClickableComponent {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update();\n    this.update_ = e => this.update(e);\n    player.on('posterchange', this.update_);\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n  dispose() {\n    this.player().off('posterchange', this.update_);\n    super.dispose();\n  }\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    const el = createEl('picture', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    }, {}, createEl('img', {\n      loading: 'lazy',\n      crossOrigin: this.crossOrigin()\n    }, {\n      alt: ''\n    }));\n    return el;\n  }\n\n  /**\n   * Get or set the `PosterImage`'s crossOrigin option.\n   *\n   * @param {string|null} [value]\n   *        The value to set the crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      if (this.el_) {\n        // If the poster's element exists, give its value\n        return this.el_.querySelector('img').crossOrigin;\n      } else if (this.player_.tech_ && this.player_.tech_.isReady_) {\n        // If not but the tech is ready, query the tech\n        return this.player_.crossOrigin();\n      }\n      // Otherwise check options as the  poster is usually set before the state of crossorigin\n      // can be retrieved by the getter\n      return this.player_.options_.crossOrigin || this.player_.options_.crossorigin || null;\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      this.player_.log.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    this.el_.querySelector('img').crossOrigin = value;\n    return;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  update(event) {\n    const url = this.player().poster();\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  setSrc(url) {\n    this.el_.querySelector('img').src = url;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n}\n\n/**\n * Get or set the `PosterImage`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<img>` tag to control the CORS\n * behavior.\n *\n * @param {string|null} [value]\n *        The value to set the `PosterImages`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|null|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPosterImage.prototype.crossorigin = PosterImage.prototype.crossOrigin;\nComponent$1.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\nconst darkGray = '#222';\nconst lightGray = '#ccc';\nconst fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  let hex;\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\nclass TextTrackDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const updateDisplayHandler = e => this.updateDisplay(e);\n    player.on('loadstart', e => this.toggleDisplay(e));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', e => this.preselectTrack(e));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind_(this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      const screenOrientation = window$1.screen.orientation || window$1;\n      const changeOrientationEvent = window$1.screen.orientation ? 'change' : 'orientationchange';\n      screenOrientation.addEventListener(changeOrientationEvent, updateDisplayHandler);\n      player.on('dispose', () => screenOrientation.removeEventListener(changeOrientationEvent, updateDisplayHandler));\n      const tracks = this.options_.playerOptions.tracks || [];\n      for (let i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n      this.preselectTrack();\n    }));\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n  preselectTrack() {\n    const modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    const trackList = this.player_.textTracks();\n    const userPref = this.player_.cache_.selectedLanguage;\n    let firstDesc;\n    let firstCaptions;\n    let preferredTrack;\n    for (let i = 0; i < trackList.length; i++) {\n      const track = trackList[i];\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'translate': 'yes',\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  updateDisplay() {\n    const tracks = this.player_.textTracks();\n    const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n    if (allowMultipleShowingTracks) {\n      const showingTracks = [];\n      for (let i = 0; i < tracks.length; ++i) {\n        const track = tracks[i];\n        if (track.mode !== 'showing') {\n          continue;\n        }\n        showingTracks.push(track);\n      }\n      this.updateForTrack(showingTracks);\n      return;\n    }\n\n    //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    let descriptionsTrack = null;\n    let captionsSubtitlesTrack = null;\n    let i = tracks.length;\n    while (i--) {\n      const track = tracks[i];\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  updateDisplayState(track) {\n    const overrides = this.player_.textTrackSettings.getValues();\n    const cues = track.activeCues;\n    let i = cues.length;\n    while (i--) {\n      const cue = cues[i];\n      if (!cue) {\n        continue;\n      }\n      const cueDiv = cue.displayState;\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = `2px 2px 3px ${darkGray}, 2px 2px 4px ${darkGray}, 2px 2px 5px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${darkGray}, 2px 2px ${darkGray}, 3px 3px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${lightGray}, 0 1px ${lightGray}, -1px -1px ${darkGray}, 0 -1px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = `0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}`;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        const fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(track => {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n    const cues = [];\n\n    // push all active track cues\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    }\n\n    // removes all cues before it processes new ones\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    // add unique class to each language text track & add settings styling if necessary\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        const cueEl = track.activeCues[j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue', 'vjs-text-track-cue-' + (track.language ? track.language : i));\n        if (track.language) {\n          setAttribute(cueEl, 'lang', track.language);\n        }\n      }\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(track);\n      }\n    }\n  }\n}\nComponent$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\nclass LoadingSpinner extends Component$1 {\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  createEl() {\n    const isAudio = this.player_.isAudio();\n    const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    const controlText = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('{1} is loading.', [playerType])\n    });\n    const el = super.createEl('div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n    el.appendChild(controlText);\n    return el;\n  }\n}\nComponent$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\nclass Button extends ClickableComponent {\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag, props = {}, attributes = {}) {\n    tag = 'button';\n    props = Object.assign({\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = Object.assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    const el = createEl(tag, props, attributes);\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  }\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  addChild(child, options = {}) {\n    const className = this.constructor.name;\n    log$1.warn(`Adding an actionable (user controllable) child to a Button (${className}) is not supported; use a ClickableComponent instead.`);\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component$1.prototype.addChild.call(this, child, options);\n  }\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  enable() {\n    super.enable();\n    this.el_.removeAttribute('disabled');\n  }\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  disable() {\n    super.disable();\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    super.handleKeyDown(event);\n  }\n}\nComponent$1.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\nclass BigPlayButton extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.mouseused_ = false;\n    this.on('mousedown', e => this.handleMouseDown(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n  buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n      return;\n    }\n    const cb = this.player_.getChild('controlBar');\n    const playToggle = cb && cb.getChild('playToggle');\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n    const playFocus = () => playToggle.focus();\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, () => {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  }\n  handleKeyDown(event) {\n    this.mouseused_ = false;\n    super.handleKeyDown(event);\n  }\n  handleMouseDown(event) {\n    this.mouseused_ = true;\n  }\n}\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n */\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent$1.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\nclass CloseButton extends Button {\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.controlText(options && options.controlText || this.localize('Close'));\n  }\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-close-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\nclass PlayToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // show or hide replay icon\n    options.replay = options.replay === undefined || options.replay;\n    this.on(player, 'play', e => this.handlePlay(e));\n    this.on(player, 'pause', e => this.handlePause(e));\n    if (options.replay) {\n      this.on(player, 'ended', e => this.handleEnded(e));\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-play-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  handleSeeked(event) {\n    this.removeClass('vjs-ended');\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  handlePlay(event) {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  }\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  }\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', e => this.handleSeeked(e));\n  }\n}\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlayToggle.prototype.controlText_ = 'Play';\nComponent$1.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\nclass TimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['timeupdate', 'ended'], e => this.updateContent(e));\n    this.updateTextNode_();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const className = this.buildCSSClass();\n    const el = super.createEl('div', {\n      className: `${className} vjs-time-control vjs-control`\n    });\n    const span = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize(this.labelText_)}\\u00a0`\n    }, {\n      role: 'presentation'\n    });\n    el.appendChild(span);\n    this.contentEl_ = createEl('span', {\n      className: `${className}-display`\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  updateTextNode_(time = 0) {\n    time = formatTime(time);\n    if (this.formattedTime_ === time) {\n      return;\n    }\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n      if (!this.contentEl_) {\n        return;\n      }\n      let oldNode = this.textNode_;\n      if (oldNode && this.contentEl_.firstChild !== oldNode) {\n        oldNode = null;\n        log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n      }\n      this.textNode_ = document.createTextNode(this.formattedTime_);\n      if (!this.textNode_) {\n        return;\n      }\n      if (oldNode) {\n        this.contentEl_.replaceChild(this.textNode_, oldNode);\n      } else {\n        this.contentEl_.appendChild(this.textNode_);\n      }\n    });\n  }\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {}\n}\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent$1.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\nclass CurrentTimeDisplay extends TimeDisplay {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-current-time';\n  }\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    let time;\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\nclass DurationDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    const updateContent = e => this.updateContent(e);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    this.on(player, 'durationchange', updateContent);\n\n    // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n    this.on(player, 'loadstart', updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    this.on(player, 'loadedmetadata', updateContent);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-duration';\n  }\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  updateContent(event) {\n    const duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  }\n}\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent$1.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\nclass TimeDivider extends Component$1 {\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-time-control vjs-time-divider'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n    const div = super.createEl('div');\n    const span = super.createEl('span', {\n      textContent: '/'\n    });\n    div.appendChild(span);\n    el.appendChild(div);\n    return el;\n  }\n}\nComponent$1.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\nclass RemainingTimeDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'durationchange', e => this.updateContent(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    if (this.options_.displayNegative !== false) {\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n    }\n    return el;\n  }\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n    let time;\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass LiveDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateShowing();\n    this.on(this.player(), 'durationchange', e => this.updateShowing(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-live-control vjs-control'\n    });\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display'\n    }, {\n      'aria-live': 'off'\n    });\n    this.contentEl_.appendChild(createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize('Stream Type')}\\u00a0`\n    }));\n    this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n}\nComponent$1.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file seek-to-live.js\n */\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass SeekToLive extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateLiveEdgeStatus();\n    if (this.player_.liveTracker) {\n      this.updateLiveEdgeStatusHandler_ = e => this.updateLiveEdgeStatus(e);\n      this.on(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      textContent: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n\n  /**\n   * Dispose of the element and stop tracking\n   */\n  dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n    this.textEl_ = null;\n    super.dispose();\n  }\n}\n/**\n * The text that should display over the `SeekToLive`s control. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent$1.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * @file num.js\n * @module num\n */\n\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\nfunction clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n}\n\nvar Num = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  clamp: clamp\n});\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\nclass Slider extends Component$1 {\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseDown_ = e => this.handleMouseDown(e);\n    this.handleMouseUp_ = e => this.handleMouseUp(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleMouseMove_ = e => this.handleMouseMove(e);\n    this.update_ = e => this.update(e);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    this.bar = this.getChild(this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    this.vertical(!!this.options_.vertical);\n    this.enable();\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  enable() {\n    if (this.enabled()) {\n      return;\n    }\n    this.on('mousedown', this.handleMouseDown_);\n    this.on('touchstart', this.handleMouseDown_);\n    this.on('keydown', this.handleKeyDown_);\n    this.on('click', this.handleClick_);\n\n    // TODO: deprecated, controlsvisible does not seem to be fired\n    this.on(this.player_, 'controlsvisible', this.update);\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    const doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown_);\n    this.off('touchstart', this.handleMouseDown_);\n    this.off('keydown', this.handleKeyDown_);\n    this.off('click', this.handleClick_);\n    this.off(this.player_, 'controlsvisible', this.update_);\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  }\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props = {}, attributes = {}) {\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = Object.assign({\n      tabIndex: 0\n    }, props);\n    attributes = Object.assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100\n    }, attributes);\n    return super.createEl(type, props, attributes);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  handleMouseDown(event) {\n    const doc = this.bar.el_.ownerDocument;\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove_);\n    this.on(doc, 'mouseup', this.handleMouseUp_);\n    this.on(doc, 'touchmove', this.handleMouseMove_);\n    this.on(doc, 'touchend', this.handleMouseUp_);\n    this.handleMouseMove(event, true);\n  }\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseMove(event) {}\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  handleMouseUp() {\n    const doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.update();\n  }\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    }\n\n    // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n    const progress = this.getProgress();\n    if (progress === this.progress_) {\n      return progress;\n    }\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', () => {\n      // Set the new bar width or height\n      const sizeKey = this.vertical() ? 'height' : 'width';\n\n      // Convert to a percentage for css value\n      this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  calculateDistance(event) {\n    const position = getPointerPosition(this.el_, event);\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  }\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n    this.vertical_ = !!bool;\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  }\n}\nComponent$1.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n// get the percent width of a time compared to the total end\nconst percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\nclass LoadProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.partEls_ = [];\n    this.on(player, 'progress', e => this.update(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-load-progress'\n    });\n    const wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    const loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    const separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  }\n  dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  update(event) {\n    this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n      const liveTracker = this.player_.liveTracker;\n      const buffered = this.player_.buffered();\n      const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n      const bufferedEnd = this.player_.bufferedEnd();\n      const children = this.partEls_;\n      const percent = percentify(bufferedEnd, duration);\n      if (this.percent_ !== percent) {\n        // update the width of the progress bar\n        this.el_.style.width = percent;\n        // update the control-text\n        textContent(this.percentageEl_, percent);\n        this.percent_ = percent;\n      }\n\n      // add child elements to represent the individual buffered time ranges\n      for (let i = 0; i < buffered.length; i++) {\n        const start = buffered.start(i);\n        const end = buffered.end(i);\n        let part = children[i];\n        if (!part) {\n          part = this.el_.appendChild(createEl());\n          children[i] = part;\n        }\n\n        //  only update if changed\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n        part.dataset.start = start;\n        part.dataset.end = end;\n\n        // set the percent based on the width of the progress bar (bufferedEnd)\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      }\n\n      // remove unused buffered range elements\n      for (let i = children.length; i > buffered.length; i--) {\n        this.el_.removeChild(children[i - 1]);\n      }\n      children.length = buffered.length;\n    });\n  }\n}\nComponent$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\nclass TimeTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint, content) {\n    const tooltipRect = findPosition(this.el_);\n    const playerRect = getBoundingClientRect(this.player_.el());\n    const seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    const spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    const spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    let pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    // prevent small width fluctuations within 0.4px from\n    // changing the value below.\n    // This really helps for live to prevent the play\n    // progress time tooltip from jittering\n    pullTooltipBy = Math.round(pullTooltipBy);\n    this.el_.style.right = `-${pullTooltipBy}px`;\n    this.write(content);\n  }\n\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateTime(seekBarRect, seekBarPoint, time, cb) {\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n      let content;\n      const duration = this.player_.duration();\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        const liveWindow = this.player_.liveTracker.liveWindow();\n        const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n      this.update(seekBarRect, seekBarPoint, content);\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass PlayProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const timeTooltip = this.getChild('timeTooltip');\n    if (!timeTooltip) {\n      return;\n    }\n    const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  }\n}\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\nComponent$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass MouseTimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n      this.el_.style.left = `${seekBarRect.width * seekBarPoint}px`;\n    });\n  }\n}\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nconst STEP_SECONDS = 5;\n\n// The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\nconst PAGE_KEY_MULTIPLIER = 12;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\nclass SeekBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setEventHandlers_();\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n  setEventHandlers_() {\n    this.update_ = bind_(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n    this.enableIntervalHandler_ = e => this.enableInterval_(e);\n    this.disableIntervalHandler_ = e => this.disableInterval_(e);\n    this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  }\n  toggleVisibility_(e) {\n    if (document.visibilityState === 'hidden') {\n      this.cancelNamedAnimationFrame('SeekBar#update');\n      this.cancelNamedAnimationFrame('Slider#update');\n      this.disableInterval_(e);\n    } else {\n      if (!this.player_.ended() && !this.player_.paused()) {\n        this.enableInterval_();\n      }\n\n      // we just switched back to the page and someone may be looking, so, update ASAP\n      this.update();\n    }\n  }\n  enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  }\n  disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n    if (!this.updateInterval) {\n      return;\n    }\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  update(event) {\n    // ignore updates while the tab is hidden\n    if (document.visibilityState === 'hidden') {\n      return;\n    }\n    const percent = super.update();\n    this.requestNamedAnimationFrame('SeekBar#update', () => {\n      const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n      const liveTracker = this.player_.liveTracker;\n      let duration = this.player_.duration();\n      if (liveTracker && liveTracker.isLive()) {\n        duration = this.player_.liveTracker.liveCurrentTime();\n      }\n      if (this.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n        this.percent_ = percent;\n      }\n      if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n        this.currentTime_ = currentTime;\n        this.duration_ = duration;\n      }\n\n      // update the progress bar time tooltip with the current time\n      if (this.bar) {\n        this.bar.update(getBoundingClientRect(this.el()), this.getProgress());\n      }\n    });\n    return percent;\n  }\n\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n    this.player_.currentTime(ct);\n  }\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  getPercent() {\n    const currentTime = this.getCurrentTime_();\n    let percent;\n    const liveTracker = this.player_.liveTracker;\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n\n      // prevent the percent from changing at the live edge\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n    return percent;\n  }\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event, mouseDown = false) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    if (!mouseDown && !this.player_.scrubbing()) {\n      this.player_.scrubbing(true);\n    }\n    let newTime;\n    const distance = this.calculateDistance(event);\n    const liveTracker = this.player_.liveTracker;\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration();\n\n      // Don't let video end while scrubbing.\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n      const seekableStart = liveTracker.seekableStart();\n      const seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow();\n\n      // Don't let video end while scrubbing.\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      }\n\n      // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      }\n\n      // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n      if (newTime === Infinity) {\n        return;\n      }\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.userSeek_(newTime);\n  }\n  enable() {\n    super.enable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.show();\n  }\n  disable() {\n    super.disable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.hide();\n  }\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    super.handleMouseUp(event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  stepForward() {\n    this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n  }\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  stepBack() {\n    this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n  }\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const liveTracker = this.player_.liveTracker;\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.liveCurrentTime());\n      } else {\n        this.userSeek_(this.player_.duration());\n      }\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      const gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n      } else {\n        this.userSeek_(this.player_.duration() * gotoFraction);\n      }\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n  dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n    this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.off(document, 'visibilitychange', this.toggleVisibility_);\n    }\n    super.dispose();\n  }\n}\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\nComponent$1.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\nclass ProgressControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.throttledHandleMouseSeek = throttle(bind_(this, this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.handleMouseDownHandler_ = e => this.handleMouseDown(e);\n    this.enable();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  handleMouseMove(event) {\n    const seekBar = this.getChild('seekBar');\n    if (!seekBar) {\n      return;\n    }\n    const playProgressBar = seekBar.getChild('playProgressBar');\n    const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n    const seekBarEl = seekBar.el();\n    const seekBarRect = findPosition(seekBarEl);\n    let seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n    // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseSeek(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  disable() {\n    this.children().forEach(child => child.disable && child.disable());\n    if (!this.enabled()) {\n      return;\n    }\n    this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeListenersAddedOnMousedownAndTouchstart();\n    this.addClass('disabled');\n    this.enabled_ = false;\n\n    // Restore normal playback state if controls are disabled while scrubbing\n    if (this.player_.scrubbing()) {\n      const seekBar = this.getChild('seekBar');\n      this.player_.scrubbing(false);\n      if (seekBar.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      }\n    }\n  }\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  enable() {\n    this.children().forEach(child => child.enable && child.enable());\n    if (this.enabled()) {\n      return;\n    }\n    this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n\n  /**\n   * Cleanup listeners after the user finishes interacting with the progress controls\n   */\n  removeListenersAddedOnMousedownAndTouchstart() {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n    this.removeListenersAddedOnMousedownAndTouchstart();\n  }\n}\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent$1.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file picture-in-picture-toggle.js\n */\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\nclass PictureInPictureToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], e => this.handlePictureInPictureChange(e));\n    this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], e => this.handlePictureInPictureEnabledChange(e));\n    this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], () => {\n      // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n      const isSourceAudio = player.currentType().substring(0, 5) === 'audio';\n      if (isSourceAudio || player.audioPosterMode() || player.audioOnlyMode()) {\n        if (player.isInPictureInPicture()) {\n          player.exitPictureInPicture();\n        }\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // TODO: Deactivate button on player emptied event.\n    this.disable();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-picture-in-picture-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enables or disables button based on document.pictureInPictureEnabled property value\n   * or on value returned by player.disablePictureInPicture() method.\n   */\n  handlePictureInPictureEnabledChange() {\n    if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n    this.handlePictureInPictureEnabledChange();\n  }\n\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  }\n}\n\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\nclass FullscreenToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'fullscreenchange', e => this.handleFullscreenChange(e));\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      this.disable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-fullscreen-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Exit Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  }\n}\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nconst checkVolumeSupport = function (self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\nclass VolumeLevel extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-volume-level'\n    });\n    el.appendChild(super.createEl('span', {\n      className: 'vjs-control-text'\n    }));\n    return el;\n  }\n}\nComponent$1.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-level-tooltip.js\n */\n\n/**\n * Volume level tooltips display a volume above or side by side the volume bar.\n *\n * @extends Component\n */\nclass VolumeLevelTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the volume tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the tooltip relative to the `VolumeBar` and\n   * its content text.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical, content) {\n    if (!vertical) {\n      const tooltipRect = getBoundingClientRect(this.el_);\n      const playerRect = getBoundingClientRect(this.player_.el());\n      const volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n      const spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n      const spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n      let pullTooltipBy = tooltipRect.width / 2;\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n      this.el_.style.right = `-${pullTooltipBy}px`;\n    }\n    this.write(`${content}%`);\n  }\n\n  /**\n   * Write the volume to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted volume for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   * @param {number} volume\n   *        The volume level to update the tooltip to\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n    this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', () => {\n      this.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n/**\n * @file mouse-volume-level-display.js\n */\n\n/**\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n * indicating the volume level which is represented by a given point in the\n * {@link VolumeBar}.\n *\n * @extends Component\n */\nclass MouseVolumeLevelDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enquires updates to its own DOM as well as the DOM of its\n   * {@link VolumeLevelTooltip} child.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical) {\n    const volume = 100 * rangeBarPoint;\n    this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, () => {\n      if (vertical) {\n        this.el_.style.bottom = `${rangeBarRect.height * rangeBarPoint}px`;\n      } else {\n        this.el_.style.left = `${rangeBarRect.width * rangeBarPoint}px`;\n      }\n    });\n  }\n}\n\n/**\n * Default options for `MouseVolumeLevelDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseVolumeLevelDisplay.prototype.options_ = {\n  children: ['volumeLevelTooltip']\n};\nComponent$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\nclass VolumeBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on('slideractive', e => this.updateLastVolume_(e));\n    this.on(player, 'volumechange', e => this.updateARIAAttributes(e));\n    player.ready(() => this.updateARIAAttributes());\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event) {\n    const mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n    if (mouseVolumeLevelDisplay) {\n      const volumeBarEl = this.el();\n      const volumeBarRect = getBoundingClientRect(volumeBarEl);\n      const vertical = this.vertical();\n      let volumeBarPoint = getPointerPosition(volumeBarEl, event);\n      volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x;\n      // The default skin has a gap on either side of the `VolumeBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `VolumeBar`. This ensures we stay within it at all times.\n      volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n      mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n    }\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n\n  /**\n   * If the player is muted unmute it.\n   */\n  checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  }\n\n  /**\n   * Increase volume level for keyboard users\n   */\n  stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n  stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  updateARIAAttributes(event) {\n    const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  updateLastVolume_() {\n    const volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', () => {\n      if (this.player_.volume() === 0) {\n        this.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  }\n}\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n// MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent$1.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\nclass VolumeControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkVolumeSupport(this, player);\n    this.throttledHandleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.on('mousedown', e => this.handleMouseDown(e));\n    this.on('touchstart', e => this.handleMouseDown(e));\n    this.on('mousemove', e => this.handleMouseMove(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    this.on(this.volumeBar, ['focus', 'slideractive'], () => {\n      this.volumeBar.addClass('vjs-slider-active');\n      this.addClass('vjs-slider-active');\n      this.trigger('slideractive');\n    });\n    this.on(this.volumeBar, ['blur', 'sliderinactive'], () => {\n      this.volumeBar.removeClass('vjs-slider-active');\n      this.removeClass('vjs-slider-active');\n      this.trigger('sliderinactive');\n    });\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-horizontal';\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-control vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent$1.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nconst checkMuteSupport = function (self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\nclass MuteToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkMuteSupport(this, player);\n    this.on(player, ['loadstart', 'volumechange'], e => this.update(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-mute-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const vol = this.player_.volume();\n    const lastVolume = this.player_.lastVolume_();\n    if (vol === 0) {\n      const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  updateIcon_() {\n    const vol = this.player_.volume();\n    let level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n    removeClass(this.el_, [0, 1, 2, 3].reduce((str, i) => str + `${i ? ' ' : ''}vjs-vol-${i}`, ''));\n    addClass(this.el_, `vjs-vol-${level}`);\n  }\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  updateControlText_() {\n    const soundOff = this.player_.muted() || this.player_.volume() === 0;\n    const text = soundOff ? 'Unmute' : 'Mute';\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  }\n}\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent$1.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\nclass VolumePanel extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n    super(player, options);\n\n    // this handler is used by mouse handler methods below\n    this.handleKeyPressHandler_ = e => this.handleKeyPress(e);\n    this.on(player, ['loadstart'], e => this.volumePanelState_(e));\n    this.on(this.muteToggle, 'keyup', e => this.handleKeyPress(e));\n    this.on(this.volumeControl, 'keyup', e => this.handleVolumeControlKeyUp(e));\n    this.on('keydown', e => this.handleKeyPress(e));\n    this.on('mouseover', e => this.handleMouseOver(e));\n    this.on('mouseout', e => this.handleMouseOut(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    this.on(this.volumeControl, ['slideractive'], this.sliderActive_);\n    this.on(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n  sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-panel-horizontal';\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-panel vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  dispose() {\n    this.handleMouseOut();\n    super.dispose();\n  }\n\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent$1.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\nclass Menu extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (options) {\n      this.menuButton_ = options.menuButton;\n    }\n    this.focusedChild_ = -1;\n    this.on('keydown', e => this.handleKeyDown(e));\n\n    // All the menu item instances share the same blur handler provided by the menu container.\n    this.boundHandleBlur_ = e => this.handleBlur(e);\n    this.boundHandleTapClick_ = e => this.handleTapClick(e);\n  }\n\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n  addEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  removeEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    this.removeEventListenerForItem(component);\n    super.removeChild(component);\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  addItem(component) {\n    const childComponent = this.addChild(component);\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  createEl() {\n    const contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n    const el = super.createEl('div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  handleBlur(event) {\n    const relatedTarget = event.relatedTarget || document.activeElement;\n\n    // Close menu popup when a user clicks outside the menu\n    if (!this.children().some(element => {\n      return element.el() === relatedTarget;\n    })) {\n      const btn = this.menuButton_;\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      const childComponents = this.children();\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n      const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n      if (!foundComponent) {\n        return;\n      }\n\n      // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  stepForward() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  stepBack() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  focus(item = 0) {\n    const children = this.children().slice();\n    const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n    if (haveTitle) {\n      children.shift();\n    }\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  }\n}\nComponent$1.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\nclass MenuButton extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    this.menuButton_ = new Button(player, options);\n    this.menuButton_.controlText(this.controlText_);\n    this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    const buttonClass = Button.prototype.buildCSSClass();\n    this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n    this.menuButton_.removeClass('vjs-control');\n    this.addChild(this.menuButton_);\n    this.update();\n    this.enabled_ = true;\n    const handleClick = e => this.handleClick(e);\n    this.handleMenuKeyUp_ = e => this.handleMenuKeyUp(e);\n    this.on(this.menuButton_, 'tap', handleClick);\n    this.on(this.menuButton_, 'click', handleClick);\n    this.on(this.menuButton_, 'keydown', e => this.handleKeyDown(e));\n    this.on(this.menuButton_, 'mouseenter', () => {\n      this.addClass('vjs-hover');\n      this.menu.show();\n      on(document, 'keyup', this.handleMenuKeyUp_);\n    });\n    this.on('mouseleave', e => this.handleMouseLeave(e));\n    this.on('keydown', e => this.handleSubmenuKeyDown(e));\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n  update() {\n    const menu = this.createMenu();\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n      this.menu.contentEl_.removeAttribute('role');\n    } else {\n      this.show();\n      this.menu.contentEl_.setAttribute('role', 'menu');\n    }\n  }\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  createMenu() {\n    const menu = new Menu(this.player_, {\n      menuButton: this\n    });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      const titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        textContent: toTitleCase$1(this.options_.title),\n        tabIndex: -1\n      });\n      const titleComponent = new Component$1(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n    this.items = this.createItems();\n    if (this.items) {\n      // Add menu items to the menu\n      for (let i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n    return menu;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  createItems() {}\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  buildWrapperCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    const buttonClass = Button.prototype.buildCSSClass();\n    return `vjs-menu-button ${menuButtonClass} ${buttonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n    return `vjs-menu-button ${menuButtonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.menuButton_.el()) {\n    return this.menuButton_.controlText(text, el);\n  }\n\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  dispose() {\n    this.handleMouseLeave();\n    super.dispose();\n  }\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleMenuKeyUp_);\n  }\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  focus() {\n    this.menuButton_.focus();\n  }\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  blur() {\n    this.menuButton_.blur();\n  }\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n      // Up Arrow or Down Arrow also 'press' the button to open the menu\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n      this.menu.focus();\n    }\n  }\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  }\n}\nComponent$1.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\nclass TrackButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const tracks = options.tracks;\n    super(player, options);\n    if (this.items.length <= 1) {\n      this.hide();\n    }\n    if (!tracks) {\n      return;\n    }\n    const updateHandler = bind_(this, this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    tracks.addEventListener('labelchange', updateHandler);\n    this.player_.on('ready', updateHandler);\n    this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n      tracks.removeEventListener('labelchange', updateHandler);\n    });\n  }\n}\nComponent$1.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n *\n  * @typedef MenuKeys\n  * @array\n  */\nconst MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\nclass MenuItem extends ClickableComponent {\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.selectable = options.selectable;\n    this.isSelected_ = options.selected || false;\n    this.multiSelectable = options.multiSelectable;\n    this.selected(this.isSelected_);\n    if (this.selectable) {\n      if (this.multiSelectable) {\n        this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      this.el_.setAttribute('role', 'menuitem');\n    }\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    const el = super.createEl('li', Object.assign({\n      className: 'vjs-menu-item',\n      tabIndex: -1\n    }, props), attrs);\n\n    // swap icon with menu item text.\n    el.replaceChild(createEl('span', {\n      className: 'vjs-menu-item-text',\n      textContent: this.localize(this.options_.label)\n    }), el.querySelector('.vjs-icon-placeholder'));\n    return el;\n  }\n\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    if (!MenuKeys.some(key => keycode.isEventKey(event, key))) {\n      // Pass keydown handling up for unused keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.selected(true);\n  }\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  selected(selected) {\n    if (this.selectable) {\n      if (selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  }\n}\nComponent$1.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\nclass TextTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    super(player, options);\n    this.track = track;\n    // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n    this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    const selectedLanguageChangeHandler = (...args) => {\n      this.handleSelectedLanguageChange.apply(this, args);\n    };\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      let event;\n      this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    this.handleTracksChange();\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const referenceTrack = this.track;\n    const tracks = this.player_.textTracks();\n    super.handleClick(event);\n    if (!tracks) {\n      return;\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      }\n\n      // If this text track is the component's track and it is not showing,\n      // set it to showing.\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n\n        // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      const selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  }\n  dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\nclass OffTextTrackMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n    super(player, options);\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let shouldBeSelected = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    const tracks = this.player().textTracks();\n    let allHidden = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  }\n}\nComponent$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\nclass TextTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.textTracks();\n    super(player, options);\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n  createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    let label;\n    if (this.label_) {\n      label = `${this.label_} off`;\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label\n    }));\n    this.hideThreshold_ += 1;\n    const tracks = this.player_.textTracks();\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        const item = new TrackMenuItem(this.player_, {\n          track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(`vjs-${track.kind}-menu-item`);\n        items.push(item);\n      }\n    }\n    return items;\n  }\n}\nComponent$1.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\nclass ChaptersTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const cue = options.cue;\n    const currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    super(player, options);\n    this.track = track;\n    this.cue = cue;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player_.currentTime(this.cue.startTime);\n  }\n}\nComponent$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\nclass ChaptersButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.selectCurrentItem_ = () => {\n      this.items.forEach(item => {\n        item.selected(this.track_.activeCues[0] === item.cue);\n      });\n    };\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-chapters-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-chapters-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  update(event) {\n    if (event && event.track && event.track.kind !== 'chapters') {\n      return;\n    }\n    const track = this.findChaptersTrack();\n    if (track !== this.track_) {\n      this.setTrack(track);\n      super.update();\n    } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n      // Update the menu initially or if the number of cues has changed since set\n      super.update();\n    }\n  }\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n      this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n      this.track_ = null;\n    }\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n      this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n    }\n  }\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  findChaptersTrack() {\n    const tracks = this.player_.textTracks() || [];\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      const track = tracks[i];\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase$1(this.kind_));\n  }\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return super.createMenu();\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  createItems() {\n    const items = [];\n    if (!this.track_) {\n      return items;\n    }\n    const cues = this.track_.cues;\n    if (!cues) {\n      return items;\n    }\n    for (let i = 0, l = cues.length; i < l; i++) {\n      const cue = cues[i];\n      const mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue\n      });\n      items.push(mi);\n    }\n    return items;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent$1.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\nclass DescriptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const tracks = player.textTracks();\n    const changeHandler = bind_(this, this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-descriptions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-descriptions-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\nclass SubtitlesButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subtitles-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subtitles-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\nclass CaptionSettingsMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.track = {\n      player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    super(player, options);\n    this.addClass('vjs-texttrack-settings');\n    this.controlText(', opens ' + options.kind + ' settings dialog');\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  }\n}\nComponent$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\nclass CaptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-captions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-captions-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    const items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    return super.createItems(items);\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent$1.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\nclass SubsCapsMenuItem extends TextTrackMenuItem {\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'captions') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        // space added as the text will visually flow with the\n        // label\n        textContent: ` ${this.localize('Captions')}`\n      }));\n    }\n    return el;\n  }\n}\nComponent$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\nclass SubsCapsButton extends TextTrackButton {\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(this.player_.language_) > -1) {\n      this.label_ = 'captions';\n    }\n    this.menuButton_.controlText(toTitleCase$1(this.label_));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subs-caps-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subs-caps-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    let items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    items = super.createItems(items, SubsCapsMenuItem);\n    return items;\n  }\n}\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @protected\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\nclass AudioTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    super(player, options);\n    this.track = track;\n    this.addClass(`vjs-${track.kind}-menu-item`);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', () => {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'main-desc') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: ' ' + this.localize('Descriptions')\n      }));\n    }\n    return el;\n  }\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick(event);\n\n    // the audio track list will automatically toggle other tracks\n    // off for us.\n    this.track.enabled = true;\n\n    // when native audio tracks are used, we want to make sure that other tracks are turned off\n    if (this.player_.tech_.featuresNativeAudioTracks) {\n      const tracks = this.player_.audioTracks();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n\n        // skip the current track since we enabled it above\n        if (track === this.track) {\n          continue;\n        }\n        track.enabled = track === this.track;\n      }\n    }\n  }\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  }\n}\nComponent$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\nclass AudioTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.audioTracks();\n    super(player, options);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-audio-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-audio-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  createItems(items = []) {\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    const tracks = this.player_.audioTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n    return items;\n  }\n}\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\nclass PlaybackRateMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const label = options.rate;\n    const rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === player.playbackRate();\n    options.selectable = true;\n    options.multiSelectable = false;\n    super(player, options);\n    this.label = label;\n    this.rate = rate;\n    this.on(player, 'ratechange', e => this.update(e));\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player().playbackRate(this.rate);\n  }\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\nclass PlaybackRateMenuButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.menuButton_.el_.setAttribute('aria-describedby', this.labelElId_);\n    this.updateVisibility();\n    this.updateLabel();\n    this.on(player, 'loadstart', e => this.updateVisibility(e));\n    this.on(player, 'ratechange', e => this.updateLabel(e));\n    this.on(player, 'playbackrateschange', e => this.handlePlaybackRateschange(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      id: this.labelElId_,\n      textContent: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  }\n  dispose() {\n    this.labelEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-playback-rate ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-playback-rate ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   */\n  createItems() {\n    const rates = this.playbackRates();\n    const items = [];\n    for (let i = rates.length - 1; i >= 0; i--) {\n      items.push(new PlaybackRateMenuItem(this.player(), {\n        rate: rates[i] + 'x'\n      }));\n    }\n    return items;\n  }\n\n  /**\n   * On playbackrateschange, update the menu to account for the new items.\n   *\n   * @listens Player#playbackrateschange\n   */\n  handlePlaybackRateschange(event) {\n    this.update();\n  }\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  playbackRates() {\n    const player = this.player();\n    return player.playbackRates && player.playbackRates() || [];\n  }\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.textContent = this.player().playbackRate() + 'x';\n    }\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuButton`s controls.\n *\n * Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\nclass Spacer extends Component$1 {\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    if (!props.className) {\n      props.className = this.buildCSSClass();\n    }\n    return super.createEl(tag, props, attributes);\n  }\n}\nComponent$1.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\nclass CustomControlSpacer extends Spacer {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-custom-control-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      // No-flex/table-cell mode requires there be some content\n      // in the cell to fill the remaining space of the table.\n      textContent: '\\u00a0'\n    });\n  }\n}\nComponent$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\nclass ControlBar extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  }\n}\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\nComponent$1.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\nclass ErrorDisplay extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'error', e => this.open(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n  buildCSSClass() {\n    return `vjs-error-display ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  content() {\n    const error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  }\n}\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\nErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\nconst LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\nconst COLOR_BLACK = ['#000', 'Black'];\nconst COLOR_BLUE = ['#00F', 'Blue'];\nconst COLOR_CYAN = ['#0FF', 'Cyan'];\nconst COLOR_GREEN = ['#0F0', 'Green'];\nconst COLOR_MAGENTA = ['#F0F', 'Magenta'];\nconst COLOR_RED = ['#F00', 'Red'];\nconst COLOR_WHITE = ['#FFF', 'White'];\nconst COLOR_YELLOW = ['#FF0', 'Yellow'];\nconst OPACITY_OPAQUE = ['1', 'Opaque'];\nconst OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nconst OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nconst selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: v => v === '1.00' ? null : Number(v)\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  const value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n  for (let i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\nclass TextTrackSettings extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.temporary = false;\n    super(player, options);\n    this.updateDisplay = this.updateDisplay.bind(this);\n\n    // fill the modal and pretend we have opened it\n    this.fill();\n    this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n    this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: this.localize('End of dialog window.')\n    });\n    this.el().appendChild(this.endDialog);\n    this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n    }\n    this.on(this.$('.vjs-done-button'), 'click', () => {\n      this.saveSettings();\n      this.close();\n    });\n    this.on(this.$('.vjs-default-button'), 'click', () => {\n      this.setDefaults();\n      this.updateDisplay();\n    });\n    each(selectConfigs, config => {\n      this.on(this.$(config.selector), 'change', this.updateDisplay);\n    });\n    if (this.options_.persistTextTrackSettings) {\n      this.restoreSettings();\n    }\n  }\n  dispose() {\n    this.endDialog = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElSelect_(key, legendId = '', type = 'label') {\n    const config = selectConfigs[key];\n    const id = config.id.replace('%s', this.id_);\n    const selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [`<${type} id=\"${id}\" class=\"${type === 'label' ? 'vjs-label' : ''}\">`, this.localize(config.label), `</${type}>`, `<select aria-labelledby=\"${selectLabelledbyIds}\">`].concat(config.options.map(o => {\n      const optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [`<option id=\"${optionId}\" value=\"${o[0]}\" `, `aria-labelledby=\"${selectLabelledbyIds} ${optionId}\">`, this.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElFgColor_() {\n    const legendId = `captions-text-legend-${this.id_}`;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElBgColor_() {\n    const legendId = `captions-background-${this.id_}`;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElWinColor_() {\n    const legendId = `captions-window-${this.id_}`;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElControls_() {\n    const defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [`<button type=\"button\" class=\"vjs-default-button\" title=\"${defaultsDescription}\">`, this.localize('Reset'), `<span class=\"vjs-control-text\"> ${defaultsDescription}</span>`, '</button>', `<button type=\"button\" class=\"vjs-done-button\">${this.localize('Done')}</button>`].join('')\n    });\n  }\n  content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  }\n  label() {\n    return this.localize('Caption Settings Dialog');\n  }\n  description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  }\n  buildCSSClass() {\n    return super.buildCSSClass() + ' vjs-text-track-settings';\n  }\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  getValues() {\n    return reduce(selectConfigs, (accum, config, key) => {\n      const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n      return accum;\n    }, {});\n  }\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  setValues(values) {\n    each(selectConfigs, (config, key) => {\n      setSelectedOption(this.$(config.selector), values[key], config.parser);\n    });\n  }\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  setDefaults() {\n    each(selectConfigs, config => {\n      const index = config.hasOwnProperty('default') ? config.default : 0;\n      this.$(config.selector).selectedIndex = index;\n    });\n  }\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  restoreSettings() {\n    let values;\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n    } catch (err) {\n      log$1.warn(err);\n    }\n    if (values) {\n      this.setValues(values);\n    }\n  }\n\n  /**\n   * Save text track settings to localStorage\n   */\n  saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n    const values = this.getValues();\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  }\n\n  /**\n   * Update display of text track settings\n   */\n  updateDisplay() {\n    const ttDisplay = this.player_.getChild('textTrackDisplay');\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    const cb = this.player_.controlBar;\n    const subsCapsBtn = cb && cb.subsCapsButton;\n    const ccBtn = cb && cb.captionsButton;\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  }\n}\nComponent$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n *\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\nclass ResizeManager extends Component$1 {\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  constructor(player, options) {\n    let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    const options_ = merge$1({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    super(player, options_);\n    this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    this.loadListener_ = null;\n    this.resizeObserver_ = null;\n    this.debouncedHandler_ = debounce(() => {\n      this.resizeHandler();\n    }, 100, false, this);\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n      this.resizeObserver_.observe(player.el());\n    } else {\n      this.loadListener_ = () => {\n        if (!this.el_ || !this.el_.contentWindow) {\n          return;\n        }\n        const debouncedHandler_ = this.debouncedHandler_;\n        let unloadListener_ = this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        };\n\n        // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n        on(this.el_.contentWindow, 'unload', unloadListener_);\n        on(this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n      this.one('load', this.loadListener_);\n    }\n  }\n  createEl() {\n    return super.createEl('iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1,\n      title: this.localize('No content')\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n    this.player_.trigger('playerresize');\n  }\n  dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('ResizeManager', ResizeManager);\n\nconst defaults = {\n  trackingThreshold: 20,\n  liveTolerance: 15\n};\n\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\nclass LiveTracker extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=20]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect wether we are live or not.\n   */\n  constructor(player, options) {\n    // LiveTracker does not need an element\n    const options_ = merge$1(defaults, options, {\n      createEl: false\n    });\n    super(player, options_);\n    this.trackLiveHandler_ = () => this.trackLive_();\n    this.handlePlay_ = e => this.handlePlay(e);\n    this.handleFirstTimeupdate_ = e => this.handleFirstTimeupdate(e);\n    this.handleSeeked_ = e => this.handleSeeked(e);\n    this.seekToLiveEdge_ = e => this.seekToLiveEdge(e);\n    this.reset_();\n    this.on(this.player_, 'durationchange', e => this.handleDurationchange(e));\n    // we should try to toggle tracking on canplay as native playback engines, like Safari\n    // may not have the proper values for things like seekableEnd until then\n    this.on(this.player_, 'canplay', () => this.toggleTracking());\n  }\n\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  trackLive_() {\n    const seekable = this.player_.seekable();\n\n    // skip undefined seekable\n    if (!seekable || !seekable.length) {\n      return;\n    }\n    const newTime = Number(window$1.performance.now().toFixed(4));\n    const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    const liveCurrentTime = this.liveCurrentTime();\n    const currentTime = this.player_.currentTime();\n\n    // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n    let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n\n    // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  handleDurationchange() {\n    this.toggleTracking();\n  }\n\n  /**\n   * start/stop tracking\n   */\n  toggleTracking() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n\n  /**\n   * start tracking live playback\n   */\n  startTracking() {\n    if (this.isTracking()) {\n      return;\n    }\n\n    // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay_);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n  }\n\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked_);\n  }\n\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  handleSeeked() {\n    const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n    this.nextSeekedFromUser_ = false;\n    this.trackLive_();\n  }\n\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.nextSeekedFromUser_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    this.off(this.player_, 'seeked', this.handleSeeked_);\n    this.off(this.player_, 'play', this.handlePlay_);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * The next seeked event is from the user. Meaning that any seek\n   * > 2s behind live will be considered behind live for real and\n   * liveTolerance will be ignored.\n   */\n  nextSeekedFromUser() {\n    this.nextSeekedFromUser_ = true;\n  }\n\n  /**\n   * stop tracking live playback\n   */\n  stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  seekableEnd() {\n    const seekable = this.player_.seekable();\n    const seekableEnds = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    }\n\n    // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  seekableStart() {\n    const seekable = this.player_.seekable();\n    const seekableStarts = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    }\n\n    // grab the first seekable start after sorting, or if there are none\n    // default to 0\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  liveWindow() {\n    const liveCurrentTime = this.liveCurrentTime();\n\n    // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n    if (liveCurrentTime === Infinity) {\n      return 0;\n    }\n    return liveCurrentTime - this.seekableStart();\n  }\n\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Wether liveTracker is tracking\n   */\n  isLive() {\n    return this.isTracking();\n  }\n\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Wether playback is at the live edge\n   */\n  atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n\n  /**\n   * The number of seconds that have occured after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  pastSeekEnd() {\n    const seekableEnd = this.seekableEnd();\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n\n  /**\n   * Wether live tracker is currently tracking or not.\n   */\n  isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n    if (this.atLiveEdge()) {\n      return;\n    }\n    this.nextSeekedFromUser_ = false;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n\n  /**\n   * Dispose of liveTracker\n   */\n  dispose() {\n    this.stopTracking();\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * Displays an element over the player which contains an optional title and\n * description for the current content.\n *\n * Much of the code for this component originated in the now obsolete\n * videojs-dock plugin: https://github.com/brightcove/videojs-dock/\n *\n * @extends Component\n */\nclass TitleBar extends Component$1 {\n  constructor(player, options) {\n    super(player, options);\n    this.on('statechanged', e => this.updateDom_());\n    this.updateDom_();\n  }\n\n  /**\n   * Create the `TitleBar`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    this.els = {\n      title: createEl('div', {\n        className: 'vjs-title-bar-title',\n        id: `vjs-title-bar-title-${newGUID()}`\n      }),\n      description: createEl('div', {\n        className: 'vjs-title-bar-description',\n        id: `vjs-title-bar-description-${newGUID()}`\n      })\n    };\n    return createEl('div', {\n      className: 'vjs-title-bar'\n    }, {}, Object.values(this.els));\n  }\n\n  /**\n   * Updates the DOM based on the component's state object.\n   */\n  updateDom_() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    const techAriaAttrs = {\n      title: 'aria-labelledby',\n      description: 'aria-describedby'\n    };\n    ['title', 'description'].forEach(k => {\n      const value = this.state[k];\n      const el = this.els[k];\n      const techAriaAttr = techAriaAttrs[k];\n      emptyEl(el);\n      if (value) {\n        textContent(el, value);\n      }\n\n      // If there is a tech element available, update its ARIA attributes\n      // according to whether a title and/or description have been provided.\n      if (techEl) {\n        techEl.removeAttribute(techAriaAttr);\n        if (value) {\n          techEl.setAttribute(techAriaAttr, el.id);\n        }\n      }\n    });\n    if (this.state.title || this.state.description) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Update the contents of the title bar component with new title and\n   * description text.\n   *\n   * If both title and description are missing, the title bar will be hidden.\n   *\n   * If either title or description are present, the title bar will be visible.\n   *\n   * NOTE: Any previously set value will be preserved. To unset a previously\n   * set value, you must pass an empty string or null.\n   *\n   * For example:\n   *\n   * ```\n   * update({title: 'foo', description: 'bar'}) // title: 'foo', description: 'bar'\n   * update({description: 'bar2'}) // title: 'foo', description: 'bar2'\n   * update({title: ''}) // title: '', description: 'bar2'\n   * update({title: 'foo', description: null}) // title: 'foo', description: null\n   * ```\n   *\n   * @param  {Object} [options={}]\n   *         An options object. When empty, the title bar will be hidden.\n   *\n   * @param  {string} [options.title]\n   *         A title to display in the title bar.\n   *\n   * @param  {string} [options.description]\n   *         A description to display in the title bar.\n   */\n  update(options) {\n    this.setState(options);\n  }\n\n  /**\n   * Dispose the component.\n   */\n  dispose() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    if (techEl) {\n      techEl.removeAttribute('aria-labelledby');\n      techEl.removeAttribute('aria-describedby');\n    }\n    super.dispose();\n    this.els = null;\n  }\n}\nComponent$1.registerComponent('TitleBar', TitleBar);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nconst sourcesetLoad = tech => {\n  const el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  const sources = tech.$$('source');\n  const srcUrls = [];\n  let src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (let i = 0; i < sources.length; i++) {\n    const url = sources[i].src;\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nconst innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set(v) {\n    // make a dummy node to use innerHTML on\n    const dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    const docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nconst getDescriptor = (priority, prop) => {\n  let descriptor = {};\n  for (let i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\nconst getInnerHTMLDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nconst firstSourceWatch = function (tech) {\n  const el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n  const old = {};\n  const innerDescriptor = getInnerHTMLDescriptor(tech);\n  const appendWrapper = appendFn => (...args) => {\n    const retval = appendFn.apply(el, args);\n    sourcesetLoad(tech);\n    return retval;\n  };\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(k => {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', merge$1(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n  el.resetSourceWatch_ = () => {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(k => {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one\n */\nconst srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n    return '';\n  },\n  set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\nconst getSrcDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nconst setupSourceset = function (tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n  const el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n  const srcDescriptor = getSrcDescriptor(tech);\n  const oldSetAttribute = el.setAttribute;\n  const oldLoad = el.load;\n  Object.defineProperty(el, 'src', merge$1(srcDescriptor, {\n    set: v => {\n      const retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n  el.setAttribute = (n, v) => {\n    const retval = oldSetAttribute.call(el, n, v);\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n    return retval;\n  };\n  el.load = () => {\n    const retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n    return retval;\n  };\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n  el.resetSourceset_ = () => {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * @file html5.js\n */\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\nclass Html5 extends Tech {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options, ready) {\n    super(options, ready);\n    const source = options.source;\n    let crossoriginTracks = false;\n    this.featuresVideoFrameCallback = this.featuresVideoFrameCallback && this.el_.tagName === 'VIDEO';\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      this.setSource(source);\n    } else {\n      this.handleLateInit_(this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      this.setupSourcesetHandling_();\n    }\n    this.isScrubbing_ = false;\n    if (this.el_.hasChildNodes()) {\n      const nodes = this.el_.childNodes;\n      let nodesLength = nodes.length;\n      const removeNodes = [];\n      while (nodesLength--) {\n        const node = nodes[nodesLength];\n        const nodeName = node.nodeName.toLowerCase();\n        if (nodeName === 'track') {\n          if (!this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            this.remoteTextTrackEls().addTrackElement_(node);\n            this.remoteTextTracks().addTrack(node.track);\n            this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n      for (let i = 0; i < removeNodes.length; i++) {\n        this.el_.removeChild(removeNodes[i]);\n      }\n    }\n    this.proxyNativeTracks_();\n    if (this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE) && options.nativeControlsForTouch === true) {\n      this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    this.proxyWebkitFullscreen_();\n    this.triggerReady();\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n  dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    super.dispose();\n  }\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  restoreMetadataTracksInIOSNativePlayer_() {\n    const textTracks = this.textTracks();\n    let metadataTracksPreFullscreenState;\n\n    // captures a snapshot of every metadata track's current state\n    const takeMetadataTrackSnapshot = () => {\n      metadataTracksPreFullscreenState = [];\n      for (let i = 0; i < textTracks.length; i++) {\n        const track = textTracks[i];\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n    const restoreTrackMode = () => {\n      for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        const storedTrack = metadataTracksPreFullscreenState[i];\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', () => {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', () => {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  overrideNative_(type, override) {\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[`featuresNative${type}Tracks`]) {\n      return;\n    }\n    const lowerCaseType = type.toLowerCase();\n    if (this[`${lowerCaseType}TracksListeners_`]) {\n      Object.keys(this[`${lowerCaseType}TracksListeners_`]).forEach(eventName => {\n        const elTracks = this.el()[`${lowerCaseType}Tracks`];\n        elTracks.removeEventListener(eventName, this[`${lowerCaseType}TracksListeners_`][eventName]);\n      });\n    }\n    this[`featuresNative${type}Tracks`] = !override;\n    this[`${lowerCaseType}TracksListeners_`] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  proxyNativeTracksForType_(name) {\n    const props = NORMAL[name];\n    const elTracks = this.el()[props.getterName];\n    const techTracks = this[props.getterName]();\n    if (!this[`featuresNative${props.capitalName}Tracks`] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    const listeners = {\n      change: e => {\n        const event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event);\n\n        // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n        if (name === 'text') {\n          this[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    const removeOldTracks = function () {\n      const removeTracks = [];\n      for (let i = 0; i < techTracks.length; i++) {\n        let found = false;\n        for (let j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(eventName => {\n      const listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n      this.on('dispose', e => elTracks.removeEventListener(eventName, listener));\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', e => this.off('loadstart', removeOldTracks));\n  }\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  proxyNativeTracks_() {\n    NORMAL.names.forEach(name => {\n      this.proxyNativeTracksForType_(name);\n    });\n  }\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    let el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        const clone = el.cloneNode(true);\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        const tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        const attributes = merge$1({}, tagAttributes);\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n        setAttributes(el, Object.assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n      el.playerId = this.options_.playerId;\n    }\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    const settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n    for (let i = 0; i < settingsAttrs.length; i++) {\n      const attr = settingsAttrs[i];\n      const value = this.options_[attr];\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n    return el;\n  }\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      let loadstartFired = false;\n      const setLoadstartFired = function () {\n        loadstartFired = true;\n      };\n      this.on('loadstart', setLoadstartFired);\n      const triggerLoadstart = function () {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    const eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n\n  /**\n   * Get whether we are scrubbing or not.\n   *\n   * @return {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  scrubbing() {\n    return this.isScrubbing_;\n  }\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  duration() {\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      const checkProgress = () => {\n        if (this.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (this.el_.duration === Infinity) {\n            this.trigger('durationchange');\n          }\n          this.off('timeupdate', checkProgress);\n        }\n      };\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  }\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  width() {\n    return this.el_.offsetWidth;\n  }\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  height() {\n    return this.el_.offsetHeight;\n  }\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  proxyWebkitFullscreen_() {\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n    const endFn = function () {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n      // Safari will sometimes set contols on the videoelement when existing fullscreen.\n      if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n        this.el_.controls = false;\n      }\n    };\n    const beginFn = function () {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', () => {\n      this.off('webkitbeginfullscreen', beginFn);\n      this.off('webkitendfullscreen', endFn);\n    });\n  }\n\n  /**\n   * Check if fullscreen is supported on the video el.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  supportsFullScreen() {\n    return typeof this.el_.webkitEnterFullScreen === 'function';\n  }\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  enterFullScreen() {\n    const video = this.el_;\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play());\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n    this.el_.webkitExitFullScreen();\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n\n  /**\n   * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n   * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n   * Needs to be checked later than the constructor\n   * This will be a false positive for clear sources loaded after a Fairplay source\n   *\n   * @param {function} cb function to call\n   * @return {number} id of request\n   */\n  requestVideoFrameCallback(cb) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      return this.el_.requestVideoFrameCallback(cb);\n    }\n    return super.requestVideoFrameCallback(cb);\n  }\n\n  /**\n   * Native or fallback requestVideoFrameCallback\n   *\n   * @param {number} id request id to cancel\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      this.el_.cancelVideoFrameCallback(id);\n    } else {\n      super.cancelVideoFrameCallback(id);\n    }\n  }\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  src(src) {\n    if (src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(src);\n  }\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  }\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  setControls(val) {\n    this.el_.controls = !!val;\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return super.addTextTrack(kind, label, language);\n    }\n    return this.el_.addTextTrack(kind, label, language);\n  }\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return super.createRemoteTextTrack(options);\n    }\n    const htmlTrackElement = document.createElement('track');\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack\n   * will not be removed from the TextTrackList and HtmlTrackElementList\n   * after a source change\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  removeRemoteTextTrack(track) {\n    super.removeRemoteTextTrack(track);\n    if (this.featuresNativeTextTracks) {\n      const tracks = this.$$('track');\n      let i = tracks.length;\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n    const videoPlaybackQuality = {};\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n    if (window$1.performance) {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    }\n    return videoPlaybackQuality;\n  }\n}\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n  const video = document.createElement('video');\n  const track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    const canControl = volume !== Html5.TEST_VID.volume;\n\n    // With the introduction of iOS 15, there are cases where the volume is read as\n    // changed but reverts back to its original state at the start of the next tick.\n    // To determine whether volume can be controlled on iOS,\n    // a timeout is set and the volume is checked asynchronously.\n    // Since `features` doesn't currently work asynchronously, the value is manually set.\n    if (canControl && IS_IOS) {\n      window$1.setTimeout(() => {\n        if (Html5 && Html5.prototype) {\n          Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n        }\n      });\n\n      // default iOS to false, which will be updated in the timeout above.\n      return false;\n    }\n    return canControl;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    const muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    const noop = () => {};\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n[['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function ([key, fn]) {\n  defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n});\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Whether the HTML5 el supports `requestVideoFrameCallback`\n *\n * @type {boolean}\n */\nHtml5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback);\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  const sources = el.querySelectorAll('source');\n  let i = sources.length;\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    const ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(`video/${ext}`);\n  }\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n/**\n * @file player.js\n */\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nconst TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nconst TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nconst BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nconst BREAKPOINT_CLASSES = {};\n\n// grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\nBREAKPOINT_ORDER.forEach(k => {\n  const v = k.charAt(0) === 'x' ? `x-${k.substring(1)}` : k;\n  BREAKPOINT_CLASSES[k] = `vjs-layout-${v}`;\n});\nconst DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\nclass Player extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  constructor(tag, options, ready) {\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || `vjs_video_${newGUID()}`;\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = Object.assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      const closest = tag.closest('[lang]');\n      if (closest) {\n        options.language = closest.getAttribute('lang');\n      }\n    }\n\n    // Run base component initializing with new options\n    super(null, options, ready);\n\n    // Create bound methods for document listeners.\n    this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n    this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n    this.boundUpdateStyleEl_ = e => this.updateStyleEl_(e);\n    this.boundApplyInitTime_ = e => this.applyInitTime_(e);\n    this.boundUpdateCurrentBreakpoint_ = e => this.updateCurrentBreakpoint_(e);\n    this.boundHandleTechClick_ = e => this.handleTechClick_(e);\n    this.boundHandleTechDoubleClick_ = e => this.handleTechDoubleClick_(e);\n    this.boundHandleTechTouchStart_ = e => this.handleTechTouchStart_(e);\n    this.boundHandleTechTouchMove_ = e => this.handleTechTouchMove_(e);\n    this.boundHandleTechTouchEnd_ = e => this.handleTechTouchEnd_(e);\n    this.boundHandleTechTap_ = e => this.handleTechTap_(e);\n\n    // default isFullscreen_ to false\n    this.isFullscreen_ = false;\n\n    // create logger\n    this.log = createLogger(this.id_);\n\n    // Hold our own reference to fullscreen api so it can be mocked in tests\n    this.fsApi_ = FullscreenApi;\n\n    // Tracks when a tech changes the poster\n    this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // Init state hasStarted_\n    this.hasStarted_ = false;\n\n    // Init state userActive_\n    this.userActive_ = false;\n\n    // Init debugEnabled_\n    this.debugEnabled_ = false;\n\n    // Init state audioOnlyMode_\n    this.audioOnlyMode_ = false;\n\n    // Init state audioPosterMode_\n    this.audioPosterMode_ = false;\n\n    // Init state audioOnlyCache_\n    this.audioOnlyCache_ = {\n      playerHeight: null,\n      hiddenChildren: []\n    };\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    this.language(this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      const languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      this.languages_ = languagesToLower;\n    } else {\n      this.languages_ = Player.prototype.options_.languages;\n    }\n    this.resetCache_();\n\n    // Set poster\n    this.poster_ = options.poster || '';\n\n    // Set controls\n    this.controls_ = !!options.controls;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    this.changingSrc_ = false;\n    this.playCallbacks_ = [];\n    this.playTerminatedQueue_ = [];\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      this.autoplay(this.options_.autoplay);\n    }\n\n    // check plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        if (typeof this[name] !== 'function') {\n          throw new Error(`plugin \"${name}\" does not exist`);\n        }\n      });\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    this.scrubbing_ = false;\n    this.el_ = this.createEl();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(this, {\n      eventBusKey: 'el_'\n    });\n\n    // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n    if (this.fsApi_.requestFullscreen) {\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n    if (this.fluid_) {\n      this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    const playerOptionsCopy = merge$1(this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        this[name](options.plugins[name]);\n      });\n    }\n\n    // Enable debug mode to fire debugon event for all plugins.\n    if (options.debug) {\n      this.debug(true);\n    }\n    this.options_.playerOptions = playerOptionsCopy;\n    this.middleware_ = [];\n    this.playbackRates(options.playbackRates);\n    this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (this.controls()) {\n      this.addClass('vjs-controls-enabled');\n    } else {\n      this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    this.el_.setAttribute('role', 'region');\n    if (this.isAudio()) {\n      this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n    } else {\n      this.el_.setAttribute('aria-label', this.localize('Video Player'));\n    }\n    if (this.isAudio()) {\n      this.addClass('vjs-audio');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n    if (TOUCH_ENABLED) {\n      this.addClass('vjs-touch-enabled');\n    }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[this.id_] = this;\n\n    // Add a major version class to aid css in plugins\n    const majorVersion = version$6.split('.')[0];\n    this.addClass(`vjs-v${majorVersion}`);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    this.userActive(true);\n    this.reportUserActivity();\n    this.one('play', e => this.listenForUserActivity_(e));\n    this.on('keydown', e => this.handleKeyDown(e));\n    this.on('languagechange', e => this.handleLanguagechange(e));\n    this.breakpoints(this.options_.breakpoints);\n    this.responsive(this.options_.responsive);\n\n    // Calling both the audio mode methods after the player is fully\n    // setup to be able to listen to the events triggered by them\n    this.on('ready', () => {\n      // Calling the audioPosterMode method first so that\n      // the audioOnlyMode can take precedence when both options are set to true\n      this.audioPosterMode(this.options_.audioPosterMode);\n      this.audioOnlyMode(this.options_.audioOnlyMode);\n    });\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n  dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    // Make sure all player-specific document listeners are unbound. This is\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n    if (this.tag) {\n      this.tag = null;\n    }\n    clearCacheForPlayer(this);\n\n    // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      const list = this[props.getterName]();\n\n      // if it is not a native list\n      // we have to manually remove event listeners\n      if (list && list.off) {\n        list.off();\n      }\n    });\n\n    // the actual .el_ is removed here, or replaced if\n    super.dispose({\n      restoreEl: this.options_.restoreEl\n    });\n  }\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    let tag = this.tag;\n    let el;\n    let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = super.createEl('div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    const attrs = getAttributes(tag);\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(k => {\n        try {\n          tag[k] = el[k];\n        } catch (e) {\n          // we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1';\n\n    // Workaround for #4583 on Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    // doesn't change behavior of Chrome if JAWS is not being used\n    if (IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      const defaultsStyleEl = $('.vjs-styles-defaults');\n      const head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n    this.fill_ = false;\n    this.fluid_ = false;\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n    // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    const links = tag.getElementsByTagName('a');\n    for (let i = 0; i < links.length; i++) {\n      const linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n    this.el_.setAttribute('translate', 'no');\n    this.el_ = el;\n    return el;\n  }\n\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string|null} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      return this.techGet_('crossOrigin');\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      log$1.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    this.techCall_('setCrossOrigin', value);\n    if (this.posterImage) {\n      this.posterImage.crossOrigin(value);\n    }\n    return;\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  width(value) {\n    return this.dimension('width', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  height(value) {\n    return this.dimension('height', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  dimension(dimension, value) {\n    const privDimension = dimension + '_';\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n    const parsedVal = parseFloat(value);\n    if (isNaN(parsedVal)) {\n      log$1.error(`Improper value \"${value}\" supplied for for ${dimension}`);\n      return;\n    }\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n    this.fluid_ = !!bool;\n    if (isEvented(this)) {\n      this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(this, () => {\n        this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n    this.fill_ = !!bool;\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      const techEl = this.tech_ && this.tech_.el();\n      if (techEl) {\n        if (width >= 0) {\n          techEl.width = width;\n        }\n        if (height >= 0) {\n          techEl.height = height;\n        }\n      }\n      return;\n    }\n    let width;\n    let height;\n    let aspectRatio;\n    let idClass;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    const ratioParts = aspectRatio.split(':');\n    const ratioMultiplier = ratioParts[1] / ratioParts[0];\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, `\n      .${idClass} {\n        width: ${width}px;\n        height: ${height}px;\n      }\n\n      .${idClass}.vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: ${ratioMultiplier * 100}%;\n      }\n    `);\n  }\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  loadTech_(techName, source) {\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n    const titleTechName = toTitleCase$1(techName);\n    const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n    let autoplay = this.autoplay();\n\n    // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n      autoplay = false;\n    }\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    const techOptions = {\n      source,\n      autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': `${this.id()}_${camelTechName}_api`,\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      techOptions[props.getterName] = this[props.privateName];\n    });\n    Object.assign(techOptions, this.options_[titleTechName]);\n    Object.assign(techOptions, this.options_[camelTechName]);\n    Object.assign(techOptions, this.options_[techName.toLowerCase()]);\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    const TechClass = Tech.getTech(techName);\n    if (!TechClass) {\n      throw new Error(`No Tech named '${titleTechName}' exists! '${titleTechName}' should be registered using videojs.registerTech()'`);\n    }\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind_(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(event => {\n      this.on(this.tech_, event, e => this[`handleTech${toTitleCase$1(event)}_`](e));\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n      this.on(this.tech_, event, eventObj => {\n        if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n          this.queuedCallbacks_.push({\n            callback: this[`handleTech${TECH_EVENTS_QUEUE[event]}_`].bind(this),\n            event: eventObj\n          });\n          return;\n        }\n        this[`handleTech${TECH_EVENTS_QUEUE[event]}_`](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', e => this.handleTechLoadStart_(e));\n    this.on(this.tech_, 'sourceset', e => this.handleTechSourceset_(e));\n    this.on(this.tech_, 'waiting', e => this.handleTechWaiting_(e));\n    this.on(this.tech_, 'ended', e => this.handleTechEnded_(e));\n    this.on(this.tech_, 'seeking', e => this.handleTechSeeking_(e));\n    this.on(this.tech_, 'play', e => this.handleTechPlay_(e));\n    this.on(this.tech_, 'pause', e => this.handleTechPause_(e));\n    this.on(this.tech_, 'durationchange', e => this.handleTechDurationChange_(e));\n    this.on(this.tech_, 'fullscreenchange', (e, data) => this.handleTechFullscreenChange_(e, data));\n    this.on(this.tech_, 'fullscreenerror', (e, err) => this.handleTechFullscreenError_(e, err));\n    this.on(this.tech_, 'enterpictureinpicture', e => this.handleTechEnterPictureInPicture_(e));\n    this.on(this.tech_, 'leavepictureinpicture', e => this.handleTechLeavePictureInPicture_(e));\n    this.on(this.tech_, 'error', e => this.handleTechError_(e));\n    this.on(this.tech_, 'posterchange', e => this.handleTechPosterChange_(e));\n    this.on(this.tech_, 'textdata', e => this.handleTechTextData_(e));\n    this.on(this.tech_, 'ratechange', e => this.handleTechRateChange_(e));\n    this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n    this.usingNativeControls(this.techGet_('controls'));\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  unloadTech_() {\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      this[props.privateName] = this[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n    this.isPosterFromTech_ = false;\n  }\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  tech(safety) {\n    if (safety === undefined) {\n      log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n    return this.tech_;\n  }\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n    this.on(this.tech_, 'click', this.boundHandleTechClick_);\n    this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n  }\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n    this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n    this.off(this.tech_, 'click', this.boundHandleTechClick_);\n    this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n  }\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  }\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#loadstart\n   * @listens Tech#loadstart\n   * @private\n   */\n  handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended', 'vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // Update the duration\n    this.handleTechDurationChange_();\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n  }\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  manualAutoplay_(type) {\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    // Save original muted() value, set muted to true, and attempt to play().\n    // On promise rejection, restore muted from saved value\n    const resolveMuted = () => {\n      const previouslyMuted = this.muted();\n      this.muted(true);\n      const restoreMuted = () => {\n        this.muted(previouslyMuted);\n      };\n\n      // restore muted on play terminatation\n      this.playTerminatedQueue_.push(restoreMuted);\n      const mutedPromise = this.play();\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n      return mutedPromise.catch(err => {\n        restoreMuted();\n        throw new Error(`Rejection at manualAutoplay. Restoring muted value. ${err ? err : ''}`);\n      });\n    };\n    let promise;\n\n    // if muted defaults to true\n    // the only thing we can do is call play\n    if (type === 'any' && !this.muted()) {\n      promise = this.play();\n      if (isPromise(promise)) {\n        promise = promise.catch(resolveMuted);\n      }\n    } else if (type === 'muted' && !this.muted()) {\n      promise = resolveMuted();\n    } else {\n      promise = this.play();\n    }\n    if (!isPromise(promise)) {\n      return;\n    }\n    return promise.then(() => {\n      this.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(() => {\n      this.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  updateSourceCaches_(srcObj = '') {\n    let src = srcObj;\n    let type = '';\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = merge$1({}, srcObj, {\n      src,\n      type\n    });\n    const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n    const sourceElSources = [];\n    const sourceEls = this.$$('source');\n    const matchingSourceEls = [];\n    for (let i = 0; i < sourceEls.length; i++) {\n      const sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  }\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  handleTechSourceset_(event) {\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      let updateSourceCaches = src => this.updateSourceCaches_(src);\n      const playerSrc = this.currentSource().src;\n      const eventSrc = event.src;\n\n      // if we have a playerSrc that is not a blob, and a tech src that is a blob\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = () => {};\n        }\n      }\n\n      // update the source to the initial source right away\n      // in some cases this will be empty string\n      updateSourceCaches(eventSrc);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], e => {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n          const techSrc = this.techGet('currentSrc');\n          this.lastSource_.tech = techSrc;\n          this.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n    if (request === this.hasStarted_) {\n      return;\n    }\n    this.hasStarted_ = request;\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  handleTechPlay_() {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  }\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  }\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  handleTechWaiting_() {\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n\n    // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n    const timeWhenWaiting = this.currentTime();\n    const timeUpdateListener = () => {\n      if (timeWhenWaiting !== this.currentTime()) {\n        this.removeClass('vjs-waiting');\n        this.off('timeupdate', timeUpdateListener);\n      }\n    };\n    this.on('timeupdate', timeUpdateListener);\n  }\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  }\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  }\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  }\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  }\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  handleTechSeeked_() {\n    this.removeClass('vjs-seeking', 'vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  }\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  }\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  handleTechEnded_() {\n    this.addClass('vjs-ended');\n    this.removeClass('vjs-waiting');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  }\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#click\n   * @private\n   */\n  handleTechClick_(event) {\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n    if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n      if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n        this.options_.userActions.click.call(this, event);\n      } else if (this.paused()) {\n        silencePromise(this.play());\n      } else {\n        this.pause();\n      }\n    }\n  }\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @private\n   */\n  toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  documentFullscreenChange_(e) {\n    const targetPlayer = e.target.player;\n\n    // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n    const el = this.el();\n    let isFs = document[this.fsApi_.fullscreenElement] === el;\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n    this.isFullscreen(isFs);\n  }\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  handleTechFullscreenChange_(event, data) {\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.addClass('vjs-ios-native-fs');\n        this.tech_.one('webkitendfullscreen', () => {\n          this.removeClass('vjs-ios-native-fs');\n        });\n      }\n      this.isFullscreen(data.isFullscreen);\n    }\n  }\n  handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n\n  /**\n   * @private\n   */\n  togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  handleTechError_() {\n    const error = this.tech_.error();\n    this.error(error);\n  }\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  handleTechTextData_() {\n    let data = null;\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  }\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  getCache() {\n    return this.cache_;\n  }\n\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      playbackRates: [],\n      volume: 1\n    };\n  }\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  }\n\n  /**\n   * Mediate attempt to call playback tech method\n   * and return the value of the method called.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {*}\n   *         Value returned by the tech method called, undefined if tech\n   *         is not ready or tech method is not present\n   *\n   * @private\n   */\n  techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Log error when playback tech object is present but method\n    // is undefined or unavailable\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1(`Video.js: ${method} method not defined for ${this.techName_} playback technology.`, e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1(`Video.js: ${method} unavailable on ${this.techName_} playback technology element.`, e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  }\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  play() {\n    return new Promise(resolve => {\n      this.play_(resolve);\n    });\n  }\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  play_(callback = silencePromise) {\n    this.playCallbacks_.push(callback);\n    const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n\n    // treat calls to play_ somewhat like the `one` event function\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    }\n\n    // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = e => {\n        this.play_();\n      };\n      this.one(['ready', 'loadstart'], this.waitToPlay_);\n\n      // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n      return;\n    }\n\n    // If the player/tech is ready and we have a source, we can attempt playback.\n    const val = this.techGet_('play');\n\n    // play was terminated if the returned value is null\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  runPlayTerminatedQueue_() {\n    const queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  runPlayCallbacks_(val) {\n    const callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = [];\n    // clear play terminatedQueue since we finished a real play\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  pause() {\n    this.techCall_('pause');\n  }\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  played() {\n    return this.techGet_('played') || createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n        this.cache_.initTime = seconds;\n        this.off('canplay', this.boundApplyInitTime_);\n        this.one('canplay', this.boundApplyInitTime_);\n        return;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      this.cache_.initTime = 0;\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and depending on preload behaviour may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing\n      this.cache_.duration = seconds;\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  }\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  buffered() {\n    let buffered = this.techGet_('buffered');\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges$1(0, 0);\n    }\n    return buffered;\n  }\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  bufferedEnd() {\n    const buffered = this.buffered();\n    const duration = this.duration();\n    let end = buffered.end(buffered.length - 1);\n    if (end > duration) {\n      end = duration;\n    }\n    return end;\n  }\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  volume(percentAsDecimal) {\n    let vol;\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  muted(muted) {\n    if (muted !== undefined) {\n      this.techCall_('setMuted', muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  }\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  defaultMuted(defaultMuted) {\n    if (defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  }\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  }\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      const oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS);\n\n      // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {EventTarget~Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n      this.toggleFullscreenClass_();\n      return;\n    }\n    return this.isFullscreen_;\n  }\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  requestFullscreen(fullscreenOptions) {\n    if (this.isInPictureInPicture()) {\n      this.exitPictureInPicture();\n    }\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.requestFullscreenHelper_(fullscreenOptions);\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  requestFullscreenHelper_(fullscreenOptions) {\n    let fsOptions;\n\n    // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    }\n\n    // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n    if (this.fsApi_.requestFullscreen) {\n      const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  exitFullscreen() {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.exitFullscreenHelper_();\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        // map the promise to our resolve/reject methods\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  exitFullscreenHelper_() {\n    if (this.fsApi_.requestFullscreen) {\n      const promise = document[this.fsApi_.exitFullscreen]();\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        // we're splitting the promise here, so, we want to catch the\n        // potential error so that this chain doesn't have unhandled errors\n        silencePromise(promise.then(() => this.isFullscreen(false)));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  }\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        if (!this.isFullWindow) {\n          this.exitFullscreen();\n        } else {\n          this.exitFullWindow();\n        }\n      }\n    }\n  }\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  }\n\n  /**\n   * Disable Picture-in-Picture mode.\n   *\n   * @param {boolean} value\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n    return !!this.isInPictureInPicture_;\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const {\n      userActions\n    } = this.options_;\n\n    // Bail out if hotkeys are not configured.\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    }\n\n    // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n    const excludeElement = el => {\n      const tagName = el.tagName.toLowerCase();\n\n      // The first and easiest test is for `contenteditable` elements.\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n      const allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      // The final test is by tag name. These tags will be excluded entirely.\n      const excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    };\n\n    // Bail out if the user is focused on an interactive form element.\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleHotkeys(event) {\n    const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n\n    // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n    const {\n      fullscreenKey = keydownEvent => keycode.isEventKey(keydownEvent, 'f'),\n      muteKey = keydownEvent => keycode.isEventKey(keydownEvent, 'm'),\n      playPauseKey = keydownEvent => keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space')\n    } = hotkeys;\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const FSToggle = Component$1.getComponent('FullscreenToggle');\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const MuteToggle = Component$1.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const PlayToggle = Component$1.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  canPlayType(type) {\n    let can;\n\n    // Loop through each playback technology in the options order\n    for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      const techName = j[i];\n      let tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component$1.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n        if (can) {\n          return can;\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  selectSource(sources) {\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    const techs = this.options_.techOrder.map(techName => {\n      return [techName, Tech.getTech(techName)];\n    }).filter(([techName, tech]) => {\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n      log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n      let found;\n      outerArray.some(outerChoice => {\n        return innerArray.some(innerChoice => {\n          found = tester(outerChoice, innerChoice);\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n    let foundSourceAndTech;\n    const flip = fn => (a, b) => fn(b, a);\n    const finder = ([techName, tech], source) => {\n      if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n        return {\n          source,\n          tech: techName\n        };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n    return foundSourceAndTech || false;\n  }\n\n  /**\n   * Executes source setting and getting logic\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   * @param {boolean} isRetry\n   *        Indicates whether this is being called internally as a result of a retry\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  handleSrc_(source, isRetry) {\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n\n    // Reset retry behavior for new source\n    if (this.resetRetryOnError_) {\n      this.resetRetryOnError_();\n    }\n\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    const sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.options_.notSupportedMessage\n        });\n      }, 0);\n      return;\n    }\n\n    // initial sources\n    this.changingSrc_ = true;\n\n    // Only update the cached source list if we are not retrying a new source after error,\n    // since in that case we want to include the failed source(s) in the cache\n    if (!isRetry) {\n      this.cache_.sources = sources;\n    }\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], (middlewareSource, mws) => {\n      this.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n      this.updateSourceCaches_(middlewareSource);\n      const err = this.src_(middlewareSource);\n      if (err) {\n        if (sources.length > 1) {\n          return this.handleSrc_(sources.slice(1));\n        }\n        this.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        this.triggerReady();\n        return;\n      }\n      setTech(mws, this.tech_);\n    });\n\n    // Try another available source if this one fails before playback.\n    if (sources.length > 1) {\n      const retry = () => {\n        // Remove the error modal\n        this.error(null);\n        this.handleSrc_(sources.slice(1), true);\n      };\n      const stopListeningForErrors = () => {\n        this.off('error', retry);\n      };\n      this.one('error', retry);\n      this.one('playing', stopListeningForErrors);\n      this.resetRetryOnError_ = () => {\n        this.off('error', retry);\n        this.off('playing', stopListeningForErrors);\n      };\n    }\n  }\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  src(source) {\n    return this.handleSrc_(source, false);\n  }\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  src_(source) {\n    const sourceTech = this.selectSource([source]);\n    if (!sourceTech) {\n      return true;\n    }\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(() => {\n        this.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n\n  /**\n   * Begin loading the src data.\n   */\n  load() {\n    this.techCall_('load');\n  }\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  reset() {\n    if (this.paused()) {\n      this.doReset_();\n    } else {\n      const playPromise = this.play();\n      silencePromise(playPromise.then(() => this.doReset_()));\n    }\n  }\n  doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  resetProgressBar_() {\n    this.currentTime(0);\n    const {\n      durationDisplay,\n      remainingTimeDisplay\n    } = this.controlBar || {};\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n\n  /**\n   * Reset Playback ratio\n   */\n  resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n\n  /**\n   * Reset Volume bar\n   */\n  resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  currentSources() {\n    const source = this.currentSource();\n    const sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n    return this.cache_.sources || sources;\n  }\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  currentSource() {\n    return this.cache_.source || {};\n  }\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  }\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n    let techAutoplay;\n\n    // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n    if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  }\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  }\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  }\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      const newPoster = this.tech_.poster() || '';\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  }\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n    this.controls_ = bool;\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls) or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n    this.usingNativeControls_ = bool;\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  }\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // allow hooks to modify error object\n    hooks('beforeerror').forEach(hookFunction => {\n      const newErr = hookFunction(this, err);\n      if (!(isObject(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n        this.log.error('please return a value that MediaError expects in beforeerror hooks');\n        return;\n      }\n      err = newErr;\n    });\n\n    // Suppress the first error message for no compatible source until\n    // user interaction\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      const triggerSuppressedError = function () {\n        this.error(err);\n      };\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error(`(CODE:${this.error_.code} ${MediaError.errorTypes[this.error_.code]})`, this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    // notify hooks of the per player error\n    hooks('error').forEach(hookFunction => hookFunction(this, this.error_));\n    return;\n  }\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n    bool = !!bool;\n    if (bool === this.userActive_) {\n      return;\n    }\n    this.userActive_ = bool;\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  }\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  listenForUserActivity_() {\n    let mouseInProgress;\n    let lastMoveX;\n    let lastMoveY;\n    const handleActivity = bind_(this, this.reportUserActivity);\n    const handleMouseMove = function (e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n    const handleMouseDown = function () {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n    const handleMouseUpAndMouseLeave = function (event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    const controlBar = this.getChild('controlBar');\n\n    // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        if (this.player().options_.inactivityTimeout !== 0) {\n          this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        }\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    }\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    let inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n      const timeout = this.options_.inactivityTimeout;\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n    return !!this.isAudio_;\n  }\n  enableAudioOnlyUI_() {\n    // Update styling immediately to show the control bar so we can get its height\n    this.addClass('vjs-audio-only-mode');\n    const playerChildren = this.children();\n    const controlBar = this.getChild('ControlBar');\n    const controlBarHeight = controlBar && controlBar.currentHeight();\n\n    // Hide all player components except the control bar. Control bar components\n    // needed only for video are hidden with CSS\n    playerChildren.forEach(child => {\n      if (child === controlBar) {\n        return;\n      }\n      if (child.el_ && !child.hasClass('vjs-hidden')) {\n        child.hide();\n        this.audioOnlyCache_.hiddenChildren.push(child);\n      }\n    });\n    this.audioOnlyCache_.playerHeight = this.currentHeight();\n\n    // Set the player height the same as the control bar\n    this.height(controlBarHeight);\n    this.trigger('audioonlymodechange');\n  }\n  disableAudioOnlyUI_() {\n    this.removeClass('vjs-audio-only-mode');\n\n    // Show player components that were previously hidden\n    this.audioOnlyCache_.hiddenChildren.forEach(child => child.show());\n\n    // Reset player height\n    this.height(this.audioOnlyCache_.playerHeight);\n    this.trigger('audioonlymodechange');\n  }\n\n  /**\n   * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n   *\n   * Setting this to `true` will hide all player components except the control bar,\n   * as well as control bar components needed only for video.\n   *\n   * @param {boolean} [value]\n   *         The value to set audioOnlyMode to.\n   *\n   * @return {Promise|boolean}\n   *        A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioOnlyMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n      return this.audioOnlyMode_;\n    }\n    this.audioOnlyMode_ = value;\n\n    // Enable Audio Only Mode\n    if (value) {\n      const exitPromises = [];\n\n      // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n      if (this.isInPictureInPicture()) {\n        exitPromises.push(this.exitPictureInPicture());\n      }\n      if (this.isFullscreen()) {\n        exitPromises.push(this.exitFullscreen());\n      }\n      if (this.audioPosterMode()) {\n        exitPromises.push(this.audioPosterMode(false));\n      }\n      return Promise.all(exitPromises).then(() => this.enableAudioOnlyUI_());\n    }\n\n    // Disable Audio Only Mode\n    return Promise.resolve().then(() => this.disableAudioOnlyUI_());\n  }\n  enablePosterModeUI_() {\n    // Hide the video element and show the poster image to enable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.hide();\n    this.addClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n  disablePosterModeUI_() {\n    // Show the video element and hide the poster image to disable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.show();\n    this.removeClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n\n  /**\n   * Get the current audioPosterMode state or set audioPosterMode to true or false\n   *\n   * @param {boolean} [value]\n   *         The value to set audioPosterMode to.\n   *\n   * @return {Promise|boolean}\n   *         A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioPosterMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n      return this.audioPosterMode_;\n    }\n    this.audioPosterMode_ = value;\n    if (value) {\n      if (this.audioOnlyMode()) {\n        const audioOnlyModePromise = this.audioOnlyMode(false);\n        return audioOnlyModePromise.then(() => {\n          // enable audio poster mode after audio only mode is disabled\n          this.enablePosterModeUI_();\n        });\n      }\n      return Promise.resolve().then(() => {\n        // enable audio poster mode\n        this.enablePosterModeUI_();\n      });\n    }\n    return Promise.resolve().then(() => {\n      // disable audio poster mode\n      this.disablePosterModeUI_();\n    });\n  }\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack will not be removed\n   *                                        from the TextTrackList and HtmlTrackElementList\n   *                                        after a source change\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  removeRemoteTextTrack(obj = {}) {\n    let {\n      track\n    } = obj;\n    if (!track) {\n      track = obj;\n    }\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n\n  /**\n   * The player's language code.\n   *\n   * Changing the language will trigger\n   * [languagechange]{@link Player#event:languagechange}\n   * which Components can use to update control text.\n   * ClickableComponent will update its control text by default on\n   * [languagechange]{@link Player#event:languagechange}.\n   *\n   * @fires Player#languagechange\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n    if (this.language_ !== String(code).toLowerCase()) {\n      this.language_ = String(code).toLowerCase();\n\n      // during first init, it's possible some things won't be evented\n      if (isEvented(this)) {\n        /**\n        * fires when the player language change\n        *\n        * @event Player#languagechange\n        * @type {EventTarget~Event}\n        */\n        this.trigger('languagechange');\n      }\n    }\n  }\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  languages() {\n    return merge$1(Player.prototype.options_.languages, this.languages_);\n  }\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  toJSON() {\n    const options = merge$1(this.options_);\n    const tracks = options.tracks;\n    options.tracks = [];\n    for (let i = 0; i < tracks.length; i++) {\n      let track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = merge$1(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n    return options;\n  }\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  createModal(content, options) {\n    options = options || {};\n    options.content = content || '';\n    const modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', () => {\n      this.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n    const currentBreakpoint = this.currentBreakpoint();\n    const currentWidth = this.currentWidth();\n    for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      const candidateBreakpoint = BREAKPOINT_ORDER[i];\n      const maxWidth = this.breakpoints_[candidateBreakpoint];\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        }\n\n        // Only remove a class if there is a current breakpoint.\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  removeCurrentBreakpoint_() {\n    const className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  breakpoints(breakpoints) {\n    // Used as a getter.\n    if (breakpoints === undefined) {\n      return Object.assign(this.breakpoints_);\n    }\n    this.breakpoint_ = '';\n    this.breakpoints_ = Object.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n\n    // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n    this.updateCurrentBreakpoint_();\n\n    // Clone the breakpoints before returning.\n    return Object.assign(this.breakpoints_);\n  }\n\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n    value = Boolean(value);\n    const current = this.responsive_;\n\n    // Nothing changed.\n    if (value === current) {\n      return;\n    }\n\n    // The value actually changed, set it.\n    this.responsive_ = value;\n\n    // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n    if (value) {\n      this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_();\n\n      // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n    return value;\n  }\n\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  currentBreakpoint() {\n    return this.breakpoint_;\n  }\n\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  loadMedia(media, ready) {\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n    this.reset();\n\n    // Clone the media object so it cannot be mutated from outside.\n    this.cache_.media = merge$1(media);\n    const {\n      artist,\n      artwork,\n      description,\n      poster,\n      src,\n      textTracks,\n      title\n    } = this.cache_.media;\n\n    // If `artwork` is not given, create it using `poster`.\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n    if (src) {\n      this.src(src);\n    }\n    if (poster) {\n      this.poster(poster);\n    }\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n    }\n    if (this.titleBar) {\n      this.titleBar.update({\n        title,\n        description: description || artist || ''\n      });\n    }\n    this.ready(ready);\n  }\n\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  getMedia() {\n    if (!this.cache_.media) {\n      const poster = this.poster();\n      const src = this.currentSources();\n      const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n        kind: tt.kind,\n        label: tt.label,\n        language: tt.language,\n        src: tt.src\n      }));\n      const media = {\n        src,\n        textTracks\n      };\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n      return media;\n    }\n    return merge$1(this.cache_.media);\n  }\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  static getTagSettings(tag) {\n    const baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    const tagOptions = getAttributes(tag);\n    const dataSetup = tagOptions['data-setup'];\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      const [err, data] = safeParseTuple(dataSetup || '{}');\n      if (err) {\n        log$1.error(err);\n      }\n      Object.assign(tagOptions, data);\n    }\n    Object.assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      const children = tag.childNodes;\n      for (let i = 0, j = children.length; i < j; i++) {\n        const child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        const childName = child.nodeName.toLowerCase();\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n    return baseOptions;\n  }\n\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   */\n  debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  }\n\n  /**\n   * Set or get current playback rates.\n   * Takes an array and updates the playback rates menu with the new items.\n   * Pass in an empty array to hide the menu.\n   * Values other than arrays are ignored.\n   *\n   * @fires Player#playbackrateschange\n   * @param {number[]} newRates\n   *                   The new rates that the playback rates menu should update to.\n   *                   An empty array will hide the menu\n   * @return {number[]} When used as a getter will return the current playback rates\n   */\n  playbackRates(newRates) {\n    if (newRates === undefined) {\n      return this.cache_.playbackRates;\n    }\n\n    // ignore any value that isn't an array\n    if (!Array.isArray(newRates)) {\n      return;\n    }\n\n    // ignore any arrays that don't only contain numbers\n    if (!newRates.every(rate => typeof rate === 'number')) {\n      return;\n    }\n    this.cache_.playbackRates = newRates;\n\n    /**\n    * fires when the playback rates in a player are changed\n    *\n    * @event Player#playbackrateschange\n    * @type {EventTarget~Event}\n    */\n    this.trigger('playbackrateschange');\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\nPlayer.players = {};\nconst navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  // enable sourceset by default\n  enableSourceset: true,\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'titleBar', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  normalizeAutoplay: false,\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false,\n  audioOnlyMode: false,\n  audioPosterMode: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[`handleTech${toTitleCase$1(event)}_`] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent$1.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nconst BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nconst PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nconst pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\nconst pluginExists = name => pluginStorage.hasOwnProperty(name);\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {typeof Plugin|Function|undefined}\n *          The plugin (or undefined).\n */\nconst getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nconst markPluginAsActive = (player, name) => {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nconst triggerSetupEvent = (player, hash, before) => {\n  const eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\nconst createBasicPlugin = function (name, plugin) {\n  const basicPluginWrapper = function () {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance: null\n    }, true);\n    const instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance\n    });\n    return instance;\n  };\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\nconst createPluginFactory = (name, PluginSubClass) => {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function (...args) {\n    triggerSetupEvent(this, {\n      name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n    const instance = new PluginSubClass(...[this, ...args]);\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = () => instance;\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\nclass Plugin {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  constructor(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n    this.player = player;\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    }\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = this.dispose.bind(this);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n  version() {\n    return this.constructor.VERSION;\n  }\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  getEventHash(hash = {}) {\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  trigger(event, hash = {}) {\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  handleStateChanged(e) {}\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  dispose() {\n    const {\n      name,\n      player\n    } = this;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  static isBasic(plugin) {\n    const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {typeof Plugin|Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {typeof Plugin|Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  static registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(`Illegal plugin name, \"${name}\", must be a string, was ${typeof name}.`);\n    }\n    if (pluginExists(name)) {\n      log$1.warn(`A plugin named \"${name}\" already exists. You may want to avoid re-registering plugins!`);\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(`Illegal plugin name, \"${name}\", cannot share a name with an existing player method!`);\n    }\n    if (typeof plugin !== 'function') {\n      throw new Error(`Illegal plugin for \"${name}\", must be a function, was ${typeof plugin}.`);\n    }\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n    return plugin;\n  }\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  static deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  static getPlugins(names = Object.keys(pluginStorage)) {\n    let result;\n    names.forEach(name => {\n      const plugin = getPlugin(name);\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  static getPluginVersion(name) {\n    const plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  }\n}\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {typeof Plugin|Function|undefined}\n *           The plugin (or `undefined`).\n */\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file deprecate.js\n * @module deprecate\n */\n\n/**\n * Decorate a function with a deprecation message the first time it is called.\n *\n * @param  {string}   message\n *         A deprecation message to log the first time the returned function\n *         is called.\n *\n * @param  {Function} fn\n *         The function to be deprecated.\n *\n * @return {Function}\n *         A wrapper function that will log a deprecation warning the first\n *         time it is called. The return value will be the return value of\n *         the wrapped function.\n */\nfunction deprecate(message, fn) {\n  let warned = false;\n  return function (...args) {\n    if (!warned) {\n      log$1.warn(message);\n    }\n    warned = true;\n    return fn.apply(this, args);\n  };\n}\n\n/**\n * Internal function used to mark a function as deprecated in the next major\n * version with consistent messaging.\n *\n * @param  {number}   major   The major version where it will be removed\n * @param  {string}   oldName The old function name\n * @param  {string}   newName The new function name\n * @param  {Function} fn      The function to deprecate\n * @return {Function}         The decorated function\n */\nfunction deprecateForMajor(major, oldName, newName, fn) {\n  return deprecate(`${oldName} is deprecated and will be removed in ${major}.0; please use ${newName} instead.`, fn);\n}\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\nconst normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n\n/**\n * A callback that is called when a component is ready. Does not have any\n * parameters and any callback value will be ignored. See: {@link Component~ReadyCallback}\n *\n * @callback ReadyCallback\n */\n\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\nfunction videojs(id, options, ready) {\n  let player = videojs.getPlayer(id);\n  if (player) {\n    if (options) {\n      log$1.warn(`Player \"${id}\" is already initialised. Options will not be applied.`);\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n  const el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n  options = options || {};\n\n  // Store a copy of the el before modification, if it is to be restored in destroy()\n  // If div ingest, store the parent div\n  if (options.restoreEl === true) {\n    options.restoreEl = (el.parentNode && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n  }\n  hooks('beforesetup').forEach(hookFunction => {\n    const opts = hookFunction(el, merge$1(options));\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n    options = merge$1(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  const PlayerComponent = Component$1.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  hooks('setup').forEach(hookFunction => hookFunction(player));\n  return player;\n}\nvideojs.hooks_ = hooks_;\nvideojs.hooks = hooks;\nvideojs.hook = hook;\nvideojs.hookOnce = hookOnce;\nvideojs.removeHook = removeHook;\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  let style = $('.vjs-styles-defaults');\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    const head = $('head');\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    `);\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\nvideojs.VERSION = version$6;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = () => Player.players;\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = id => {\n  const players = Player.players;\n  let tag;\n  if (typeof id === 'string') {\n    const nId = normalizeId(id);\n    const player = players[nId];\n    if (player) {\n      return player;\n    }\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n  if (isEl(tag)) {\n    const {\n      player,\n      playerId\n    } = tag;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n    if (player || players[playerId]) {\n      return player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = () =>\n// Disposed players leave a key with a `null` value, so we need to make sure\n// we filter those out.\nObject.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\nvideojs.players = Player.players;\nvideojs.getComponent = Component$1.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs.registerComponent = (name, comp) => {\n  if (Tech.isTech(comp)) {\n    log$1.warn(`The ${name} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n  }\n  Component$1.registerComponent.call(Component$1, name, comp);\n};\nvideojs.getTech = Tech.getTech;\nvideojs.registerTech = Tech.registerTech;\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\nvideojs.browser = browser;\n\n/**\n * A reference to the {@link module:obj|obj utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:obj|obj}\n */\nvideojs.obj = Obj;\n\n/**\n * Deprecated reference to the {@link module:obj.merge|merge function}\n *\n * @type {Function}\n * @see {@link module:obj.merge|merge}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.merge instead.\n */\nvideojs.mergeOptions = deprecateForMajor(9, 'videojs.mergeOptions', 'videojs.obj.merge', merge$1);\n\n/**\n * Deprecated reference to the {@link module:obj.defineLazyProperty|defineLazyProperty function}\n *\n * @type {Function}\n * @see {@link module:obj.defineLazyProperty|defineLazyProperty}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.defineLazyProperty instead.\n */\nvideojs.defineLazyProperty = deprecateForMajor(9, 'videojs.defineLazyProperty', 'videojs.obj.defineLazyProperty', defineLazyProperty);\n\n/**\n * Deprecated reference to the {@link module:fn.bind_|fn.bind_ function}\n *\n * @type {Function}\n * @see {@link module:fn.bind_|fn.bind_}\n * @deprecated Deprecated and will be removed in 9.0. Please use native Function.prototype.bind instead.\n */\nvideojs.bind = deprecateForMajor(9, 'videojs.bind', 'native Function.prototype.bind', bind_);\nvideojs.registerPlugin = Plugin.registerPlugin;\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated Deprecated and will be removed in 9.0. Use videojs.registerPlugin() instead.\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs.plugin = (name, plugin) => {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\nvideojs.getPlugins = Plugin.getPlugins;\nvideojs.getPlugin = Plugin.getPlugin;\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  code = ('' + code).toLowerCase();\n  videojs.options.languages = merge$1(videojs.options.languages, {\n    [code]: data\n  });\n  return videojs.options.languages[code];\n};\n\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\nvideojs.log = log$1;\nvideojs.createLogger = createLogger;\n\n/**\n * A reference to the {@link module:time|time utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:time|time}\n */\nvideojs.time = Time;\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRange = deprecateForMajor(9, 'videojs.createTimeRange', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRanges = deprecateForMajor(9, 'videojs.createTimeRanges', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.formatTime|formatTime function}\n *\n * @type {Function}\n * @see {@link module:time.formatTime|formatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.format instead.\n */\nvideojs.formatTime = deprecateForMajor(9, 'videojs.formatTime', 'videojs.time.formatTime', formatTime);\n\n/**\n * Deprecated reference to the {@link module:time.setFormatTime|setFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.setFormatTime|setFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.setFormat instead.\n */\nvideojs.setFormatTime = deprecateForMajor(9, 'videojs.setFormatTime', 'videojs.time.setFormatTime', setFormatTime);\n\n/**\n * Deprecated reference to the {@link module:time.resetFormatTime|resetFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.resetFormatTime|resetFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.resetFormat instead.\n */\nvideojs.resetFormatTime = deprecateForMajor(9, 'videojs.resetFormatTime', 'videojs.time.resetFormatTime', resetFormatTime);\n\n/**\n * Deprecated reference to the {@link module:url.parseUrl|Url.parseUrl function}\n *\n * @type {Function}\n * @see {@link module:url.parseUrl|parseUrl}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.parseUrl instead.\n */\nvideojs.parseUrl = deprecateForMajor(9, 'videojs.parseUrl', 'videojs.url.parseUrl', parseUrl);\n\n/**\n * Deprecated reference to the {@link module:url.isCrossOrigin|Url.isCrossOrigin function}\n *\n * @type {Function}\n * @see {@link module:url.isCrossOrigin|isCrossOrigin}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.isCrossOrigin instead.\n */\nvideojs.isCrossOrigin = deprecateForMajor(9, 'videojs.isCrossOrigin', 'videojs.url.isCrossOrigin', isCrossOrigin);\nvideojs.EventTarget = EventTarget$2;\nvideojs.any = any;\nvideojs.on = on;\nvideojs.one = one;\nvideojs.off = off;\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\nvideojs.xhr = XHR;\nvideojs.TextTrack = TextTrack;\nvideojs.AudioTrack = AudioTrack;\nvideojs.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(k => {\n  videojs[k] = function () {\n    log$1.warn(`videojs.${k}() is deprecated; use videojs.dom.${k}() instead`);\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs.computedStyle = deprecateForMajor(9, 'videojs.computedStyle', 'videojs.dom.computedStyle', computedStyle);\n\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:dom|dom}\n */\nvideojs.dom = Dom;\n\n/**\n * A reference to the {@link module:fn|fn utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:fn|fn}\n */\nvideojs.fn = Fn;\n\n/**\n * A reference to the {@link module:num|num utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:num|num}\n */\nvideojs.num = Num;\n\n/**\n * A reference to the {@link module:str|str utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:str|str}\n */\nvideojs.str = Str;\n\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:url|url}\n */\nvideojs.url = Url;\n\n/*! @name videojs-contrib-quality-levels @version 3.0.0 @license Apache-2.0 */\n\n/**\n * A single QualityLevel.\n *\n * interface QualityLevel {\n *   readonly attribute DOMString id;\n *            attribute DOMString label;\n *   readonly attribute long width;\n *   readonly attribute long height;\n *   readonly attribute long bitrate;\n *            attribute boolean enabled;\n * };\n *\n * @class QualityLevel\n */\nclass QualityLevel {\n  /**\n   * Creates a QualityLevel\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   */\n  constructor(representation) {\n    let level = this; // eslint-disable-line\n\n    level.id = representation.id;\n    level.label = level.id;\n    level.width = representation.width;\n    level.height = representation.height;\n    level.bitrate = representation.bandwidth;\n    level.frameRate = representation.frameRate;\n    level.enabled_ = representation.enabled;\n    Object.defineProperty(level, 'enabled', {\n      /**\n       * Get whether the QualityLevel is enabled.\n       *\n       * @return {boolean} True if the QualityLevel is enabled.\n       */\n      get() {\n        return level.enabled_();\n      },\n      /**\n       * Enable or disable the QualityLevel.\n       *\n       * @param {boolean} enable true to enable QualityLevel, false to disable.\n       */\n      set(enable) {\n        level.enabled_(enable);\n      }\n    });\n    return level;\n  }\n}\n\n/**\n * A list of QualityLevels.\n *\n * interface QualityLevelList : EventTarget {\n *   getter QualityLevel (unsigned long index);\n *   readonly attribute unsigned long length;\n *   readonly attribute long selectedIndex;\n *\n *   void addQualityLevel(QualityLevel qualityLevel)\n *   void removeQualityLevel(QualityLevel remove)\n *   QualityLevel? getQualityLevelById(DOMString id);\n *\n *   attribute EventHandler onchange;\n *   attribute EventHandler onaddqualitylevel;\n *   attribute EventHandler onremovequalitylevel;\n * };\n *\n * @extends videojs.EventTarget\n * @class QualityLevelList\n */\n\nclass QualityLevelList extends videojs.EventTarget {\n  constructor() {\n    super();\n    let list = this; // eslint-disable-line\n\n    list.levels_ = [];\n    list.selectedIndex_ = -1;\n    /**\n     * Get the index of the currently selected QualityLevel.\n     *\n     * @returns {number} The index of the selected QualityLevel. -1 if none selected.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'selectedIndex', {\n      get() {\n        return list.selectedIndex_;\n      }\n    });\n    /**\n     * Get the length of the list of QualityLevels.\n     *\n     * @returns {number} The length of the list.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'length', {\n      get() {\n        return list.levels_.length;\n      }\n    });\n    return list;\n  }\n  /**\n   * Adds a quality level to the list.\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   * @return {QualityLevel} the QualityLevel added to the list\n   * @method addQualityLevel\n   */\n\n  addQualityLevel(representation) {\n    let qualityLevel = this.getQualityLevelById(representation.id); // Do not add duplicate quality levels\n\n    if (qualityLevel) {\n      return qualityLevel;\n    }\n    const index = this.levels_.length;\n    qualityLevel = new QualityLevel(representation);\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.levels_[index];\n        }\n      });\n    }\n    this.levels_.push(qualityLevel);\n    this.trigger({\n      qualityLevel,\n      type: 'addqualitylevel'\n    });\n    return qualityLevel;\n  }\n  /**\n   * Removes a quality level from the list.\n   *\n   * @param {QualityLevel} remove QualityLevel to remove to the list.\n   * @return {QualityLevel|null} the QualityLevel removed or null if nothing removed\n   * @method removeQualityLevel\n   */\n\n  removeQualityLevel(qualityLevel) {\n    let removed = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === qualityLevel) {\n        removed = this.levels_.splice(i, 1)[0];\n        if (this.selectedIndex_ === i) {\n          this.selectedIndex_ = -1;\n        } else if (this.selectedIndex_ > i) {\n          this.selectedIndex_--;\n        }\n        break;\n      }\n    }\n    if (removed) {\n      this.trigger({\n        qualityLevel,\n        type: 'removequalitylevel'\n      });\n    }\n    return removed;\n  }\n  /**\n   * Searches for a QualityLevel with the given id.\n   *\n   * @param {string} id The id of the QualityLevel to find.\n   * @return {QualityLevel|null} The QualityLevel with id, or null if not found.\n   * @method getQualityLevelById\n   */\n\n  getQualityLevelById(id) {\n    for (let i = 0, l = this.length; i < l; i++) {\n      const level = this[i];\n      if (level.id === id) {\n        return level;\n      }\n    }\n    return null;\n  }\n  /**\n   * Resets the list of QualityLevels to empty\n   *\n   * @method dispose\n   */\n\n  dispose() {\n    this.selectedIndex_ = -1;\n    this.levels_.length = 0;\n  }\n}\n/**\n * change - The selected QualityLevel has changed.\n * addqualitylevel - A QualityLevel has been added to the QualityLevelList.\n * removequalitylevel - A QualityLevel has been removed from the QualityLevelList.\n */\n\nQualityLevelList.prototype.allowedEvents_ = {\n  change: 'change',\n  addqualitylevel: 'addqualitylevel',\n  removequalitylevel: 'removequalitylevel'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (const event in QualityLevelList.prototype.allowedEvents_) {\n  QualityLevelList.prototype['on' + event] = null;\n}\nvar version$5 = \"3.0.0\";\nconst registerPlugin = videojs.registerPlugin || videojs.plugin;\n/**\n * Initialization function for the qualityLevels plugin. Sets up the QualityLevelList and\n * event handlers.\n *\n * @param {Player} player Player object.\n * @param {Object} options Plugin options object.\n * @function initPlugin\n */\n\nconst initPlugin$1 = function (player, options) {\n  const originalPluginFn = player.qualityLevels;\n  const qualityLevelList = new QualityLevelList();\n  const disposeHandler = function () {\n    qualityLevelList.dispose();\n    player.qualityLevels = originalPluginFn;\n    player.off('dispose', disposeHandler);\n  };\n  player.on('dispose', disposeHandler);\n  player.qualityLevels = () => qualityLevelList;\n  player.qualityLevels.VERSION = version$5;\n  return qualityLevelList;\n};\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @param {Object} options Plugin options object\n * @function qualityLevels\n */\n\nconst qualityLevels = function (options) {\n  return initPlugin$1(this, videojs.mergeOptions({}, options));\n}; // Register the plugin with video.js.\n\nregisterPlugin('qualityLevels', qualityLevels); // Include the version number.\n\nqualityLevels.VERSION = version$5;\n\n/*! @name @videojs/http-streaming @version 3.0.0 @license Apache-2.0 */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\nconst resolveUrl = _resolveUrl;\n/**\n * If the xhr request was redirected, return the responseURL, otherwise,\n * return the original url.\n *\n * @api private\n *\n * @param  {string} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {string}\n */\n\nconst resolveManifestRedirect = (url, req) => {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (req && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n  return url;\n};\nconst logger = source => {\n  if (videojs.log.debug) {\n    return videojs.log.debug.bind(videojs, 'VHS:', `${source} >`);\n  }\n  return function () {};\n};\n\n/**\n * Provides a compatibility layer between Video.js 7 and 8 API changes for VHS.\n */\n/**\n * Delegates to videojs.obj.merge (Video.js 8) or\n * videojs.mergeOptions (Video.js 7).\n */\n\nfunction merge(...args) {\n  const context = videojs.obj || videojs;\n  const fn = context.merge || context.mergeOptions;\n  return fn.apply(context, args);\n}\n/**\n * Delegates to videojs.time.createTimeRanges (Video.js 8) or\n * videojs.createTimeRanges (Video.js 7).\n */\n\nfunction createTimeRanges(...args) {\n  const context = videojs.time || videojs;\n  const fn = context.createTimeRanges || context.createTimeRanges;\n  return fn.apply(context, args);\n}\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\nconst TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nconst SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nconst filterRanges = function (timeRanges, predicate) {\n  const results = [];\n  let i;\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n  return createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n *\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object\n */\n\nconst findRange = function (buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n *\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object.\n */\n\nconst findNextRange = function (timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n *\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\nconst findGaps = function (buffered) {\n  if (buffered.length < 2) {\n    return createTimeRanges();\n  }\n  const ranges = [];\n  for (let i = 1; i < buffered.length; i++) {\n    const start = buffered.end(i - 1);\n    const end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Calculate the intersection of two TimeRanges\n *\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\n\nconst bufferIntersection = function (bufferA, bufferB) {\n  let start = null;\n  let end = null;\n  let arity = 0;\n  const extents = [];\n  const ranges = [];\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return createTimeRanges();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n  let count = bufferA.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: bufferA.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferA.end(count),\n      type: 'end'\n    });\n  }\n  count = bufferB.length;\n  while (count--) {\n    extents.push({\n      time: bufferB.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferB.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @return {string} a human readable string\n */\n\nconst printableRange = range => {\n  const strArr = [];\n  if (!range || !range.length) {\n    return '';\n  }\n  for (let i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\nconst timeUntilRebuffer = function (buffered, currentTime, playbackRate = 1) {\n  const bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n *\n * @param {TimeRanges} timeRanges\n * @return {Array}\n */\n\nconst timeRangesToArray = timeRanges => {\n  const timeRangesList = [];\n  for (let i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n  return timeRangesList;\n};\n/**\n * Determines if two time range objects are different.\n *\n * @param {TimeRange} a\n *        the first time range object to check\n *\n * @param {TimeRange} b\n *        the second time range object to check\n *\n * @return {Boolean}\n *         Whether the time range objects differ\n */\n\nconst isRangeDifferent = function (a, b) {\n  // same object\n  if (a === b) {\n    return false;\n  } // one or the other is undefined\n\n  if (!a && b || !b && a) {\n    return true;\n  } // length is different\n\n  if (a.length !== b.length) {\n    return true;\n  } // see if any start/end pair is different\n\n  for (let i = 0; i < a.length; i++) {\n    if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n      return true;\n    }\n  } // if the length and every pair is the same\n  // this is the same time range\n\n  return false;\n};\nconst lastBufferedEnd = function (a) {\n  if (!a || !a.length || !a.end) {\n    return;\n  }\n  return a.end(a.length - 1);\n};\n/**\n * A utility function to add up the amount of time in a timeRange\n * after a specified startTime.\n * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n *     would return 40 as there are 40s seconds after 0 in the timeRange\n *\n * @param {TimeRange} range\n *        The range to check against\n * @param {number} startTime\n *        The time in the time range that you should start counting from\n *\n * @return {number}\n *          The number of seconds in the buffer passed the specified time.\n */\n\nconst timeAheadOf = function (range, startTime) {\n  let time = 0;\n  if (!range || !range.length) {\n    return time;\n  }\n  for (let i = 0; i < range.length; i++) {\n    const start = range.start(i);\n    const end = range.end(i); // startTime is after this range entirely\n\n    if (startTime > end) {\n      continue;\n    } // startTime is within this range\n\n    if (startTime > start && startTime <= end) {\n      time += end - startTime;\n      continue;\n    } // startTime is before this range.\n\n    time += end - start;\n  }\n  return time;\n};\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n/**\n * Get the duration of a segment, with special cases for\n * llhls segments that do not have a duration yet.\n *\n * @param {Object} playlist\n *        the playlist that the segment belongs to.\n * @param {Object} segment\n *        the segment to get a duration for.\n *\n * @return {number}\n *          the segment duration\n */\n\nconst segmentDurationWithParts = (playlist, segment) => {\n  // if this isn't a preload segment\n  // then we will have a segment duration that is accurate.\n  if (!segment.preload) {\n    return segment.duration;\n  } // otherwise we have to add up parts and preload hints\n  // to get an up to date duration.\n\n  let result = 0;\n  (segment.parts || []).forEach(function (p) {\n    result += p.duration;\n  }); // for preload hints we have to use partTargetDuration\n  // as they won't even have a duration yet.\n\n  (segment.preloadHints || []).forEach(function (p) {\n    if (p.type === 'PART') {\n      result += playlist.partTargetDuration;\n    }\n  });\n  return result;\n};\n/**\n * A function to get a combined list of parts and segments with durations\n * and indexes.\n *\n * @param {Playlist} playlist the playlist to get the list for.\n *\n * @return {Array} The part/segment list.\n */\n\nconst getPartsAndSegments = playlist => (playlist.segments || []).reduce((acc, segment, si) => {\n  if (segment.parts) {\n    segment.parts.forEach(function (part, pi) {\n      acc.push({\n        duration: part.duration,\n        segmentIndex: si,\n        partIndex: pi,\n        part,\n        segment\n      });\n    });\n  } else {\n    acc.push({\n      duration: segment.duration,\n      segmentIndex: si,\n      partIndex: null,\n      segment,\n      part: null\n    });\n  }\n  return acc;\n}, []);\nconst getLastParts = media => {\n  const lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n  return lastSegment && lastSegment.parts || [];\n};\nconst getKnownPartCount = ({\n  preloadSegment\n}) => {\n  if (!preloadSegment) {\n    return;\n  }\n  const {\n    parts,\n    preloadHints\n  } = preloadSegment;\n  let partCount = (preloadHints || []).reduce((count, hint) => count + (hint.type === 'PART' ? 1 : 0), 0);\n  partCount += parts && parts.length ? parts.length : 0;\n  return partCount;\n};\n/**\n * Get the number of seconds to delay from the end of a\n * live playlist.\n *\n * @param {Playlist} main the main playlist\n * @param {Playlist} media the media playlist\n * @return {number} the hold back in seconds.\n */\n\nconst liveEdgeDelay = (main, media) => {\n  if (media.endList) {\n    return 0;\n  } // dash suggestedPresentationDelay trumps everything\n\n  if (main && main.suggestedPresentationDelay) {\n    return main.suggestedPresentationDelay;\n  }\n  const hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n  if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n    return media.serverControl.partHoldBack;\n  } else if (hasParts && media.partTargetDuration) {\n    return media.partTargetDuration * 3; // finally look for full segment delays\n  } else if (media.serverControl && media.serverControl.holdBack) {\n    return media.serverControl.holdBack;\n  } else if (media.targetDuration) {\n    return media.targetDuration * 3;\n  }\n  return 0;\n};\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nconst backwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  let segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n  return {\n    result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {number} endSequence the mediaSequence to stop walking on\n */\n\nconst forwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let segment;\n  let i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {number} the duration between the first available segment\n  * and end index.\n  */\n\nconst intervalDuration = function (playlist, endSequence, expired) {\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n  const backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n  const forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {number} the duration between the start index and end\n  * index.\n  */\n\nconst duration = function (playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Array} options.durationList list to iterate over for durations.\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n  * @param {number} options.startIndex partsAndSegments index to start\n  * @param {number} options.endIndex partsAndSegments index to end.\n  * @return {number} the number of seconds between startIndex and endIndex\n  */\n\nconst sumDurations = function ({\n  defaultDuration,\n  durationList,\n  startIndex,\n  endIndex\n}) {\n  let durations = 0;\n  if (startIndex > endIndex) {\n    [startIndex, endIndex] = [endIndex, startIndex];\n  }\n  if (startIndex < 0) {\n    for (let i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += defaultDuration;\n    }\n    startIndex = 0;\n  }\n  for (let i = startIndex; i < endIndex; i++) {\n    durations += durationList[i].duration;\n  }\n  return durations;\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {number} the end time of playlist\n * @function playlistEnd\n */\n\nconst playlistEnd = function (playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n  if (expired === null) {\n    return null;\n  }\n  expired = expired || 0;\n  let lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n  if (useSafeLiveEnd) {\n    liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n    lastSegmentEndTime -= liveEdgePadding;\n  } // don't return a time less than zero\n\n  return Math.max(0, lastSegmentEndTime);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\nconst seekable = function (playlist, expired, liveEdgePadding) {\n  const useSafeLiveEnd = true;\n  const seekableStart = expired || 0;\n  const seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n  if (seekableEnd === null) {\n    return createTimeRanges();\n  }\n  return createTimeRanges(seekableStart, seekableEnd);\n};\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} options.playlist the media playlist to query\n * @param {number} options.currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {number} options.startTime the time when the segment/part starts\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n *\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\n */\n\nconst getMediaInfoForTime = function ({\n  playlist,\n  currentTime,\n  startingSegmentIndex,\n  startingPartIndex,\n  startTime,\n  exactManifestTimings\n}) {\n  let time = currentTime - startTime;\n  const partsAndSegments = getPartsAndSegments(playlist);\n  let startIndex = 0;\n  for (let i = 0; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n      continue;\n    } // skip this if part index does not match.\n\n    if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n      continue;\n    }\n    startIndex = i;\n    break;\n  }\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (let i = startIndex - 1; i >= 0; i--) {\n        const partAndSegment = partsAndSegments[i];\n        time += partAndSegment.duration;\n        if (exactManifestTimings) {\n          if (time < 0) {\n            continue;\n          }\n        } else if (time + TIME_FUDGE_FACTOR <= 0) {\n          continue;\n        }\n        return {\n          partIndex: partAndSegment.partIndex,\n          segmentIndex: partAndSegment.segmentIndex,\n          startTime: startTime - sumDurations({\n            defaultDuration: playlist.targetDuration,\n            durationList: partsAndSegments,\n            startIndex,\n            endIndex: i\n          })\n        };\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n    return {\n      partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n      segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n  if (startIndex < 0) {\n    for (let i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n          segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n  for (let i = startIndex; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    time -= partAndSegment.duration;\n    if (exactManifestTimings) {\n      if (time > 0) {\n        continue;\n      }\n    } else if (time - TIME_FUDGE_FACTOR >= 0) {\n      continue;\n    }\n    return {\n      partIndex: partAndSegment.partIndex,\n      segmentIndex: partAndSegment.segmentIndex,\n      startTime: startTime + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: partsAndSegments,\n        startIndex,\n        endIndex: i\n      })\n    };\n  } // We are out of possible candidates so load the last one...\n\n  return {\n    segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n    partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is excluded or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is excluded or not\n * @function isExcluded\n */\n\nconst isExcluded = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been excluded permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\nconst isIncompatible = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\nconst isEnabled = function (playlist) {\n  const excluded = isExcluded(playlist);\n  return !playlist.disabled && !excluded;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\nconst isDisabled = function (playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {boolean} true if it's an AES encrypted HLS stream\n */\n\nconst isAes = function (media) {\n  for (let i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {string} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\nconst hasAttribute = function (attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {number} segmentDuration\n *        Duration of requested segment\n * @param {number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\nconst estimateSegmentRequestTime = function (segmentDuration, bandwidth, playlist, bytesReceived = 0) {\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n  const size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\nconst isLowestEnabledRendition = (main, media) => {\n  if (main.playlists.length === 1) {\n    return true;\n  }\n  const currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return main.playlists.filter(playlist => {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\nconst playlistMatch = (a, b) => {\n  // both playlits are null\n  // or only one playlist is non-null\n  // no match\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // playlist objects are the same, match\n\n  if (a === b) {\n    return true;\n  } // first try to use id as it should be the most\n  // accurate\n\n  if (a.id && b.id && a.id === b.id) {\n    return true;\n  } // next try to use reslovedUri as it should be the\n  // second most accurate.\n\n  if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n    return true;\n  } // finally try to use uri as it should be accurate\n  // but might miss a few cases for relative uris\n\n  if (a.uri && b.uri && a.uri === b.uri) {\n    return true;\n  }\n  return false;\n};\nconst someAudioVariant = function (main, callback) {\n  const AUDIO = main && main.mediaGroups && main.mediaGroups.AUDIO || {};\n  let found = false;\n  for (const groupName in AUDIO) {\n    for (const label in AUDIO[groupName]) {\n      found = callback(AUDIO[groupName][label]);\n      if (found) {\n        break;\n      }\n    }\n    if (found) {\n      break;\n    }\n  }\n  return !!found;\n};\nconst isAudioOnly = main => {\n  // we are audio only if we have no main playlists but do\n  // have media group playlists.\n  if (!main || !main.playlists || !main.playlists.length) {\n    // without audio variants or playlists this\n    // is not an audio only main.\n    const found = someAudioVariant(main, variant => variant.playlists && variant.playlists.length || variant.uri);\n    return found;\n  } // if every playlist has only an audio codec it is audio only\n\n  for (let i = 0; i < main.playlists.length; i++) {\n    const playlist = main.playlists[i];\n    const CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n    if (CODECS && CODECS.split(',').every(c => isAudioCodec(c))) {\n      continue;\n    } // playlist is in an audio group it is audio only\n\n    const found = someAudioVariant(main, variant => playlistMatch(playlist, variant));\n    if (found) {\n      continue;\n    } // if we make it here this playlist isn't audio and we\n    // are not audio only\n\n    return false;\n  } // if we make it past every playlist without returning, then\n  // this is an audio only playlist.\n\n  return true;\n}; // exports\n\nvar Playlist = {\n  liveEdgeDelay,\n  duration,\n  seekable,\n  getMediaInfoForTime,\n  isEnabled,\n  isDisabled,\n  isExcluded,\n  isIncompatible,\n  playlistEnd,\n  isAes,\n  hasAttribute,\n  estimateSegmentRequestTime,\n  isLowestEnabledRendition,\n  isAudioOnly,\n  playlistMatch,\n  segmentDurationWithParts\n};\nconst {\n  log\n} = videojs;\nconst createPlaylistID = (index, uri) => {\n  return `${index}-${uri}`;\n};\n/**\n * Parses a given m3u8 playlist\n *\n * @param {Function} [onwarn]\n *        a function to call when the parser triggers a warning event.\n * @param {Function} [oninfo]\n *        a function to call when the parser triggers an info event.\n * @param {string} manifestString\n *        The downloaded manifest string\n * @param {Object[]} [customTagParsers]\n *        An array of custom tag parsers for the m3u8-parser instance\n * @param {Object[]} [customTagMappers]\n *        An array of custom tag mappers for the m3u8-parser instance\n * @param {boolean} [llhls]\n *        Whether to keep ll-hls features in the manifest after parsing.\n * @return {Object}\n *         The manifest object\n */\n\nconst parseManifest = ({\n  onwarn,\n  oninfo,\n  manifestString,\n  customTagParsers = [],\n  customTagMappers = [],\n  llhls\n}) => {\n  const parser = new Parser();\n  if (onwarn) {\n    parser.on('warn', onwarn);\n  }\n  if (oninfo) {\n    parser.on('info', oninfo);\n  }\n  customTagParsers.forEach(customParser => parser.addParser(customParser));\n  customTagMappers.forEach(mapper => parser.addTagMapper(mapper));\n  parser.push(manifestString);\n  parser.end();\n  const manifest = parser.manifest; // remove llhls features from the parsed manifest\n  // if we don't want llhls support.\n\n  if (!llhls) {\n    ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n      if (manifest.hasOwnProperty(k)) {\n        delete manifest[k];\n      }\n    });\n    if (manifest.segments) {\n      manifest.segments.forEach(function (segment) {\n        ['parts', 'preloadHints'].forEach(function (k) {\n          if (segment.hasOwnProperty(k)) {\n            delete segment[k];\n          }\n        });\n      });\n    }\n  }\n  if (!manifest.targetDuration) {\n    let targetDuration = 10;\n    if (manifest.segments && manifest.segments.length) {\n      targetDuration = manifest.segments.reduce((acc, s) => Math.max(acc, s.duration), 0);\n    }\n    if (onwarn) {\n      onwarn(`manifest has no targetDuration defaulting to ${targetDuration}`);\n    }\n    manifest.targetDuration = targetDuration;\n  }\n  const parts = getLastParts(manifest);\n  if (parts.length && !manifest.partTargetDuration) {\n    const partTargetDuration = parts.reduce((acc, p) => Math.max(acc, p.duration), 0);\n    if (onwarn) {\n      onwarn(`manifest has no partTargetDuration defaulting to ${partTargetDuration}`);\n      log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n    }\n    manifest.partTargetDuration = partTargetDuration;\n  }\n  return manifest;\n};\n/**\n * Loops through all supported media groups in main and calls the provided\n * callback for each group\n *\n * @param {Object} main\n *        The parsed main manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nconst forEachMediaGroup = (main, callback) => {\n  if (!main.mediaGroups) {\n    return;\n  }\n  ['AUDIO', 'SUBTITLES'].forEach(mediaType => {\n    if (!main.mediaGroups[mediaType]) {\n      return;\n    }\n    for (const groupKey in main.mediaGroups[mediaType]) {\n      for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n        const mediaProperties = main.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n * Adds properties and attributes to the playlist to keep consistent functionality for\n * playlists throughout VHS.\n *\n * @param {Object} config\n *        Arguments object\n * @param {Object} config.playlist\n *        The media playlist\n * @param {string} [config.uri]\n *        The uri to the media playlist (if media playlist is not from within a main\n *        playlist)\n * @param {string} id\n *        ID to use for the playlist\n */\n\nconst setupMediaPlaylist = ({\n  playlist,\n  uri,\n  id\n}) => {\n  playlist.id = id;\n  playlist.playlistErrors_ = 0;\n  if (uri) {\n    // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n    // playlists do not contain their own source URI, but one is needed for consistency in\n    // VHS.\n    playlist.uri = uri;\n  } // For HLS main playlists, even though certain attributes MUST be defined, the\n  // stream may still be played without them.\n  // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n  // manifest.\n  //\n  // To avoid undefined reference errors through the project, and make the code easier\n  // to write/read, add an empty attributes object for these cases.\n\n  playlist.attributes = playlist.attributes || {};\n};\n/**\n * Adds ID, resolvedUri, and attributes properties to each playlist of the main, where\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n * playlist references to the playlists array.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst setupMediaPlaylists = main => {\n  let i = main.playlists.length;\n  while (i--) {\n    const playlist = main.playlists[i];\n    setupMediaPlaylist({\n      playlist,\n      id: createPlaylistID(i, playlist.uri)\n    });\n    playlist.resolvedUri = resolveUrl(main.uri, playlist.uri);\n    main.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    main.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n    // the stream can be played without it. Although an attributes property may have been\n    // added to the playlist to prevent undefined references, issue a warning to fix the\n    // manifest.\n\n    if (!playlist.attributes.BANDWIDTH) {\n      log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n/**\n * Adds resolvedUri properties to each media group.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst resolveMediaGroupUris = main => {\n  forEachMediaGroup(main, properties => {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(main.uri, properties.uri);\n    }\n  });\n};\n/**\n * Creates a main playlist wrapper to insert a sole media playlist into.\n *\n * @param {Object} media\n *        Media playlist\n * @param {string} uri\n *        The media URI\n *\n * @return {Object}\n *         main playlist\n */\n\nconst mainForMedia = (media, uri) => {\n  const id = createPlaylistID(0, uri);\n  const main = {\n    mediaGroups: {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    },\n    uri: window$1.location.href,\n    resolvedUri: window$1.location.href,\n    playlists: [{\n      uri,\n      id,\n      resolvedUri: uri,\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      attributes: {}\n    }]\n  }; // set up ID reference\n\n  main.playlists[id] = main.playlists[0]; // URI reference added for backwards compatibility\n\n  main.playlists[uri] = main.playlists[0];\n  return main;\n};\n/**\n * Does an in-place update of the main manifest to add updated playlist URI references\n * as well as other properties needed by VHS that aren't included by the parser.\n *\n * @param {Object} main\n *        main manifest object\n * @param {string} uri\n *        The source URI\n */\n\nconst addPropertiesToMain = (main, uri) => {\n  main.uri = uri;\n  for (let i = 0; i < main.playlists.length; i++) {\n    if (!main.playlists[i].uri) {\n      // Set up phony URIs for the playlists since playlists are referenced by their URIs\n      // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n      // TODO: consider adding dummy URIs in mpd-parser\n      const phonyUri = `placeholder-uri-${i}`;\n      main.playlists[i].uri = phonyUri;\n    }\n  }\n  const audioOnlyMain = isAudioOnly(main);\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    const groupId = `placeholder-uri-${mediaType}-${groupKey}-${labelKey}`; // add a playlist array under properties\n\n    if (!properties.playlists || !properties.playlists.length) {\n      // If the manifest is audio only and this media group does not have a uri, check\n      // if the media group is located in the main list of playlists. If it is, don't add\n      // placeholder properties as it shouldn't be considered an alternate audio track.\n      if (audioOnlyMain && mediaType === 'AUDIO' && !properties.uri) {\n        for (let i = 0; i < main.playlists.length; i++) {\n          const p = main.playlists[i];\n          if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n            return;\n          }\n        }\n      }\n      properties.playlists = [_extends({}, properties)];\n    }\n    properties.playlists.forEach(function (p, i) {\n      const id = createPlaylistID(i, groupId);\n      if (p.uri) {\n        p.resolvedUri = p.resolvedUri || resolveUrl(main.uri, p.uri);\n      } else {\n        // DEPRECATED, this has been added to prevent a breaking change.\n        // previously we only ever had a single media group playlist, so\n        // we mark the first playlist uri without prepending the index as we used to\n        // ideally we would do all of the playlists the same way.\n        p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n        // the placeholder again\n\n        p.resolvedUri = p.uri;\n      }\n      p.id = p.id || id; // add an empty attributes object, all playlists are\n      // expected to have this.\n\n      p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n      main.playlists[p.id] = p;\n      main.playlists[p.uri] = p;\n    });\n  });\n  setupMediaPlaylists(main);\n  resolveMediaGroupUris(main);\n};\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\nconst {\n  EventTarget: EventTarget$1\n} = videojs;\nconst addLLHLSQueryDirectives = (uri, media) => {\n  if (media.endList || !media.serverControl) {\n    return uri;\n  }\n  const parameters = {};\n  if (media.serverControl.canBlockReload) {\n    const {\n      preloadSegment\n    } = media; // next msn is a zero based value, length is not.\n\n    let nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n    // that we are going to request a part of that preload segment.\n    // the logic below is used to determine that.\n\n    if (preloadSegment) {\n      const parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n      const nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n      // length of parts, then we know we had part preload hints\n      // and we need to add the _HLS_part= query\n\n      if (nextPart > -1 && nextPart !== parts.length - 1) {\n        // add existing parts to our preload hints\n        // eslint-disable-next-line\n        parameters._HLS_part = nextPart;\n      } // this if statement makes sure that we request the msn\n      // of the preload segment if:\n      // 1. the preload segment had parts (and was not yet a full segment)\n      //    but was added to our segments array\n      // 2. the preload segment had preload hints for parts that are not in\n      //    the manifest yet.\n      // in all other cases we want the segment after the preload segment\n      // which will be given by using media.segments.length because it is 1 based\n      // rather than 0 based.\n\n      if (nextPart > -1 || parts.length) {\n        nextMSN--;\n      }\n    } // add _HLS_msn= in front of any _HLS_part query\n    // eslint-disable-next-line\n\n    parameters._HLS_msn = nextMSN;\n  }\n  if (media.serverControl && media.serverControl.canSkipUntil) {\n    // add _HLS_skip= infront of all other queries.\n    // eslint-disable-next-line\n    parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n  }\n  if (Object.keys(parameters).length) {\n    const parsedUri = new window$1.URL(uri);\n    ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n      if (!parameters.hasOwnProperty(name)) {\n        return;\n      }\n      parsedUri.searchParams.set(name, parameters[name]);\n    });\n    uri = parsedUri.toString();\n  }\n  return uri;\n};\n/**\n * Returns a new segment object with properties and\n * the parts array merged.\n *\n * @param {Object} a the old segment\n * @param {Object} b the new segment\n *\n * @return {Object} the merged segment\n */\n\nconst updateSegment = (a, b) => {\n  if (!a) {\n    return b;\n  }\n  const result = merge(a, b); // if only the old segment has preload hints\n  // and the new one does not, remove preload hints.\n\n  if (a.preloadHints && !b.preloadHints) {\n    delete result.preloadHints;\n  } // if only the old segment has parts\n  // then the parts are no longer valid\n\n  if (a.parts && !b.parts) {\n    delete result.parts; // if both segments have parts\n    // copy part propeties from the old segment\n    // to the new one.\n  } else if (a.parts && b.parts) {\n    for (let i = 0; i < b.parts.length; i++) {\n      if (a.parts && a.parts[i]) {\n        result.parts[i] = merge(a.parts[i], b.parts[i]);\n      }\n    }\n  } // set skipped to false for segments that have\n  // have had information merged from the old segment.\n\n  if (!a.skipped && b.skipped) {\n    result.skipped = false;\n  } // set preload to false for segments that have\n  // had information added in the new segment.\n\n  if (a.preload && !b.preload) {\n    result.preload = false;\n  }\n  return result;\n};\n/**\n * Returns a new array of segments that is the result of merging\n * properties from an older list of segments onto an updated\n * list. No properties on the updated playlist will be ovewritten.\n *\n * @param {Array} original the outdated list of segments\n * @param {Array} update the updated list of segments\n * @param {number=} offset the index of the first update\n * segment in the original segment list. For non-live playlists,\n * this should always be zero and does not need to be\n * specified. For live playlists, it should be the difference\n * between the media sequence numbers in the original and updated\n * playlists.\n * @return {Array} a list of merged segment objects\n */\n\nconst updateSegments = (original, update, offset) => {\n  const oldSegments = original.slice();\n  const newSegments = update.slice();\n  offset = offset || 0;\n  const result = [];\n  let currentMap;\n  for (let newIndex = 0; newIndex < newSegments.length; newIndex++) {\n    const oldSegment = oldSegments[newIndex + offset];\n    const newSegment = newSegments[newIndex];\n    if (oldSegment) {\n      currentMap = oldSegment.map || currentMap;\n      result.push(updateSegment(oldSegment, newSegment));\n    } else {\n      // carry over map to new segment if it is missing\n      if (currentMap && !newSegment.map) {\n        newSegment.map = currentMap;\n      }\n      result.push(newSegment);\n    }\n  }\n  return result;\n};\nconst resolveSegmentUris = (segment, baseUri) => {\n  // preloadSegment will not have a uri at all\n  // as the segment isn't actually in the manifest yet, only parts\n  if (!segment.resolvedUri && segment.uri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n  if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n    segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n  }\n  if (segment.parts && segment.parts.length) {\n    segment.parts.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n  if (segment.preloadHints && segment.preloadHints.length) {\n    segment.preloadHints.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n};\nconst getAllSegments = function (media) {\n  const segments = media.segments || [];\n  const preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n  // a usable segment, only include a preloadSegment that has\n  // parts.\n\n  if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n    // if preloadHints has a MAP that means that the\n    // init segment is going to change. We cannot use any of the parts\n    // from this preload segment.\n    if (preloadSegment.preloadHints) {\n      for (let i = 0; i < preloadSegment.preloadHints.length; i++) {\n        if (preloadSegment.preloadHints[i].type === 'MAP') {\n          return segments;\n        }\n      }\n    } // set the duration for our preload segment to target duration.\n\n    preloadSegment.duration = media.targetDuration;\n    preloadSegment.preload = true;\n    segments.push(preloadSegment);\n  }\n  return segments;\n}; // consider the playlist unchanged if the playlist object is the same or\n// the number of segments is equal, the media sequence number is unchanged,\n// and this playlist hasn't become the end of the playlist\n\nconst isPlaylistUnchanged = (a, b) => a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n/**\n  * Returns a new main playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original main playlist, null is returned.\n  *\n  * @param {Object} main a parsed main M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * main playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\nconst updateMain$1 = (main, newMedia, unchangedCheck = isPlaylistUnchanged) => {\n  const result = merge(main, {});\n  const oldMedia = result.playlists[newMedia.id];\n  if (!oldMedia) {\n    return null;\n  }\n  if (unchangedCheck(oldMedia, newMedia)) {\n    return null;\n  }\n  newMedia.segments = getAllSegments(newMedia);\n  const mergedPlaylist = merge(oldMedia, newMedia); // always use the new media's preload segment\n\n  if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n    delete mergedPlaylist.preloadSegment;\n  } // if the update could overlap existing segment information, merge the two segment lists\n\n  if (oldMedia.segments) {\n    if (newMedia.skip) {\n      newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n      // old properties into the new segments\n\n      for (let i = 0; i < newMedia.skip.skippedSegments; i++) {\n        newMedia.segments.unshift({\n          skipped: true\n        });\n      }\n    }\n    mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n  mergedPlaylist.segments.forEach(segment => {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (let i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].id === newMedia.id) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (!properties.playlists) {\n      return;\n    }\n    for (let i = 0; i < properties.playlists.length; i++) {\n      if (newMedia.id === properties.playlists[i].id) {\n        properties.playlists[i] = mergedPlaylist;\n      }\n    }\n  });\n  return result;\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\nconst refreshDelay = (media, update) => {\n  const segments = media.segments || [];\n  const lastSegment = segments[segments.length - 1];\n  const lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n  const lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n  if (update && lastDuration) {\n    return lastDuration * 1000;\n  } // if the playlist is unchanged since the last reload or last segment duration\n  // cannot be determined, try again after half the target duration\n\n  return (media.partTargetDuration || media.targetDuration || 10) * 500;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {string|Object} src url or object of manifest\n * @param {boolean} withCredentials the withCredentials xhr option\n * @class\n */\n\nclass PlaylistLoader extends EventTarget$1 {\n  constructor(src, vhs, options = {}) {\n    super();\n    if (!src) {\n      throw new Error('A non-empty playlist URL or object is required');\n    }\n    this.logger_ = logger('PlaylistLoader');\n    const {\n      withCredentials = false\n    } = options;\n    this.src = src;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    const vhsOptions = vhs.options_;\n    this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n    this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n    this.llhls = vhsOptions && vhsOptions.llhls; // initialize the loader state\n\n    this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    this.handleMediaupdatetimeout_ = this.handleMediaupdatetimeout_.bind(this);\n    this.on('mediaupdatetimeout', this.handleMediaupdatetimeout_);\n  }\n  handleMediaupdatetimeout_() {\n    if (this.state !== 'HAVE_METADATA') {\n      // only refresh the media playlist if no other activity is going on\n      return;\n    }\n    const media = this.media();\n    let uri = resolveUrl(this.main.uri, media.uri);\n    if (this.llhls) {\n      uri = addLLHLSQueryDirectives(uri, media);\n    }\n    this.state = 'HAVE_CURRENT_METADATA';\n    this.request = this.vhs_.xhr({\n      uri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        return this.playlistRequestError(this.request, this.media(), 'HAVE_METADATA');\n      }\n      this.haveMetadata({\n        playlistString: this.request.responseText,\n        url: this.media().uri,\n        id: this.media().id\n      });\n    });\n  }\n  playlistRequestError(xhr, playlist, startingState) {\n    const {\n      uri,\n      id\n    } = playlist; // any in-flight request is now finished\n\n    this.request = null;\n    if (startingState) {\n      this.state = startingState;\n    }\n    this.error = {\n      playlist: this.main.playlists[id],\n      status: xhr.status,\n      message: `HLS playlist request error at URL: ${uri}.`,\n      responseText: xhr.responseText,\n      code: xhr.status >= 500 ? 4 : 2\n    };\n    this.trigger('error');\n  }\n  parseManifest_({\n    url,\n    manifestString\n  }) {\n    return parseManifest({\n      onwarn: ({\n        message\n      }) => this.logger_(`m3u8-parser warn for ${url}: ${message}`),\n      oninfo: ({\n        message\n      }) => this.logger_(`m3u8-parser info for ${url}: ${message}`),\n      manifestString,\n      customTagParsers: this.customTagParsers,\n      customTagMappers: this.customTagMappers,\n      llhls: this.llhls\n    });\n  }\n  /**\n   * Update the playlist loader's state in response to a new or updated playlist.\n   *\n   * @param {string} [playlistString]\n   *        Playlist string (if playlistObject is not provided)\n   * @param {Object} [playlistObject]\n   *        Playlist object (if playlistString is not provided)\n   * @param {string} url\n   *        URL of playlist\n   * @param {string} id\n   *        ID to use for playlist\n   */\n\n  haveMetadata({\n    playlistString,\n    playlistObject,\n    url,\n    id\n  }) {\n    // any in-flight request is now finished\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n    const playlist = playlistObject || this.parseManifest_({\n      url,\n      manifestString: playlistString\n    });\n    playlist.lastRequest = Date.now();\n    setupMediaPlaylist({\n      playlist,\n      uri: url,\n      id\n    }); // merge this playlist into the main manifest\n\n    const update = updateMain$1(this.main, playlist);\n    this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n    this.pendingMedia_ = null;\n    if (update) {\n      this.main = update;\n      this.media_ = this.main.playlists[id];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n    this.trigger('loadedplaylist');\n  }\n  /**\n    * Abort any outstanding work and clean up.\n    */\n\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    this.off();\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  /**\n    * When called without any arguments, returns the currently\n    * active media playlist. When called with a single argument,\n    * triggers the playlist loader to asynchronously switch to the\n    * specified media playlist. Calling this method while the\n    * loader is in the HAVE_NOTHING causes an error to be emitted\n    * but otherwise has no effect.\n    *\n    * @param {Object=} playlist the parsed media playlist\n    * object to switch to\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n    *\n    * @return {Playlist} the current loaded media\n    */\n\n  media(playlist, shouldDelay) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    } // find the playlist object if the target playlist has been\n    // specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.main.playlists[playlist];\n    }\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    if (shouldDelay) {\n      const delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n      this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n      return;\n    }\n    const startingState = this.state;\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id;\n    const mainPlaylistRef = this.main.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n    if (mainPlaylistRef && mainPlaylistRef.endList ||\n    // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n    // media playlist or, for the case of demuxed audio, a resolved audio media group)\n    playlist.endList && playlist.segments.length) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        if (startingState === 'HAVE_MAIN_MANIFEST') {\n          // The initial playlist was a main manifest, and the first media selected was\n          // also provided (in the form of a resolved playlist object) as part of the\n          // source object (rather than just a URL). Therefore, since the media playlist\n          // doesn't need to be requested, loadedmetadata won't trigger as part of the\n          // normal flow, and needs an explicit trigger here.\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      }\n      return;\n    } // We update/set the timeout here so that live playlists\n    // that are not a media change will \"start\" the loader as expected.\n    // We expect that this function will start the media update timeout\n    // cycle again. This also prevents a playlist switch failure from\n    // causing us to stall during live.\n\n    this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    }\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n    if (this.request) {\n      if (playlist.resolvedUri === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    } // request the new playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.pendingMedia_ = playlist;\n    this.request = this.vhs_.xhr({\n      uri: playlist.resolvedUri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      playlist.lastRequest = Date.now();\n      playlist.resolvedUri = resolveManifestRedirect(playlist.resolvedUri, req);\n      if (error) {\n        return this.playlistRequestError(this.request, playlist, startingState);\n      }\n      this.haveMetadata({\n        playlistString: req.responseText,\n        url: playlist.uri,\n        id: playlist.id\n      }); // fire loadedmetadata the first time a media playlist is loaded\n\n      if (startingState === 'HAVE_MAIN_MANIFEST') {\n        this.trigger('loadedmetadata');\n      } else {\n        this.trigger('mediachange');\n      }\n    });\n  }\n  /**\n   * pause loading of the playlist\n   */\n\n  pause() {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    this.stopRequest();\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    } // Need to restore state now that no activity is happening\n\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MAIN_MANIFEST or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MAIN_MANIFEST';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  load(shouldDelay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    const media = this.media();\n    if (shouldDelay) {\n      const delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => {\n        this.mediaUpdateTimeout = null;\n        this.load();\n      }, delay);\n      return;\n    }\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  updateMediaUpdateTimeout_(delay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    } // we only have use mediaupdatetimeout for live playlists.\n\n    if (!this.media() || this.media().endList) {\n      return;\n    }\n    this.mediaUpdateTimeout = window$1.setTimeout(() => {\n      this.mediaUpdateTimeout = null;\n      this.trigger('mediaupdatetimeout');\n      this.updateMediaUpdateTimeout_(delay);\n    }, delay);\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  start() {\n    this.started = true;\n    if (typeof this.src === 'object') {\n      // in the case of an entirely constructed manifest object (meaning there's no actual\n      // manifest on a server), default the uri to the page's href\n      if (!this.src.uri) {\n        this.src.uri = window$1.location.href;\n      } // resolvedUri is added on internally after the initial request. Since there's no\n      // request for pre-resolved manifests, add on resolvedUri here.\n\n      this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n      // request can be skipped (since the top level of the manifest, at a minimum, is\n      // already available as a parsed manifest object). However, if the manifest object\n      // represents a main playlist, some media playlists may need to be resolved before\n      // the starting segment list is available. Therefore, go directly to setup of the\n      // initial playlist, and let the normal flow continue from there.\n      //\n      // Note that the call to setup is asynchronous, as other sections of VHS may assume\n      // that the first request is asynchronous.\n\n      setTimeout(() => {\n        this.setupInitialPlaylist(this.src);\n      }, 0);\n      return;\n    } // request the specified URL\n\n    this.request = this.vhs_.xhr({\n      uri: this.src,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      } // clear the loader's request reference\n\n      this.request = null;\n      if (error) {\n        this.error = {\n          status: req.status,\n          message: `HLS playlist request error at URL: ${this.src}.`,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return this.trigger('error');\n      }\n      this.src = resolveManifestRedirect(this.src, req);\n      const manifest = this.parseManifest_({\n        manifestString: req.responseText,\n        url: this.src\n      });\n      this.setupInitialPlaylist(manifest);\n    });\n  }\n  srcUri() {\n    return typeof this.src === 'string' ? this.src : this.src.uri;\n  }\n  /**\n   * Given a manifest object that's either a main or media playlist, trigger the proper\n   * events and set the state of the playlist loader.\n   *\n   * If the manifest object represents a main playlist, `loadedplaylist` will be\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\n   * will default to the first one in the playlists array.\n   *\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n   *\n   * In the case of a media playlist, a main playlist object wrapper with one playlist\n   * will be created so that all logic can handle playlists in the same fashion (as an\n   * assumed manifest object schema).\n   *\n   * @param {Object} manifest\n   *        The parsed manifest object\n   */\n\n  setupInitialPlaylist(manifest) {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (manifest.playlists) {\n      this.main = manifest;\n      addPropertiesToMain(this.main, this.srcUri()); // If the initial main playlist has playlists wtih segments already resolved,\n      // then resolve URIs in advance, as they are usually done after a playlist request,\n      // which may not happen if the playlist is resolved.\n\n      manifest.playlists.forEach(playlist => {\n        playlist.segments = getAllSegments(playlist);\n        playlist.segments.forEach(segment => {\n          resolveSegmentUris(segment, playlist.resolvedUri);\n        });\n      });\n      this.trigger('loadedplaylist');\n      if (!this.request) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.main.playlists[0]);\n      }\n      return;\n    } // In order to support media playlists passed in as vhs-json, the case where the uri\n    // is not provided as part of the manifest should be considered, and an appropriate\n    // default used.\n\n    const uri = this.srcUri() || window$1.location.href;\n    this.main = mainForMedia(manifest, uri);\n    this.haveMetadata({\n      playlistObject: manifest,\n      url: uri,\n      id: this.main.playlists[0].id\n    });\n    this.trigger('loadedmetadata');\n  }\n}\n\n/**\n * @file xhr.js\n */\nconst {\n  xhr: videojsXHR\n} = videojs;\nconst callbackWrapper = function (request, error, response, callback) {\n  const reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n  if (!error && reqResponse) {\n    request.responseTime = Date.now();\n    request.roundTripTime = request.responseTime - request.requestTime;\n    request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n    if (!request.bandwidth) {\n      request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n    }\n  }\n  if (response.headers) {\n    request.responseHeaders = response.headers;\n  } // videojs.xhr now uses a specific code on the error\n  // object to signal that a request has timed out instead\n  // of setting a boolean on the request object\n\n  if (error && error.code === 'ETIMEDOUT') {\n    request.timedout = true;\n  } // videojs.xhr no longer considers status codes outside of 200 and 0\n  // (for file uris) to be errors, but the old XHR did, so emulate that\n  // behavior. Status 206 may be used in response to byterange requests.\n\n  if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n    error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n  }\n  callback(error, request);\n};\nconst xhrFactory = function () {\n  const xhr = function XhrFunction(options, callback) {\n    // Add a default timeout\n    options = merge({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    const beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest;\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      const newOptions = beforeRequest(options);\n      if (newOptions) {\n        options = newOptions;\n      }\n    } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n    // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n    const xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr;\n    const request = xhrMethod(options, function (error, response) {\n      return callbackWrapper(request, error, response, callback);\n    });\n    const originalAbort = request.abort;\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n  xhr.original = true;\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nconst byterangeStr = function (byterange) {\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let byterangeEnd;\n  const byterangeStart = byterange.offset;\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    byterangeEnd = window$1.BigInt(byterange.offset) + window$1.BigInt(byterange.length) - window$1.BigInt(1);\n  } else {\n    byterangeEnd = byterange.offset + byterange.length - 1;\n  }\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\nconst segmentXhrHeaders = function (segment) {\n  const headers = {};\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {number} i the iterator on the range to convert\n * @return {string} the range in string format\n */\n\nconst textRange = function (range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {number} e The number\n * @param {number} i the iterator\n * @return {string} the hex formatted number as a string\n */\n\nconst formatHexString = function (e, i) {\n  const value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nconst formatAsciiString = function (e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\nconst createTransferableMessage = function (message) {\n  const transferable = {};\n  Object.keys(message).forEach(key => {\n    const value = message[key];\n    if (isArrayBufferView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n *\n * @param {Object} initSegment\n *        the init segment object.\n *\n * @return {string} the generated init segment id\n */\n\nconst initSegmentId = function (initSegment) {\n  const byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n *\n * @param {Object} key the encryption key\n * @return {string} the unique id for the media segment key.\n */\n\nconst segmentKeyId = function (key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n *\n * @param {Array|TypedArray} data\n *        data to dump to a string\n *\n * @return {string} the data as a hex string.\n */\n\nconst hexDump = data => {\n  const bytes = Array.prototype.slice.call(data);\n  const step = 16;\n  let result = '';\n  let hex;\n  let ascii;\n  for (let j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n  return result;\n};\nconst tagDump = ({\n  bytes\n}) => hexDump(bytes);\nconst textRanges = ranges => {\n  let result = '';\n  let i;\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n// TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nconst SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nconst playerTimeToProgramTime = (playerTime, segment) => {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n  const transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  const transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  const startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  const offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\nconst originalSegmentVideoDuration = videoTimingInfo => {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {string} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForProgramTime = (programTime, playlist) => {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  let dateTimeObject;\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segment = playlist.segments[0];\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n  for (let i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    const nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  const lastSegmentStart = lastSegment.dateTimeObject;\n  const lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  const lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForPlayerTime = (time, playlist) => {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segmentEnd = 0;\n  let segment;\n  for (let i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {string} programTime The programTime as an ISO-8601 string\n * @return {number} offset\n */\n\nconst getOffsetFromTimestamp = (comparisonTimeStamp, programTime) => {\n  let segmentDateTime;\n  let programDateTime;\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n  const segmentTimeEpoch = segmentDateTime.getTime();\n  const programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\nconst verifyProgramDateTimeTags = playlist => {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n  for (let i = 0; i < playlist.segments.length; i++) {\n    const segment = playlist.segments[i];\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @return {string} err.message A detailed error message\n * @return {Object} programTime\n * @return {number} programTime.mediaSeconds The streamTime in seconds\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\nconst getProgramTime = ({\n  playlist,\n  time = undefined,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n  const matchedSegment = findSegmentForPlayerTime(time, playlist);\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n  const programTimeObject = {\n    mediaSeconds: time\n  };\n  const programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @return {string} err.message A detailed error message\n * @return {number} newTime The exact time that was seeked to in seconds\n */\n\nconst seekToProgramTime = ({\n  programTime,\n  playlist,\n  retryCount = 2,\n  seekTo,\n  pauseAfterSeek = true,\n  tech,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n  const matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: `${programTime} was not found in the stream`\n    });\n  }\n  const segment = matchedSegment.segment;\n  const mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: `${programTime} is not buffered yet. Try again`\n      });\n    }\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', () => {\n      seekToProgramTime({\n        programTime,\n        playlist,\n        retryCount: retryCount - 1,\n        seekTo,\n        pauseAfterSeek,\n        tech,\n        callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n  const seekToTime = segment.start + mediaOffset;\n  const seekedCallback = () => {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n  seekTo(seekToTime);\n};\n\n// which will only happen if the request is complete.\n\nconst callbackOnCompleted = (request, cb) => {\n  if (request.readyState === 4) {\n    return cb();\n  }\n  return;\n};\nconst containerRequest = (uri, xhr, cb) => {\n  let bytes = [];\n  let id3Offset;\n  let finished = false;\n  const endRequestAndCallback = function (err, req, type, _bytes) {\n    req.abort();\n    finished = true;\n    return cb(err, req, type, _bytes);\n  };\n  const progressListener = function (error, request) {\n    if (finished) {\n      return;\n    }\n    if (error) {\n      return endRequestAndCallback(error, request, '', bytes);\n    } // grap the new part of content that was just downloaded\n\n    const newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n    bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n    id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n    // or we need at least two bytes after an id3Offset\n\n    if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    const type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n    // to see the second sync byte, wait until we have enough data\n    // before declaring it ts\n\n    if (type === 'ts' && bytes.length < 188) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    } // this may be an unsynced ts segment\n    // wait for 376 bytes before detecting no container\n\n    if (!type && bytes.length < 376) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    return endRequestAndCallback(null, request, type, bytes);\n  };\n  const options = {\n    uri,\n    beforeSend(request) {\n      // this forces the browser to pass the bytes to us unprocessed\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n      request.addEventListener('progress', function ({\n        total,\n        loaded\n      }) {\n        return callbackWrapper(request, null, {\n          statusCode: request.status\n        }, progressListener);\n      });\n    }\n  };\n  const request = xhr(options, function (error, response) {\n    return callbackWrapper(request, error, response, progressListener);\n  });\n  return request;\n};\nconst {\n  EventTarget\n} = videojs;\nconst dashPlaylistUnchanged = function (a, b) {\n  if (!isPlaylistUnchanged(a, b)) {\n    return false;\n  } // for dash the above check will often return true in scenarios where\n  // the playlist actually has changed because mediaSequence isn't a\n  // dash thing, and we often set it to 1. So if the playlists have the same amount\n  // of segments we return true.\n  // So for dash we need to make sure that the underlying segments are different.\n  // if sidx changed then the playlists are different.\n\n  if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n    return false;\n  } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n    return false;\n  } // one or the other does not have segments\n  // there was a change.\n\n  if (a.segments && !b.segments || !a.segments && b.segments) {\n    return false;\n  } // neither has segments nothing changed\n\n  if (!a.segments && !b.segments) {\n    return true;\n  } // check segments themselves\n\n  for (let i = 0; i < a.segments.length; i++) {\n    const aSegment = a.segments[i];\n    const bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n    if (aSegment.uri !== bSegment.uri) {\n      return false;\n    } // neither segment has a byterange, there will be no byterange change.\n\n    if (!aSegment.byterange && !bSegment.byterange) {\n      continue;\n    }\n    const aByterange = aSegment.byterange;\n    const bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n    if (aByterange && !bByterange || !aByterange && bByterange) {\n      return false;\n    } // if both segments have byterange with different offsets, there was a change.\n\n    if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n      return false;\n    }\n  } // if everything was the same with segments, this is the same playlist.\n\n  return true;\n};\n/**\n * Parses the main XML string and updates playlist URI references.\n *\n * @param {Object} config\n *        Object of arguments\n * @param {string} config.mainXml\n *        The mpd XML\n * @param {string} config.srcUrl\n *        The mpd URL\n * @param {Date} config.clientOffset\n *         A time difference between server and client\n * @param {Object} config.sidxMapping\n *        SIDX mappings for moof/mdat URIs and byte ranges\n * @return {Object}\n *         The parsed mpd manifest object\n */\n\nconst parseMainXml = ({\n  mainXml,\n  srcUrl,\n  clientOffset,\n  sidxMapping,\n  previousManifest\n}) => {\n  const manifest = parse(mainXml, {\n    manifestUri: srcUrl,\n    clientOffset,\n    sidxMapping,\n    previousManifest\n  });\n  addPropertiesToMain(manifest, srcUrl);\n  return manifest;\n};\n/**\n * Returns a new main manifest that is the result of merging an updated main manifest\n * into the original version.\n *\n * @param {Object} oldMain\n *        The old parsed mpd object\n * @param {Object} newMain\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original main manifest with the updated media\n *         playlists merged in\n */\n\nconst updateMain = (oldMain, newMain, sidxMapping) => {\n  let noChanges = true;\n  let update = merge(oldMain, {\n    // These are top level properties that can be updated\n    duration: newMain.duration,\n    minimumUpdatePeriod: newMain.minimumUpdatePeriod,\n    timelineStarts: newMain.timelineStarts\n  }); // First update the playlists in playlist list\n\n  for (let i = 0; i < newMain.playlists.length; i++) {\n    const playlist = newMain.playlists[i];\n    if (playlist.sidx) {\n      const sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n      if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n        addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n      }\n    }\n    const playlistUpdate = updateMain$1(update, playlist, dashPlaylistUnchanged);\n    if (playlistUpdate) {\n      update = playlistUpdate;\n      noChanges = false;\n    }\n  } // Then update media group playlists\n\n  forEachMediaGroup(newMain, (properties, type, group, label) => {\n    if (properties.playlists && properties.playlists.length) {\n      const id = properties.playlists[0].id;\n      const playlistUpdate = updateMain$1(update, properties.playlists[0], dashPlaylistUnchanged);\n      if (playlistUpdate) {\n        update = playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  });\n  if (newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n    noChanges = false;\n  }\n  if (noChanges) {\n    return null;\n  }\n  return update;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\nconst equivalentSidx = (a, b) => {\n  const neitherMap = Boolean(!a.map && !b.map);\n  const equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\nconst compareSidxEntry = (playlists, oldSidxMapping) => {\n  const newSidxMapping = {};\n  for (const id in playlists) {\n    const playlist = playlists[id];\n    const currentSidxInfo = playlist.sidx;\n    if (currentSidxInfo) {\n      const key = generateSidxKey(currentSidxInfo);\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n      const savedSidxInfo = oldSidxMapping[key].sidxInfo;\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} main the parsed mpd XML returned via mpd-parser\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\nconst filterChangedSidxMappings = (main, oldSidxMapping) => {\n  const videoSidx = compareSidxEntry(main.playlists, oldSidxMapping);\n  let mediaGroupSidx = videoSidx;\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (properties.playlists && properties.playlists.length) {\n      const playlists = properties.playlists;\n      mediaGroupSidx = merge(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n};\nclass DashPlaylistLoader extends EventTarget {\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  constructor(srcUrlOrPlaylist, vhs, options = {}, mainPlaylistLoader) {\n    super();\n    this.mainPlaylistLoader_ = mainPlaylistLoader || this;\n    if (!mainPlaylistLoader) {\n      this.isMain_ = true;\n    }\n    const {\n      withCredentials = false\n    } = options;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or object is required');\n    } // event naming?\n\n    this.on('minimumUpdatePeriod', () => {\n      this.refreshXml_();\n    }); // live playlist staleness timeout\n\n    this.on('mediaupdatetimeout', () => {\n      this.refreshMedia_(this.media().id);\n    });\n    this.state = 'HAVE_NOTHING';\n    this.loadedPlaylists_ = {};\n    this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n    // The mainPlaylistLoader will be created with a string\n\n    if (this.isMain_) {\n      this.mainPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      this.mainPlaylistLoader_.sidxMapping_ = {};\n    } else {\n      this.childPlaylist_ = srcUrlOrPlaylist;\n    }\n  }\n  requestErrored_(err, request, startingState) {\n    // disposed\n    if (!this.request) {\n      return true;\n    } // pending request is cleared\n\n    this.request = null;\n    if (err) {\n      // use the provided error object or create one\n      // based on the request/response\n      this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n        status: request.status,\n        message: 'DASH request error at URL: ' + request.uri,\n        response: request.response,\n        // MEDIA_ERR_NETWORK\n        code: 2\n      };\n      if (startingState) {\n        this.state = startingState;\n      }\n      this.trigger('error');\n      return true;\n    }\n  }\n  /**\n   * Verify that the container of the sidx segment can be parsed\n   * and if it can, get and parse that segment.\n   */\n\n  addSidxSegments_(playlist, startingState, cb) {\n    const sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n    if (!playlist.sidx || !sidxKey || this.mainPlaylistLoader_.sidxMapping_[sidxKey]) {\n      // keep this function async\n      this.mediaRequest_ = window$1.setTimeout(() => cb(false), 0);\n      return;\n    } // resolve the segment URL relative to the playlist\n\n    const uri = resolveManifestRedirect(playlist.sidx.resolvedUri);\n    const fin = (err, request) => {\n      if (this.requestErrored_(err, request, startingState)) {\n        return;\n      }\n      const sidxMapping = this.mainPlaylistLoader_.sidxMapping_;\n      let sidx;\n      try {\n        sidx = parseSidx(toUint8(request.response).subarray(8));\n      } catch (e) {\n        // sidx parsing failed.\n        this.requestErrored_(e, request, startingState);\n        return;\n      }\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx,\n        sidx\n      };\n      addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n      return cb(true);\n    };\n    this.request = containerRequest(uri, this.vhs_.xhr, (err, request, container, bytes) => {\n      if (err) {\n        return fin(err, request);\n      }\n      if (!container || container !== 'mp4') {\n        return fin({\n          status: request.status,\n          message: `Unsupported ${container || 'unknown'} container type for sidx segment at URL: ${uri}`,\n          // response is just bytes in this case\n          // but we really don't want to return that.\n          response: '',\n          playlist,\n          internal: true,\n          playlistExclusionDuration: Infinity,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        }, request);\n      } // if we already downloaded the sidx bytes in the container request, use them\n\n      const {\n        offset,\n        length\n      } = playlist.sidx.byterange;\n      if (bytes.length >= length + offset) {\n        return fin(err, {\n          response: bytes.subarray(offset, offset + length),\n          status: request.status,\n          uri: request.uri\n        });\n      } // otherwise request sidx bytes\n\n      this.request = this.vhs_.xhr({\n        uri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders({\n          byterange: playlist.sidx.byterange\n        })\n      }, fin);\n    });\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    this.loadedPlaylists_ = {};\n    window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n    window$1.clearTimeout(this.mediaRequest_);\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    this.mediaRequest_ = null;\n    this.minimumUpdatePeriodTimeout_ = null;\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.off();\n  }\n  hasPendingRequest() {\n    return this.request || this.mediaRequest_;\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  media(playlist) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n    const startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.mainPlaylistLoader_.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.mainPlaylistLoader_.main.playlists[playlist];\n    }\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n    if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n      return;\n    } // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    } // switching from an already loaded playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.addSidxSegments_(playlist, startingState, sidxChanged => {\n      // everything is ready just continue to haveMetadata\n      this.haveMetadata({\n        startingState,\n        playlist\n      });\n    });\n  }\n  haveMetadata({\n    startingState,\n    playlist\n  }) {\n    this.state = 'HAVE_METADATA';\n    this.loadedPlaylists_[playlist.id] = playlist;\n    this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n    this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n    // to resolve setup of media groups\n\n    if (startingState === 'HAVE_MAIN_MANIFEST') {\n      this.trigger('loadedmetadata');\n    } else {\n      // trigger media change if the active media has been updated\n      this.trigger('mediachange');\n    }\n  }\n  pause() {\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    if (this.isMain_) {\n      window$1.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_);\n      this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n    }\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  }\n  load(isFinalRendition) {\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    const media = this.media();\n    if (isFinalRendition) {\n      const delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => this.load(), delay);\n      return;\n    } // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      // Check to see if this is the main loader and the MUP was cleared (this happens\n      // when the loader was paused). `media` should be set at this point since one is always\n      // set during `start()`.\n      if (this.isMain_ && !this.minimumUpdatePeriodTimeout_) {\n        // Trigger minimumUpdatePeriod to refresh the main manifest\n        this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  start() {\n    this.started = true; // We don't need to request the main manifest again\n    // Call this asynchronously to match the xhr request behavior below\n\n    if (!this.isMain_) {\n      this.mediaRequest_ = window$1.setTimeout(() => this.haveMain_(), 0);\n      return;\n    }\n    this.requestMain_((req, mainChanged) => {\n      this.haveMain_();\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.mainPlaylistLoader_.main.playlists[0]);\n      }\n    });\n  }\n  requestMain_(cb) {\n    this.request = this.vhs_.xhr({\n      uri: this.mainPlaylistLoader_.srcUrl,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      if (this.requestErrored_(error, req)) {\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return;\n      }\n      const mainChanged = req.responseText !== this.mainPlaylistLoader_.mainXml_;\n      this.mainPlaylistLoader_.mainXml_ = req.responseText;\n      if (req.responseHeaders && req.responseHeaders.date) {\n        this.mainLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        this.mainLoaded_ = Date.now();\n      }\n      this.mainPlaylistLoader_.srcUrl = resolveManifestRedirect(this.mainPlaylistLoader_.srcUrl, req);\n      if (mainChanged) {\n        this.handleMain_();\n        this.syncClientServerClock_(() => {\n          return cb(req, mainChanged);\n        });\n        return;\n      }\n      return cb(req, mainChanged);\n    });\n  }\n  /**\n   * Parses the main xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n\n  syncClientServerClock_(done) {\n    const utcTiming = parseUTCTiming(this.mainPlaylistLoader_.mainXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n\n    if (utcTiming === null) {\n      this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n      return done();\n    }\n    if (utcTiming.method === 'DIRECT') {\n      this.mainPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n    this.request = this.vhs_.xhr({\n      uri: resolveUrl(this.mainPlaylistLoader_.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n        this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n        return done();\n      }\n      let serverTime;\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = this.mainLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n      this.mainPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n      done();\n    });\n  }\n  haveMain_() {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (this.isMain_) {\n      // We have the main playlist at this point, so\n      // trigger this to allow PlaylistController\n      // to make an initial playlist selection\n      this.trigger('loadedplaylist');\n    } else if (!this.media_) {\n      // no media playlist was specifically selected so select\n      // the one the child playlist loader was created with\n      this.media(this.childPlaylist_);\n    }\n  }\n  handleMain_() {\n    // clear media request\n    this.mediaRequest_ = null;\n    const oldMain = this.mainPlaylistLoader_.main;\n    let newMain = parseMainXml({\n      mainXml: this.mainPlaylistLoader_.mainXml_,\n      srcUrl: this.mainPlaylistLoader_.srcUrl,\n      clientOffset: this.mainPlaylistLoader_.clientOffset_,\n      sidxMapping: this.mainPlaylistLoader_.sidxMapping_,\n      previousManifest: oldMain\n    }); // if we have an old main to compare the new main against\n\n    if (oldMain) {\n      newMain = updateMain(oldMain, newMain, this.mainPlaylistLoader_.sidxMapping_);\n    } // only update main if we have a new main\n\n    this.mainPlaylistLoader_.main = newMain ? newMain : oldMain;\n    const location = this.mainPlaylistLoader_.main.locations && this.mainPlaylistLoader_.main.locations[0];\n    if (location && location !== this.mainPlaylistLoader_.srcUrl) {\n      this.mainPlaylistLoader_.srcUrl = location;\n    }\n    if (!oldMain || newMain && newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n      this.updateMinimumUpdatePeriodTimeout_();\n    }\n    return Boolean(newMain);\n  }\n  updateMinimumUpdatePeriodTimeout_() {\n    const mpl = this.mainPlaylistLoader_; // cancel any pending creation of mup on media\n    // a new one will be added if needed.\n\n    if (mpl.createMupOnMedia_) {\n      mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n      mpl.createMupOnMedia_ = null;\n    } // clear any pending timeouts\n\n    if (mpl.minimumUpdatePeriodTimeout_) {\n      window$1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n      mpl.minimumUpdatePeriodTimeout_ = null;\n    }\n    let mup = mpl.main && mpl.main.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n    // MPD has no future validity, so a new one will need to be acquired when new\n    // media segments are to be made available. Thus, we use the target duration\n    // in this case\n\n    if (mup === 0) {\n      if (mpl.media()) {\n        mup = mpl.media().targetDuration * 1000;\n      } else {\n        mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n        mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n      }\n    } // if minimumUpdatePeriod is invalid or <= zero, which\n    // can happen when a live video becomes VOD. skip timeout\n    // creation.\n\n    if (typeof mup !== 'number' || mup <= 0) {\n      if (mup < 0) {\n        this.logger_(`found invalid minimumUpdatePeriod of ${mup}, not setting a timeout`);\n      }\n      return;\n    }\n    this.createMUPTimeout_(mup);\n  }\n  createMUPTimeout_(mup) {\n    const mpl = this.mainPlaylistLoader_;\n    mpl.minimumUpdatePeriodTimeout_ = window$1.setTimeout(() => {\n      mpl.minimumUpdatePeriodTimeout_ = null;\n      mpl.trigger('minimumUpdatePeriod');\n      mpl.createMUPTimeout_(mup);\n    }, mup);\n  }\n  /**\n   * Sends request to refresh the main xml and updates the parsed main manifest\n   */\n\n  refreshXml_() {\n    this.requestMain_((req, mainChanged) => {\n      if (!mainChanged) {\n        return;\n      }\n      if (this.media_) {\n        this.media_ = this.mainPlaylistLoader_.main.playlists[this.media_.id];\n      } // This will filter out updated sidx info from the mapping\n\n      this.mainPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.sidxMapping_);\n      this.addSidxSegments_(this.media(), this.state, sidxChanged => {\n        // TODO: do we need to reload the current playlist?\n        this.refreshMedia_(this.media().id);\n      });\n    });\n  }\n  /**\n   * Refreshes the media playlist by re-parsing the main xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the main loader.\n   */\n\n  refreshMedia_(mediaID) {\n    if (!mediaID) {\n      throw new Error('refreshMedia_ must take a media id');\n    } // for main we have to reparse the main xml\n    // to re-create segments based on current timing values\n    // which may change media. We only skip updating the main manifest\n    // if this is the first time this.media_ is being set.\n    // as main was just parsed in that case.\n\n    if (this.media_ && this.isMain_) {\n      this.handleMain_();\n    }\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n    if (mediaChanged) {\n      this.media_ = playlists[mediaID];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    if (!this.mediaUpdateTimeout) {\n      const createMediaUpdateTimeout = () => {\n        if (this.media().endList) {\n          return;\n        }\n        this.mediaUpdateTimeout = window$1.setTimeout(() => {\n          this.trigger('mediaupdatetimeout');\n          createMediaUpdateTimeout();\n        }, refreshDelay(this.media(), Boolean(mediaChanged)));\n      };\n      createMediaUpdateTimeout();\n    }\n    this.trigger('loadedplaylist');\n  }\n}\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  BACK_BUFFER_LENGTH: 30,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  // TODO: Remove this when experimentalBufferBasedABR is removed\n  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n  BUFFER_LOW_WATER_LINE_RATE: 1,\n  // If the buffer is greater than the high water line, we won't switch down\n  BUFFER_HIGH_WATER_LINE: 30\n};\nconst stringToArrayBuffer = string => {\n  const view = new Uint8Array(new ArrayBuffer(string.length));\n  for (let i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n  return view.buffer;\n};\n\n/* global Blob, BlobBuilder, Worker */\n// unify worker interface\nconst browserWorkerPolyFill = function (workerObj) {\n  // node only supports on/off\n  workerObj.on = workerObj.addEventListener;\n  workerObj.off = workerObj.removeEventListener;\n  return workerObj;\n};\nconst createObjectURL = function (str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: 'application/javascript'\n    }));\n  } catch (e) {\n    const blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob());\n  }\n};\nconst factory = function (code) {\n  return function () {\n    const objectUrl = createObjectURL(code);\n    const worker = browserWorkerPolyFill(new Worker(objectUrl));\n    worker.objURL = objectUrl;\n    const terminate = worker.terminate;\n    worker.on = worker.addEventListener;\n    worker.off = worker.removeEventListener;\n    worker.terminate = function () {\n      URL.revokeObjectURL(objectUrl);\n      return terminate.call(this);\n    };\n    return worker;\n  };\n};\nconst transform = function (code) {\n  return `var browserWorkerPolyFill = ${browserWorkerPolyFill.toString()};\\n` + 'browserWorkerPolyFill(self);\\n' + code;\n};\nconst getWorkerString = function (fn) {\n  return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n};\n\n/* rollup-plugin-worker-factory start for worker!/Users/poneill/dev/http-streaming/src/transmuxer-worker.js */\nconst workerCode$1 = transform(getWorkerString(function () {\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */\n\n  var Stream$8 = function () {\n    this.init = function () {\n      var listeners = {};\n      /**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      this.on = function (type, listener) {\n        if (!listeners[type]) {\n          listeners[type] = [];\n        }\n        listeners[type] = listeners[type].concat(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */\n\n      this.off = function (type, listener) {\n        var index;\n        if (!listeners[type]) {\n          return false;\n        }\n        index = listeners[type].indexOf(listener);\n        listeners[type] = listeners[type].slice();\n        listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */\n\n      this.trigger = function (type) {\n        var callbacks, i, length, args;\n        callbacks = listeners[type];\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n        if (arguments.length === 2) {\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          args = [];\n          i = arguments.length;\n          for (i = 1; i < arguments.length; ++i) {\n            args.push(arguments[i]);\n          }\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      this.dispose = function () {\n        listeners = {};\n      };\n    };\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n  Stream$8.prototype.pipe = function (destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n    this.on('done', function (flushSource) {\n      destination.flush(flushSource);\n    });\n    this.on('partialdone', function (flushSource) {\n      destination.partialFlush(flushSource);\n    });\n    this.on('endedtimeline', function (flushSource) {\n      destination.endTimeline(flushSource);\n    });\n    this.on('reset', function (flushSource) {\n      destination.reset(flushSource);\n    });\n    return destination;\n  }; // Default stream functions that are expected to be overridden to perform\n  // actual work. These are provided by the prototype as a sort of no-op\n  // implementation so that we don't have to check for their existence in the\n  // `pipe` function above.\n\n  Stream$8.prototype.push = function (data) {\n    this.trigger('data', data);\n  };\n  Stream$8.prototype.flush = function (flushSource) {\n    this.trigger('done', flushSource);\n  };\n  Stream$8.prototype.partialFlush = function (flushSource) {\n    this.trigger('partialdone', flushSource);\n  };\n  Stream$8.prototype.endTimeline = function (flushSource) {\n    this.trigger('endedtimeline', flushSource);\n  };\n  Stream$8.prototype.reset = function (flushSource) {\n    this.trigger('reset', flushSource);\n  };\n  var stream = Stream$8;\n  var MAX_UINT32$1 = Math.pow(2, 32);\n  var getUint64$2 = function (uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n      return value;\n    }\n    return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n  };\n  var numbers = {\n    getUint64: getUint64$2,\n    MAX_UINT32: MAX_UINT32$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Functions that generate fragmented MP4s suitable for use with Media\n   * Source Extensions.\n   */\n\n  var MAX_UINT32 = numbers.MAX_UINT32;\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n  (function () {\n    var i;\n    types = {\n      avc1: [],\n      // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      // codingname\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      smhd: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      styp: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: []\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n    // don't throw an error\n\n    if (typeof Uint8Array === 'undefined') {\n      return;\n    }\n    for (i in types) {\n      if (types.hasOwnProperty(i)) {\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n    VIDEO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x76, 0x69, 0x64, 0x65,\n    // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n\n    AUDIO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x73, 0x6f, 0x75, 0x6e,\n    // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n\n    HDLR_TYPES = {\n      video: VIDEO_HDLR,\n      audio: AUDIO_HDLR\n    };\n    DREF = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // entry_count\n    0x00, 0x00, 0x00, 0x0c,\n    // entry_size\n    0x75, 0x72, 0x6c, 0x20,\n    // 'url' type\n    0x00,\n    // version 0\n    0x00, 0x00, 0x01 // entry_flags\n    ]);\n\n    SMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00,\n    // balance, 0 means centered\n    0x00, 0x00 // reserved\n    ]);\n\n    STCO = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n\n    STSC = STCO;\n    STSZ = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n    ]);\n\n    STTS = STCO;\n    VMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x01,\n    // flags\n    0x00, 0x00,\n    // graphicsmode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n    ]);\n  })();\n\n  box = function (type) {\n    var payload = [],\n      size = 0,\n      i,\n      result,\n      view;\n    for (i = 1; i < arguments.length; i++) {\n      payload.push(arguments[i]);\n    }\n    i = payload.length; // calculate the total size we need to allocate\n\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n    result = new Uint8Array(size + 8);\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n    view.setUint32(0, result.byteLength);\n    result.set(type, 4); // copy the payload into the result\n\n    for (i = 0, size = 8; i < payload.length; i++) {\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n    return result;\n  };\n  dinf = function () {\n    return box(types.dinf, box(types.dref, DREF));\n  };\n  esds = function (track) {\n    return box(types.esds, new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    // ES_Descriptor\n    0x03,\n    // tag, ES_DescrTag\n    0x19,\n    // length\n    0x00, 0x00,\n    // ES_ID\n    0x00,\n    // streamDependenceFlag, URL_flag, reserved, streamPriority\n    // DecoderConfigDescriptor\n    0x04,\n    // tag, DecoderConfigDescrTag\n    0x11,\n    // length\n    0x40,\n    // object type\n    0x15,\n    // streamType\n    0x00, 0x06, 0x00,\n    // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0,\n    // maxBitrate\n    0x00, 0x00, 0xda, 0xc0,\n    // avgBitrate\n    // DecoderSpecificInfo\n    0x05,\n    // tag, DecoderSpecificInfoTag\n    0x02,\n    // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n    ]));\n  };\n\n  ftyp = function () {\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n  };\n  hdlr = function (type) {\n    return box(types.hdlr, HDLR_TYPES[type]);\n  };\n  mdat = function (data) {\n    return box(types.mdat, data);\n  };\n  mdhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x02,\n    // creation_time\n    0x00, 0x00, 0x00, 0x03,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF,\n    // duration\n    0x55, 0xc4,\n    // 'und' language (undetermined)\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n    // defined. The sample rate can be parsed out of an ADTS header, for\n    // instance.\n\n    if (track.samplerate) {\n      result[12] = track.samplerate >>> 24 & 0xFF;\n      result[13] = track.samplerate >>> 16 & 0xFF;\n      result[14] = track.samplerate >>> 8 & 0xFF;\n      result[15] = track.samplerate & 0xFF;\n    }\n    return box(types.mdhd, result);\n  };\n  mdia = function (track) {\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n  };\n  mfhd = function (sequenceNumber) {\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00,\n    // flags\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n    ]));\n  };\n\n  minf = function (track) {\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n  };\n  moof = function (sequenceNumber, tracks) {\n    var trackFragments = [],\n      i = tracks.length; // build traf boxes for each track fragment\n\n    while (i--) {\n      trackFragments[i] = traf(tracks[i]);\n    }\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n  };\n  /**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */\n\n  moov = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trak(tracks[i]);\n    }\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n  };\n  mvex = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trex(tracks[i]);\n    }\n    return box.apply(null, [types.mvex].concat(boxes));\n  };\n  mvhd = function (duration) {\n    var bytes = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // creation_time\n    0x00, 0x00, 0x00, 0x02,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF,\n    // duration\n    0x00, 0x01, 0x00, 0x00,\n    // 1.0 rate\n    0x01, 0x00,\n    // 1.0 volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n\n    return box(types.mvhd, bytes);\n  };\n  sdtp = function (track) {\n    var samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i; // leave the full box header (4 bytes) all zero\n    // write the sample table\n\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n    }\n    return box(types.sdtp, bytes);\n  };\n  stbl = function (track) {\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n  };\n  (function () {\n    var videoSample, audioSample;\n    stsd = function (track) {\n      return box(types.stsd, new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n    };\n    videoSample = function (track) {\n      var sps = track.sps || [],\n        pps = track.pps || [],\n        sequenceParameterSets = [],\n        pictureParameterSets = [],\n        i,\n        avc1Box; // assemble the SPSs\n\n      for (i = 0; i < sps.length; i++) {\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n      } // assemble the PPSs\n\n      for (i = 0; i < pps.length; i++) {\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n      }\n      avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      (track.width & 0xff00) >> 8, track.width & 0xff,\n      // width\n      (track.height & 0xff00) >> 8, track.height & 0xff,\n      // height\n      0x00, 0x48, 0x00, 0x00,\n      // horizresolution\n      0x00, 0x48, 0x00, 0x00,\n      // vertresolution\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // frame_count\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // compressorname\n      0x00, 0x18,\n      // depth = 24\n      0x11, 0x11 // pre_defined = -1\n      ]), box(types.avcC, new Uint8Array([0x01,\n      // configurationVersion\n      track.profileIdc,\n      // AVCProfileIndication\n      track.profileCompatibility,\n      // profile_compatibility\n      track.levelIdc,\n      // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n      ].concat([sps.length],\n      // numOfSequenceParameterSets\n      sequenceParameterSets,\n      // \"SPS\"\n      [pps.length],\n      // numOfPictureParameterSets\n      pictureParameterSets // \"PPS\"\n      ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80,\n      // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0,\n      // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]))];\n\n      if (track.sarRatio) {\n        var hSpacing = track.sarRatio[0],\n          vSpacing = track.sarRatio[1];\n        avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n      }\n      return box.apply(null, avc1Box);\n    };\n    audioSample = function (track) {\n      return box(types.mp4a, new Uint8Array([\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff,\n      // channelcount\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff,\n      // samplesize\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n      ]), esds(track));\n    };\n  })();\n  tkhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x07,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // creation_time\n    0x00, 0x00, 0x00, 0x00,\n    // modification_time\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF,\n    // duration\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00,\n    // layer\n    0x00, 0x00,\n    // alternate_group\n    0x01, 0x00,\n    // non-audio track volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00,\n    // width\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n    ]);\n\n    return box(types.tkhd, result);\n  };\n  /**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */\n\n  traf = function (track) {\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x3a,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\n    ]));\n\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01,\n    // version 1\n    0x00, 0x00, 0x00,\n    // flags\n    // baseMediaDecodeTime\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n    // the containing moof to the first payload byte of the associated\n    // mdat\n\n    dataOffset = 32 +\n    // tfhd\n    20 +\n    // tfdt\n    8 +\n    // traf header\n    16 +\n    // mfhd\n    8 +\n    // moof header\n    8; // mdat header\n    // audio tracks require less metadata\n\n    if (track.type === 'audio') {\n      trackFragmentRun = trun$1(track, dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n    } // video tracks should contain an independent and disposable samples\n    // box (sdtp)\n    // generate one and adjust offsets to match\n\n    sampleDependencyTable = sdtp(track);\n    trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n  };\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n\n  trak = function (track) {\n    track.duration = track.duration || 0xffffffff;\n    return box(types.trak, tkhd(track), mdia(track));\n  };\n  trex = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]); // the last two bytes of default_sample_flags is the sample\n    // degradation priority, a hint about the importance of this sample\n    // relative to others. Lower the degradation priority for all sample\n    // types other than video.\n\n    if (track.type !== 'video') {\n      result[result.length - 1] = 0x00;\n    }\n    return box(types.trex, result);\n  };\n  (function () {\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n    // duration is present for the first sample, it will be present for\n    // all subsequent samples.\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n    trunHeader = function (samples, offset) {\n      var durationPresent = 0,\n        sizePresent = 0,\n        flagsPresent = 0,\n        compositionTimeOffset = 0; // trun flag constants\n\n      if (samples.length) {\n        if (samples[0].duration !== undefined) {\n          durationPresent = 0x1;\n        }\n        if (samples[0].size !== undefined) {\n          sizePresent = 0x2;\n        }\n        if (samples[0].flags !== undefined) {\n          flagsPresent = 0x4;\n        }\n        if (samples[0].compositionTimeOffset !== undefined) {\n          compositionTimeOffset = 0x8;\n        }\n      }\n      return [0x00,\n      // version 0\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01,\n      // flags\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF,\n      // sample_count\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n      ];\n    };\n\n    videoTrun = function (track, offset) {\n      var bytesOffest, bytes, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 16 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 16);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n        bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n        bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n      }\n\n      return box(types.trun, bytes);\n    };\n    audioTrun = function (track, offset) {\n      var bytes, bytesOffest, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 8 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 8);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n      }\n\n      return box(types.trun, bytes);\n    };\n    trun$1 = function (track, offset) {\n      if (track.type === 'audio') {\n        return audioTrun(track, offset);\n      }\n      return videoTrun(track, offset);\n    };\n  })();\n  var mp4Generator = {\n    ftyp: ftyp,\n    mdat: mdat,\n    moof: moof,\n    moov: moov,\n    initSegment: function (tracks) {\n      var fileType = ftyp(),\n        movie = moov(tracks),\n        result;\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\n      result.set(fileType);\n      result.set(movie, fileType.byteLength);\n      return result;\n    }\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n\n  var groupNalsIntoFrames = function (nalUnits) {\n    var i,\n      currentNal,\n      currentFrame = [],\n      frames = []; // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength = 0;\n    frames.nalCount = 0;\n    frames.duration = 0;\n    currentFrame.byteLength = 0;\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n          frames.byteLength += currentFrame.byteLength;\n          frames.nalCount += currentFrame.length;\n          frames.duration += currentFrame.duration;\n          frames.push(currentFrame);\n        }\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    } // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    } // Push the final frame\n    // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength += currentFrame.byteLength;\n    frames.nalCount += currentFrame.length;\n    frames.duration += currentFrame.duration;\n    frames.push(currentFrame);\n    return frames;\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n\n  var groupFramesIntoGops = function (frames) {\n    var i,\n      currentFrame,\n      currentGop = [],\n      gops = []; // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration; // push the final Gop\n\n    gops.push(currentGop);\n    return gops;\n  };\n  /*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */\n\n  var extendFirstKeyFrame = function (gops) {\n    var currentGop;\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n      gops.byteLength -= currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n    return gops;\n  };\n  /**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */\n\n  var createDefaultSample = function () {\n    return {\n      size: 0,\n      flags: {\n        isLeading: 0,\n        dependsOn: 1,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradationPriority: 0,\n        isNonSyncSample: 1\n      }\n    };\n  };\n  /*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */\n\n  var sampleForFrame = function (frame, dataOffset) {\n    var sample = createDefaultSample();\n    sample.dataOffset = dataOffset;\n    sample.compositionTimeOffset = frame.pts - frame.dts;\n    sample.duration = frame.duration;\n    sample.size = 4 * frame.length; // Space for nal unit size\n\n    sample.size += frame.byteLength;\n    if (frame.keyFrame) {\n      sample.flags.dependsOn = 2;\n      sample.flags.isNonSyncSample = 0;\n    }\n    return sample;\n  }; // generate the track's sample table from an array of gops\n\n  var generateSampleTable$1 = function (gops, baseDataOffset) {\n    var h,\n      i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n        sample = sampleForFrame(currentFrame, dataOffset);\n        dataOffset += sample.size;\n        samples.push(sample);\n      }\n    }\n    return samples;\n  }; // generate the track's raw mdat data from an array of gops\n\n  var concatenateNalData = function (gops) {\n    var h,\n      i,\n      j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each Gop..\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h]; // For each Frame..\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i]; // For each NAL..\n\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n    return data;\n  }; // generate the track's sample table from a frame\n\n  var generateSampleTableForFrame = function (frame, baseDataOffset) {\n    var sample,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    sample = sampleForFrame(frame, dataOffset);\n    samples.push(sample);\n    return samples;\n  }; // generate the track's raw mdat data from a frame\n\n  var concatenateNalDataForFrame = function (frame) {\n    var i,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = frame.byteLength,\n      numberOfNals = frame.length,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each NAL..\n\n    for (i = 0; i < frame.length; i++) {\n      currentNal = frame[i];\n      view.setUint32(dataOffset, currentNal.data.byteLength);\n      dataOffset += 4;\n      data.set(currentNal.data, dataOffset);\n      dataOffset += currentNal.data.byteLength;\n    }\n    return data;\n  };\n  var frameUtils$1 = {\n    groupNalsIntoFrames: groupNalsIntoFrames,\n    groupFramesIntoGops: groupFramesIntoGops,\n    extendFirstKeyFrame: extendFirstKeyFrame,\n    generateSampleTable: generateSampleTable$1,\n    concatenateNalData: concatenateNalData,\n    generateSampleTableForFrame: generateSampleTableForFrame,\n    concatenateNalDataForFrame: concatenateNalDataForFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var highPrefix = [33, 16, 5, 32, 164, 27];\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n  var zeroFill = function (count) {\n    var a = [];\n    while (count--) {\n      a.push(0);\n    }\n    return a;\n  };\n  var makeTable = function (metaTable) {\n    return Object.keys(metaTable).reduce(function (obj, key) {\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n        return arr.concat(part);\n      }, []));\n      return obj;\n    }, {});\n  };\n  var silence;\n  var silence_1 = function () {\n    if (!silence) {\n      // Frames-of-silence to use for filling in missing AAC frames\n      var coneOfSilence = {\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n        88200: [highPrefix, [231], zeroFill(170), [56]],\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n      };\n      silence = makeTable(coneOfSilence);\n    }\n    return silence;\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$4 = 90000,\n    // 90kHz clock\n    secondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs,\n    metadataTsToSeconds;\n  secondsToVideoTs = function (seconds) {\n    return seconds * ONE_SECOND_IN_TS$4;\n  };\n  secondsToAudioTs = function (seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n  videoTsToSeconds = function (timestamp) {\n    return timestamp / ONE_SECOND_IN_TS$4;\n  };\n  audioTsToSeconds = function (timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n  audioTsToVideoTs = function (timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n  videoTsToAudioTs = function (timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n  metadataTsToSeconds = function (timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n  var clock$2 = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var coneOfSilence = silence_1;\n  var clock$1 = clock$2;\n  /**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */\n\n  var sumFrameByteLengths = function (array) {\n    var i,\n      currentObj,\n      sum = 0; // sum the byteLength's all each nal unit in the frame\n\n    for (i = 0; i < array.length; i++) {\n      currentObj = array[i];\n      sum += currentObj.data.byteLength;\n    }\n    return sum;\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n\n  var prefixWithSilence = function (track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n    var baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i,\n      firstFrame;\n    if (!frames.length) {\n      return;\n    }\n    baseMediaDecodeTimeTs = clock$1.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n    frameDuration = Math.ceil(clock$1.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    } // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n\n    if (audioFillFrameCount < 1 || audioFillDuration > clock$1.ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n    silentFrame = coneOfSilence()[track.samplerate];\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n    for (i = 0; i < audioFillFrameCount; i++) {\n      firstFrame = frames[0];\n      frames.splice(0, 0, {\n        data: silentFrame,\n        dts: firstFrame.dts - frameDuration,\n        pts: firstFrame.pts - frameDuration\n      });\n    }\n    track.baseMediaDecodeTime -= Math.floor(clock$1.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    return audioFillDuration;\n  }; // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n\n  var trimAdtsFramesByEarliestDts = function (adtsFrames, track, earliestAllowedDts) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    } // We will need to recalculate the earliest segment Dts\n\n    track.minSegmentDts = Infinity;\n    return adtsFrames.filter(function (currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      } // Otherwise, discard it\n\n      return false;\n    });\n  }; // generate the track's raw mdat data from an array of frames\n\n  var generateSampleTable = function (frames) {\n    var i,\n      currentFrame,\n      samples = [];\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n\n    return samples;\n  }; // generate the track's sample table from an array of frames\n\n  var concatenateFrameData = function (frames) {\n    var i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n  var audioFrameUtils$1 = {\n    prefixWithSilence: prefixWithSilence,\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n    generateSampleTable: generateSampleTable,\n    concatenateFrameData: concatenateFrameData\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$3 = clock$2.ONE_SECOND_IN_TS;\n  /**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */\n\n  var collectDtsInfo = function (track, data) {\n    if (typeof data.pts === 'number') {\n      if (track.timelineStartInfo.pts === undefined) {\n        track.timelineStartInfo.pts = data.pts;\n      }\n      if (track.minSegmentPts === undefined) {\n        track.minSegmentPts = data.pts;\n      } else {\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n      }\n      if (track.maxSegmentPts === undefined) {\n        track.maxSegmentPts = data.pts;\n      } else {\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n      }\n    }\n    if (typeof data.dts === 'number') {\n      if (track.timelineStartInfo.dts === undefined) {\n        track.timelineStartInfo.dts = data.dts;\n      }\n      if (track.minSegmentDts === undefined) {\n        track.minSegmentDts = data.dts;\n      } else {\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n      }\n      if (track.maxSegmentDts === undefined) {\n        track.maxSegmentDts = data.dts;\n      } else {\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n      }\n    }\n  };\n  /**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */\n\n  var clearDtsInfo = function (track) {\n    delete track.minSegmentDts;\n    delete track.maxSegmentDts;\n    delete track.minSegmentPts;\n    delete track.maxSegmentPts;\n  };\n  /**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  var calculateTrackBaseMediaDecodeTime = function (track, keepOriginalTimestamps) {\n    var baseMediaDecodeTime,\n      scale,\n      minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n    if (!keepOriginalTimestamps) {\n      minSegmentDts -= track.timelineStartInfo.dts;\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n    // we want the start of the first segment to be placed\n\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n    if (track.type === 'audio') {\n      // Audio has a different clock equal to the sampling_rate so we need to\n      // scale the PTS values into the clock rate of the track\n      scale = track.samplerate / ONE_SECOND_IN_TS$3;\n      baseMediaDecodeTime *= scale;\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n    }\n    return baseMediaDecodeTime;\n  };\n  var trackDecodeInfo$1 = {\n    clearDtsInfo: clearDtsInfo,\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n    collectDtsInfo: collectDtsInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // payload type field to indicate how they are to be\n  // interpreted. CEAS-708 caption content is always transmitted with\n  // payload type 0x04.\n\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n  /**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */\n\n  var parseSei = function (bytes) {\n    var i = 0,\n      result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n      payloadType = 0,\n      payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n    while (i < bytes.byteLength) {\n      // stop once we have hit the end of the sei_rbsp\n      if (bytes[i] === RBSP_TRAILING_BITS) {\n        break;\n      } // Parse payload type\n\n      while (bytes[i] === 0xFF) {\n        payloadType += 255;\n        i++;\n      }\n      payloadType += bytes[i++]; // Parse payload size\n\n      while (bytes[i] === 0xFF) {\n        payloadSize += 255;\n        i++;\n      }\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n      // there can only ever be one caption message in a frame's sei\n\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n        var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n        if (userIdentifier === 'GA94') {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } else {\n          result.payload = void 0;\n        }\n      } // skip the payload and parse the next message\n\n      i += payloadSize;\n      payloadType = 0;\n      payloadSize = 0;\n    }\n    return result;\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n  var parseUserData = function (sei) {\n    // itu_t_t35_contry_code must be 181 (United States) for\n    // captions\n    if (sei.payload[0] !== 181) {\n      return null;\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n      return null;\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n      return null;\n    } // finally, user_data_type_code should be 0x03 for caption data\n\n    if (sei.payload[7] !== 0x03) {\n      return null;\n    } // return the user_data_type_structure and strip the trailing\n    // marker bits\n\n    return sei.payload.subarray(8, sei.payload.length - 1);\n  }; // see CEA-708-D, section 4.4\n\n  var parseCaptionPackets = function (pts, userData) {\n    var results = [],\n      i,\n      count,\n      offset,\n      data; // if this is just filler, return immediately\n\n    if (!(userData[0] & 0x40)) {\n      return results;\n    } // parse out the cc_data_1 and cc_data_2 fields\n\n    count = userData[0] & 0x1f;\n    for (i = 0; i < count; i++) {\n      offset = i * 3;\n      data = {\n        type: userData[offset + 2] & 0x03,\n        pts: pts\n      }; // capture cc data when cc_valid is 1\n\n      if (userData[offset + 2] & 0x04) {\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n        results.push(data);\n      }\n    }\n    return results;\n  };\n  var discardEmulationPreventionBytes$1 = function (data) {\n    var length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength,\n      newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n    return newData;\n  }; // exports\n\n  var captionPacketParser = {\n    parseSei: parseSei,\n    parseUserData: parseUserData,\n    parseCaptionPackets: parseCaptionPackets,\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // Link To Transport\n  // -----------------\n\n  var Stream$7 = stream;\n  var cea708Parser = captionPacketParser;\n  var CaptionStream$2 = function (options) {\n    options = options || {};\n    CaptionStream$2.prototype.init.call(this); // parse708captions flag, default to true\n\n    this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n    this.captionPackets_ = [];\n    this.ccStreams_ = [new Cea608Stream(0, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n    ];\n\n    if (this.parse708captions_) {\n      this.cc708Stream_ = new Cea708Stream({\n        captionServices: options.captionServices\n      }); // eslint-disable-line no-use-before-define\n    }\n\n    this.reset(); // forward data and done events from CCs to this CaptionStream\n\n    this.ccStreams_.forEach(function (cc) {\n      cc.on('data', this.trigger.bind(this, 'data'));\n      cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      cc.on('done', this.trigger.bind(this, 'done'));\n    }, this);\n    if (this.parse708captions_) {\n      this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n    }\n  };\n  CaptionStream$2.prototype = new Stream$7();\n  CaptionStream$2.prototype.push = function (event) {\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n    if (event.nalUnitType !== 'sei_rbsp') {\n      return;\n    } // parse the sei\n\n    sei = cea708Parser.parseSei(event.escapedRBSP); // no payload data, skip\n\n    if (!sei.payload) {\n      return;\n    } // ignore everything but user_data_registered_itu_t_t35\n\n    if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n      return;\n    } // parse out the user data payload\n\n    userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n    if (!userData) {\n      return;\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\n    // caption data from being processed twice, we track the latest dts we've\n    // received and ignore everything with a dts before that. However, since\n    // data for a specific dts can be split across packets on either side of\n    // a segment boundary, we need to make sure we *don't* ignore the packets\n    // from the *next* segment that have dts === this.latestDts_. By constantly\n    // tracking the number of packets received with dts === this.latestDts_, we\n    // know how many should be ignored once we start receiving duplicates.\n\n    if (event.dts < this.latestDts_) {\n      // We've started getting older data, so set the flag.\n      this.ignoreNextEqualDts_ = true;\n      return;\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n      this.numSameDts_--;\n      if (!this.numSameDts_) {\n        // We've received the last duplicate packet, time to start processing again\n        this.ignoreNextEqualDts_ = false;\n      }\n      return;\n    } // parse out CC data packets and save them for later\n\n    newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n    if (this.latestDts_ !== event.dts) {\n      this.numSameDts_ = 0;\n    }\n    this.numSameDts_++;\n    this.latestDts_ = event.dts;\n  };\n  CaptionStream$2.prototype.flushCCStreams = function (flushType) {\n    this.ccStreams_.forEach(function (cc) {\n      return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n    }, this);\n  };\n  CaptionStream$2.prototype.flushStream = function (flushType) {\n    // make sure we actually parsed captions before proceeding\n    if (!this.captionPackets_.length) {\n      this.flushCCStreams(flushType);\n      return;\n    } // In Chrome, the Array#sort function is not stable so add a\n    // presortIndex that we can use to ensure we get a stable-sort\n\n    this.captionPackets_.forEach(function (elem, idx) {\n      elem.presortIndex = idx;\n    }); // sort caption byte-pairs based on their PTS values\n\n    this.captionPackets_.sort(function (a, b) {\n      if (a.pts === b.pts) {\n        return a.presortIndex - b.presortIndex;\n      }\n      return a.pts - b.pts;\n    });\n    this.captionPackets_.forEach(function (packet) {\n      if (packet.type < 2) {\n        // Dispatch packet to the right Cea608Stream\n        this.dispatchCea608Packet(packet);\n      } else {\n        // Dispatch packet to the Cea708Stream\n        this.dispatchCea708Packet(packet);\n      }\n    }, this);\n    this.captionPackets_.length = 0;\n    this.flushCCStreams(flushType);\n  };\n  CaptionStream$2.prototype.flush = function () {\n    return this.flushStream('flush');\n  }; // Only called if handling partial data\n\n  CaptionStream$2.prototype.partialFlush = function () {\n    return this.flushStream('partialFlush');\n  };\n  CaptionStream$2.prototype.reset = function () {\n    this.latestDts_ = null;\n    this.ignoreNextEqualDts_ = false;\n    this.numSameDts_ = 0;\n    this.activeCea608Channel_ = [null, null];\n    this.ccStreams_.forEach(function (ccStream) {\n      ccStream.reset();\n    });\n  }; // From the CEA-608 spec:\n\n  /*\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n   * to switch to captioning or Text.\n  */\n  // With that in mind, we ignore any data between an XDS control code and a\n  // subsequent closed-captioning control code.\n\n  CaptionStream$2.prototype.dispatchCea608Packet = function (packet) {\n    // NOTE: packet.type is the CEA608 field\n    if (this.setsTextOrXDSActive(packet)) {\n      this.activeCea608Channel_[packet.type] = null;\n    } else if (this.setsChannel1Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 0;\n    } else if (this.setsChannel2Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 1;\n    }\n    if (this.activeCea608Channel_[packet.type] === null) {\n      // If we haven't received anything to set the active channel, or the\n      // packets are Text/XDS data, discard the data; we don't want jumbled\n      // captions\n      return;\n    }\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n  };\n  CaptionStream$2.prototype.setsChannel1Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1000;\n  };\n  CaptionStream$2.prototype.setsChannel2Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1800;\n  };\n  CaptionStream$2.prototype.setsTextOrXDSActive = function (packet) {\n    return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n  };\n  CaptionStream$2.prototype.dispatchCea708Packet = function (packet) {\n    if (this.parse708captions_) {\n      this.cc708Stream_.push(packet);\n    }\n  }; // ----------------------\n  // Session to Application\n  // ----------------------\n  // This hash maps special and extended character codes to their\n  // proper Unicode equivalent. The first one-byte key is just a\n  // non-standard character code. The two-byte keys that follow are\n  // the extended CEA708 character codes, along with the preceding\n  // 0x10 extended character byte to distinguish these codes from\n  // non-extended character codes. Every CEA708 character code that\n  // is not in this object maps directly to a standard unicode\n  // character code.\n  // The transparent space and non-breaking transparent space are\n  // technically not fully supported since there is no code to\n  // make them transparent, so they have normal non-transparent\n  // stand-ins.\n  // The special closed caption (CC) character isn't a standard\n  // unicode character, so a fairly similar unicode character was\n  // chosen in it's place.\n\n  var CHARACTER_TRANSLATION_708 = {\n    0x7f: 0x266a,\n    // ♪\n    0x1020: 0x20,\n    // Transparent Space\n    0x1021: 0xa0,\n    // Nob-breaking Transparent Space\n    0x1025: 0x2026,\n    // …\n    0x102a: 0x0160,\n    // Š\n    0x102c: 0x0152,\n    // Œ\n    0x1030: 0x2588,\n    // █\n    0x1031: 0x2018,\n    // ‘\n    0x1032: 0x2019,\n    // ’\n    0x1033: 0x201c,\n    // “\n    0x1034: 0x201d,\n    // ”\n    0x1035: 0x2022,\n    // •\n    0x1039: 0x2122,\n    // ™\n    0x103a: 0x0161,\n    // š\n    0x103c: 0x0153,\n    // œ\n    0x103d: 0x2120,\n    // ℠\n    0x103f: 0x0178,\n    // Ÿ\n    0x1076: 0x215b,\n    // ⅛\n    0x1077: 0x215c,\n    // ⅜\n    0x1078: 0x215d,\n    // ⅝\n    0x1079: 0x215e,\n    // ⅞\n    0x107a: 0x23d0,\n    // ⏐\n    0x107b: 0x23a4,\n    // ⎤\n    0x107c: 0x23a3,\n    // ⎣\n    0x107d: 0x23af,\n    // ⎯\n    0x107e: 0x23a6,\n    // ⎦\n    0x107f: 0x23a1,\n    // ⎡\n    0x10a0: 0x3138 // ㄸ (CC char)\n  };\n\n  var get708CharFromCode = function (code) {\n    var newCode = CHARACTER_TRANSLATION_708[code] || code;\n    if (code & 0x1000 && code === newCode) {\n      // Invalid extended code\n      return '';\n    }\n    return String.fromCharCode(newCode);\n  };\n  var within708TextBlock = function (b) {\n    return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n  };\n  var Cea708Window = function (windowNum) {\n    this.windowNum = windowNum;\n    this.reset();\n  };\n  Cea708Window.prototype.reset = function () {\n    this.clearText();\n    this.pendingNewLine = false;\n    this.winAttr = {};\n    this.penAttr = {};\n    this.penLoc = {};\n    this.penColor = {}; // These default values are arbitrary,\n    // defineWindow will usually override them\n\n    this.visible = 0;\n    this.rowLock = 0;\n    this.columnLock = 0;\n    this.priority = 0;\n    this.relativePositioning = 0;\n    this.anchorVertical = 0;\n    this.anchorHorizontal = 0;\n    this.anchorPoint = 0;\n    this.rowCount = 1;\n    this.virtualRowCount = this.rowCount + 1;\n    this.columnCount = 41;\n    this.windowStyle = 0;\n    this.penStyle = 0;\n  };\n  Cea708Window.prototype.getText = function () {\n    return this.rows.join('\\n');\n  };\n  Cea708Window.prototype.clearText = function () {\n    this.rows = [''];\n    this.rowIdx = 0;\n  };\n  Cea708Window.prototype.newLine = function (pts) {\n    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n      this.beforeRowOverflow(pts);\n    }\n    if (this.rows.length > 0) {\n      this.rows.push('');\n      this.rowIdx++;\n    } // Show all virtual rows since there's no visible scrolling\n\n    while (this.rows.length > this.virtualRowCount) {\n      this.rows.shift();\n      this.rowIdx--;\n    }\n  };\n  Cea708Window.prototype.isEmpty = function () {\n    if (this.rows.length === 0) {\n      return true;\n    } else if (this.rows.length === 1) {\n      return this.rows[0] === '';\n    }\n    return false;\n  };\n  Cea708Window.prototype.addText = function (text) {\n    this.rows[this.rowIdx] += text;\n  };\n  Cea708Window.prototype.backspace = function () {\n    if (!this.isEmpty()) {\n      var row = this.rows[this.rowIdx];\n      this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n    }\n  };\n  var Cea708Service = function (serviceNum, encoding, stream) {\n    this.serviceNum = serviceNum;\n    this.text = '';\n    this.currentWindow = new Cea708Window(-1);\n    this.windows = [];\n    this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n    if (typeof encoding === 'string') {\n      this.createTextDecoder(encoding);\n    }\n  };\n  /**\n   * Initialize service windows\n   * Must be run before service use\n   *\n   * @param  {Integer}  pts               PTS value\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n   */\n\n  Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n    this.startPts = pts;\n    for (var win = 0; win < 8; win++) {\n      this.windows[win] = new Cea708Window(win);\n      if (typeof beforeRowOverflow === 'function') {\n        this.windows[win].beforeRowOverflow = beforeRowOverflow;\n      }\n    }\n  };\n  /**\n   * Set current window of service to be affected by commands\n   *\n   * @param  {Integer} windowNum Window number\n   */\n\n  Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n    this.currentWindow = this.windows[windowNum];\n  };\n  /**\n   * Try to create a TextDecoder if it is natively supported\n   */\n\n  Cea708Service.prototype.createTextDecoder = function (encoding) {\n    if (typeof TextDecoder === 'undefined') {\n      this.stream.trigger('log', {\n        level: 'warn',\n        message: 'The `encoding` option is unsupported without TextDecoder support'\n      });\n    } else {\n      try {\n        this.textDecoder_ = new TextDecoder(encoding);\n      } catch (error) {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n        });\n      }\n    }\n  };\n  var Cea708Stream = function (options) {\n    options = options || {};\n    Cea708Stream.prototype.init.call(this);\n    var self = this;\n    var captionServices = options.captionServices || {};\n    var captionServiceEncodings = {};\n    var serviceProps; // Get service encodings from captionServices option block\n\n    Object.keys(captionServices).forEach(serviceName => {\n      serviceProps = captionServices[serviceName];\n      if (/^SERVICE/.test(serviceName)) {\n        captionServiceEncodings[serviceName] = serviceProps.encoding;\n      }\n    });\n    this.serviceEncodings = captionServiceEncodings;\n    this.current708Packet = null;\n    this.services = {};\n    this.push = function (packet) {\n      if (packet.type === 3) {\n        // 708 packet start\n        self.new708Packet();\n        self.add708Bytes(packet);\n      } else {\n        if (self.current708Packet === null) {\n          // This should only happen at the start of a file if there's no packet start.\n          self.new708Packet();\n        }\n        self.add708Bytes(packet);\n      }\n    };\n  };\n  Cea708Stream.prototype = new Stream$7();\n  /**\n   * Push current 708 packet, create new 708 packet.\n   */\n\n  Cea708Stream.prototype.new708Packet = function () {\n    if (this.current708Packet !== null) {\n      this.push708Packet();\n    }\n    this.current708Packet = {\n      data: [],\n      ptsVals: []\n    };\n  };\n  /**\n   * Add pts and both bytes from packet into current 708 packet.\n   */\n\n  Cea708Stream.prototype.add708Bytes = function (packet) {\n    var data = packet.ccData;\n    var byte0 = data >>> 8;\n    var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n    // that service blocks will always line up with byte pairs.\n\n    this.current708Packet.ptsVals.push(packet.pts);\n    this.current708Packet.data.push(byte0);\n    this.current708Packet.data.push(byte1);\n  };\n  /**\n   * Parse completed 708 packet into service blocks and push each service block.\n   */\n\n  Cea708Stream.prototype.push708Packet = function () {\n    var packet708 = this.current708Packet;\n    var packetData = packet708.data;\n    var serviceNum = null;\n    var blockSize = null;\n    var i = 0;\n    var b = packetData[i++];\n    packet708.seq = b >> 6;\n    packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n    for (; i < packetData.length; i++) {\n      b = packetData[i++];\n      serviceNum = b >> 5;\n      blockSize = b & 0x1f; // 0b00011111\n\n      if (serviceNum === 7 && blockSize > 0) {\n        // Extended service num\n        b = packetData[i++];\n        serviceNum = b;\n      }\n      this.pushServiceBlock(serviceNum, i, blockSize);\n      if (blockSize > 0) {\n        i += blockSize - 1;\n      }\n    }\n  };\n  /**\n   * Parse service block, execute commands, read text.\n   *\n   * Note: While many of these commands serve important purposes,\n   * many others just parse out the parameters or attributes, but\n   * nothing is done with them because this is not a full and complete\n   * implementation of the entire 708 spec.\n   *\n   * @param  {Integer} serviceNum Service number\n   * @param  {Integer} start      Start index of the 708 packet data\n   * @param  {Integer} size       Block size\n   */\n\n  Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n    var b;\n    var i = start;\n    var packetData = this.current708Packet.data;\n    var service = this.services[serviceNum];\n    if (!service) {\n      service = this.initService(serviceNum, i);\n    }\n    for (; i < start + size && i < packetData.length; i++) {\n      b = packetData[i];\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service);\n      } else if (b === 0x18) {\n        i = this.multiByteCharacter(i, service);\n      } else if (b === 0x10) {\n        i = this.extendedCommands(i, service);\n      } else if (0x80 <= b && b <= 0x87) {\n        i = this.setCurrentWindow(i, service);\n      } else if (0x98 <= b && b <= 0x9f) {\n        i = this.defineWindow(i, service);\n      } else if (b === 0x88) {\n        i = this.clearWindows(i, service);\n      } else if (b === 0x8c) {\n        i = this.deleteWindows(i, service);\n      } else if (b === 0x89) {\n        i = this.displayWindows(i, service);\n      } else if (b === 0x8a) {\n        i = this.hideWindows(i, service);\n      } else if (b === 0x8b) {\n        i = this.toggleWindows(i, service);\n      } else if (b === 0x97) {\n        i = this.setWindowAttributes(i, service);\n      } else if (b === 0x90) {\n        i = this.setPenAttributes(i, service);\n      } else if (b === 0x91) {\n        i = this.setPenColor(i, service);\n      } else if (b === 0x92) {\n        i = this.setPenLocation(i, service);\n      } else if (b === 0x8f) {\n        service = this.reset(i, service);\n      } else if (b === 0x08) {\n        // BS: Backspace\n        service.currentWindow.backspace();\n      } else if (b === 0x0c) {\n        // FF: Form feed\n        service.currentWindow.clearText();\n      } else if (b === 0x0d) {\n        // CR: Carriage return\n        service.currentWindow.pendingNewLine = true;\n      } else if (b === 0x0e) {\n        // HCR: Horizontal carriage return\n        service.currentWindow.clearText();\n      } else if (b === 0x8d) {\n        // DLY: Delay, nothing to do\n        i++;\n      } else ;\n    }\n  };\n  /**\n   * Execute an extended command\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.extendedCommands = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    if (within708TextBlock(b)) {\n      i = this.handleText(i, service, {\n        isExtended: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Get PTS value of a given byte index\n   *\n   * @param  {Integer} byteIndex  Index of the byte\n   * @return {Integer}            PTS\n   */\n\n  Cea708Stream.prototype.getPts = function (byteIndex) {\n    // There's 1 pts value per 2 bytes\n    return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n  };\n  /**\n   * Initializes a service\n   *\n   * @param  {Integer} serviceNum Service number\n   * @return {Service}            Initialized service object\n   */\n\n  Cea708Stream.prototype.initService = function (serviceNum, i) {\n    var serviceName = 'SERVICE' + serviceNum;\n    var self = this;\n    var serviceName;\n    var encoding;\n    if (serviceName in this.serviceEncodings) {\n      encoding = this.serviceEncodings[serviceName];\n    }\n    this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n    this.services[serviceNum].init(this.getPts(i), function (pts) {\n      self.flushDisplayed(pts, self.services[serviceNum]);\n    });\n    return this.services[serviceNum];\n  };\n  /**\n   * Execute text writing to current window\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.handleText = function (i, service, options) {\n    var isExtended = options && options.isExtended;\n    var isMultiByte = options && options.isMultiByte;\n    var packetData = this.current708Packet.data;\n    var extended = isExtended ? 0x1000 : 0x0000;\n    var currentByte = packetData[i];\n    var nextByte = packetData[i + 1];\n    var win = service.currentWindow;\n    var char;\n    var charCodeArray; // Use the TextDecoder if one was created for this service\n\n    if (service.textDecoder_ && !isExtended) {\n      if (isMultiByte) {\n        charCodeArray = [currentByte, nextByte];\n        i++;\n      } else {\n        charCodeArray = [currentByte];\n      }\n      char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n    } else {\n      char = get708CharFromCode(extended | currentByte);\n    }\n    if (win.pendingNewLine && !win.isEmpty()) {\n      win.newLine(this.getPts(i));\n    }\n    win.pendingNewLine = false;\n    win.addText(char);\n    return i;\n  };\n  /**\n   * Handle decoding of multibyte character\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var firstByte = packetData[i + 1];\n    var secondByte = packetData[i + 2];\n    if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n      i = this.handleText(++i, service, {\n        isMultiByte: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CW# command.\n   *\n   * Set the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    return i;\n  };\n  /**\n   * Parse and execute the DF# command.\n   *\n   * Define a window and set it as the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.defineWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    var win = service.currentWindow;\n    b = packetData[++i];\n    win.visible = (b & 0x20) >> 5; // v\n\n    win.rowLock = (b & 0x10) >> 4; // rl\n\n    win.columnLock = (b & 0x08) >> 3; // cl\n\n    win.priority = b & 0x07; // p\n\n    b = packetData[++i];\n    win.relativePositioning = (b & 0x80) >> 7; // rp\n\n    win.anchorVertical = b & 0x7f; // av\n\n    b = packetData[++i];\n    win.anchorHorizontal = b; // ah\n\n    b = packetData[++i];\n    win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n    win.rowCount = b & 0x0f; // rc\n\n    b = packetData[++i];\n    win.columnCount = b & 0x3f; // cc\n\n    b = packetData[++i];\n    win.windowStyle = (b & 0x38) >> 3; // ws\n\n    win.penStyle = b & 0x07; // ps\n    // The spec says there are (rowCount+1) \"virtual rows\"\n\n    win.virtualRowCount = win.rowCount + 1;\n    return i;\n  };\n  /**\n   * Parse and execute the SWA command.\n   *\n   * Set attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var winAttr = service.currentWindow.winAttr;\n    b = packetData[++i];\n    winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n    winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n    winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n    winAttr.fillBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n    winAttr.borderRed = (b & 0x30) >> 4; // br\n\n    winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n    winAttr.borderBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    winAttr.borderType += (b & 0x80) >> 5; // bt\n\n    winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n    winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n    winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n    winAttr.justify = b & 0x03; // j\n\n    b = packetData[++i];\n    winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n    winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n    winAttr.displayEffect = b & 0x03; // de\n\n    return i;\n  };\n  /**\n   * Gather text from all displayed windows and push a caption to output.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n    var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n    // display text in the correct order, but sample files so far have not shown any issue.\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n        displayedText.push(service.windows[winId].getText());\n      }\n    }\n    service.endPts = pts;\n    service.text = displayedText.join('\\n\\n');\n    this.pushCaption(service);\n    service.startPts = pts;\n  };\n  /**\n   * Push a caption to output if the caption contains text.\n   *\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.pushCaption = function (service) {\n    if (service.text !== '') {\n      this.trigger('data', {\n        startPts: service.startPts,\n        endPts: service.endPts,\n        text: service.text,\n        stream: 'cc708_' + service.serviceNum\n      });\n      service.text = '';\n      service.startPts = service.endPts;\n    }\n  };\n  /**\n   * Parse and execute the DSW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.displayWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the HDW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.hideWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 0;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the TGW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.toggleWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible ^= 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CLW command.\n   *\n   * Clear text of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.clearWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].clearText();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the DLW command.\n   *\n   * Re-initialize windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.deleteWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].reset();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the SPA command.\n   *\n   * Set pen attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penAttr = service.currentWindow.penAttr;\n    b = packetData[++i];\n    penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n    penAttr.offset = (b & 0x0c) >> 2; // o\n\n    penAttr.penSize = b & 0x03; // s\n\n    b = packetData[++i];\n    penAttr.italics = (b & 0x80) >> 7; // i\n\n    penAttr.underline = (b & 0x40) >> 6; // u\n\n    penAttr.edgeType = (b & 0x38) >> 3; // et\n\n    penAttr.fontStyle = b & 0x07; // fs\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPC command.\n   *\n   * Set pen color of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenColor = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penColor = service.currentWindow.penColor;\n    b = packetData[++i];\n    penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n    penColor.fgRed = (b & 0x30) >> 4; // fr\n\n    penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n    penColor.fgBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n    penColor.bgRed = (b & 0x30) >> 4; // br\n\n    penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n    penColor.bgBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    penColor.edgeRed = (b & 0x30) >> 4; // er\n\n    penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n    penColor.edgeBlue = b & 0x03; // eb\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPL command.\n   *\n   * Set pen location of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenLocation = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n    service.currentWindow.pendingNewLine = true;\n    b = packetData[++i];\n    penLoc.row = b & 0x0f; // r\n\n    b = packetData[++i];\n    penLoc.column = b & 0x3f; // c\n\n    return i;\n  };\n  /**\n   * Execute the RST command.\n   *\n   * Reset service to a clean slate. Re-initialize.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Service}          Re-initialized service\n   */\n\n  Cea708Stream.prototype.reset = function (i, service) {\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    return this.initService(service.serviceNum, i);\n  }; // This hash maps non-ASCII, special, and extended character codes to their\n  // proper Unicode equivalent. The first keys that are only a single byte\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n  // can be performed regardless of the field and data channel on which the\n  // character code was received.\n\n  var CHARACTER_TRANSLATION = {\n    0x2a: 0xe1,\n    // á\n    0x5c: 0xe9,\n    // é\n    0x5e: 0xed,\n    // í\n    0x5f: 0xf3,\n    // ó\n    0x60: 0xfa,\n    // ú\n    0x7b: 0xe7,\n    // ç\n    0x7c: 0xf7,\n    // ÷\n    0x7d: 0xd1,\n    // Ñ\n    0x7e: 0xf1,\n    // ñ\n    0x7f: 0x2588,\n    // █\n    0x0130: 0xae,\n    // ®\n    0x0131: 0xb0,\n    // °\n    0x0132: 0xbd,\n    // ½\n    0x0133: 0xbf,\n    // ¿\n    0x0134: 0x2122,\n    // ™\n    0x0135: 0xa2,\n    // ¢\n    0x0136: 0xa3,\n    // £\n    0x0137: 0x266a,\n    // ♪\n    0x0138: 0xe0,\n    // à\n    0x0139: 0xa0,\n    //\n    0x013a: 0xe8,\n    // è\n    0x013b: 0xe2,\n    // â\n    0x013c: 0xea,\n    // ê\n    0x013d: 0xee,\n    // î\n    0x013e: 0xf4,\n    // ô\n    0x013f: 0xfb,\n    // û\n    0x0220: 0xc1,\n    // Á\n    0x0221: 0xc9,\n    // É\n    0x0222: 0xd3,\n    // Ó\n    0x0223: 0xda,\n    // Ú\n    0x0224: 0xdc,\n    // Ü\n    0x0225: 0xfc,\n    // ü\n    0x0226: 0x2018,\n    // ‘\n    0x0227: 0xa1,\n    // ¡\n    0x0228: 0x2a,\n    // *\n    0x0229: 0x27,\n    // '\n    0x022a: 0x2014,\n    // —\n    0x022b: 0xa9,\n    // ©\n    0x022c: 0x2120,\n    // ℠\n    0x022d: 0x2022,\n    // •\n    0x022e: 0x201c,\n    // “\n    0x022f: 0x201d,\n    // ”\n    0x0230: 0xc0,\n    // À\n    0x0231: 0xc2,\n    // Â\n    0x0232: 0xc7,\n    // Ç\n    0x0233: 0xc8,\n    // È\n    0x0234: 0xca,\n    // Ê\n    0x0235: 0xcb,\n    // Ë\n    0x0236: 0xeb,\n    // ë\n    0x0237: 0xce,\n    // Î\n    0x0238: 0xcf,\n    // Ï\n    0x0239: 0xef,\n    // ï\n    0x023a: 0xd4,\n    // Ô\n    0x023b: 0xd9,\n    // Ù\n    0x023c: 0xf9,\n    // ù\n    0x023d: 0xdb,\n    // Û\n    0x023e: 0xab,\n    // «\n    0x023f: 0xbb,\n    // »\n    0x0320: 0xc3,\n    // Ã\n    0x0321: 0xe3,\n    // ã\n    0x0322: 0xcd,\n    // Í\n    0x0323: 0xcc,\n    // Ì\n    0x0324: 0xec,\n    // ì\n    0x0325: 0xd2,\n    // Ò\n    0x0326: 0xf2,\n    // ò\n    0x0327: 0xd5,\n    // Õ\n    0x0328: 0xf5,\n    // õ\n    0x0329: 0x7b,\n    // {\n    0x032a: 0x7d,\n    // }\n    0x032b: 0x5c,\n    // \\\n    0x032c: 0x5e,\n    // ^\n    0x032d: 0x5f,\n    // _\n    0x032e: 0x7c,\n    // |\n    0x032f: 0x7e,\n    // ~\n    0x0330: 0xc4,\n    // Ä\n    0x0331: 0xe4,\n    // ä\n    0x0332: 0xd6,\n    // Ö\n    0x0333: 0xf6,\n    // ö\n    0x0334: 0xdf,\n    // ß\n    0x0335: 0xa5,\n    // ¥\n    0x0336: 0xa4,\n    // ¤\n    0x0337: 0x2502,\n    // │\n    0x0338: 0xc5,\n    // Å\n    0x0339: 0xe5,\n    // å\n    0x033a: 0xd8,\n    // Ø\n    0x033b: 0xf8,\n    // ø\n    0x033c: 0x250c,\n    // ┌\n    0x033d: 0x2510,\n    // ┐\n    0x033e: 0x2514,\n    // └\n    0x033f: 0x2518 // ┘\n  };\n\n  var getCharFromCode = function (code) {\n    if (code === null) {\n      return '';\n    }\n    code = CHARACTER_TRANSLATION[code] || code;\n    return String.fromCharCode(code);\n  }; // the index of the last row in a CEA-608 display buffer\n\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n  // getting it through bit logic.\n\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n  // cells. The \"bottom\" row is the last element in the outer array.\n\n  var createDisplayBuffer = function () {\n    var result = [],\n      i = BOTTOM_ROW + 1;\n    while (i--) {\n      result.push('');\n    }\n    return result;\n  };\n  var Cea608Stream = function (field, dataChannel) {\n    Cea608Stream.prototype.init.call(this);\n    this.field_ = field || 0;\n    this.dataChannel_ = dataChannel || 0;\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n    this.setConstants();\n    this.reset();\n    this.push = function (packet) {\n      var data, swap, char0, char1, text; // remove the parity bits\n\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n      if (data === this.lastControlCode_) {\n        this.lastControlCode_ = null;\n        return;\n      } // Store control codes\n\n      if ((data & 0xf000) === 0x1000) {\n        this.lastControlCode_ = data;\n      } else if (data !== this.PADDING_) {\n        this.lastControlCode_ = null;\n      }\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n      if (data === this.PADDING_) {\n        return;\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\n        this.mode_ = 'popOn';\n      } else if (data === this.END_OF_CAPTION_) {\n        // If an EOC is received while in paint-on mode, the displayed caption\n        // text should be swapped to non-displayed memory as if it was a pop-on\n        // caption. Because of that, we should explicitly switch back to pop-on\n        // mode\n        this.mode_ = 'popOn';\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n        this.flushDisplayed(packet.pts); // flip memory\n\n        swap = this.displayed_;\n        this.displayed_ = this.nonDisplayed_;\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n        this.startPts_ = packet.pts;\n      } else if (data === this.ROLL_UP_2_ROWS_) {\n        this.rollUpRows_ = 2;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_3_ROWS_) {\n        this.rollUpRows_ = 3;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_4_ROWS_) {\n        this.rollUpRows_ = 4;\n        this.setRollUp(packet.pts);\n      } else if (data === this.CARRIAGE_RETURN_) {\n        this.clearFormatting(packet.pts);\n        this.flushDisplayed(packet.pts);\n        this.shiftRowsUp_();\n        this.startPts_ = packet.pts;\n      } else if (data === this.BACKSPACE_) {\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        }\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n        this.nonDisplayed_ = createDisplayBuffer();\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n        if (this.mode_ !== 'paintOn') {\n          // NOTE: This should be removed when proper caption positioning is\n          // implemented\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        }\n        this.mode_ = 'paintOn';\n        this.startPts_ = packet.pts; // Append special characters to caption text\n      } else if (this.isSpecialCharacter(char0, char1)) {\n        // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Append extended characters to caption text\n      } else if (this.isExtCharacter(char0, char1)) {\n        // Extended characters always follow their \"non-extended\" equivalents.\n        // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n        // decoders are supposed to drop the \"è\", while compliant decoders\n        // backspace the \"e\" and insert \"è\".\n        // Delete the previous character\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        } // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Process mid-row codes\n      } else if (this.isMidRowCode(char0, char1)) {\n        // Attributes are not additive, so clear all formatting\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n        // should be replaced with spaces, so add one now\n\n        this[this.mode_](packet.pts, ' ');\n        this.column_++;\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n        if ((char1 & 0x1) === 0x1) {\n          this.addFormatting(packet.pts, ['u']);\n        } // Detect offset control codes and adjust cursor\n      } else if (this.isOffsetControlCode(char0, char1)) {\n        // Cursor position is set by indent PAC (see below) in 4-column\n        // increments, with an additional offset code of 1-3 to reach any\n        // of the 32 columns specified by CEA-608. So all we need to do\n        // here is increment the column cursor by the given offset.\n        this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n      } else if (this.isPAC(char0, char1)) {\n        // There's no logic for PAC -> row mapping, so we have to just\n        // find the row code in an array and use its index :(\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n        if (this.mode_ === 'rollUp') {\n          // This implies that the base row is incorrectly set.\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n          // of roll-up rows set.\n          if (row - this.rollUpRows_ + 1 < 0) {\n            row = this.rollUpRows_ - 1;\n          }\n          this.setRollUp(packet.pts, row);\n        }\n        if (row !== this.row_) {\n          // formatting is only persistent for current row\n          this.clearFormatting(packet.pts);\n          this.row_ = row;\n        } // All PACs can apply underline, so detect and apply\n        // (All odd-numbered second bytes set underline)\n\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n          this.addFormatting(packet.pts, ['u']);\n        }\n        if ((data & 0x10) === 0x10) {\n          // We've got an indent level code. Each successive even number\n          // increments the column cursor by 4, so we can get the desired\n          // column position by bit-shifting to the right (to get n/2)\n          // and multiplying by 4.\n          this.column_ = ((data & 0xe) >> 1) * 4;\n        }\n        if (this.isColorPAC(char1)) {\n          // it's a color code, though we only support white, which\n          // can be either normal or italicized. white italics can be\n          // either 0x4e or 0x6e depending on the row, so we just\n          // bitwise-and with 0xe to see if italics should be turned on\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n        } // We have a normal character in char0, and possibly one in char1\n      } else if (this.isNormalChar(char0)) {\n        if (char1 === 0x00) {\n          char1 = null;\n        }\n        text = getCharFromCode(char0);\n        text += getCharFromCode(char1);\n        this[this.mode_](packet.pts, text);\n        this.column_ += text.length;\n      } // finish data processing\n    };\n  };\n\n  Cea608Stream.prototype = new Stream$7(); // Trigger a cue point that captures the current state of the\n  // display buffer\n\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\n    var content = this.displayed_ // remove spaces from the start and end of the string\n    .map(function (row, index) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping a malformed 608 caption at index ' + index + '.'\n        });\n        return '';\n      }\n    }, this) // combine all text rows to display in one cue\n    .join('\\n') // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n    if (content.length) {\n      this.trigger('data', {\n        startPts: this.startPts_,\n        endPts: pts,\n        text: content,\n        stream: this.name_\n      });\n    }\n  };\n  /**\n   * Zero out the data, used for startup and on seek\n   */\n\n  Cea608Stream.prototype.reset = function () {\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n    // actually display captions. If a caption is shifted to a row\n    // with a lower index than this, it is cleared from the display\n    // buffer\n\n    this.topRow_ = 0;\n    this.startPts_ = 0;\n    this.displayed_ = createDisplayBuffer();\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n    this.column_ = 0;\n    this.row_ = BOTTOM_ROW;\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n    this.formatting_ = [];\n  };\n  /**\n   * Sets up control code and related constants for this instance\n   */\n\n  Cea608Stream.prototype.setConstants = function () {\n    // The following attributes have these uses:\n    // ext_ :    char0 for mid-row codes, and the base for extended\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n    //           extended codes)\n    // control_: char0 for control codes, except byte-shifted to the\n    //           left so that we can do this.control_ | CONTROL_CODE\n    // offset_:  char0 for tab offset codes\n    //\n    // It's also worth noting that control codes, and _only_ control codes,\n    // differ between field 1 and field2. Field 2 control codes are always\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\n    // control value.\n    if (this.dataChannel_ === 0) {\n      this.BASE_ = 0x10;\n      this.EXT_ = 0x11;\n      this.CONTROL_ = (0x14 | this.field_) << 8;\n      this.OFFSET_ = 0x17;\n    } else if (this.dataChannel_ === 1) {\n      this.BASE_ = 0x18;\n      this.EXT_ = 0x19;\n      this.CONTROL_ = (0x1c | this.field_) << 8;\n      this.OFFSET_ = 0x1f;\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\n    // list is not exhaustive. For a more comprehensive listing and semantics see\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n    // Padding\n\n    this.PADDING_ = 0x0000; // Pop-on Mode\n\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n  };\n  /**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */\n\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */\n\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */\n\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n  };\n  /**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */\n\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n  };\n  /**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */\n\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */\n\n  Cea608Stream.prototype.isColorPAC = function (char1) {\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */\n\n  Cea608Stream.prototype.isNormalChar = function (char) {\n    return char >= 0x20 && char <= 0x7f;\n  };\n  /**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */\n\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n    // Reset the base row to the bottom row when switching modes\n    if (this.mode_ !== 'rollUp') {\n      this.row_ = BOTTOM_ROW;\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n      this.flushDisplayed(pts);\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.displayed_ = createDisplayBuffer();\n    }\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n      // move currently displayed captions (up or down) to the new base row\n      for (var i = 0; i < this.rollUpRows_; i++) {\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n        this.displayed_[this.row_ - i] = '';\n      }\n    }\n    if (newBaseRow === undefined) {\n      newBaseRow = this.row_;\n    }\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n  }; // Adds the opening HTML tag for the passed character to the caption text,\n  // and keeps track of it for later closing\n\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\n    this.formatting_ = this.formatting_.concat(format);\n    var text = format.reduce(function (text, format) {\n      return text + '<' + format + '>';\n    }, '');\n    this[this.mode_](pts, text);\n  }; // Adds HTML closing tags for current formatting to caption text and\n  // clears remembered formatting\n\n  Cea608Stream.prototype.clearFormatting = function (pts) {\n    if (!this.formatting_.length) {\n      return;\n    }\n    var text = this.formatting_.reverse().reduce(function (text, format) {\n      return text + '</' + format + '>';\n    }, '');\n    this.formatting_ = [];\n    this[this.mode_](pts, text);\n  }; // Mode Implementations\n\n  Cea608Stream.prototype.popOn = function (pts, text) {\n    var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n    baseRow += text;\n    this.nonDisplayed_[this.row_] = baseRow;\n  };\n  Cea608Stream.prototype.rollUp = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  };\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\n    var i; // clear out inactive rows\n\n    for (i = 0; i < this.topRow_; i++) {\n      this.displayed_[i] = '';\n    }\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n      this.displayed_[i] = '';\n    } // shift displayed rows up\n\n    for (i = this.topRow_; i < this.row_; i++) {\n      this.displayed_[i] = this.displayed_[i + 1];\n    } // clear out the bottom row\n\n    this.displayed_[this.row_] = '';\n  };\n  Cea608Stream.prototype.paintOn = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  }; // exports\n\n  var captionStream = {\n    CaptionStream: CaptionStream$2,\n    Cea608Stream: Cea608Stream,\n    Cea708Stream: Cea708Stream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var streamTypes = {\n    H264_STREAM_TYPE: 0x1B,\n    ADTS_STREAM_TYPE: 0x0F,\n    METADATA_STREAM_TYPE: 0x15\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and corrects\n   * decode and presentation time stamps to account for a rollover\n   * of the 33 bit value.\n   */\n\n  var Stream$6 = stream;\n  var MAX_TS = 8589934592;\n  var RO_THRESH = 4294967296;\n  var TYPE_SHARED = 'shared';\n  var handleRollover$1 = function (value, reference) {\n    var direction = 1;\n    if (value > reference) {\n      // If the current timestamp value is greater than our reference timestamp and we detect a\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n      // rollover point. In loading this segment, the timestamp values will be very large,\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n      // the time stamp to be `value - 2^33`.\n      direction = -1;\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n    // cause an incorrect adjustment.\n\n    while (Math.abs(reference - value) > RO_THRESH) {\n      value += direction * MAX_TS;\n    }\n    return value;\n  };\n  var TimestampRolloverStream$1 = function (type) {\n    var lastDTS, referenceDTS;\n    TimestampRolloverStream$1.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n    // video and audio. We could use `undefined` here, but having a string\n    // makes debugging a little clearer.\n\n    this.type_ = type || TYPE_SHARED;\n    this.push = function (data) {\n      // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n      // streams will only accept data that matches their type.\n      if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n        return;\n      }\n      if (referenceDTS === undefined) {\n        referenceDTS = data.dts;\n      }\n      data.dts = handleRollover$1(data.dts, referenceDTS);\n      data.pts = handleRollover$1(data.pts, referenceDTS);\n      lastDTS = data.dts;\n      this.trigger('data', data);\n    };\n    this.flush = function () {\n      referenceDTS = lastDTS;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.discontinuity = function () {\n      referenceDTS = void 0;\n      lastDTS = void 0;\n    };\n    this.reset = function () {\n      this.discontinuity();\n      this.trigger('reset');\n    };\n  };\n  TimestampRolloverStream$1.prototype = new Stream$6();\n  var timestampRolloverStream = {\n    TimestampRolloverStream: TimestampRolloverStream$1,\n    handleRollover: handleRollover$1\n  }; // Once IE11 support is dropped, this function should be removed.\n\n  var typedArrayIndexOf$1 = (typedArray, element, fromIndex) => {\n    if (!typedArray) {\n      return -1;\n    }\n    var currentIndex = fromIndex;\n    for (; currentIndex < typedArray.length; currentIndex++) {\n      if (typedArray[currentIndex] === element) {\n        return currentIndex;\n      }\n    }\n    return -1;\n  };\n  var typedArray = {\n    typedArrayIndexOf: typedArrayIndexOf$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and parses out\n   * ID3 metadata from them, if present.\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var Stream$5 = stream,\n    StreamTypes$3 = streamTypes,\n    typedArrayIndexOf = typedArray.typedArrayIndexOf,\n    // Frames that allow different types of text encoding contain a text\n    // encoding description byte [ID3v2.4.0 section 4.]\n    textEncodingDescriptionByte = {\n      Iso88591: 0x00,\n      // ISO-8859-1, terminated with \\0.\n      Utf16: 0x01,\n      // UTF-16 encoded Unicode BOM, terminated with \\0\\0\n      Utf16be: 0x02,\n      // UTF-16BE encoded Unicode, without BOM, terminated with \\0\\0\n      Utf8: 0x03 // UTF-8 encoded Unicode, terminated with \\0\n    },\n    // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n    percentEncode$1 = function (bytes, start, end) {\n      var i,\n        result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function (bytes, start, end) {\n      return decodeURIComponent(percentEncode$1(bytes, start, end));\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591$1 = function (bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    },\n    parseSyncSafeInteger$1 = function (data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n    frameParsers = {\n      'APIC': function (frame) {\n        var i = 1,\n          mimeTypeEndIndex,\n          descriptionEndIndex,\n          LINK_MIME_TYPE = '-->';\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parsing fields [ID3v2.4.0 section 4.14.]\n\n        mimeTypeEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (mimeTypeEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Mime type field (terminated with \\0)\n\n        frame.mimeType = parseIso88591$1(frame.data, i, mimeTypeEndIndex);\n        i = mimeTypeEndIndex + 1; // parsing 1-byte Picture Type field\n\n        frame.pictureType = frame.data[i];\n        i++;\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (descriptionEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Description field (terminated with \\0)\n\n        frame.description = parseUtf8(frame.data, i, descriptionEndIndex);\n        i = descriptionEndIndex + 1;\n        if (frame.mimeType === LINK_MIME_TYPE) {\n          // parsing Picture Data field as URL (always represented as ISO-8859-1 [ID3v2.4.0 section 4.])\n          frame.url = parseIso88591$1(frame.data, i, frame.data.length);\n        } else {\n          // parsing Picture Data field as binary data\n          frame.pictureData = frame.data.subarray(i, frame.data.length);\n        }\n      },\n      'T*': function (frame) {\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parse text field, do not include null terminator in the frame value\n        // frames that allow different types of encoding contain terminated text [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, 1, frame.data.length).replace(/\\0*$/, ''); // text information frames supports multiple strings, stored as a terminator separated list [ID3v2.4.0 section 4.2.]\n\n        frame.values = frame.value.split('\\0');\n      },\n      'TXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the text fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // do not include the null terminator in the tag value\n        // frames that allow different types of encoding contain terminated text\n        // [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0*$/, '');\n        frame.data = frame.value;\n      },\n      'W*': function (frame) {\n        // parse URL field; URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information should be ignored [ID3v2.4.0 section 4.3]\n        frame.url = parseIso88591$1(frame.data, 0, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'WXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the description and URL fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information\n        // should be ignored [ID3v2.4.0 section 4.3]\n\n        frame.url = parseIso88591$1(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'PRIV': function (frame) {\n        var i;\n        for (i = 0; i < frame.data.length; i++) {\n          if (frame.data[i] === 0) {\n            // parse the description and URL fields\n            frame.owner = parseIso88591$1(frame.data, 0, i);\n            break;\n          }\n        }\n        frame.privateData = frame.data.subarray(i + 1);\n        frame.data = frame.privateData;\n      }\n    },\n    MetadataStream;\n  MetadataStream = function (options) {\n    var settings = {\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n      i;\n    MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n    this.dispatchType = StreamTypes$3.METADATA_STREAM_TYPE.toString(16);\n    if (settings.descriptor) {\n      for (i = 0; i < settings.descriptor.length; i++) {\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n      }\n    }\n    this.push = function (chunk) {\n      var tag, frameStart, frameSize, frame, i, frameHeader;\n      if (chunk.type !== 'timed-metadata') {\n        return;\n      } // if data_alignment_indicator is set in the PES header,\n      // we must have the start of a new ID3 tag. Assume anything\n      // remaining in the buffer was malformed and throw it out\n\n      if (chunk.dataAlignmentIndicator) {\n        bufferSize = 0;\n        buffer.length = 0;\n      } // ignore events that don't look like ID3 data\n\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping unrecognized metadata packet'\n        });\n        return;\n      } // add this chunk to the data we've collected so far\n\n      buffer.push(chunk);\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n      if (buffer.length === 1) {\n        // the frame size is transmitted as a 28-bit integer in the\n        // last four bytes of the ID3 header.\n        // The most significant bit of each byte is dropped and the\n        // results concatenated to recover the actual value.\n        tagSize = parseSyncSafeInteger$1(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n        // convenient for our comparisons to include it\n\n        tagSize += 10;\n      } // if the entire frame has not arrived, wait for more data\n\n      if (bufferSize < tagSize) {\n        return;\n      } // collect the entire frame so it can be parsed\n\n      tag = {\n        data: new Uint8Array(tagSize),\n        frames: [],\n        pts: buffer[0].pts,\n        dts: buffer[0].dts\n      };\n      for (i = 0; i < tagSize;) {\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n        i += buffer[0].data.byteLength;\n        bufferSize -= buffer[0].data.byteLength;\n        buffer.shift();\n      } // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n      if (tag.data[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(tag.data.subarray(10, 14)); // clip any padding off the end\n\n        tagSize -= parseSyncSafeInteger$1(tag.data.subarray(16, 20));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(tag.data.subarray(frameStart + 4, frameStart + 8));\n        if (frameSize < 1) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Malformed ID3 frame encountered. Skipping remaining metadata parsing.'\n          }); // If the frame is malformed, don't parse any further frames but allow previous valid parsed frames\n          // to be sent along.\n\n          break;\n        }\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n        frame = {\n          id: frameHeader,\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id; // parse frame values\n\n        if (frameParsers[frame.id]) {\n          // use frame specific parser\n          frameParsers[frame.id](frame);\n        } else if (frame.id[0] === 'T') {\n          // use text frame generic parser\n          frameParsers['T*'](frame);\n        } else if (frame.id[0] === 'W') {\n          // use URL link frame generic parser\n          frameParsers['W*'](frame);\n        } // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var d = frame.data,\n            size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n        tag.frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n      this.trigger('data', tag);\n    };\n  };\n  MetadataStream.prototype = new Stream$5();\n  var metadataStream = MetadataStream;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$4 = stream,\n    CaptionStream$1 = captionStream,\n    StreamTypes$2 = streamTypes,\n    TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n  var TransportPacketStream, TransportParseStream, ElementaryStream; // constants\n\n  var MP2T_PACKET_LENGTH$1 = 188,\n    // bytes\n    SYNC_BYTE$1 = 0x47;\n  /**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */\n\n  TransportPacketStream = function () {\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n      bytesInBuffer = 0;\n    TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n    /**\n     * Split a stream of data into M2TS packets\n    **/\n\n    this.push = function (bytes) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH$1,\n        everything; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (bytesInBuffer) {\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n        everything.set(buffer.subarray(0, bytesInBuffer));\n        everything.set(bytes, bytesInBuffer);\n        bytesInBuffer = 0;\n      } else {\n        everything = bytes;\n      } // While we have enough data for a packet\n\n      while (endIndex < everything.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n          // We found a packet so emit it and jump one whole packet forward in\n          // the stream\n          this.trigger('data', everything.subarray(startIndex, endIndex));\n          startIndex += MP2T_PACKET_LENGTH$1;\n          endIndex += MP2T_PACKET_LENGTH$1;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      } // If there was some data left over at the end of the segment that couldn't\n      // possibly be a whole packet, keep it because it might be the start of a packet\n      // that continues in the next segment\n\n      if (startIndex < everything.byteLength) {\n        buffer.set(everything.subarray(startIndex), 0);\n        bytesInBuffer = everything.byteLength - startIndex;\n      }\n    };\n    /**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/\n\n    this.flush = function () {\n      // If the buffer contains a whole packet when we are being flushed, emit it\n      // and empty the buffer. Otherwise hold onto the data because it may be\n      // important for decoding the next segment\n      if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n        this.trigger('data', buffer);\n        bytesInBuffer = 0;\n      }\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.reset = function () {\n      bytesInBuffer = 0;\n      this.trigger('reset');\n    };\n  };\n  TransportPacketStream.prototype = new Stream$4();\n  /**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */\n\n  TransportParseStream = function () {\n    var parsePsi, parsePat, parsePmt, self;\n    TransportParseStream.prototype.init.call(this);\n    self = this;\n    this.packetsWaitingForPmt = [];\n    this.programMapTable = undefined;\n    parsePsi = function (payload, psi) {\n      var offset = 0; // PSI packets may be split into multiple sections and those\n      // sections may be split into multiple packets. If a PSI\n      // section starts in this packet, the payload_unit_start_indicator\n      // will be true and the first byte of the payload will indicate\n      // the offset from the current position to the start of the\n      // section.\n\n      if (psi.payloadUnitStartIndicator) {\n        offset += payload[offset] + 1;\n      }\n      if (psi.type === 'pat') {\n        parsePat(payload.subarray(offset), psi);\n      } else {\n        parsePmt(payload.subarray(offset), psi);\n      }\n    };\n    parsePat = function (payload, pat) {\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n      // skip the PSI header and parse the first PMT entry\n\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n      pat.pmtPid = self.pmtPid;\n    };\n    /**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */\n\n    parsePmt = function (payload, pmt) {\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(payload[5] & 0x01)) {\n        return;\n      } // overwrite any existing program map table\n\n      self.programMapTable = {\n        video: null,\n        audio: null,\n        'timed-metadata': {}\n      }; // the mapping table ends at the end of the current section\n\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n      offset = 12 + programInfoLength;\n      while (offset < tableEnd) {\n        var streamType = payload[offset];\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n        // TODO: should this be done for metadata too? for now maintain behavior of\n        //       multiple metadata streams\n\n        if (streamType === StreamTypes$2.H264_STREAM_TYPE && self.programMapTable.video === null) {\n          self.programMapTable.video = pid;\n        } else if (streamType === StreamTypes$2.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n          self.programMapTable.audio = pid;\n        } else if (streamType === StreamTypes$2.METADATA_STREAM_TYPE) {\n          // map pid to stream type for metadata streams\n          self.programMapTable['timed-metadata'][pid] = streamType;\n        } // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n      } // record the map on the packet as well\n\n      pmt.programMapTable = self.programMapTable;\n    };\n    /**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */\n\n    this.push = function (packet) {\n      var result = {},\n        offset = 4;\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n      result.pid = packet[1] & 0x1f;\n      result.pid <<= 8;\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[offset] + 1;\n      } // parse the rest of the packet based on the type\n\n      if (result.pid === 0) {\n        result.type = 'pat';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result);\n      } else if (result.pid === this.pmtPid) {\n        result.type = 'pmt';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n        while (this.packetsWaitingForPmt.length) {\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n        }\n      } else if (this.programMapTable === undefined) {\n        // When we have not seen a PMT yet, defer further processing of\n        // PES packets until one has been parsed\n        this.packetsWaitingForPmt.push([packet, offset, result]);\n      } else {\n        this.processPes_(packet, offset, result);\n      }\n    };\n    this.processPes_ = function (packet, offset, result) {\n      // set the appropriate stream type\n      if (result.pid === this.programMapTable.video) {\n        result.streamType = StreamTypes$2.H264_STREAM_TYPE;\n      } else if (result.pid === this.programMapTable.audio) {\n        result.streamType = StreamTypes$2.ADTS_STREAM_TYPE;\n      } else {\n        // if not video or audio, it is timed-metadata or unknown\n        // if unknown, streamType will be undefined\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\n      }\n      result.type = 'pes';\n      result.data = packet.subarray(offset);\n      this.trigger('data', result);\n    };\n  };\n  TransportParseStream.prototype = new Stream$4();\n  TransportParseStream.STREAM_TYPES = {\n    h264: 0x1b,\n    adts: 0x0f\n  };\n  /**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */\n\n  ElementaryStream = function () {\n    var self = this,\n      segmentHadPmt = false,\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n      audio = {\n        data: [],\n        size: 0\n      },\n      timedMetadata = {\n        data: [],\n        size: 0\n      },\n      programMapTable,\n      parsePes = function (payload, pes) {\n        var ptsDtsFlags;\n        const startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n        pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n        // that are frame data that is continuing from the previous fragment. This\n        // is to check that the pes data is the start of a new pes payload\n\n        if (startPrefix !== 1) {\n          return;\n        } // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function (stream, type, forceFlush) {\n        var packetData = new Uint8Array(stream.size),\n          event = {\n            type: type\n          },\n          i = 0,\n          offset = 0,\n          packetFlushable = false,\n          fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream.data.length || stream.size < 9) {\n          return;\n        }\n        event.trackId = stream.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream.data.length; i++) {\n          fragment = stream.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream.size = 0;\n          stream.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n    ElementaryStream.prototype.init.call(this);\n    /**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/\n\n    this.push = function (data) {\n      ({\n        pat: function () {// we have to wait for the PMT to arrive as well before we\n          // have any meaningful metadata\n        },\n        pes: function () {\n          var stream, streamType;\n          switch (data.streamType) {\n            case StreamTypes$2.H264_STREAM_TYPE:\n              stream = video;\n              streamType = 'video';\n              break;\n            case StreamTypes$2.ADTS_STREAM_TYPE:\n              stream = audio;\n              streamType = 'audio';\n              break;\n            case StreamTypes$2.METADATA_STREAM_TYPE:\n              stream = timedMetadata;\n              streamType = 'timed-metadata';\n              break;\n            default:\n              // ignore unknown stream types\n              return;\n          } // if a new packet is starting, we can flush the completed\n          // packet\n\n          if (data.payloadUnitStartIndicator) {\n            flushStream(stream, streamType, true);\n          } // buffer this fragment until we are sure we've received the\n          // complete payload\n\n          stream.data.push(data);\n          stream.size += data.data.byteLength;\n        },\n        pmt: function () {\n          var event = {\n            type: 'metadata',\n            tracks: []\n          };\n          programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n          if (programMapTable.audio !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n          segmentHadPmt = true;\n          self.trigger('data', event);\n        }\n      })[data.type]();\n    };\n    this.reset = function () {\n      video.size = 0;\n      video.data.length = 0;\n      audio.size = 0;\n      audio.data.length = 0;\n      this.trigger('reset');\n    };\n    /**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */\n\n    this.flushStreams_ = function () {\n      // !!THIS ORDER IS IMPORTANT!!\n      // video first then audio\n      flushStream(video, 'video');\n      flushStream(audio, 'audio');\n      flushStream(timedMetadata, 'timed-metadata');\n    };\n    this.flush = function () {\n      // if on flush we haven't had a pmt emitted\n      // and we have a pmt to emit. emit the pmt\n      // so that we trigger a trackinfo downstream.\n      if (!segmentHadPmt && programMapTable) {\n        var pmt = {\n          type: 'metadata',\n          tracks: []\n        }; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n        self.trigger('data', pmt);\n      }\n      segmentHadPmt = false;\n      this.flushStreams_();\n      this.trigger('done');\n    };\n  };\n  ElementaryStream.prototype = new Stream$4();\n  var m2ts$1 = {\n    PAT_PID: 0x0000,\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n    TransportPacketStream: TransportPacketStream,\n    TransportParseStream: TransportParseStream,\n    ElementaryStream: ElementaryStream,\n    TimestampRolloverStream: TimestampRolloverStream,\n    CaptionStream: CaptionStream$1.CaptionStream,\n    Cea608Stream: CaptionStream$1.Cea608Stream,\n    Cea708Stream: CaptionStream$1.Cea708Stream,\n    MetadataStream: metadataStream\n  };\n  for (var type in StreamTypes$2) {\n    if (StreamTypes$2.hasOwnProperty(type)) {\n      m2ts$1[type] = StreamTypes$2[type];\n    }\n  }\n  var m2ts_1 = m2ts$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$3 = stream;\n  var ONE_SECOND_IN_TS$2 = clock$2.ONE_SECOND_IN_TS;\n  var AdtsStream$1;\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  /*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */\n\n  AdtsStream$1 = function (handlePartialSegments) {\n    var buffer,\n      frameNum = 0;\n    AdtsStream$1.prototype.init.call(this);\n    this.skipWarn_ = function (start, end) {\n      this.trigger('log', {\n        level: 'warn',\n        message: `adts skiping bytes ${start} to ${end} in frame ${frameNum} outside syncword`\n      });\n    };\n    this.push = function (packet) {\n      var i = 0,\n        frameLength,\n        protectionSkipBytes,\n        oldBuffer,\n        sampleCount,\n        adtsFrameDuration;\n      if (!handlePartialSegments) {\n        frameNum = 0;\n      }\n      if (packet.type !== 'audio') {\n        // ignore non-audio data\n        return;\n      } // Prepend any data in the buffer to the input data so that we can parse\n      // aac frames the cross a PES packet boundary\n\n      if (buffer && buffer.length) {\n        oldBuffer = buffer;\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n        buffer.set(oldBuffer);\n        buffer.set(packet.data, oldBuffer.byteLength);\n      } else {\n        buffer = packet.data;\n      } // unpack any ADTS frames which have been fully received\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n      var skip; // We use i + 7 here because we want to be able to parse the entire header.\n      // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n      while (i + 7 < buffer.length) {\n        // Look for the start of an ADTS header..\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n          if (typeof skip !== 'number') {\n            skip = i;\n          } // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n\n          i++;\n          continue;\n        }\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n        // end of the ADTS header\n\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n        // end of the sync sequence\n        // NOTE: frame length includes the size of the header\n\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n        adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n        // then we have to wait for more data\n\n        if (buffer.byteLength - i < frameLength) {\n          break;\n        } // Otherwise, deliver the complete AAC frame\n\n        this.trigger('data', {\n          pts: packet.pts + frameNum * adtsFrameDuration,\n          dts: packet.dts + frameNum * adtsFrameDuration,\n          sampleCount: sampleCount,\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n          samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n          samplesize: 16,\n          // data is the frame without it's header\n          data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n        });\n        frameNum++;\n        i += frameLength;\n      }\n      if (typeof skip === 'number') {\n        this.skipWarn_(skip, i);\n        skip = null;\n      } // remove processed bytes from the buffer.\n\n      buffer = buffer.subarray(i);\n    };\n    this.flush = function () {\n      frameNum = 0;\n      this.trigger('done');\n    };\n    this.reset = function () {\n      buffer = void 0;\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      buffer = void 0;\n      this.trigger('endedtimeline');\n    };\n  };\n  AdtsStream$1.prototype = new Stream$3();\n  var adts = AdtsStream$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ExpGolomb$1;\n  /**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */\n\n  ExpGolomb$1 = function (workingData) {\n    var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n      // the current word being examined\n      workingWord = 0,\n      // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n    // ():uint\n\n    this.length = function () {\n      return 8 * workingBytesAvailable;\n    }; // ():uint\n\n    this.bitsAvailable = function () {\n      return 8 * workingBytesAvailable + workingBitsAvailable;\n    }; // ():void\n\n    this.loadWord = function () {\n      var position = workingData.byteLength - workingBytesAvailable,\n        workingBytes = new Uint8Array(4),\n        availableBytes = Math.min(4, workingBytesAvailable);\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n      workingBitsAvailable = availableBytes * 8;\n      workingBytesAvailable -= availableBytes;\n    }; // (count:int):void\n\n    this.skipBits = function (count) {\n      var skipBytes; // :int\n\n      if (workingBitsAvailable > count) {\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      } else {\n        count -= workingBitsAvailable;\n        skipBytes = Math.floor(count / 8);\n        count -= skipBytes * 8;\n        workingBytesAvailable -= skipBytes;\n        this.loadWord();\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      }\n    }; // (size:int):uint\n\n    this.readBits = function (size) {\n      var bits = Math.min(workingBitsAvailable, size),\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n      // if size > 31, handle error\n\n      workingBitsAvailable -= bits;\n      if (workingBitsAvailable > 0) {\n        workingWord <<= bits;\n      } else if (workingBytesAvailable > 0) {\n        this.loadWord();\n      }\n      bits = size - bits;\n      if (bits > 0) {\n        return valu << bits | this.readBits(bits);\n      }\n      return valu;\n    }; // ():uint\n\n    this.skipLeadingZeros = function () {\n      var leadingZeroCount; // :uint\n\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n          // the first bit of working word is 1\n          workingWord <<= leadingZeroCount;\n          workingBitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      } // we exhausted workingWord and still have not found a 1\n\n      this.loadWord();\n      return leadingZeroCount + this.skipLeadingZeros();\n    }; // ():void\n\n    this.skipUnsignedExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():void\n\n    this.skipExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():uint\n\n    this.readUnsignedExpGolomb = function () {\n      var clz = this.skipLeadingZeros(); // :uint\n\n      return this.readBits(clz + 1) - 1;\n    }; // ():int\n\n    this.readExpGolomb = function () {\n      var valu = this.readUnsignedExpGolomb(); // :int\n\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      }\n\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }; // Some convenience functions\n    // :Boolean\n\n    this.readBoolean = function () {\n      return this.readBits(1) === 1;\n    }; // ():int\n\n    this.readUnsignedByte = function () {\n      return this.readBits(8);\n    };\n    this.loadWord();\n  };\n  var expGolomb = ExpGolomb$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$2 = stream;\n  var ExpGolomb = expGolomb;\n  var H264Stream$1, NalByteStream;\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\n  /**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */\n\n  NalByteStream = function () {\n    var syncPoint = 0,\n      i,\n      buffer;\n    NalByteStream.prototype.init.call(this);\n    /*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */\n\n    this.push = function (data) {\n      var swapBuffer;\n      if (!buffer) {\n        buffer = data.data;\n      } else {\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n        swapBuffer.set(buffer);\n        swapBuffer.set(data.data, buffer.byteLength);\n        buffer = swapBuffer;\n      }\n      var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n      // scan for NAL unit boundaries\n      // a match looks like this:\n      // 0 0 1 .. NAL .. 0 0 1\n      // ^ sync point        ^ i\n      // or this:\n      // 0 0 1 .. NAL .. 0 0 0\n      // ^ sync point        ^ i\n      // advance the sync point to a NAL start, if necessary\n\n      for (; syncPoint < len - 3; syncPoint++) {\n        if (buffer[syncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          i = syncPoint + 5;\n          break;\n        }\n      }\n      while (i < len) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (buffer[i]) {\n          case 0:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0) {\n              i += 2;\n              break;\n            } else if (buffer[i - 2] !== 0) {\n              i++;\n              break;\n            } // deliver the NAL unit if it isn't empty\n\n            if (syncPoint + 3 !== i - 2) {\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            } // drop trailing zeroes\n\n            do {\n              i++;\n            } while (buffer[i] !== 1 && i < len);\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          case 1:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n              i += 3;\n              break;\n            } // deliver the NAL unit\n\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            i += 3;\n            break;\n        }\n      } // filter out the NAL units that were delivered\n\n      buffer = buffer.subarray(syncPoint);\n      i -= syncPoint;\n      syncPoint = 0;\n    };\n    this.reset = function () {\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('reset');\n    };\n    this.flush = function () {\n      // deliver the last buffered NAL unit\n      if (buffer && buffer.byteLength > 3) {\n        this.trigger('data', buffer.subarray(syncPoint + 3));\n      } // reset the stream state\n\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n  };\n  NalByteStream.prototype = new Stream$2(); // values of profile_idc that indicate additional fields are included in the SPS\n  // see Recommendation ITU-T H.264 (4/2013),\n  // 7.3.2.1.1 Sequence parameter set data syntax\n\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\n    100: true,\n    110: true,\n    122: true,\n    244: true,\n    44: true,\n    83: true,\n    86: true,\n    118: true,\n    128: true,\n    // TODO: the three profiles below don't\n    // appear to have sps data in the specificiation anymore?\n    138: true,\n    139: true,\n    134: true\n  };\n  /**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */\n\n  H264Stream$1 = function () {\n    var nalByteStream = new NalByteStream(),\n      self,\n      trackId,\n      currentPts,\n      currentDts,\n      discardEmulationPreventionBytes,\n      readSequenceParameterSet,\n      skipScalingList;\n    H264Stream$1.prototype.init.call(this);\n    self = this;\n    /*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */\n\n    this.push = function (packet) {\n      if (packet.type !== 'video') {\n        return;\n      }\n      trackId = packet.trackId;\n      currentPts = packet.pts;\n      currentDts = packet.dts;\n      nalByteStream.push(packet);\n    };\n    /*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */\n\n    nalByteStream.on('data', function (data) {\n      var event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data,\n        nalUnitTypeCode: data[0] & 0x1f\n      };\n      switch (event.nalUnitTypeCode) {\n        case 0x05:\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n          break;\n        case 0x06:\n          event.nalUnitType = 'sei_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          break;\n        case 0x07:\n          event.nalUnitType = 'seq_parameter_set_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          event.config = readSequenceParameterSet(event.escapedRBSP);\n          break;\n        case 0x08:\n          event.nalUnitType = 'pic_parameter_set_rbsp';\n          break;\n        case 0x09:\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\n          break;\n      } // This triggers data on the H264Stream\n\n      self.trigger('data', event);\n    });\n    nalByteStream.on('done', function () {\n      self.trigger('done');\n    });\n    nalByteStream.on('partialdone', function () {\n      self.trigger('partialdone');\n    });\n    nalByteStream.on('reset', function () {\n      self.trigger('reset');\n    });\n    nalByteStream.on('endedtimeline', function () {\n      self.trigger('endedtimeline');\n    });\n    this.flush = function () {\n      nalByteStream.flush();\n    };\n    this.partialFlush = function () {\n      nalByteStream.partialFlush();\n    };\n    this.reset = function () {\n      nalByteStream.reset();\n    };\n    this.endTimeline = function () {\n      nalByteStream.endTimeline();\n    };\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n    skipScalingList = function (count, expGolombDecoder) {\n      var lastScale = 8,\n        nextScale = 8,\n        j,\n        deltaScale;\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = expGolombDecoder.readExpGolomb();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    };\n    /**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */\n\n    discardEmulationPreventionBytes = function (data) {\n      var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n      return newData;\n    };\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n    readSequenceParameterSet = function (data) {\n      var frameCropLeftOffset = 0,\n        frameCropRightOffset = 0,\n        frameCropTopOffset = 0,\n        frameCropBottomOffset = 0,\n        expGolombDecoder,\n        profileIdc,\n        levelIdc,\n        profileCompatibility,\n        chromaFormatIdc,\n        picOrderCntType,\n        numRefFramesInPicOrderCntCycle,\n        picWidthInMbsMinus1,\n        picHeightInMapUnitsMinus1,\n        frameMbsOnlyFlag,\n        scalingListCount,\n        sarRatio = [1, 1],\n        aspectRatioIdc,\n        i;\n      expGolombDecoder = new ExpGolomb(data);\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n        if (chromaFormatIdc === 3) {\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n          for (i = 0; i < scalingListCount; i++) {\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16, expGolombDecoder);\n              } else {\n                skipScalingList(64, expGolombDecoder);\n              }\n            }\n          }\n        }\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n      if (picOrderCntType === 0) {\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n      if (frameMbsOnlyFlag === 0) {\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n      }\n\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n      }\n      if (expGolombDecoder.readBoolean()) {\n        // vui_parameters_present_flag\n        if (expGolombDecoder.readBoolean()) {\n          // aspect_ratio_info_present_flag\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n          switch (aspectRatioIdc) {\n            case 1:\n              sarRatio = [1, 1];\n              break;\n            case 2:\n              sarRatio = [12, 11];\n              break;\n            case 3:\n              sarRatio = [10, 11];\n              break;\n            case 4:\n              sarRatio = [16, 11];\n              break;\n            case 5:\n              sarRatio = [40, 33];\n              break;\n            case 6:\n              sarRatio = [24, 11];\n              break;\n            case 7:\n              sarRatio = [20, 11];\n              break;\n            case 8:\n              sarRatio = [32, 11];\n              break;\n            case 9:\n              sarRatio = [80, 33];\n              break;\n            case 10:\n              sarRatio = [18, 11];\n              break;\n            case 11:\n              sarRatio = [15, 11];\n              break;\n            case 12:\n              sarRatio = [64, 33];\n              break;\n            case 13:\n              sarRatio = [160, 99];\n              break;\n            case 14:\n              sarRatio = [4, 3];\n              break;\n            case 15:\n              sarRatio = [3, 2];\n              break;\n            case 16:\n              sarRatio = [2, 1];\n              break;\n            case 255:\n              {\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                break;\n              }\n          }\n          if (sarRatio) {\n            sarRatio[0] / sarRatio[1];\n          }\n        }\n      }\n      return {\n        profileIdc: profileIdc,\n        levelIdc: levelIdc,\n        profileCompatibility: profileCompatibility,\n        width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n        // sar is sample aspect ratio\n        sarRatio: sarRatio\n      };\n    };\n  };\n  H264Stream$1.prototype = new Stream$2();\n  var h264 = {\n    H264Stream: H264Stream$1,\n    NalByteStream: NalByteStream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */\n\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  var parseId3TagSize = function (header, byteIndex) {\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n    returnSize = returnSize >= 0 ? returnSize : 0;\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n  var getId3Offset = function (data, offset) {\n    if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n      return offset;\n    }\n    offset += parseId3TagSize(data, offset);\n    return getId3Offset(data, offset);\n  }; // TODO: use vhs-utils\n\n  var isLikelyAacData$1 = function (data) {\n    var offset = getId3Offset(data, 0);\n    return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 &&\n    // verify that the 2 layer bits are 0, aka this\n    // is not mp3 data but aac data.\n    (data[offset + 1] & 0x16) === 0x10;\n  };\n  var parseSyncSafeInteger = function (data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  }; // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n  var percentEncode = function (bytes, start, end) {\n    var i,\n      result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  }; // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n\n  var parseIso88591 = function (bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  };\n\n  var parseAdtsSize = function (header, byteIndex) {\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n    return highTwo | middle | lowThree;\n  };\n  var parseType$4 = function (header, byteIndex) {\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n      return 'timed-metadata';\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n      return 'audio';\n    }\n    return null;\n  };\n  var parseSampleRate = function (packet) {\n    var i = 0;\n    while (i + 5 < packet.length) {\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n      return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n    }\n    return null;\n  };\n  var parseAacTimestamp = function (packet) {\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n    frameStart = 10;\n    if (packet[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        return null;\n      }\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n      if (frameHeader === 'PRIV') {\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n        for (var i = 0; i < frame.byteLength; i++) {\n          if (frame[i] === 0) {\n            var owner = parseIso88591(frame, 0, i);\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.subarray(i + 1);\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              return size;\n            }\n            break;\n          }\n        }\n      }\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < packet.byteLength);\n    return null;\n  };\n  var utils = {\n    isLikelyAacData: isLikelyAacData$1,\n    parseId3TagSize: parseId3TagSize,\n    parseAdtsSize: parseAdtsSize,\n    parseType: parseType$4,\n    parseSampleRate: parseSampleRate,\n    parseAacTimestamp: parseAacTimestamp\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based aac to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$1 = stream;\n  var aacUtils = utils; // Constants\n\n  var AacStream$1;\n  /**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */\n\n  AacStream$1 = function () {\n    var everything = new Uint8Array(),\n      timeStamp = 0;\n    AacStream$1.prototype.init.call(this);\n    this.setTimestamp = function (timestamp) {\n      timeStamp = timestamp;\n    };\n    this.push = function (bytes) {\n      var frameSize = 0,\n        byteIndex = 0,\n        bytesLeft,\n        chunk,\n        packet,\n        tempLength; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (everything.length) {\n        tempLength = everything.length;\n        everything = new Uint8Array(bytes.byteLength + tempLength);\n        everything.set(everything.subarray(0, tempLength));\n        everything.set(bytes, tempLength);\n      } else {\n        everything = bytes;\n      }\n      while (everything.length - byteIndex >= 3) {\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (everything.length - byteIndex < 10) {\n            break;\n          } // check framesize\n\n          frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n          // Add to byteIndex to support multiple ID3 tags in sequence\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          chunk = {\n            type: 'timed-metadata',\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\n          };\n          this.trigger('data', chunk);\n          byteIndex += frameSize;\n          continue;\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (everything.length - byteIndex < 7) {\n            break;\n          }\n          frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          packet = {\n            type: 'audio',\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\n            pts: timeStamp,\n            dts: timeStamp\n          };\n          this.trigger('data', packet);\n          byteIndex += frameSize;\n          continue;\n        }\n        byteIndex++;\n      }\n      bytesLeft = everything.length - byteIndex;\n      if (bytesLeft > 0) {\n        everything = everything.subarray(byteIndex);\n      } else {\n        everything = new Uint8Array();\n      }\n    };\n    this.reset = function () {\n      everything = new Uint8Array();\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      everything = new Uint8Array();\n      this.trigger('endedtimeline');\n    };\n  };\n  AacStream$1.prototype = new Stream$1();\n  var aac = AacStream$1;\n  var AUDIO_PROPERTIES$1 = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n  var audioProperties = AUDIO_PROPERTIES$1;\n  var VIDEO_PROPERTIES$1 = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n  var videoProperties = VIDEO_PROPERTIES$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream = stream;\n  var mp4 = mp4Generator;\n  var frameUtils = frameUtils$1;\n  var audioFrameUtils = audioFrameUtils$1;\n  var trackDecodeInfo = trackDecodeInfo$1;\n  var m2ts = m2ts_1;\n  var clock = clock$2;\n  var AdtsStream = adts;\n  var H264Stream = h264.H264Stream;\n  var AacStream = aac;\n  var isLikelyAacData = utils.isLikelyAacData;\n  var ONE_SECOND_IN_TS$1 = clock$2.ONE_SECOND_IN_TS;\n  var AUDIO_PROPERTIES = audioProperties;\n  var VIDEO_PROPERTIES = videoProperties; // object types\n\n  var VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n  var retriggerForStream = function (key, event) {\n    event.stream = key;\n    this.trigger('log', event);\n  };\n  var addPipelineLogRetriggers = function (transmuxer, pipeline) {\n    var keys = Object.keys(pipeline);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]; // skip non-stream keys and headOfPipeline\n      // which is just a duplicate\n\n      if (key === 'headOfPipeline' || !pipeline[key].on) {\n        continue;\n      }\n      pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n    }\n  };\n  /**\n   * Compare two arrays (even typed) for same-ness\n   */\n\n  var arrayEquals = function (a, b) {\n    var i;\n    if (a.length !== b.length) {\n      return false;\n    } // compare the value of each element in the array\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var generateSegmentTimingInfo = function (baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n    var ptsOffsetFromDts = startPts - startDts,\n      decodeDuration = endDts - startDts,\n      presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\n    // In order to provide relevant values for the player times, base timing info on the\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n    return {\n      start: {\n        dts: baseMediaDecodeTime,\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\n      },\n      end: {\n        dts: baseMediaDecodeTime + decodeDuration,\n        pts: baseMediaDecodeTime + presentationDuration\n      },\n      prependedContentDuration: prependedContentDuration,\n      baseMediaDecodeTime: baseMediaDecodeTime\n    };\n  };\n  /**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  AudioSegmentStream = function (track, options) {\n    var adtsFrames = [],\n      sequenceNumber,\n      earliestAllowedDts = 0,\n      audioAppendStartTs = 0,\n      videoBaseMediaDecodeTime = Infinity;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    AudioSegmentStream.prototype.init.call(this);\n    this.push = function (data) {\n      trackDecodeInfo.collectDtsInfo(track, data);\n      if (track) {\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          track[prop] = data[prop];\n        });\n      } // buffer audio data until end() is called\n\n      adtsFrames.push(data);\n    };\n    this.setEarliestDts = function (earliestDts) {\n      earliestAllowedDts = earliestDts;\n    };\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      audioAppendStartTs = timestamp;\n    };\n    this.flush = function () {\n      var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n      if (adtsFrames.length === 0) {\n        this.trigger('done', 'AudioSegmentStream');\n        return;\n      }\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n      videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n      // samples (that is, adts frames) in the audio data\n\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n      mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n      adtsFrames = [];\n      moof = mp4.moof(sequenceNumber, [track]);\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      trackDecodeInfo.clearDtsInfo(track);\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n      // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n      // valid use-case where an init segment/data should be triggered without associated\n      // frames. Leaving for now, but should be looked into.\n\n      if (frames.length) {\n        segmentDuration = frames.length * frameDuration;\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(\n        // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n        // frame info is in video clock cycles. Convert to match expectation of\n        // listeners (that all timestamps will be based on video clock cycles).\n        clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate),\n        // frame times are already in video clock, as is segment duration\n        frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n        this.trigger('timingInfo', {\n          start: frames[0].pts,\n          end: frames[0].pts + segmentDuration\n        });\n      }\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.trigger('done', 'AudioSegmentStream');\n    };\n    this.reset = function () {\n      trackDecodeInfo.clearDtsInfo(track);\n      adtsFrames = [];\n      this.trigger('reset');\n    };\n  };\n  AudioSegmentStream.prototype = new Stream();\n  /**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  VideoSegmentStream = function (track, options) {\n    var sequenceNumber,\n      nalUnits = [],\n      gopsToAlignWith = [],\n      config,\n      pps;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    VideoSegmentStream.prototype.init.call(this);\n    delete track.minPTS;\n    this.gopCache_ = [];\n    /**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/\n\n    this.push = function (nalUnit) {\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n        config = nalUnit.config;\n        track.sps = [nalUnit.data];\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          track[prop] = config[prop];\n        }, this);\n      }\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n        pps = nalUnit.data;\n        track.pps = [nalUnit.data];\n      } // buffer video until flush() is called\n\n      nalUnits.push(nalUnit);\n    };\n    /**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/\n\n    this.flush = function () {\n      var frames,\n        gopForFusion,\n        gops,\n        moof,\n        mdat,\n        boxes,\n        prependedContentDuration = 0,\n        firstGop,\n        lastGop; // Throw away nalUnits at the start of the byte stream until\n      // we find the first AUD\n\n      while (nalUnits.length) {\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n          break;\n        }\n        nalUnits.shift();\n      } // Return early if no video data has been observed\n\n      if (nalUnits.length === 0) {\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Organize the raw nal-units into arrays that represent\n      // higher-level constructs such as frames and gops\n      // (group-of-pictures)\n\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n      // a problem since MSE (on Chrome) requires a leading keyframe.\n      //\n      // We have two approaches to repairing this situation:\n      // 1) GOP-FUSION:\n      //    This is where we keep track of the GOPS (group-of-pictures)\n      //    from previous fragments and attempt to find one that we can\n      //    prepend to the current fragment in order to create a valid\n      //    fragment.\n      // 2) KEYFRAME-PULLING:\n      //    Here we search for the first keyframe in the fragment and\n      //    throw away all the frames between the start of the fragment\n      //    and that keyframe. We then extend the duration and pull the\n      //    PTS of the keyframe forward so that it covers the time range\n      //    of the frames that were disposed of.\n      //\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\n      // requires more things to be just right.\n\n      if (!gops[0][0].keyFrame) {\n        // Search for a gop for fusion from our gopCache\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n        if (gopForFusion) {\n          // in order to provide more accurate timing information about the segment, save\n          // the number of seconds prepended to the original segment due to GOP fusion\n          prependedContentDuration = gopForFusion.duration;\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n          // new gop at the beginning\n\n          gops.byteLength += gopForFusion.byteLength;\n          gops.nalCount += gopForFusion.nalCount;\n          gops.pts = gopForFusion.pts;\n          gops.dts = gopForFusion.dts;\n          gops.duration += gopForFusion.duration;\n        } else {\n          // If we didn't find a candidate gop fall back to keyframe-pulling\n          gops = frameUtils.extendFirstKeyFrame(gops);\n        }\n      } // Trim gops to align with gopsToAlignWith\n\n      if (gopsToAlignWith.length) {\n        var alignedGops;\n        if (options.alignGopsAtEnd) {\n          alignedGops = this.alignGopsAtEnd_(gops);\n        } else {\n          alignedGops = this.alignGopsAtStart_(gops);\n        }\n        if (!alignedGops) {\n          // save all the nals in the last GOP into the gop cache\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n        // when recalculated before sending off to CoalesceStream\n\n        trackDecodeInfo.clearDtsInfo(track);\n        gops = alignedGops;\n      }\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n      // samples (that is, frames) in the video data\n\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n      mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\n        return {\n          pts: gop.pts,\n          dts: gop.dts,\n          byteLength: gop.byteLength\n        };\n      }));\n      firstGop = gops[0];\n      lastGop = gops[gops.length - 1];\n      this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n      this.trigger('timingInfo', {\n        start: gops[0].pts,\n        end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n      }); // save all the nals in the last GOP into the gop cache\n\n      this.gopCache_.unshift({\n        gop: gops.pop(),\n        pps: track.pps,\n        sps: track.sps\n      }); // Keep a maximum of 6 GOPs in the cache\n\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n      nalUnits = [];\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\n      moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n      // throwing away hundreds of media segment fragments\n\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.resetStream_(); // Continue with the flush process now\n\n      this.trigger('done', 'VideoSegmentStream');\n    };\n    this.reset = function () {\n      this.resetStream_();\n      nalUnits = [];\n      this.gopCache_.length = 0;\n      gopsToAlignWith.length = 0;\n      this.trigger('reset');\n    };\n    this.resetStream_ = function () {\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n      // for instance, when we are rendition switching\n\n      config = undefined;\n      pps = undefined;\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\n    // return it or return null if no good candidate was found\n\n    this.getGopForFusion_ = function (nalUnit) {\n      var halfSecond = 45000,\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n        dtsDistance,\n        nearestGopObj,\n        currentGop,\n        currentGopObj,\n        i; // Search for the GOP nearest to the beginning of this nal unit\n\n      for (i = 0; i < this.gopCache_.length; i++) {\n        currentGopObj = this.gopCache_[i];\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n          continue;\n        } // Reject Gops that would require a negative baseMediaDecodeTime\n\n        if (currentGop.dts < track.timelineStartInfo.dts) {\n          continue;\n        } // The distance between the end of the gop and the start of the nalUnit\n\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n        // a half-second of the nal unit\n\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n          // Always use the closest GOP we found if there is more than\n          // one candidate\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\n            nearestGopObj = currentGopObj;\n            nearestDistance = dtsDistance;\n          }\n        }\n      }\n      if (nearestGopObj) {\n        return nearestGopObj.gop;\n      }\n      return null;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the START of the list\n\n    this.alignGopsAtStart_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n      byteLength = gops.byteLength;\n      nalCount = gops.nalCount;\n      duration = gops.duration;\n      alignIndex = gopIndex = 0;\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          break;\n        }\n        if (gop.pts > align.pts) {\n          // this current gop starts after the current gop we want to align on, so increment\n          // align index\n          alignIndex++;\n          continue;\n        } // current gop starts before the current gop we want to align on. so increment gop\n        // index\n\n        gopIndex++;\n        byteLength -= gop.byteLength;\n        nalCount -= gop.nalCount;\n        duration -= gop.duration;\n      }\n      if (gopIndex === 0) {\n        // no gops to trim\n        return gops;\n      }\n      if (gopIndex === gops.length) {\n        // all gops trimmed, skip appending all gops\n        return null;\n      }\n      alignedGops = gops.slice(gopIndex);\n      alignedGops.byteLength = byteLength;\n      alignedGops.duration = duration;\n      alignedGops.nalCount = nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the END of the list\n\n    this.alignGopsAtEnd_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n      alignIndex = gopsToAlignWith.length - 1;\n      gopIndex = gops.length - 1;\n      alignEndIndex = null;\n      matchFound = false;\n      while (alignIndex >= 0 && gopIndex >= 0) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          matchFound = true;\n          break;\n        }\n        if (align.pts > gop.pts) {\n          alignIndex--;\n          continue;\n        }\n        if (alignIndex === gopsToAlignWith.length - 1) {\n          // gop.pts is greater than the last alignment candidate. If no match is found\n          // by the end of this loop, we still want to append gops that come after this\n          // point\n          alignEndIndex = gopIndex;\n        }\n        gopIndex--;\n      }\n      if (!matchFound && alignEndIndex === null) {\n        return null;\n      }\n      var trimIndex;\n      if (matchFound) {\n        trimIndex = gopIndex;\n      } else {\n        trimIndex = alignEndIndex;\n      }\n      if (trimIndex === 0) {\n        return gops;\n      }\n      var alignedGops = gops.slice(trimIndex);\n      var metadata = alignedGops.reduce(function (total, gop) {\n        total.byteLength += gop.byteLength;\n        total.duration += gop.duration;\n        total.nalCount += gop.nalCount;\n        return total;\n      }, {\n        byteLength: 0,\n        duration: 0,\n        nalCount: 0\n      });\n      alignedGops.byteLength = metadata.byteLength;\n      alignedGops.duration = metadata.duration;\n      alignedGops.nalCount = metadata.nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    };\n    this.alignGopsWith = function (newGopsToAlignWith) {\n      gopsToAlignWith = newGopsToAlignWith;\n    };\n  };\n  VideoSegmentStream.prototype = new Stream();\n  /**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */\n\n  CoalesceStream = function (options, metadataStream) {\n    // Number of Tracks per output segment\n    // If greater than 1, we combine multiple\n    // tracks into a single segment\n    this.numberOfTracks = 0;\n    this.metadataStream = metadataStream;\n    options = options || {};\n    if (typeof options.remux !== 'undefined') {\n      this.remuxTracks = !!options.remux;\n    } else {\n      this.remuxTracks = true;\n    }\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n    } else {\n      this.keepOriginalTimestamps = false;\n    }\n    this.pendingTracks = [];\n    this.videoTrack = null;\n    this.pendingBoxes = [];\n    this.pendingCaptions = [];\n    this.pendingMetadata = [];\n    this.pendingBytes = 0;\n    this.emittedTracks = 0;\n    CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n    this.push = function (output) {\n      // buffer incoming captions until the associated video segment\n      // finishes\n      if (output.text) {\n        return this.pendingCaptions.push(output);\n      } // buffer incoming id3 tags until the final flush\n\n      if (output.frames) {\n        return this.pendingMetadata.push(output);\n      } // Add this track to the list of pending tracks and store\n      // important information required for the construction of\n      // the final segment\n\n      this.pendingTracks.push(output.track);\n      this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n      // We unshift audio and push video because\n      // as of Chrome 75 when switching from\n      // one init segment to another if the video\n      // mdat does not appear after the audio mdat\n      // only audio will play for the duration of our transmux.\n\n      if (output.track.type === 'video') {\n        this.videoTrack = output.track;\n        this.pendingBoxes.push(output.boxes);\n      }\n      if (output.track.type === 'audio') {\n        this.audioTrack = output.track;\n        this.pendingBoxes.unshift(output.boxes);\n      }\n    };\n  };\n  CoalesceStream.prototype = new Stream();\n  CoalesceStream.prototype.flush = function (flushSource) {\n    var offset = 0,\n      event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n      caption,\n      id3,\n      initSegment,\n      timelineStartPts = 0,\n      i;\n    if (this.pendingTracks.length < this.numberOfTracks) {\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n        // Return because we haven't received a flush from a data-generating\n        // portion of the segment (meaning that we have only recieved meta-data\n        // or captions.)\n        return;\n      } else if (this.remuxTracks) {\n        // Return until we have enough tracks from the pipeline to remux (if we\n        // are remuxing audio and video into a single MP4)\n        return;\n      } else if (this.pendingTracks.length === 0) {\n        // In the case where we receive a flush without any data having been\n        // received we consider it an emitted track for the purposes of coalescing\n        // `done` events.\n        // We do this for the case where there is an audio and video track in the\n        // segment but no audio data. (seen in several playlists with alternate\n        // audio tracks and no audio present in the main TS segments.)\n        this.emittedTracks++;\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n        return;\n      }\n    }\n    if (this.videoTrack) {\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.videoTrack[prop];\n      }, this);\n    } else if (this.audioTrack) {\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.audioTrack[prop];\n      }, this);\n    }\n    if (this.videoTrack || this.audioTrack) {\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n        caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n      // We include captions and ID3 tags for backwards compatibility,\n      // ideally we should send only video and audio in the data event\n\n      this.trigger('data', event); // Emit each caption to the outside world\n      // Ideally, this would happen immediately on parsing captions,\n      // but we need to ensure that video data is sent back first\n      // so that caption timing can be adjusted to match video timing\n\n      for (i = 0; i < event.captions.length; i++) {\n        caption = event.captions[i];\n        this.trigger('caption', caption);\n      } // Emit each id3 tag to the outside world\n      // Ideally, this would happen immediately on parsing the tag,\n      // but we need to ensure that video data is sent back first\n      // so that ID3 frame timing can be adjusted to match video timing\n\n      for (i = 0; i < event.metadata.length; i++) {\n        id3 = event.metadata[i];\n        this.trigger('id3Frame', id3);\n      }\n    } // Only emit `done` if all tracks have been flushed and emitted\n\n    if (this.emittedTracks >= this.numberOfTracks) {\n      this.trigger('done');\n      this.emittedTracks = 0;\n    }\n  };\n  CoalesceStream.prototype.setRemux = function (val) {\n    this.remuxTracks = val;\n  };\n  /**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */\n\n  Transmuxer = function (options) {\n    var self = this,\n      hasFlushed = true,\n      videoTrack,\n      audioTrack;\n    Transmuxer.prototype.init.call(this);\n    options = options || {};\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n    this.transmuxPipeline_ = {};\n    this.setupAacPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'aac';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.aacStream = new AacStream();\n      pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.aacStream;\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n      pipeline.metadataStream.on('timestamp', function (frame) {\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\n      });\n      pipeline.aacStream.on('data', function (data) {\n        if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n          return;\n        }\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n        pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n        self.trigger('trackinfo', {\n          hasAudio: !!audioTrack,\n          hasVideo: !!videoTrack\n        });\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    };\n    this.setupTsPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'ts';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.packetStream = new m2ts.TransportPacketStream();\n      pipeline.parseStream = new m2ts.TransportParseStream();\n      pipeline.elementaryStream = new m2ts.ElementaryStream();\n      pipeline.timestampRolloverStream = new m2ts.TimestampRolloverStream();\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.h264Stream = new H264Stream();\n      pipeline.captionStream = new m2ts.CaptionStream(options);\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n      // demux the streams\n\n      pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n      pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n      pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n      pipeline.elementaryStream.on('data', function (data) {\n        var i;\n        if (data.type === 'metadata') {\n          i = data.tracks.length; // scan the tracks listed in the metadata\n\n          while (i--) {\n            if (!videoTrack && data.tracks[i].type === 'video') {\n              videoTrack = data.tracks[i];\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\n              audioTrack = data.tracks[i];\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            }\n          } // hook up the video segment stream to the first track with h264 data\n\n          if (videoTrack && !pipeline.videoSegmentStream) {\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n            pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n              // When video emits timelineStartInfo data after a flush, we forward that\n              // info to the AudioSegmentStream, if it exists, because video timeline\n              // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n              // because this is a particularly subtle form of timestamp alteration.\n              if (audioTrack && !options.keepOriginalTimestamps) {\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                // very earliest DTS we have seen in video because Chrome will\n                // interpret any video track with a baseMediaDecodeTime that is\n                // non-zero as a gap.\n\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n              if (audioTrack) {\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n          }\n          if (audioTrack && !pipeline.audioSegmentStream) {\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n            pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n      pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n        id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n        self.trigger('id3Frame', id3Frame);\n      });\n      pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    }; // hook up the segment streams once track metadata is delivered\n\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      var pipeline = this.transmuxPipeline_;\n      if (!options.keepOriginalTimestamps) {\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (audioTrack) {\n        audioTrack.timelineStartInfo.dts = undefined;\n        audioTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(audioTrack);\n        if (pipeline.audioTimestampRolloverStream) {\n          pipeline.audioTimestampRolloverStream.discontinuity();\n        }\n      }\n      if (videoTrack) {\n        if (pipeline.videoSegmentStream) {\n          pipeline.videoSegmentStream.gopCache_ = [];\n        }\n        videoTrack.timelineStartInfo.dts = undefined;\n        videoTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(videoTrack);\n        pipeline.captionStream.reset();\n      }\n      if (pipeline.timestampRolloverStream) {\n        pipeline.timestampRolloverStream.discontinuity();\n      }\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      if (audioTrack) {\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n      }\n    };\n    this.setRemux = function (val) {\n      var pipeline = this.transmuxPipeline_;\n      options.remux = val;\n      if (pipeline && pipeline.coalesceStream) {\n        pipeline.coalesceStream.setRemux(val);\n      }\n    };\n    this.alignGopsWith = function (gopsToAlignWith) {\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n      }\n    };\n    this.getLogTrigger_ = function (key) {\n      var self = this;\n      return function (event) {\n        event.stream = key;\n        self.trigger('log', event);\n      };\n    }; // feed incoming data to the front of the parsing pipeline\n\n    this.push = function (data) {\n      if (hasFlushed) {\n        var isAac = isLikelyAacData(data);\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\n          this.setupAacPipeline();\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n          this.setupTsPipeline();\n        }\n        hasFlushed = false;\n      }\n      this.transmuxPipeline_.headOfPipeline.push(data);\n    }; // flush any buffered data\n\n    this.flush = function () {\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n      this.transmuxPipeline_.headOfPipeline.flush();\n    };\n    this.endTimeline = function () {\n      this.transmuxPipeline_.headOfPipeline.endTimeline();\n    };\n    this.reset = function () {\n      if (this.transmuxPipeline_.headOfPipeline) {\n        this.transmuxPipeline_.headOfPipeline.reset();\n      }\n    }; // Caption data has to be reset when seeking outside buffered range\n\n    this.resetCaptions = function () {\n      if (this.transmuxPipeline_.captionStream) {\n        this.transmuxPipeline_.captionStream.reset();\n      }\n    };\n  };\n  Transmuxer.prototype = new Stream();\n  var transmuxer = {\n    Transmuxer: Transmuxer,\n    VideoSegmentStream: VideoSegmentStream,\n    AudioSegmentStream: AudioSegmentStream,\n    AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n    VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n    // exported for testing\n    generateSegmentTimingInfo: generateSegmentTimingInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var toUnsigned$3 = function (value) {\n    return value >>> 0;\n  };\n  var toHexString$1 = function (value) {\n    return ('00' + value.toString(16)).slice(-2);\n  };\n  var bin = {\n    toUnsigned: toUnsigned$3,\n    toHexString: toHexString$1\n  };\n  var parseType$3 = function (buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  };\n  var parseType_1 = parseType$3;\n  var toUnsigned$2 = bin.toUnsigned;\n  var parseType$2 = parseType_1;\n  var findBox$2 = function (data, path) {\n    var results = [],\n      i,\n      size,\n      type,\n      end,\n      subresults;\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n    for (i = 0; i < data.byteLength;) {\n      size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n      type = parseType$2(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength;\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = findBox$2(data.subarray(i + 8, end), path.slice(1));\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n      i = end;\n    } // we've finished searching all of data\n\n    return results;\n  };\n  var findBox_1 = findBox$2;\n  var toUnsigned$1 = bin.toUnsigned;\n  var getUint64$1 = numbers.getUint64;\n  var tfdt = function (data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n    if (result.version === 1) {\n      result.baseMediaDecodeTime = getUint64$1(data.subarray(4));\n    } else {\n      result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n    }\n    return result;\n  };\n  var parseTfdt$2 = tfdt;\n  var parseSampleFlags$1 = function (flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: flags[2] << 8 | flags[3]\n    };\n  };\n  var parseSampleFlags_1 = parseSampleFlags$1;\n  var parseSampleFlags = parseSampleFlags_1;\n  var trun = function (data) {\n    var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n      view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      // Flag interpretation\n      dataOffsetPresent = result.flags[2] & 0x01,\n      // compare with 2nd byte of 0x1\n      firstSampleFlagsPresent = result.flags[2] & 0x04,\n      // compare with 2nd byte of 0x4\n      sampleDurationPresent = result.flags[1] & 0x01,\n      // compare with 2nd byte of 0x100\n      sampleSizePresent = result.flags[1] & 0x02,\n      // compare with 2nd byte of 0x200\n      sampleFlagsPresent = result.flags[1] & 0x04,\n      // compare with 2nd byte of 0x400\n      sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n      // compare with 2nd byte of 0x800\n      sampleCount = view.getUint32(4),\n      offset = 8,\n      sample;\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n      sampleCount--;\n    }\n    while (sampleCount--) {\n      sample = {};\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n    }\n    return result;\n  };\n  var parseTrun$2 = trun;\n  var tfhd = function (data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4)\n      },\n      baseDataOffsetPresent = result.flags[2] & 0x01,\n      sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n      defaultSampleDurationPresent = result.flags[2] & 0x08,\n      defaultSampleSizePresent = result.flags[2] & 0x10,\n      defaultSampleFlagsPresent = result.flags[2] & 0x20,\n      durationIsEmpty = result.flags[0] & 0x010000,\n      defaultBaseIsMoof = result.flags[0] & 0x020000,\n      i;\n    i = 8;\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n    return result;\n  };\n  var parseTfhd$2 = tfhd;\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band CEA-708 captions out of FMP4 segments.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   */\n\n  var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n  var CaptionStream = captionStream.CaptionStream;\n  var findBox$1 = findBox_1;\n  var parseTfdt$1 = parseTfdt$2;\n  var parseTrun$1 = parseTrun$2;\n  var parseTfhd$1 = parseTfhd$2;\n  var window$2 = window_1;\n  /**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var mapToSample = function (offset, samples) {\n    var approximateOffset = offset;\n    for (var i = 0; i < samples.length; i++) {\n      var sample = samples[i];\n      if (approximateOffset < sample.size) {\n        return sample;\n      }\n      approximateOffset -= sample.size;\n    }\n    return null;\n  };\n  /**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/\n\n  var findSeiNals = function (avcStream, samples, trackId) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = {\n        logs: [],\n        seiNals: []\n      },\n      seiNal,\n      i,\n      length,\n      lastMatchedSample;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // Bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        continue;\n      }\n      switch (avcStream[i] & 0x1F) {\n        case 0x06:\n          var data = avcStream.subarray(i + 1, i + 1 + length);\n          var matchingSample = mapToSample(i, samples);\n          seiNal = {\n            nalUnitType: 'sei_rbsp',\n            size: length,\n            data: data,\n            escapedRBSP: discardEmulationPreventionBytes(data),\n            trackId: trackId\n          };\n          if (matchingSample) {\n            seiNal.pts = matchingSample.pts;\n            seiNal.dts = matchingSample.dts;\n            lastMatchedSample = matchingSample;\n          } else if (lastMatchedSample) {\n            // If a matching sample cannot be found, use the last\n            // sample's values as they should be as close as possible\n            seiNal.pts = lastMatchedSample.pts;\n            seiNal.dts = lastMatchedSample.dts;\n          } else {\n            result.logs.push({\n              level: 'warn',\n              message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n            });\n            break;\n          }\n          result.seiNals.push(seiNal);\n          break;\n      }\n    }\n    return result;\n  };\n  /**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var parseSamples = function (truns, baseMediaDecodeTime, tfhd) {\n    var currentDts = baseMediaDecodeTime;\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\n    var trackId = tfhd.trackId;\n    var allSamples = [];\n    truns.forEach(function (trun) {\n      // Note: We currently do not parse the sample table as well\n      // as the trun. It's possible some sources will require this.\n      // moov > trak > mdia > minf > stbl\n      var trackRun = parseTrun$1(trun);\n      var samples = trackRun.samples;\n      samples.forEach(function (sample) {\n        if (sample.duration === undefined) {\n          sample.duration = defaultSampleDuration;\n        }\n        if (sample.size === undefined) {\n          sample.size = defaultSampleSize;\n        }\n        sample.trackId = trackId;\n        sample.dts = currentDts;\n        if (sample.compositionTimeOffset === undefined) {\n          sample.compositionTimeOffset = 0;\n        }\n        if (typeof currentDts === 'bigint') {\n          sample.pts = currentDts + window$2.BigInt(sample.compositionTimeOffset);\n          currentDts += window$2.BigInt(sample.duration);\n        } else {\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        }\n      });\n      allSamples = allSamples.concat(samples);\n    });\n    return allSamples;\n  };\n  /**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/\n\n  var parseCaptionNals = function (segment, videoTrackId) {\n    // To get the samples\n    var trafs = findBox$1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n    var mdats = findBox$1(segment, ['mdat']);\n    var captionNals = {};\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n    mdats.forEach(function (mdat, index) {\n      var matchingTraf = trafs[index];\n      mdatTrafPairs.push({\n        mdat: mdat,\n        traf: matchingTraf\n      });\n    });\n    mdatTrafPairs.forEach(function (pair) {\n      var mdat = pair.mdat;\n      var traf = pair.traf;\n      var tfhd = findBox$1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n      var headerInfo = parseTfhd$1(tfhd[0]);\n      var trackId = headerInfo.trackId;\n      var tfdt = findBox$1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n      var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt$1(tfdt[0]).baseMediaDecodeTime : 0;\n      var truns = findBox$1(traf, ['trun']);\n      var samples;\n      var result; // Only parse video data for the chosen video track\n\n      if (videoTrackId === trackId && truns.length > 0) {\n        samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n        result = findSeiNals(mdat, samples, trackId);\n        if (!captionNals[trackId]) {\n          captionNals[trackId] = {\n            seiNals: [],\n            logs: []\n          };\n        }\n        captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n        captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n      }\n    });\n    return captionNals;\n  };\n  /**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {String} parsedCaptions[].text - The visible content of the caption\n   **/\n\n  var parseEmbeddedCaptions = function (segment, trackId, timescale) {\n    var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n    if (trackId === null) {\n      return null;\n    }\n    captionNals = parseCaptionNals(segment, trackId);\n    var trackNals = captionNals[trackId] || {};\n    return {\n      seiNals: trackNals.seiNals,\n      logs: trackNals.logs,\n      timescale: timescale\n    };\n  };\n  /**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/\n\n  var CaptionParser = function () {\n    var isInitialized = false;\n    var captionStream; // Stores segments seen before trackId and timescale are set\n\n    var segmentCache; // Stores video track ID of the track being parsed\n\n    var trackId; // Stores the timescale of the track being parsed\n\n    var timescale; // Stores captions parsed so far\n\n    var parsedCaptions; // Stores whether we are receiving partial data or not\n\n    var parsingPartial;\n    /**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/\n\n    this.isInitialized = function () {\n      return isInitialized;\n    };\n    /**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/\n\n    this.init = function (options) {\n      captionStream = new CaptionStream();\n      isInitialized = true;\n      parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n      captionStream.on('data', function (event) {\n        // Convert to seconds in the source's timescale\n        event.startTime = event.startPts / timescale;\n        event.endTime = event.endPts / timescale;\n        parsedCaptions.captions.push(event);\n        parsedCaptions.captionStreams[event.stream] = true;\n      });\n      captionStream.on('log', function (log) {\n        parsedCaptions.logs.push(log);\n      });\n    };\n    /**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/\n\n    this.isNewInit = function (videoTrackIds, timescales) {\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n        return false;\n      }\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n    };\n    /**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.parse = function (segment, videoTrackIds, timescales) {\n      var parsedData;\n      if (!this.isInitialized()) {\n        return null; // This is not likely to be a video segment\n      } else if (!videoTrackIds || !timescales) {\n        return null;\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\n        // Use the first video track only as there is no\n        // mechanism to switch to other video tracks\n        trackId = videoTrackIds[0];\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n        // data until we have one.\n        // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n      } else if (trackId === null || !timescale) {\n        segmentCache.push(segment);\n        return null;\n      } // Now that a timescale and trackId is set, parse cached segments\n\n      while (segmentCache.length > 0) {\n        var cachedSegment = segmentCache.shift();\n        this.parse(cachedSegment, videoTrackIds, timescales);\n      }\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n      if (parsedData && parsedData.logs) {\n        parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n      }\n      if (parsedData === null || !parsedData.seiNals) {\n        if (parsedCaptions.logs.length) {\n          return {\n            logs: parsedCaptions.logs,\n            captions: [],\n            captionStreams: []\n          };\n        }\n        return null;\n      }\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n      this.flushStream();\n      return parsedCaptions;\n    };\n    /**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/\n\n    this.pushNals = function (nals) {\n      if (!this.isInitialized() || !nals || nals.length === 0) {\n        return null;\n      }\n      nals.forEach(function (nal) {\n        captionStream.push(nal);\n      });\n    };\n    /**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.flushStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      if (!parsingPartial) {\n        captionStream.flush();\n      } else {\n        captionStream.partialFlush();\n      }\n    };\n    /**\n      * Reset caption buckets for new data\n     **/\n\n    this.clearParsedCaptions = function () {\n      parsedCaptions.captions = [];\n      parsedCaptions.captionStreams = {};\n      parsedCaptions.logs = [];\n    };\n    /**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.resetCaptionStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      captionStream.reset();\n    };\n    /**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.clearAllCaptions = function () {\n      this.clearParsedCaptions();\n      this.resetCaptionStream();\n    };\n    /**\n      * Reset caption parser\n     **/\n\n    this.reset = function () {\n      segmentCache = [];\n      trackId = null;\n      timescale = null;\n      if (!parsedCaptions) {\n        parsedCaptions = {\n          captions: [],\n          // CC1, CC2, CC3, CC4\n          captionStreams: {},\n          logs: []\n        };\n      } else {\n        this.clearParsedCaptions();\n      }\n      this.resetCaptionStream();\n    };\n    this.reset();\n  };\n  var captionParser = CaptionParser;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about MP4s.\n   */\n\n  var toUnsigned = bin.toUnsigned;\n  var toHexString = bin.toHexString;\n  var findBox = findBox_1;\n  var parseType$1 = parseType_1;\n  var parseTfhd = parseTfhd$2;\n  var parseTrun = parseTrun$2;\n  var parseTfdt = parseTfdt$2;\n  var getUint64 = numbers.getUint64;\n  var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader;\n  var window$1 = window_1;\n  /**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */\n\n  timescale = function (init) {\n    var result = {},\n      traks = findBox(init, ['moov', 'trak']); // mdhd timescale\n\n    return traks.reduce(function (result, trak) {\n      var tkhd, version, index, id, mdhd;\n      tkhd = findBox(trak, ['tkhd'])[0];\n      if (!tkhd) {\n        return null;\n      }\n      version = tkhd[0];\n      index = version === 0 ? 12 : 20;\n      id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n      mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (!mdhd) {\n        return null;\n      }\n      version = mdhd[0];\n      index = version === 0 ? 12 : 20;\n      result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n      return result;\n    }, result);\n  };\n  /**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */\n\n  startTime = function (timescale, fragment) {\n    var trafs; // we need info from two childrend of each track fragment box\n\n    trafs = findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n    var lowestTime = trafs.reduce(function (acc, traf) {\n      var tfhd = findBox(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n      var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      var tfdt = findBox(traf, ['tfdt'])[0];\n      var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n      var baseTime; // version 1 is 64 bit\n\n      if (tfdt[0] === 1) {\n        baseTime = getUint64(tfdt.subarray(4, 12));\n      } else {\n        baseTime = dv.getUint32(4);\n      } // convert base time to seconds if it is a valid number.\n\n      let seconds;\n      if (typeof baseTime === 'bigint') {\n        seconds = baseTime / window$1.BigInt(scale);\n      } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n        seconds = baseTime / scale;\n      }\n      if (seconds < Number.MAX_SAFE_INTEGER) {\n        seconds = Number(seconds);\n      }\n      if (seconds < acc) {\n        acc = seconds;\n      }\n      return acc;\n    }, Infinity);\n    return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n  };\n  /**\n   * Determine the composition start, in seconds, for an MP4\n   * fragment.\n   *\n   * The composition start time of a fragment can be calculated using the base\n   * media decode time, composition time offset, and timescale, as follows:\n   *\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n   *\n   * All of the aforementioned information is contained within a media fragment's\n   * `traf` box, except for timescale info, which comes from the initialization\n   * segment, so a track id (also contained within a `traf`) is also necessary to\n   * associate it with a timescale\n   *\n   *\n   * @param timescales {object} - a hash of track ids to timescale values.\n   * @param fragment {Unit8Array} - the bytes of a media segment\n   * @return {number} the composition start time for the fragment, in seconds\n   **/\n\n  compositionStartTime = function (timescales, fragment) {\n    var trafBoxes = findBox(fragment, ['moof', 'traf']);\n    var baseMediaDecodeTime = 0;\n    var compositionTimeOffset = 0;\n    var trackId;\n    if (trafBoxes && trafBoxes.length) {\n      // The spec states that track run samples contained within a `traf` box are contiguous, but\n      // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n      // We will assume that they are, so we only need the first to calculate start time.\n      var tfhd = findBox(trafBoxes[0], ['tfhd'])[0];\n      var trun = findBox(trafBoxes[0], ['trun'])[0];\n      var tfdt = findBox(trafBoxes[0], ['tfdt'])[0];\n      if (tfhd) {\n        var parsedTfhd = parseTfhd(tfhd);\n        trackId = parsedTfhd.trackId;\n      }\n      if (tfdt) {\n        var parsedTfdt = parseTfdt(tfdt);\n        baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n      }\n      if (trun) {\n        var parsedTrun = parseTrun(trun);\n        if (parsedTrun.samples && parsedTrun.samples.length) {\n          compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n        }\n      }\n    } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n    // specified.\n\n    var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n    if (typeof baseMediaDecodeTime === 'bigint') {\n      compositionTimeOffset = window$1.BigInt(compositionTimeOffset);\n      timescale = window$1.BigInt(timescale);\n    }\n    var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n    if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n      result = Number(result);\n    }\n    return result;\n  };\n  /**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/\n\n  getVideoTrackIds = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var videoTrackIds = [];\n    traks.forEach(function (trak) {\n      var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n      var tkhds = findBox(trak, ['tkhd']);\n      hdlrs.forEach(function (hdlr, index) {\n        var handlerType = parseType$1(hdlr.subarray(8, 12));\n        var tkhd = tkhds[index];\n        var view;\n        var version;\n        var trackId;\n        if (handlerType === 'vide') {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          version = view.getUint8(0);\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n          videoTrackIds.push(trackId);\n        }\n      });\n    });\n    return videoTrackIds;\n  };\n  getTimescaleFromMediaHeader = function (mdhd) {\n    // mdhd is a FullBox, meaning it will have its own version as the first byte\n    var version = mdhd[0];\n    var index = version === 0 ? 12 : 20;\n    return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n  };\n  /**\n   * Get all the video, audio, and hint tracks from a non fragmented\n   * mp4 segment\n   */\n\n  getTracks = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var tracks = [];\n    traks.forEach(function (trak) {\n      var track = {};\n      var tkhd = findBox(trak, ['tkhd'])[0];\n      var view, tkhdVersion; // id\n\n      if (tkhd) {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        tkhdVersion = view.getUint8(0);\n        track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n      }\n      var hdlr = findBox(trak, ['mdia', 'hdlr'])[0]; // type\n\n      if (hdlr) {\n        var type = parseType$1(hdlr.subarray(8, 12));\n        if (type === 'vide') {\n          track.type = 'video';\n        } else if (type === 'soun') {\n          track.type = 'audio';\n        } else {\n          track.type = type;\n        }\n      } // codec\n\n      var stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n      if (stsd) {\n        var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n        track.codec = parseType$1(sampleDescriptions.subarray(4, 8));\n        var codecBox = findBox(sampleDescriptions, [track.codec])[0];\n        var codecConfig, codecConfigType;\n        if (codecBox) {\n          // https://tools.ietf.org/html/rfc6381#section-3.3\n          if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n            // we don't need anything but the \"config\" parameter of the\n            // avc1 codecBox\n            codecConfig = codecBox.subarray(78);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n              track.codec += '.'; // left padded with zeroes for single digit hex\n              // profile idc\n\n              track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n              track.codec += toHexString(codecConfig[10]); // level idc\n\n              track.codec += toHexString(codecConfig[11]);\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'avc1.4d400d';\n            }\n          } else if (/^mp4[a,v]$/i.test(track.codec)) {\n            // we do not need anything but the streamDescriptor of the mp4a codecBox\n            codecConfig = codecBox.subarray(28);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n              track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n              track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'mp4a.40.2';\n            }\n          } else {\n            // flac, opus, etc\n            track.codec = track.codec.toLowerCase();\n          }\n        }\n      }\n      var mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (mdhd) {\n        track.timescale = getTimescaleFromMediaHeader(mdhd);\n      }\n      tracks.push(track);\n    });\n    return tracks;\n  };\n  var probe$2 = {\n    // export mp4 inspector's findBox and parseType for backwards compatibility\n    findBox: findBox,\n    parseType: parseType$1,\n    timescale: timescale,\n    startTime: startTime,\n    compositionStartTime: compositionStartTime,\n    videoTrackIds: getVideoTrackIds,\n    tracks: getTracks,\n    getTimescaleFromMediaHeader: getTimescaleFromMediaHeader\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about TS Segments.\n   */\n\n  var StreamTypes$1 = streamTypes;\n  var parsePid = function (packet) {\n    var pid = packet[1] & 0x1f;\n    pid <<= 8;\n    pid |= packet[2];\n    return pid;\n  };\n  var parsePayloadUnitStartIndicator = function (packet) {\n    return !!(packet[1] & 0x40);\n  };\n  var parseAdaptionField = function (packet) {\n    var offset = 0; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[4] + 1;\n    }\n    return offset;\n  };\n  var parseType = function (packet, pmtPid) {\n    var pid = parsePid(packet);\n    if (pid === 0) {\n      return 'pat';\n    } else if (pid === pmtPid) {\n      return 'pmt';\n    } else if (pmtPid) {\n      return 'pes';\n    }\n    return null;\n  };\n  var parsePat = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var offset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      offset += packet[offset] + 1;\n    }\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n  };\n  var parsePmt = function (packet) {\n    var programMapTable = {};\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var payloadOffset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      payloadOffset += packet[payloadOffset] + 1;\n    } // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n    if (!(packet[payloadOffset + 5] & 0x01)) {\n      return;\n    }\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n    var offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n    }\n    return programMapTable;\n  };\n  var parsePesType = function (packet, programMapTable) {\n    var pid = parsePid(packet);\n    var type = programMapTable[pid];\n    switch (type) {\n      case StreamTypes$1.H264_STREAM_TYPE:\n        return 'video';\n      case StreamTypes$1.ADTS_STREAM_TYPE:\n        return 'audio';\n      case StreamTypes$1.METADATA_STREAM_TYPE:\n        return 'timed-metadata';\n      default:\n        return null;\n    }\n  };\n  var parsePesTime = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    if (!pusi) {\n      return null;\n    }\n    var offset = 4 + parseAdaptionField(packet);\n    if (offset >= packet.byteLength) {\n      // From the H 222.0 MPEG-TS spec\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\n      //  is insufficient PES packet data to completely fill the transport stream packet\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\n      //  remaining after the adaptation field exactly accommodates the available PES packet\n      //  data.\"\n      //\n      // If the offset is >= the length of the packet, then the packet contains no data\n      // and instead is just adaption field stuffing bytes\n      return null;\n    }\n    var pes = null;\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      pes = {}; // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    }\n\n    return pes;\n  };\n  var parseNalUnitType = function (type) {\n    switch (type) {\n      case 0x05:\n        return 'slice_layer_without_partitioning_rbsp_idr';\n      case 0x06:\n        return 'sei_rbsp';\n      case 0x07:\n        return 'seq_parameter_set_rbsp';\n      case 0x08:\n        return 'pic_parameter_set_rbsp';\n      case 0x09:\n        return 'access_unit_delimiter_rbsp';\n      default:\n        return null;\n    }\n  };\n  var videoPacketContainsKeyFrame = function (packet) {\n    var offset = 4 + parseAdaptionField(packet);\n    var frameBuffer = packet.subarray(offset);\n    var frameI = 0;\n    var frameSyncPoint = 0;\n    var foundKeyFrame = false;\n    var nalType; // advance the sync point to a NAL start, if necessary\n\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        frameI = frameSyncPoint + 5;\n        break;\n      }\n    }\n    while (frameI < frameBuffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (frameBuffer[frameI]) {\n        case 0:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0) {\n            frameI += 2;\n            break;\n          } else if (frameBuffer[frameI - 2] !== 0) {\n            frameI++;\n            break;\n          }\n          if (frameSyncPoint + 3 !== frameI - 2) {\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n          } // drop trailing zeroes\n\n          do {\n            frameI++;\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        case 1:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n            frameI += 3;\n            break;\n          }\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          frameI += 3;\n          break;\n      }\n    }\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\n    frameI -= frameSyncPoint;\n    frameSyncPoint = 0; // parse the final nal\n\n    if (frameBuffer && frameBuffer.byteLength > 3) {\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n    }\n    return foundKeyFrame;\n  };\n  var probe$1 = {\n    parseType: parseType,\n    parsePat: parsePat,\n    parsePmt: parsePmt,\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n    parsePesType: parsePesType,\n    parsePesTime: parsePesTime,\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Parse mpeg2 transport stream packets to extract basic timing information\n   */\n\n  var StreamTypes = streamTypes;\n  var handleRollover = timestampRolloverStream.handleRollover;\n  var probe = {};\n  probe.ts = probe$1;\n  probe.aac = utils;\n  var ONE_SECOND_IN_TS = clock$2.ONE_SECOND_IN_TS;\n  var MP2T_PACKET_LENGTH = 188,\n    // bytes\n    SYNC_BYTE = 0x47;\n  /**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */\n\n  var parsePsi_ = function (bytes, pmt) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type;\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pat':\n            pmt.pid = probe.ts.parsePat(packet);\n            break;\n          case 'pmt':\n            var table = probe.ts.parsePmt(packet);\n            pmt.table = pmt.table || {};\n            Object.keys(table).forEach(function (key) {\n              pmt.table[key] = table[key];\n            });\n            break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */\n\n  var parseAudioPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed;\n    var endLoop = false; // Start walking from start of segment to get first audio packet\n\n    while (endIndex <= bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last audio packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */\n\n  var parseVideoPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed,\n      frame,\n      i,\n      pes;\n    var endLoop = false;\n    var currentFrame = {\n      data: [],\n      size: 0\n    }; // Start walking from start of segment to get first video packet\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video') {\n              if (pusi && !endLoop) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n              if (!result.firstKeyFrame) {\n                if (pusi) {\n                  if (currentFrame.size !== 0) {\n                    frame = new Uint8Array(currentFrame.size);\n                    i = 0;\n                    while (currentFrame.data.length) {\n                      pes = currentFrame.data.shift();\n                      frame.set(pes, i);\n                      i += pes.byteLength;\n                    }\n                    if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                      var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                      // the keyframe seems to work fine with HLS playback\n                      // and definitely preferable to a crash with TypeError...\n\n                      if (firstKeyFrame) {\n                        result.firstKeyFrame = firstKeyFrame;\n                        result.firstKeyFrame.type = 'video';\n                      } else {\n                        // eslint-disable-next-line\n                        console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                      }\n                    }\n                    currentFrame.size = 0;\n                  }\n                }\n                currentFrame.data.push(packet);\n                currentFrame.size += packet.byteLength;\n              }\n            }\n            break;\n        }\n        if (endLoop && result.firstKeyFrame) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last video packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */\n\n  var adjustTimestamp_ = function (segmentInfo, baseTimestamp) {\n    if (segmentInfo.audio && segmentInfo.audio.length) {\n      var audioBaseTimestamp = baseTimestamp;\n      if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\n      }\n      segmentInfo.audio.forEach(function (info) {\n        info.dts = handleRollover(info.dts, audioBaseTimestamp);\n        info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n    }\n    if (segmentInfo.video && segmentInfo.video.length) {\n      var videoBaseTimestamp = baseTimestamp;\n      if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n        videoBaseTimestamp = segmentInfo.video[0].dts;\n      }\n      segmentInfo.video.forEach(function (info) {\n        info.dts = handleRollover(info.dts, videoBaseTimestamp);\n        info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n      if (segmentInfo.firstKeyFrame) {\n        var frame = segmentInfo.firstKeyFrame;\n        frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n        frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n        frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n        frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n      }\n    }\n  };\n  /**\n   * inspects the aac data stream for start and end time information\n   */\n\n  var inspectAac_ = function (bytes) {\n    var endLoop = false,\n      audioCount = 0,\n      sampleRate = null,\n      timestamp = null,\n      frameSize = 0,\n      byteIndex = 0,\n      packet;\n    while (bytes.length - byteIndex >= 3) {\n      var type = probe.aac.parseType(bytes, byteIndex);\n      switch (type) {\n        case 'timed-metadata':\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (bytes.length - byteIndex < 10) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (timestamp === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            timestamp = probe.aac.parseAacTimestamp(packet);\n          }\n          byteIndex += frameSize;\n          break;\n        case 'audio':\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (bytes.length - byteIndex < 7) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (sampleRate === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            sampleRate = probe.aac.parseSampleRate(packet);\n          }\n          audioCount++;\n          byteIndex += frameSize;\n          break;\n        default:\n          byteIndex++;\n          break;\n      }\n      if (endLoop) {\n        return null;\n      }\n    }\n    if (sampleRate === null || timestamp === null) {\n      return null;\n    }\n    var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n    var result = {\n      audio: [{\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      }, {\n        type: 'audio',\n        dts: timestamp + audioCount * 1024 * audioTimescale,\n        pts: timestamp + audioCount * 1024 * audioTimescale\n      }]\n    };\n    return result;\n  };\n  /**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */\n\n  var inspectTs_ = function (bytes) {\n    var pmt = {\n      pid: null,\n      table: null\n    };\n    var result = {};\n    parsePsi_(bytes, pmt);\n    for (var pid in pmt.table) {\n      if (pmt.table.hasOwnProperty(pid)) {\n        var type = pmt.table[pid];\n        switch (type) {\n          case StreamTypes.H264_STREAM_TYPE:\n            result.video = [];\n            parseVideoPes_(bytes, pmt, result);\n            if (result.video.length === 0) {\n              delete result.video;\n            }\n            break;\n          case StreamTypes.ADTS_STREAM_TYPE:\n            result.audio = [];\n            parseAudioPes_(bytes, pmt, result);\n            if (result.audio.length === 0) {\n              delete result.audio;\n            }\n            break;\n        }\n      }\n    }\n    return result;\n  };\n  /**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */\n\n  var inspect = function (bytes, baseTimestamp) {\n    var isAacData = probe.aac.isLikelyAacData(bytes);\n    var result;\n    if (isAacData) {\n      result = inspectAac_(bytes);\n    } else {\n      result = inspectTs_(bytes);\n    }\n    if (!result || !result.audio && !result.video) {\n      return null;\n    }\n    adjustTimestamp_(result, baseTimestamp);\n    return result;\n  };\n  var tsInspector = {\n    inspect: inspect,\n    parseAudioPes_: parseAudioPes_\n  };\n  /* global self */\n\n  /**\n   * Re-emits transmuxer events by converting them into messages to the\n   * world outside the worker.\n   *\n   * @param {Object} transmuxer the transmuxer to wire events on\n   * @private\n   */\n\n  const wireTransmuxerEvents = function (self, transmuxer) {\n    transmuxer.on('data', function (segment) {\n      // transfer ownership of the underlying ArrayBuffer\n      // instead of doing a copy to save memory\n      // ArrayBuffers are transferable but generic TypedArrays are not\n      // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n      const initArray = segment.initSegment;\n      segment.initSegment = {\n        data: initArray.buffer,\n        byteOffset: initArray.byteOffset,\n        byteLength: initArray.byteLength\n      };\n      const typedArray = segment.data;\n      segment.data = typedArray.buffer;\n      self.postMessage({\n        action: 'data',\n        segment,\n        byteOffset: typedArray.byteOffset,\n        byteLength: typedArray.byteLength\n      }, [segment.data]);\n    });\n    transmuxer.on('done', function (data) {\n      self.postMessage({\n        action: 'done'\n      });\n    });\n    transmuxer.on('gopInfo', function (gopInfo) {\n      self.postMessage({\n        action: 'gopInfo',\n        gopInfo\n      });\n    });\n    transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n      const videoSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        videoSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo\n      });\n    });\n    transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n      // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n      const audioSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        audioSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'audioSegmentTimingInfo',\n        audioSegmentTimingInfo\n      });\n    });\n    transmuxer.on('id3Frame', function (id3Frame) {\n      self.postMessage({\n        action: 'id3Frame',\n        id3Frame\n      });\n    });\n    transmuxer.on('caption', function (caption) {\n      self.postMessage({\n        action: 'caption',\n        caption\n      });\n    });\n    transmuxer.on('trackinfo', function (trackInfo) {\n      self.postMessage({\n        action: 'trackinfo',\n        trackInfo\n      });\n    });\n    transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n      // convert to video TS since we prioritize video time over audio\n      self.postMessage({\n        action: 'audioTimingInfo',\n        audioTimingInfo: {\n          start: clock$2.videoTsToSeconds(audioTimingInfo.start),\n          end: clock$2.videoTsToSeconds(audioTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n      self.postMessage({\n        action: 'videoTimingInfo',\n        videoTimingInfo: {\n          start: clock$2.videoTsToSeconds(videoTimingInfo.start),\n          end: clock$2.videoTsToSeconds(videoTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('log', function (log) {\n      self.postMessage({\n        action: 'log',\n        log\n      });\n    });\n  };\n  /**\n   * All incoming messages route through this hash. If no function exists\n   * to handle an incoming message, then we ignore the message.\n   *\n   * @class MessageHandlers\n   * @param {Object} options the options to initialize with\n   */\n\n  class MessageHandlers {\n    constructor(self, options) {\n      this.options = options || {};\n      this.self = self;\n      this.init();\n    }\n    /**\n     * initialize our web worker and wire all the events.\n     */\n\n    init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n      this.transmuxer = new transmuxer.Transmuxer(this.options);\n      wireTransmuxerEvents(this.self, this.transmuxer);\n    }\n    pushMp4Captions(data) {\n      if (!this.captionParser) {\n        this.captionParser = new captionParser();\n        this.captionParser.init();\n      }\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      const parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n      this.self.postMessage({\n        action: 'mp4Captions',\n        captions: parsed && parsed.captions || [],\n        logs: parsed && parsed.logs || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    }\n    probeMp4StartTime({\n      timescales,\n      data\n    }) {\n      const startTime = probe$2.startTime(timescales, data);\n      this.self.postMessage({\n        action: 'probeMp4StartTime',\n        startTime,\n        data\n      }, [data.buffer]);\n    }\n    probeMp4Tracks({\n      data\n    }) {\n      const tracks = probe$2.tracks(data);\n      this.self.postMessage({\n        action: 'probeMp4Tracks',\n        tracks,\n        data\n      }, [data.buffer]);\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n     * internal \"media time,\" as well as whether it contains video and/or audio.\n     *\n     * @private\n     * @param {Uint8Array} bytes - segment bytes\n     * @param {number} baseStartTime\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\n     *        function body.\n     * @return {Object} The start time of the current segment in \"media time\" as well as\n     *                  whether it contains video and/or audio\n     */\n\n    probeTs({\n      data,\n      baseStartTime\n    }) {\n      const tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock$2.ONE_SECOND_IN_TS : void 0;\n      const timeInfo = tsInspector.inspect(data, tsStartTime);\n      let result = null;\n      if (timeInfo) {\n        result = {\n          // each type's time info comes back as an array of 2 times, start and end\n          hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n          hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n        };\n        if (result.hasVideo) {\n          result.videoStart = timeInfo.video[0].ptsTime;\n        }\n        if (result.hasAudio) {\n          result.audioStart = timeInfo.audio[0].ptsTime;\n        }\n      }\n      this.self.postMessage({\n        action: 'probeTs',\n        result,\n        data\n      }, [data.buffer]);\n    }\n    clearAllMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearAllCaptions();\n      }\n    }\n    clearParsedMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearParsedCaptions();\n      }\n    }\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n\n    push(data) {\n      // Cast array buffer to correct type for transmuxer\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      this.transmuxer.push(segment);\n    }\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n\n    reset() {\n      this.transmuxer.reset();\n    }\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n\n    setTimestampOffset(data) {\n      const timestampOffset = data.timestampOffset || 0;\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(clock$2.secondsToVideoTs(timestampOffset)));\n    }\n    setAudioAppendStart(data) {\n      this.transmuxer.setAudioAppendStart(Math.ceil(clock$2.secondsToVideoTs(data.appendStart)));\n    }\n    setRemux(data) {\n      this.transmuxer.setRemux(data.remux);\n    }\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n\n    flush(data) {\n      this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n      self.postMessage({\n        action: 'done',\n        type: 'transmuxed'\n      });\n    }\n    endTimeline() {\n      this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n      // timelines\n\n      self.postMessage({\n        action: 'endedtimeline',\n        type: 'transmuxed'\n      });\n    }\n    alignGopsWith(data) {\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n    }\n  }\n  /**\n   * Our web worker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(self, event.data.options);\n      return;\n    }\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers(self);\n    }\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n}));\nvar TransmuxWorker = factory(workerCode$1);\n/* rollup-plugin-worker-factory end for worker!/Users/poneill/dev/http-streaming/src/transmuxer-worker.js */\n\nconst handleData_ = (event, transmuxedData, callback) => {\n  const {\n    type,\n    initSegment,\n    captions,\n    captionStreams,\n    metadata,\n    videoFrameDtsTime,\n    videoFramePtsTime\n  } = event.data.segment;\n  transmuxedData.buffer.push({\n    captions,\n    captionStreams,\n    metadata\n  });\n  const boxes = event.data.segment.boxes || {\n    data: event.data.segment.data\n  };\n  const result = {\n    type,\n    // cast ArrayBuffer to TypedArray\n    data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n    initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n  };\n  if (typeof videoFrameDtsTime !== 'undefined') {\n    result.videoFrameDtsTime = videoFrameDtsTime;\n  }\n  if (typeof videoFramePtsTime !== 'undefined') {\n    result.videoFramePtsTime = videoFramePtsTime;\n  }\n  callback(result);\n};\nconst handleDone_ = ({\n  transmuxedData,\n  callback\n}) => {\n  // Previously we only returned data on data events,\n  // not on done events. Clear out the buffer to keep that consistent.\n  transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n  // have received\n\n  callback(transmuxedData);\n};\nconst handleGopInfo_ = (event, transmuxedData) => {\n  transmuxedData.gopInfo = event.data.gopInfo;\n};\nconst processTransmux = options => {\n  const {\n    transmuxer,\n    bytes,\n    audioAppendStart,\n    gopsToAlignWith,\n    remux,\n    onData,\n    onTrackInfo,\n    onAudioTimingInfo,\n    onVideoTimingInfo,\n    onVideoSegmentTimingInfo,\n    onAudioSegmentTimingInfo,\n    onId3,\n    onCaptions,\n    onDone,\n    onEndedTimeline,\n    onTransmuxerLog,\n    isEndOfTimeline\n  } = options;\n  const transmuxedData = {\n    buffer: []\n  };\n  let waitForEndedTimelineEvent = isEndOfTimeline;\n  const handleMessage = event => {\n    if (transmuxer.currentTransmux !== options) {\n      // disposed\n      return;\n    }\n    if (event.data.action === 'data') {\n      handleData_(event, transmuxedData, onData);\n    }\n    if (event.data.action === 'trackinfo') {\n      onTrackInfo(event.data.trackInfo);\n    }\n    if (event.data.action === 'gopInfo') {\n      handleGopInfo_(event, transmuxedData);\n    }\n    if (event.data.action === 'audioTimingInfo') {\n      onAudioTimingInfo(event.data.audioTimingInfo);\n    }\n    if (event.data.action === 'videoTimingInfo') {\n      onVideoTimingInfo(event.data.videoTimingInfo);\n    }\n    if (event.data.action === 'videoSegmentTimingInfo') {\n      onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n    }\n    if (event.data.action === 'audioSegmentTimingInfo') {\n      onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n    }\n    if (event.data.action === 'id3Frame') {\n      onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n    }\n    if (event.data.action === 'caption') {\n      onCaptions(event.data.caption);\n    }\n    if (event.data.action === 'endedtimeline') {\n      waitForEndedTimelineEvent = false;\n      onEndedTimeline();\n    }\n    if (event.data.action === 'log') {\n      onTransmuxerLog(event.data.log);\n    } // wait for the transmuxed event since we may have audio and video\n\n    if (event.data.type !== 'transmuxed') {\n      return;\n    } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n    // of a timeline, that means there may still be data events before the segment\n    // processing can be considerred complete. In that case, the final event should be\n    // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n    if (waitForEndedTimelineEvent) {\n      return;\n    }\n    transmuxer.onmessage = null;\n    handleDone_({\n      transmuxedData,\n      callback: onDone\n    });\n    /* eslint-disable no-use-before-define */\n\n    dequeue(transmuxer);\n    /* eslint-enable */\n  };\n\n  transmuxer.onmessage = handleMessage;\n  if (audioAppendStart) {\n    transmuxer.postMessage({\n      action: 'setAudioAppendStart',\n      appendStart: audioAppendStart\n    });\n  } // allow empty arrays to be passed to clear out GOPs\n\n  if (Array.isArray(gopsToAlignWith)) {\n    transmuxer.postMessage({\n      action: 'alignGopsWith',\n      gopsToAlignWith\n    });\n  }\n  if (typeof remux !== 'undefined') {\n    transmuxer.postMessage({\n      action: 'setRemux',\n      remux\n    });\n  }\n  if (bytes.byteLength) {\n    const buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n    const byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n    transmuxer.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: buffer,\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset,\n      byteLength: bytes.byteLength\n    }, [buffer]);\n  }\n  if (isEndOfTimeline) {\n    transmuxer.postMessage({\n      action: 'endTimeline'\n    });\n  } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n  // the end of the segment\n\n  transmuxer.postMessage({\n    action: 'flush'\n  });\n};\nconst dequeue = transmuxer => {\n  transmuxer.currentTransmux = null;\n  if (transmuxer.transmuxQueue.length) {\n    transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n    if (typeof transmuxer.currentTransmux === 'function') {\n      transmuxer.currentTransmux();\n    } else {\n      processTransmux(transmuxer.currentTransmux);\n    }\n  }\n};\nconst processAction = (transmuxer, action) => {\n  transmuxer.postMessage({\n    action\n  });\n  dequeue(transmuxer);\n};\nconst enqueueAction = (action, transmuxer) => {\n  if (!transmuxer.currentTransmux) {\n    transmuxer.currentTransmux = action;\n    processAction(transmuxer, action);\n    return;\n  }\n  transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n};\nconst reset = transmuxer => {\n  enqueueAction('reset', transmuxer);\n};\nconst endTimeline = transmuxer => {\n  enqueueAction('endTimeline', transmuxer);\n};\nconst transmux = options => {\n  if (!options.transmuxer.currentTransmux) {\n    options.transmuxer.currentTransmux = options;\n    processTransmux(options);\n    return;\n  }\n  options.transmuxer.transmuxQueue.push(options);\n};\nconst createTransmuxer = options => {\n  const transmuxer = new TransmuxWorker();\n  transmuxer.currentTransmux = null;\n  transmuxer.transmuxQueue = [];\n  const term = transmuxer.terminate;\n  transmuxer.terminate = () => {\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue.length = 0;\n    return term.call(transmuxer);\n  };\n  transmuxer.postMessage({\n    action: 'init',\n    options\n  });\n  return transmuxer;\n};\nvar segmentTransmuxer = {\n  reset,\n  endTimeline,\n  transmux,\n  createTransmuxer\n};\nconst workerCallback = function (options) {\n  const transmuxer = options.transmuxer;\n  const endAction = options.endAction || options.action;\n  const callback = options.callback;\n  const message = _extends({}, options, {\n    endAction: null,\n    transmuxer: null,\n    callback: null\n  });\n  const listenForEndEvent = event => {\n    if (event.data.action !== endAction) {\n      return;\n    }\n    transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n    if (event.data.data) {\n      event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n      if (options.data) {\n        options.data = event.data.data;\n      }\n    }\n    callback(event.data);\n  };\n  transmuxer.addEventListener('message', listenForEndEvent);\n  if (options.data) {\n    const isArrayBuffer = options.data instanceof ArrayBuffer;\n    message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n    message.byteLength = options.data.byteLength;\n    const transfers = [isArrayBuffer ? options.data : options.data.buffer];\n    transmuxer.postMessage(message, transfers);\n  } else {\n    transmuxer.postMessage(message);\n  }\n};\nconst REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nconst abortAll = activeXhrs => {\n  activeXhrs.forEach(xhr => {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\nconst getRequestStats = request => {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\nconst getProgressStats = progressEvent => {\n  const request = progressEvent.target;\n  const roundTripTime = Date.now() - request.requestTime;\n  const stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\nconst handleErrors = (error, request) => {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n    return {\n      status: request.status,\n      message: 'Empty HLS response at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Array} objects - objects to add the key bytes to.\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleKeyResponse = (segment, objects, finishProcessingFn) => (error, request) => {\n  const response = request.response;\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  if (response.byteLength !== 16) {\n    return finishProcessingFn({\n      status: request.status,\n      message: 'Invalid HLS key at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    }, segment);\n  }\n  const view = new DataView(response);\n  const bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n  for (let i = 0; i < objects.length; i++) {\n    objects[i].bytes = bytes;\n  }\n  return finishProcessingFn(null, segment);\n};\nconst parseInitSegment = (segment, callback) => {\n  const type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n  // only know how to parse mp4 init segments at the moment\n\n  if (type !== 'mp4') {\n    const uri = segment.map.resolvedUri || segment.map.uri;\n    return callback({\n      internal: true,\n      message: `Found unsupported ${type || 'unknown'} container for initialization segment at URL: ${uri}`,\n      code: REQUEST_ERRORS.FAILURE\n    });\n  }\n  workerCallback({\n    action: 'probeMp4Tracks',\n    data: segment.map.bytes,\n    transmuxer: segment.transmuxer,\n    callback: ({\n      tracks,\n      data\n    }) => {\n      // transfer bytes back to us\n      segment.map.bytes = data;\n      tracks.forEach(function (track) {\n        segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n        if (segment.map.tracks[track.type]) {\n          return;\n        }\n        segment.map.tracks[track.type] = track;\n        if (typeof track.id === 'number' && track.timescale) {\n          segment.map.timescales = segment.map.timescales || {};\n          segment.map.timescales[track.id] = track.timescale;\n        }\n      });\n      return callback(null);\n    }\n  });\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleInitSegmentResponse = ({\n  segment,\n  finishProcessingFn\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n  // until the key request is done to decrypt.\n\n  if (segment.map.key) {\n    segment.map.encryptedBytes = bytes;\n    return finishProcessingFn(null, segment);\n  }\n  segment.map.bytes = bytes;\n  parseInitSegment(segment, function (parseError) {\n    if (parseError) {\n      parseError.xhr = request;\n      parseError.status = request.status;\n      return finishProcessingFn(parseError, segment);\n    }\n    finishProcessingFn(null, segment);\n  });\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleSegmentResponse = ({\n  segment,\n  finishProcessingFn,\n  responseType\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const newBytes =\n  // although responseText \"should\" exist, this guard serves to prevent an error being\n  // thrown for two primary cases:\n  // 1. the mime type override stops working, or is not implemented for a specific\n  //    browser\n  // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n  responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n  segment.stats = getRequestStats(request);\n  if (segment.key) {\n    segment.encryptedBytes = new Uint8Array(newBytes);\n  } else {\n    segment.bytes = new Uint8Array(newBytes);\n  }\n  return finishProcessingFn(null, segment);\n};\nconst transmuxAndNotify = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const fmp4Tracks = segment.map && segment.map.tracks || {};\n  const isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n  // One reason for this is that in the case of full segments, we want to trust start\n  // times from the probe, rather than the transmuxer.\n\n  let audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n  const audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n  let videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n  const videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n  const finish = () => transmux({\n    bytes,\n    transmuxer: segment.transmuxer,\n    audioAppendStart: segment.audioAppendStart,\n    gopsToAlignWith: segment.gopsToAlignWith,\n    remux: isMuxed,\n    onData: result => {\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      dataFn(segment, result);\n    },\n    onTrackInfo: trackInfo => {\n      if (trackInfoFn) {\n        if (isMuxed) {\n          trackInfo.isMuxed = true;\n        }\n        trackInfoFn(segment, trackInfo);\n      }\n    },\n    onAudioTimingInfo: audioTimingInfo => {\n      // we only want the first start value we encounter\n      if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n        audioStartFn(audioTimingInfo.start);\n        audioStartFn = null;\n      } // we want to continually update the end time\n\n      if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n        audioEndFn(audioTimingInfo.end);\n      }\n    },\n    onVideoTimingInfo: videoTimingInfo => {\n      // we only want the first start value we encounter\n      if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n        videoStartFn(videoTimingInfo.start);\n        videoStartFn = null;\n      } // we want to continually update the end time\n\n      if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n        videoEndFn(videoTimingInfo.end);\n      }\n    },\n    onVideoSegmentTimingInfo: videoSegmentTimingInfo => {\n      videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n    },\n    onAudioSegmentTimingInfo: audioSegmentTimingInfo => {\n      audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n    },\n    onId3: (id3Frames, dispatchType) => {\n      id3Fn(segment, id3Frames, dispatchType);\n    },\n    onCaptions: captions => {\n      captionsFn(segment, [captions]);\n    },\n    isEndOfTimeline,\n    onEndedTimeline: () => {\n      endedTimelineFn();\n    },\n    onTransmuxerLog,\n    onDone: result => {\n      if (!doneFn) {\n        return;\n      }\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      doneFn(null, segment, result);\n    }\n  }); // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n  // Meaning cached frame data may corrupt our notion of where this segment\n  // really starts. To get around this, probe for the info needed.\n\n  workerCallback({\n    action: 'probeTs',\n    transmuxer: segment.transmuxer,\n    data: bytes,\n    baseStartTime: segment.baseStartTime,\n    callback: data => {\n      segment.bytes = bytes = data.data;\n      const probeResult = data.result;\n      if (probeResult) {\n        trackInfoFn(segment, {\n          hasAudio: probeResult.hasAudio,\n          hasVideo: probeResult.hasVideo,\n          isMuxed\n        });\n        trackInfoFn = null;\n        if (probeResult.hasAudio && !isMuxed) {\n          audioStartFn(probeResult.audioStart);\n        }\n        if (probeResult.hasVideo) {\n          videoStartFn(probeResult.videoStart);\n        }\n        audioStartFn = null;\n        videoStartFn = null;\n      }\n      finish();\n    }\n  });\n};\nconst handleSegmentBytes = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n  // We should have a handler that fetches the number of bytes required\n  // to check if something is fmp4. This will allow us to save bandwidth\n  // because we can only exclude a playlist and abort requests\n  // by codec after trackinfo triggers.\n\n  if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n    segment.isFmp4 = true;\n    const {\n      tracks\n    } = segment.map;\n    const trackInfo = {\n      isFmp4: true,\n      hasVideo: !!tracks.video,\n      hasAudio: !!tracks.audio\n    }; // if we have a audio track, with a codec that is not set to\n    // encrypted audio\n\n    if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n      trackInfo.audioCodec = tracks.audio.codec;\n    } // if we have a video track, with a codec that is not set to\n    // encrypted video\n\n    if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n      trackInfo.videoCodec = tracks.video.codec;\n    }\n    if (tracks.video && tracks.audio) {\n      trackInfo.isMuxed = true;\n    } // since we don't support appending fmp4 data on progress, we know we have the full\n    // segment here\n\n    trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n    // time. The end time can be roughly calculated by the receiver using the duration.\n    //\n    // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n    // that is the true start of the segment (where the playback engine should begin\n    // decoding).\n\n    const finishLoading = captions => {\n      // if the track still has audio at this point it is only possible\n      // for it to be audio only. See `tracks.video && tracks.audio` if statement\n      // above.\n      // we make sure to use segment.bytes here as that\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n      });\n      if (captions && captions.length) {\n        captionsFn(segment, captions);\n      }\n      doneFn(null, segment, {});\n    };\n    workerCallback({\n      action: 'probeMp4StartTime',\n      timescales: segment.map.timescales,\n      data: bytesAsUint8Array,\n      transmuxer: segment.transmuxer,\n      callback: ({\n        data,\n        startTime\n      }) => {\n        // transfer bytes back to us\n        bytes = data.buffer;\n        segment.bytes = bytesAsUint8Array = data;\n        if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n          timingInfoFn(segment, 'audio', 'start', startTime);\n        }\n        if (trackInfo.hasVideo) {\n          timingInfoFn(segment, 'video', 'start', startTime);\n        } // Run through the CaptionParser in case there are captions.\n        // Initialize CaptionParser if it hasn't been yet\n\n        if (!tracks.video || !data.byteLength || !segment.transmuxer) {\n          finishLoading();\n          return;\n        }\n        workerCallback({\n          action: 'pushMp4Captions',\n          endAction: 'mp4Captions',\n          transmuxer: segment.transmuxer,\n          data: bytesAsUint8Array,\n          timescales: segment.map.timescales,\n          trackIds: [tracks.video.id],\n          callback: message => {\n            // transfer bytes back to us\n            bytes = message.data.buffer;\n            segment.bytes = bytesAsUint8Array = message.data;\n            message.logs.forEach(function (log) {\n              onTransmuxerLog(merge(log, {\n                stream: 'mp4CaptionParser'\n              }));\n            });\n            finishLoading(message.captions);\n          }\n        });\n      }\n    });\n    return;\n  } // VTT or other segments that don't need processing\n\n  if (!segment.transmuxer) {\n    doneFn(null, segment, {});\n    return;\n  }\n  if (typeof segment.container === 'undefined') {\n    segment.container = detectContainerForBytes(bytesAsUint8Array);\n  }\n  if (segment.container !== 'ts' && segment.container !== 'aac') {\n    trackInfoFn(segment, {\n      hasAudio: false,\n      hasVideo: false\n    });\n    doneFn(null, segment, {});\n    return;\n  } // ts or aac\n\n  transmuxAndNotify({\n    segment,\n    bytes,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  });\n};\nconst decrypt = function ({\n  id,\n  key,\n  encryptedBytes,\n  decryptionWorker\n}, callback) {\n  const decryptionHandler = event => {\n    if (event.data.source === id) {\n      decryptionWorker.removeEventListener('message', decryptionHandler);\n      const decrypted = event.data.decrypted;\n      callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n    }\n  };\n  decryptionWorker.addEventListener('message', decryptionHandler);\n  let keyBytes;\n  if (key.bytes.slice) {\n    keyBytes = key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n  } // incrementally decrypt the bytes\n\n  decryptionWorker.postMessage(createTransferableMessage({\n    source: id,\n    encrypted: encryptedBytes,\n    key: keyBytes,\n    iv: key.iv\n  }), [encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\nconst decryptSegment = ({\n  decryptionWorker,\n  segment,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  decrypt({\n    id: segment.requestId,\n    key: segment.key,\n    encryptedBytes: segment.encryptedBytes,\n    decryptionWorker\n  }, decryptedBytes => {\n    segment.bytes = decryptedBytes;\n    handleSegmentBytes({\n      segment,\n      bytes: segment.bytes,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn,\n      doneFn,\n      onTransmuxerLog\n    });\n  });\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\nconst waitForCompletion = ({\n  activeXhrs,\n  decryptionWorker,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let count = 0;\n  let didError = false;\n  return (error, segment) => {\n    if (didError) {\n      return;\n    }\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n    count += 1;\n    if (count === activeXhrs.length) {\n      const segmentFinish = function () {\n        if (segment.encryptedBytes) {\n          return decryptSegment({\n            decryptionWorker,\n            segment,\n            trackInfoFn,\n            timingInfoFn,\n            videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn,\n            id3Fn,\n            captionsFn,\n            isEndOfTimeline,\n            endedTimelineFn,\n            dataFn,\n            doneFn,\n            onTransmuxerLog\n          });\n        } // Otherwise, everything is ready just continue\n\n        handleSegmentBytes({\n          segment,\n          bytes: segment.bytes,\n          trackInfoFn,\n          timingInfoFn,\n          videoSegmentTimingInfoFn,\n          audioSegmentTimingInfoFn,\n          id3Fn,\n          captionsFn,\n          isEndOfTimeline,\n          endedTimelineFn,\n          dataFn,\n          doneFn,\n          onTransmuxerLog\n        });\n      }; // Keep track of when *all* of the requests have completed\n\n      segment.endOfAllRequests = Date.now();\n      if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n        return decrypt({\n          decryptionWorker,\n          // add -init to the \"id\" to differentiate between segment\n          // and init segment decryption, just in case they happen\n          // at the same time at some point in the future.\n          id: segment.requestId + '-init',\n          encryptedBytes: segment.map.encryptedBytes,\n          key: segment.map.key\n        }, decryptedBytes => {\n          segment.map.bytes = decryptedBytes;\n          parseInitSegment(segment, parseError => {\n            if (parseError) {\n              abortAll(activeXhrs);\n              return doneFn(parseError, segment);\n            }\n            segmentFinish();\n          });\n        });\n      }\n      segmentFinish();\n    }\n  };\n};\n/**\n * Calls the abort callback if any request within the batch was aborted. Will only call\n * the callback once per batch of requests, even if multiple were aborted.\n *\n * @param {Object} loadendState - state to check to see if the abort function was called\n * @param {Function} abortFn - callback to call for abort\n */\n\nconst handleLoadEnd = ({\n  loadendState,\n  abortFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n    abortFn();\n    loadendState.calledAbortFn = true;\n  }\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\nconst handleProgress = ({\n  segment,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted) {\n    return;\n  }\n  segment.stats = merge(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n  if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n    segment.stats.firstBytesReceivedAt = Date.now();\n  }\n  return progressFn(event, segment);\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [transmuxer]: Object,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n *                             aborted\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n *                            request, transmuxed if needed\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @return {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\nconst mediaSegmentRequest = ({\n  xhr,\n  xhrOptions,\n  decryptionWorker,\n  segment,\n  abortFn,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const activeXhrs = [];\n  const finishProcessingFn = waitForCompletion({\n    activeXhrs,\n    decryptionWorker,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  }); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    const objects = [segment.key];\n    if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n      objects.push(segment.map.key);\n    }\n    const keyRequestOptions = merge(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    const keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n    const keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n  if (segment.map && !segment.map.bytes) {\n    const differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n    if (differentMapKey) {\n      const mapKeyRequestOptions = merge(xhrOptions, {\n        uri: segment.map.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      const mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n      const mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n      activeXhrs.push(mapKeyXhr);\n    }\n    const initSegmentOptions = merge(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    const initSegmentRequestCallback = handleInitSegmentResponse({\n      segment,\n      finishProcessingFn\n    });\n    const initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n  const segmentRequestOptions = merge(xhrOptions, {\n    uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  const segmentRequestCallback = handleSegmentResponse({\n    segment,\n    finishProcessingFn,\n    responseType: segmentRequestOptions.responseType\n  });\n  const segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress({\n    segment,\n    progressFn,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn\n  }));\n  activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n  // multiple times, provide a shared state object\n\n  const loadendState = {};\n  activeXhrs.forEach(activeXhr => {\n    activeXhr.addEventListener('loadend', handleLoadEnd({\n      loadendState,\n      abortFn\n    }));\n  });\n  return () => abortAll(activeXhrs);\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\nconst logFn$1 = logger('CodecUtils');\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n *\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\nconst getCodecs = function (media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  const mediaAttributes = media.attributes || {};\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n};\nconst isMaat = (main, media) => {\n  const mediaAttributes = media.attributes || {};\n  return main && main.mediaGroups && main.mediaGroups.AUDIO && mediaAttributes.AUDIO && main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n};\nconst isMuxed = (main, media) => {\n  if (!isMaat(main, media)) {\n    return true;\n  }\n  const mediaAttributes = media.attributes || {};\n  const audioGroup = main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  for (const groupId in audioGroup) {\n    // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n    // or there are listed playlists (the case for DASH, as the manifest will have already\n    // provided all of the details necessary to generate the audio playlist, as opposed to\n    // HLS' externally requested playlists), then the content is demuxed.\n    if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n      return true;\n    }\n  }\n  return false;\n};\nconst unwrapCodecList = function (codecList) {\n  const codecs = {};\n  codecList.forEach(({\n    mediaType,\n    type,\n    details\n  }) => {\n    codecs[mediaType] = codecs[mediaType] || [];\n    codecs[mediaType].push(translateLegacyCodec(`${type}${details}`));\n  });\n  Object.keys(codecs).forEach(function (mediaType) {\n    if (codecs[mediaType].length > 1) {\n      logFn$1(`multiple ${mediaType} codecs found as attributes: ${codecs[mediaType].join(', ')}. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.`);\n      codecs[mediaType] = null;\n      return;\n    }\n    codecs[mediaType] = codecs[mediaType][0];\n  });\n  return codecs;\n};\nconst codecCount = function (codecObj) {\n  let count = 0;\n  if (codecObj.audio) {\n    count++;\n  }\n  if (codecObj.video) {\n    count++;\n  }\n  return count;\n};\n/**\n * Calculates the codec strings for a working configuration of\n * SourceBuffers to play variant streams in a main playlist. If\n * there is no possible working configuration, an empty object will be\n * returned.\n *\n * @param main {Object} the m3u8 object for the main playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Object} the codec strings.\n *\n * @private\n */\n\nconst codecsForPlaylist = function (main, media) {\n  const mediaAttributes = media.attributes || {};\n  const codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n  if (isMaat(main, media) && !codecInfo.audio) {\n    if (!isMuxed(main, media)) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      const defaultCodecs = unwrapCodecList(codecsFromDefault(main, mediaAttributes.AUDIO) || []);\n      if (defaultCodecs.audio) {\n        codecInfo.audio = defaultCodecs.audio;\n      }\n    }\n  }\n  return codecInfo;\n};\nconst logFn = logger('PlaylistSelector');\nconst representationToString = function (representation) {\n  if (!representation || !representation.playlist) {\n    return;\n  }\n  const playlist = representation.playlist;\n  return JSON.stringify({\n    id: playlist.id,\n    bandwidth: representation.bandwidth,\n    width: representation.width,\n    height: representation.height,\n    codecs: playlist.attributes && playlist.attributes.CODECS || ''\n  });\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\nconst safeGetComputedStyle = function (el, property) {\n  if (!el) {\n    return '';\n  }\n  const result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\nconst stableSort = function (array, sortFn) {\n  const newArray = array.slice();\n  array.sort(function (left, right) {\n    const cmp = sortFn(left, right);\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistBandwidth = function (left, right) {\n  let leftBandwidth;\n  let rightBandwidth;\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistResolution = function (left, right) {\n  let leftWidth;\n  let rightWidth;\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} main\n *        Object representation of the main manifest\n * @param {number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @param {Object} playlistController\n *        the current playlistController object\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nlet simpleSelector = function (main, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, playlistController) {\n  // If we end up getting called before `main` is available, exit early\n  if (!main) {\n    return;\n  }\n  const options = {\n    bandwidth: playerBandwidth,\n    width: playerWidth,\n    height: playerHeight,\n    limitRenditionByPlayerDimensions\n  };\n  let playlists = main.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n  if (Playlist.isAudioOnly(main)) {\n    playlists = playlistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n    // at the buttom of this function for debugging.\n\n    options.audioOnly = true;\n  } // convert the playlists to an intermediary representation to make comparisons easier\n\n  let sortedPlaylistReps = playlists.map(playlist => {\n    let bandwidth;\n    const width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    const height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth,\n      width,\n      height,\n      playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, (left, right) => left.bandwidth - right.bandwidth); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isIncompatible(rep.playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylistReps = sortedPlaylistReps.filter(rep => Playlist.isEnabled(rep.playlist));\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isDisabled(rep.playlist));\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n  const bandwidthPlaylistReps = enabledPlaylistReps.filter(rep => rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth);\n  let highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  const bandwidthBestRep = bandwidthPlaylistReps.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    const chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n    if (chosenRep && chosenRep.playlist) {\n      let type = 'sortedPlaylistReps';\n      if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      }\n      if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n      logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n      return chosenRep.playlist;\n    }\n    logFn('could not choose a playlist with options', options);\n    return null;\n  } // filter out playlists without resolution information\n\n  const haveResolution = bandwidthPlaylistReps.filter(rep => rep.width && rep.height); // sort variants by resolution\n\n  stableSort(haveResolution, (left, right) => left.width - right.width); // if we have the exact resolution as the player use it\n\n  const resolutionBestRepList = haveResolution.filter(rep => rep.width === playerWidth && rep.height === playerHeight);\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  const resolutionBestRep = resolutionBestRepList.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  let resolutionPlusOneList;\n  let resolutionPlusOneSmallest;\n  let resolutionPlusOneRep; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(rep => rep.width > playerWidth || rep.height > playerHeight); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(rep => rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  }\n  let leastPixelDiffRep; // If this selector proves to be better than others,\n  // resolutionPlusOneRep and resolutionBestRep and all\n  // the code involving them should be removed.\n\n  if (playlistController.leastPixelDiffSelector) {\n    // find the variant that is closest to the player's pixel size\n    const leastPixelDiffList = haveResolution.map(rep => {\n      rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n      return rep;\n    }); // get the highest bandwidth, closest resolution playlist\n\n    stableSort(leastPixelDiffList, (left, right) => {\n      // sort by highest bandwidth if pixelDiff is the same\n      if (left.pixelDiff === right.pixelDiff) {\n        return right.bandwidth - left.bandwidth;\n      }\n      return left.pixelDiff - right.pixelDiff;\n    });\n    leastPixelDiffRep = leastPixelDiffList[0];\n  } // fallback chain of variants\n\n  const chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  if (chosenRep && chosenRep.playlist) {\n    let type = 'sortedPlaylistReps';\n    if (leastPixelDiffRep) {\n      type = 'leastPixelDiffRep';\n    } else if (resolutionPlusOneRep) {\n      type = 'resolutionPlusOneRep';\n    } else if (resolutionBestRep) {\n      type = 'resolutionBestRep';\n    } else if (bandwidthBestRep) {\n      type = 'bandwidthBestRep';\n    } else if (enabledPlaylistReps[0]) {\n      type = 'enabledPlaylistReps';\n    }\n    logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n    return chosenRep.playlist;\n  }\n  logFn('could not choose a playlist with options', options);\n  return null;\n};\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nconst lastBandwidthSelector = function () {\n  const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  return simpleSelector(this.playlists.main, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n};\n/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @param {number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */\n\nconst movingAverageBandwidthSelector = function (decay) {\n  let average = -1;\n  let lastSystemBandwidth = -1;\n  if (decay < 0 || decay > 1) {\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n  }\n  return function () {\n    const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n    if (average < 0) {\n      average = this.systemBandwidth;\n      lastSystemBandwidth = this.systemBandwidth;\n    } // stop the average value from decaying for every 250ms\n    // when the systemBandwidth is constant\n    // and\n    // stop average from setting to a very low value when the\n    // systemBandwidth becomes 0 in case of chunk cancellation\n\n    if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n      average = decay * this.systemBandwidth + (1 - decay) * average;\n      lastSystemBandwidth = this.systemBandwidth;\n    }\n    return simpleSelector(this.playlists.main, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n  };\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.main\n *        Object representation of the main manifest\n * @param {number} settings.currentTime\n *        The current time of the player\n * @param {number} settings.bandwidth\n *        Current measured bandwidth\n * @param {number} settings.duration\n *        Duration of the media\n * @param {number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\nconst minRebufferMaxBandwidthSelector = function (settings) {\n  const {\n    main,\n    currentTime,\n    bandwidth,\n    duration,\n    segmentDuration,\n    timeUntilRebuffer,\n    currentTimeline,\n    syncController\n  } = settings; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  const compatiblePlaylists = main.playlists.filter(playlist => !Playlist.isIncompatible(playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(playlist => !Playlist.isDisabled(playlist));\n  }\n  const bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  const rebufferingEstimates = bandwidthPlaylists.map(playlist => {\n    const syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    const numRequests = syncPoint ? 1 : 2;\n    const requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    const rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist,\n      rebufferingImpact\n    };\n  });\n  const noRebufferingPlaylists = rebufferingEstimates.filter(estimate => estimate.rebufferingImpact <= 0); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, (a, b) => comparePlaylistBandwidth(b.playlist, a.playlist));\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n  stableSort(rebufferingEstimates, (a, b) => a.rebufferingImpact - b.rebufferingImpact);\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\nconst lowestBitrateCompatibleVariantSelector = function () {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  const playlists = this.playlists.main.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, (a, b) => comparePlaylistBandwidth(a, b)); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  const playlistsWithVideo = playlists.filter(playlist => !!codecsForPlaylist(this.playlists.main, playlist).video);\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * Combine all segments into a single Uint8Array\n *\n * @param {Object} segmentObj\n * @return {Uint8Array} concatenated bytes\n * @private\n */\nconst concatSegments = segmentObj => {\n  let offset = 0;\n  let tempBuffer;\n  if (segmentObj.bytes) {\n    tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n    segmentObj.segments.forEach(segment => {\n      tempBuffer.set(segment, offset);\n      offset += segment.byteLength;\n    });\n  }\n  return tempBuffer;\n};\n\n/**\n * @file text-tracks.js\n */\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStream the caption stream to create\n * @private\n */\n\nconst createCaptionsTrackIfNotExists = function (inbandTextTracks, tech, captionStream) {\n  if (!inbandTextTracks[captionStream]) {\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-608'\n    });\n    let instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n    if (/^cc708_/.test(captionStream)) {\n      instreamId = 'SERVICE' + captionStream.split('_')[1];\n    }\n    const track = tech.textTracks().getTrackById(instreamId);\n    if (track) {\n      // Resuse an existing track with a CC# id because this was\n      // very likely created by videojs-contrib-hls from information\n      // in the m3u8 for us to use\n      inbandTextTracks[captionStream] = track;\n    } else {\n      // This section gets called when we have caption services that aren't specified in the manifest.\n      // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n      const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n      let label = captionStream;\n      let language = captionStream;\n      let def = false;\n      const captionService = captionServices[instreamId];\n      if (captionService) {\n        label = captionService.label;\n        language = captionService.language;\n        def = captionService.default;\n      } // Otherwise, create a track with the default `CC#` label and\n      // without a language\n\n      inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n        kind: 'captions',\n        id: instreamId,\n        // TODO: investigate why this doesn't seem to turn the caption on by default\n        default: def,\n        label,\n        language\n      }, false).track;\n    }\n  }\n};\n/**\n * Add caption text track data to a source handler given an array of captions\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {Array} captionArray an array of caption data\n * @private\n */\n\nconst addCaptionData = function ({\n  inbandTextTracks,\n  captionArray,\n  timestampOffset\n}) {\n  if (!captionArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  captionArray.forEach(caption => {\n    const track = caption.stream;\n    inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n  });\n};\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\nconst deprecateOldCue = function (cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get() {\n        videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get() {\n        videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get() {\n        videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n/**\n * Add metadata text track data to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} metadataArray an array of meta data\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {number} videoDuration the duration of the video\n * @private\n */\n\nconst addMetadata = ({\n  inbandTextTracks,\n  metadataArray,\n  timestampOffset,\n  videoDuration\n}) => {\n  if (!metadataArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  metadataArray.forEach(metadata => {\n    const time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n    // ignore this bit of metadata.\n    // This likely occurs when you have an non-timed ID3 tag like TIT2,\n    // which is the \"Title/Songname/Content description\" frame\n\n    if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n      return;\n    }\n    metadata.frames.forEach(frame => {\n      const cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n      cue.frame = frame;\n      cue.value = frame;\n      deprecateOldCue(cue);\n      metadataTrack.addCue(cue);\n    });\n  });\n  if (!metadataTrack.cues || !metadataTrack.cues.length) {\n    return;\n  } // Updating the metadeta cues so that\n  // the endTime of each cue is the startTime of the next cue\n  // the endTime of last cue is the duration of the video\n\n  const cues = metadataTrack.cues;\n  const cuesArray = []; // Create a copy of the TextTrackCueList...\n  // ...disregarding cues with a falsey value\n\n  for (let i = 0; i < cues.length; i++) {\n    if (cues[i]) {\n      cuesArray.push(cues[i]);\n    }\n  } // Group cues by their startTime value\n\n  const cuesGroupedByStartTime = cuesArray.reduce((obj, cue) => {\n    const timeSlot = obj[cue.startTime] || [];\n    timeSlot.push(cue);\n    obj[cue.startTime] = timeSlot;\n    return obj;\n  }, {}); // Sort startTimes by ascending order\n\n  const sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort((a, b) => Number(a) - Number(b)); // Map each cue group's endTime to the next group's startTime\n\n  sortedStartTimes.forEach((startTime, idx) => {\n    const cueGroup = cuesGroupedByStartTime[startTime];\n    const nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n    cueGroup.forEach(cue => {\n      cue.endTime = nextTime;\n    });\n  });\n};\n/**\n * Create metadata text track on video.js if it does not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {string} dispatchType the inband metadata track dispatch type\n * @param {Object} tech the video.js tech\n * @private\n */\n\nconst createMetadataTrackIfNotExists = (inbandTextTracks, dispatchType, tech) => {\n  if (inbandTextTracks.metadataTrack_) {\n    return;\n  }\n  inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n    kind: 'metadata',\n    label: 'Timed Metadata'\n  }, false).track;\n  inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n};\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\nconst removeCuesFromTrack = function (start, end, track) {\n  let i;\n  let cue;\n  if (!track) {\n    return;\n  }\n  if (!track.cues) {\n    return;\n  }\n  i = track.cues.length;\n  while (i--) {\n    cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n    if (cue.startTime >= start && cue.endTime <= end) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * Remove duplicate cues from a track on video.js (a cue is considered a\n * duplicate if it has the same time interval and text as another)\n *\n * @param {Object} track the text track to remove the duplicate cues from\n * @private\n */\n\nconst removeDuplicateCuesFromTrack = function (track) {\n  const cues = track.cues;\n  if (!cues) {\n    return;\n  }\n  for (let i = 0; i < cues.length; i++) {\n    const duplicates = [];\n    let occurrences = 0;\n    for (let j = 0; j < cues.length; j++) {\n      if (cues[i].startTime === cues[j].startTime && cues[i].endTime === cues[j].endTime && cues[i].text === cues[j].text) {\n        occurrences++;\n        if (occurrences > 1) {\n          duplicates.push(cues[j]);\n        }\n      }\n    }\n    if (duplicates.length) {\n      duplicates.forEach(dupe => track.removeCue(dupe));\n    }\n  }\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\nconst gopsSafeToAlignWith = (buffer, currentTime, mapping) => {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n  const currentTimePts = Math.ceil((currentTime - mapping + 3) * ONE_SECOND_IN_TS);\n  let i;\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\nconst updateGopBuffer = (buffer, gops, replace) => {\n  if (!gops.length) {\n    return buffer;\n  }\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n  const start = gops[0].pts;\n  let i = 0;\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\nconst removeGopBuffer = (buffer, start, end, mapping) => {\n  const startPts = Math.ceil((start - mapping) * ONE_SECOND_IN_TS);\n  const endPts = Math.ceil((end - mapping) * ONE_SECOND_IN_TS);\n  const updatedBuffer = buffer.slice();\n  let i = buffer.length;\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n  let j = i + 1;\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\nconst shallowEqual = function (a, b) {\n  // if both are undefined\n  // or one or the other is undefined\n  // they are not equal\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // they are the same object and thus, equal\n\n  if (a === b) {\n    return true;\n  } // sort keys so we can make sure they have\n  // all the same keys later.\n\n  const akeys = Object.keys(a).sort();\n  const bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n  if (akeys.length !== bkeys.length) {\n    return false;\n  }\n  for (let i = 0; i < akeys.length; i++) {\n    const key = akeys[i]; // different sorted keys, not equal\n\n    if (key !== bkeys[i]) {\n      return false;\n    } // different values, not equal\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\nconst QUOTA_EXCEEDED_ERR = 22;\n\n/**\n * The segment loader has no recourse except to fetch a segment in the\n * current playlist and use the internal timestamps in that segment to\n * generate a syncPoint. This function returns a good candidate index\n * for that process.\n *\n * @param {Array} segments - the segments array from a playlist.\n * @return {number} An index of a segment from the playlist to load\n */\n\nconst getSyncSegmentCandidate = function (currentTimeline, segments, targetTime) {\n  segments = segments || [];\n  const timelineSegments = [];\n  let time = 0;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    if (currentTimeline === segment.timeline) {\n      timelineSegments.push(i);\n      time += segment.duration;\n      if (time > targetTime) {\n        return i;\n      }\n    }\n  }\n  if (timelineSegments.length === 0) {\n    return 0;\n  } // default to the last timeline segment\n\n  return timelineSegments[timelineSegments.length - 1];\n}; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n// as a start to prevent any potential issues with removing content too close to the\n// playhead.\n\nconst MIN_BACK_BUFFER = 1; // in ms\n\nconst CHECK_BUFFER_DELAY = 500;\nconst finite = num => typeof num === 'number' && isFinite(num); // With most content hovering around 30fps, if a segment has a duration less than a half\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n// not accurately reflect the rest of the content.\n\nconst MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\nconst illegalMediaSwitch = (loaderType, startingMedia, trackInfo) => {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n    return null;\n  }\n  if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n  if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interrupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {number} currentTime\n *        The current time of the player\n * @param {number} targetDuration\n *        The target duration of the current playlist\n * @return {number}\n *         Time that is safe to remove from the back buffer without interrupting playback\n */\n\nconst safeBackBufferTrimTime = (seekable, currentTime, targetDuration) => {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  let trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n  if (seekable.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n  const maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\nconst segmentInfoString = segmentInfo => {\n  const {\n    startOfSegment,\n    duration,\n    segment,\n    part,\n    playlist: {\n      mediaSequence: seq,\n      id,\n      segments = []\n    },\n    mediaIndex: index,\n    partIndex,\n    timeline\n  } = segmentInfo;\n  const segmentLen = segments.length - 1;\n  let selection = 'mediaIndex/partIndex increment';\n  if (segmentInfo.getMediaInfoForTime) {\n    selection = `getMediaInfoForTime (${segmentInfo.getMediaInfoForTime})`;\n  } else if (segmentInfo.isSyncRequest) {\n    selection = 'getSyncSegmentCandidate (isSyncRequest)';\n  }\n  if (segmentInfo.independent) {\n    selection += ` with independent ${segmentInfo.independent}`;\n  }\n  const hasPartIndex = typeof partIndex === 'number';\n  const name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n  const zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n    preloadSegment: segment\n  }) - 1 : 0;\n  return `${name} [${seq + index}/${seq + segmentLen}]` + (hasPartIndex ? ` part [${partIndex}/${zeroBasedPartCount}]` : '') + ` segment start/end [${segment.start} => ${segment.end}]` + (hasPartIndex ? ` part start/end [${part.start} => ${part.end}]` : '') + ` startOfSegment [${startOfSegment}]` + ` duration [${duration}]` + ` timeline [${timeline}]` + ` selected by [${selection}]` + ` playlist [${id}]`;\n};\nconst timingInfoPropertyForMedia = mediaType => `${mediaType}TimingInfo`;\n/**\n * Returns the timestamp offset to use for the segment.\n *\n * @param {number} segmentTimeline\n *        The timeline of the segment\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} startOfSegment\n *        The estimated segment start\n * @param {TimeRange[]} buffered\n *        The loader's buffer\n * @param {boolean} overrideCheck\n *        If true, no checks are made to see if the timestamp offset value should be set,\n *        but sets it directly to a value.\n *\n * @return {number|null}\n *         Either a number representing a new timestamp offset, or null if the segment is\n *         part of the same timeline\n */\n\nconst timestampOffsetForSegment = ({\n  segmentTimeline,\n  currentTimeline,\n  startOfSegment,\n  buffered,\n  overrideCheck\n}) => {\n  // Check to see if we are crossing a discontinuity to see if we need to set the\n  // timestamp offset on the transmuxer and source buffer.\n  //\n  // Previously, we changed the timestampOffset if the start of this segment was less than\n  // the currently set timestampOffset, but this isn't desirable as it can produce bad\n  // behavior, especially around long running live streams.\n  if (!overrideCheck && segmentTimeline === currentTimeline) {\n    return null;\n  } // When changing renditions, it's possible to request a segment on an older timeline. For\n  // instance, given two renditions with the following:\n  //\n  // #EXTINF:10\n  // segment1\n  // #EXT-X-DISCONTINUITY\n  // #EXTINF:10\n  // segment2\n  // #EXTINF:10\n  // segment3\n  //\n  // And the current player state:\n  //\n  // current time: 8\n  // buffer: 0 => 20\n  //\n  // The next segment on the current rendition would be segment3, filling the buffer from\n  // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n  // then the next segment to be requested will be segment1 from the new rendition in\n  // order to fill time 8 and onwards. Using the buffered end would result in repeated\n  // content (since it would position segment1 of the new rendition starting at 20s). This\n  // case can be identified when the new segment's timeline is a prior value. Instead of\n  // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n  // more accurate to the actual start time of the segment.\n\n  if (segmentTimeline < currentTimeline) {\n    return startOfSegment;\n  } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n  // value uses the end of the last segment if it is available. While this value\n  // should often be correct, it's better to rely on the buffered end, as the new\n  // content post discontinuity should line up with the buffered end as if it were\n  // time 0 for the new content.\n\n  return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n};\n/**\n * Returns whether or not the loader should wait for a timeline change from the timeline\n * change controller before processing the segment.\n *\n * Primary timing in VHS goes by video. This is different from most media players, as\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\n * will continue to use video as the primary timing source, due to the current logic and\n * expectations built around it.\n\n * Since the timing follows video, in order to maintain sync, the video loader is\n * responsible for setting both audio and video source buffer timestamp offsets.\n *\n * Setting different values for audio and video source buffers could lead to\n * desyncing. The following examples demonstrate some of the situations where this\n * distinction is important. Note that all of these cases involve demuxed content. When\n * content is muxed, the audio and video are packaged together, therefore syncing\n * separate media playlists is not an issue.\n *\n * CASE 1: Audio prepares to load a new timeline before video:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:                     ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader              ^\n *\n * In the above example, the audio loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the video loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n * the audio loader must provide the audioAppendStart value to trim the content in the\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n * segment until that value is provided.\n *\n * CASE 2: Video prepares to load a new timeline before audio:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:             ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader                      ^\n *\n * In the above example, the video loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\n * segment is loaded and processed, both the video and audio timestamp offsets will be\n * set, since video is used as the primary timing source. This is to ensure content lines\n * up appropriately, as any modifications to the video timing are reflected by audio when\n * the video loader sets the audio and video timestamp offsets to the same value. However,\n * setting the timestamp offset for audio before audio has had a chance to change\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n *\n * CASE 3: When seeking, audio prepares to load a new timeline before video\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:           ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader            ^\n *\n * In the above example, both audio and video loaders are loading segments from timeline\n * 0, but imagine that the seek originated from timeline 1.\n *\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\n * must wait for the video loader to load its segment and update both the audio and video\n * timestamp offsets before it may load and append its own segment. This is the case\n * whether the seek results in a mismatched segment request (e.g., the audio loader\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n * loaders choose to load the same segment index from each playlist, as the segments may\n * not be aligned perfectly, even for matching segment indexes.\n *\n * @param {Object} timelinechangeController\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} segmentTimeline\n *        The timeline of the segment being loaded\n * @param {('main'|'audio')} loaderType\n *        The loader type\n * @param {boolean} audioDisabled\n *        Whether the audio is disabled for the loader. This should only be true when the\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\n *        the main loader when an alternate audio playlist is active.\n *\n * @return {boolean}\n *         Whether the loader should wait for a timeline change from the timeline change\n *         controller before processing the segment\n */\n\nconst shouldWaitForTimelineChange = ({\n  timelineChangeController,\n  currentTimeline,\n  segmentTimeline,\n  loaderType,\n  audioDisabled\n}) => {\n  if (currentTimeline === segmentTimeline) {\n    return false;\n  }\n  if (loaderType === 'audio') {\n    const lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n      type: 'main'\n    }); // Audio loader should wait if:\n    //\n    // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n    // * main hasn't yet changed to the timeline audio is looking to load\n\n    return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n  } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n  // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n  // loader's segments (or the content is audio/video only and handled by the main\n  // loader).\n\n  if (loaderType === 'main' && audioDisabled) {\n    const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'audio'\n    }); // Main loader should wait for the audio loader if audio is not pending a timeline\n    // change to the current timeline.\n    //\n    // Since the main loader is responsible for setting the timestamp offset for both\n    // audio and video, the main loader must wait for audio to be about to change to its\n    // timeline before setting the offset, otherwise, if audio is behind in loading,\n    // segments from the previous timeline would be adjusted by the new timestamp offset.\n    //\n    // This requirement means that video will not cross a timeline until the audio is\n    // about to cross to it, so that way audio and video will always cross the timeline\n    // together.\n    //\n    // In addition to normal timeline changes, these rules also apply to the start of a\n    // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n    // that these rules apply to the first timeline change because if they did not, it's\n    // possible that the main loader will cross two timelines before the audio loader has\n    // crossed one. Logic may be implemented to handle the startup as a special case, but\n    // it's easier to simply treat all timeline changes the same.\n\n    if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\nconst mediaDuration = timingInfos => {\n  let maxDuration = 0;\n  ['video', 'audio'].forEach(function (type) {\n    const typeTimingInfo = timingInfos[`${type}TimingInfo`];\n    if (!typeTimingInfo) {\n      return;\n    }\n    const {\n      start,\n      end\n    } = typeTimingInfo;\n    let duration;\n    if (typeof start === 'bigint' || typeof end === 'bigint') {\n      duration = window$1.BigInt(end) - window$1.BigInt(start);\n    } else if (typeof start === 'number' && typeof end === 'number') {\n      duration = end - start;\n    }\n    if (typeof duration !== 'undefined' && duration > maxDuration) {\n      maxDuration = duration;\n    }\n  }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n  // as we only need BigInt when we are above that.\n\n  if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n    maxDuration = Number(maxDuration);\n  }\n  return maxDuration;\n};\nconst segmentTooLong = ({\n  segmentDuration,\n  maxDuration\n}) => {\n  // 0 duration segments are most likely due to metadata only segments or a lack of\n  // information.\n  if (!segmentDuration) {\n    return false;\n  } // For HLS:\n  //\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n  // The EXTINF duration of each Media Segment in the Playlist\n  // file, when rounded to the nearest integer, MUST be less than or equal\n  // to the target duration; longer segments can trigger playback stalls\n  // or other errors.\n  //\n  // For DASH, the mpd-parser uses the largest reported segment duration as the target\n  // duration. Although that reported duration is occasionally approximate (i.e., not\n  // exact), a strict check may report that a segment is too long more often in DASH.\n\n  return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n};\nconst getTroublesomeSegmentDurationMessage = (segmentInfo, sourceType) => {\n  // Right now we aren't following DASH's timing model exactly, so only perform\n  // this check for HLS content.\n  if (sourceType !== 'hls') {\n    return null;\n  }\n  const segmentDuration = mediaDuration({\n    audioTimingInfo: segmentInfo.audioTimingInfo,\n    videoTimingInfo: segmentInfo.videoTimingInfo\n  }); // Don't report if we lack information.\n  //\n  // If the segment has a duration of 0 it is either a lack of information or a\n  // metadata only segment and shouldn't be reported here.\n\n  if (!segmentDuration) {\n    return null;\n  }\n  const targetDuration = segmentInfo.playlist.targetDuration;\n  const isSegmentWayTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration * 2\n  });\n  const isSegmentSlightlyTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration\n  });\n  const segmentTooLongMessage = `Segment with index ${segmentInfo.mediaIndex} ` + `from playlist ${segmentInfo.playlist.id} ` + `has a duration of ${segmentDuration} ` + `when the reported duration is ${segmentInfo.duration} ` + `and the target duration is ${targetDuration}. ` + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n  if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n    return {\n      severity: isSegmentWayTooLong ? 'warn' : 'info',\n      message: segmentTooLongMessage\n    };\n  }\n  return null;\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass SegmentLoader extends videojs.EventTarget {\n  constructor(settings, options = {}) {\n    super(); // check pre-conditions\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n    this.bandwidth = settings.bandwidth;\n    this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    this.roundTrip = NaN;\n    this.resetStats_();\n    this.mediaIndex = null;\n    this.partIndex = null; // private settings\n\n    this.hasPlayed_ = settings.hasPlayed;\n    this.currentTime_ = settings.currentTime;\n    this.seekable_ = settings.seekable;\n    this.seeking_ = settings.seeking;\n    this.duration_ = settings.duration;\n    this.mediaSource_ = settings.mediaSource;\n    this.vhs_ = settings.vhs;\n    this.loaderType_ = settings.loaderType;\n    this.currentMediaInfo_ = void 0;\n    this.startingMediaInfo_ = void 0;\n    this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    this.goalBufferLength_ = settings.goalBufferLength;\n    this.sourceType_ = settings.sourceType;\n    this.sourceUpdater_ = settings.sourceUpdater;\n    this.inbandTextTracks_ = settings.inbandTextTracks;\n    this.state_ = 'INIT';\n    this.timelineChangeController_ = settings.timelineChangeController;\n    this.shouldSaveSegmentTimingInfo_ = true;\n    this.parse708captions_ = settings.parse708captions;\n    this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n    this.captionServices_ = settings.captionServices;\n    this.exactManifestTimings = settings.exactManifestTimings; // private instance variables\n\n    this.checkBufferTimeout_ = null;\n    this.error_ = void 0;\n    this.currentTimeline_ = -1;\n    this.pendingSegment_ = null;\n    this.xhrOptions_ = null;\n    this.pendingSegments_ = [];\n    this.audioDisabled_ = false;\n    this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n    this.gopBuffer_ = [];\n    this.timeMapping_ = 0;\n    this.safeAppend_ = videojs.browser.IE_VERSION >= 11;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.playlistOfLastInitSegment_ = {\n      audio: null,\n      video: null\n    };\n    this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n    // information yet to start the loading process (e.g., if the audio loader wants to\n    // load a segment from the next timeline but the main loader hasn't yet crossed that\n    // timeline), then the load call will be added to the queue until it is ready to be\n    // processed.\n\n    this.loadQueue_ = [];\n    this.metadataQueue_ = {\n      id3: [],\n      caption: []\n    };\n    this.waitingOnRemove_ = false;\n    this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n    this.activeInitSegmentId_ = null;\n    this.initSegments_ = {}; // HLSe playback\n\n    this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    this.keyCache_ = {};\n    this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    this.syncController_ = settings.syncController;\n    this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n    this.transmuxer_ = this.createTransmuxer_();\n    this.triggerSyncInfoUpdate_ = () => this.trigger('syncinfoupdate');\n    this.syncController_.on('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    this.mediaSource_.addEventListener('sourceopen', () => {\n      if (!this.isEndOfStream_()) {\n        this.ended_ = false;\n      }\n    }); // ...for determining the fetch location\n\n    this.fetchAtBuffer_ = false;\n    this.logger_ = logger(`SegmentLoader[${this.loaderType_}]`);\n    Object.defineProperty(this, 'state', {\n      get() {\n        return this.state_;\n      },\n      set(newState) {\n        if (newState !== this.state_) {\n          this.logger_(`${this.state_} -> ${newState}`);\n          this.state_ = newState;\n          this.trigger('statechange');\n        }\n      }\n    });\n    this.sourceUpdater_.on('ready', () => {\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    }); // Only the main loader needs to listen for pending timeline changes, as the main\n    // loader should wait for audio to be ready to change its timeline so that both main\n    // and audio timelines change together. For more details, see the\n    // shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'main') {\n      this.timelineChangeController_.on('pendingtimelinechange', () => {\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    } // The main loader only listens on pending timeline changes, but the audio loader,\n    // since its loads follow main, needs to listen on timeline changes. For more details,\n    // see the shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'audio') {\n      this.timelineChangeController_.on('timelinechange', () => {\n        if (this.hasEnoughInfoToLoad_()) {\n          this.processLoadQueue_();\n        }\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    }\n  }\n  createTransmuxer_() {\n    return segmentTransmuxer.createTransmuxer({\n      remux: false,\n      alignGopsAtEnd: this.safeAppend_,\n      keepOriginalTimestamps: true,\n      parse708captions: this.parse708captions_,\n      captionServices: this.captionServices_\n    });\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n    this.mediaAppends = 0;\n  }\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n    if (this.transmuxer_) {\n      this.transmuxer_.terminate();\n    }\n    this.resetStats_();\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n      this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    }\n    this.off();\n  }\n  setAudio(enable) {\n    this.audioDisabled_ = !enable;\n    if (enable) {\n      this.appendInitSegment_.audio = true;\n    } else {\n      // remove current track audio if it gets disabled\n      this.sourceUpdater_.removeAudio(0, this.duration_());\n    }\n  }\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n\n  abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n      return;\n    }\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n\n  abort_() {\n    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n      this.pendingSegment_.abortRequests();\n    } // clear out the segment being processed\n\n    this.pendingSegment_ = null;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n    this.waitingOnRemove_ = false;\n    window$1.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n    this.quotaExceededErrorRetryTimeout_ = null;\n  }\n  checkForAbort_(requestId) {\n    // If the state is APPENDING, then aborts will not modify the state, meaning the first\n    // callback that happens should reset the state to READY so that loading can continue.\n    if (this.state === 'APPENDING' && !this.pendingSegment_) {\n      this.state = 'READY';\n      return true;\n    }\n    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n\n  error(error) {\n    if (typeof error !== 'undefined') {\n      this.logger_('error occurred:', error);\n      this.error_ = error;\n    }\n    this.pendingSegment_ = null;\n    return this.error_;\n  }\n  endOfStream() {\n    this.ended_ = true;\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.gopBuffer_.length = 0;\n    this.pause();\n    this.trigger('ended');\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    const trackInfo = this.getMediaInfo_();\n    if (!this.sourceUpdater_ || !trackInfo) {\n      return createTimeRanges();\n    }\n    if (this.loaderType_ === 'main') {\n      const {\n        hasAudio,\n        hasVideo,\n        isMuxed\n      } = trackInfo;\n      if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n        return this.sourceUpdater_.buffered();\n      }\n      if (hasVideo) {\n        return this.sourceUpdater_.videoBuffered();\n      }\n    } // One case that can be ignored for now is audio only with alt audio,\n    // as we don't yet have proper support for that.\n\n    return this.sourceUpdater_.audioBuffered();\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes,\n        tracks: map.tracks,\n        timescales: map.timescales\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Gets and sets key for the provided key\n   *\n   * @param {Object} key\n   *        The key object representing the key to get or set\n   * @param {boolean=} set\n   *        If true, the key for the provided key should be saved\n   * @return {Object}\n   *         Key object for desired key\n   */\n\n  segmentKey(key, set = false) {\n    if (!key) {\n      return null;\n    }\n    const id = segmentKeyId(key);\n    let storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n    if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n      this.keyCache_[id] = storedKey = {\n        resolvedUri: key.resolvedUri,\n        bytes: key.bytes\n      };\n    }\n    const result = {\n      resolvedUri: (storedKey || key).resolvedUri\n    };\n    if (storedKey) {\n      result.bytes = storedKey.bytes;\n    }\n    return result;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && !this.paused();\n  }\n  /**\n   * load a playlist and start to fill the buffer\n   */\n\n  load() {\n    // un-pause\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n\n    if (!this.playlist_) {\n      return;\n    } // if all the configuration is ready, initialize and begin loading\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    } // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n    this.state = 'READY';\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n    // audio data from the muxed content should be removed\n\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n\n  playlist(newPlaylist, options = {}) {\n    if (!newPlaylist) {\n      return;\n    }\n    const oldPlaylist = this.playlist_;\n    const segmentInfo = this.pendingSegment_;\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    //\n    // Use the INIT state to determine if playback has started, as the playlist sync info\n    // should be fixed once requests begin (as sync points are generated based on sync\n    // info), but not before then.\n\n    if (this.state === 'INIT') {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      }; // Setting the date time mapping means mapping the program date time (if available)\n      // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n      // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n      // be updated as the playlist is refreshed before the loader starts loading, the\n      // program date time mapping needs to be updated as well.\n      //\n      // This mapping is only done for the main loader because a program date time should\n      // map equivalently between playlists.\n\n      if (this.loaderType_ === 'main') {\n        this.syncController_.setDateTimeMappingForStart(newPlaylist);\n      }\n    }\n    let oldId = null;\n    if (oldPlaylist) {\n      if (oldPlaylist.id) {\n        oldId = oldPlaylist.id;\n      } else if (oldPlaylist.uri) {\n        oldId = oldPlaylist.uri;\n      }\n    }\n    this.logger_(`playlist update [${oldId} => ${newPlaylist.id || newPlaylist.uri}]`); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must reset/resync the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        // on playlist changes we want it to be possible to fetch\n        // at the buffer for vod but not for live. So we use resetLoader\n        // for live and resyncLoader for vod. We want this because\n        // if a playlist uses independent and non-independent segments/parts the\n        // buffer may not accurately reflect the next segment that we should try\n        // downloading.\n        if (!newPlaylist.endList) {\n          this.resetLoader();\n        } else {\n          this.resyncLoader();\n        }\n      }\n      this.currentMediaInfo_ = void 0;\n      this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n      return;\n    } // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n    this.logger_(`live window shift [${mediaSequenceDiff}]`); // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n      // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n      // new playlist was incremented by 1.\n\n      if (this.mediaIndex < 0) {\n        this.mediaIndex = null;\n        this.partIndex = null;\n      } else {\n        const segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n        // unless parts fell off of the playlist for this segment.\n        // In that case we need to reset partIndex and resync\n\n        if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n          const mediaIndex = this.mediaIndex;\n          this.logger_(`currently processing part (index ${this.partIndex}) no longer exists.`);\n          this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n          // as the part was dropped from our current playlists segment.\n          // The mediaIndex will still be valid so keep that around.\n\n          this.mediaIndex = mediaIndex;\n        }\n      }\n    } // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleAppendsDone_` after the segment has been successfully appended\n\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n      if (segmentInfo.mediaIndex < 0) {\n        segmentInfo.mediaIndex = null;\n        segmentInfo.partIndex = null;\n      } else {\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n        if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n          segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n        }\n      }\n    }\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  }\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n\n  pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n      this.checkBufferTimeout_ = null;\n    }\n  }\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n\n  paused() {\n    return this.checkBufferTimeout_ === null;\n  }\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   *\n   * @param {Function} [done] an optional callback to be executed when the remove\n   * operation is complete\n   */\n\n  resetEverything(done) {\n    this.ended_ = false;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n    // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n    // we then clamp the value to duration if necessary.\n\n    this.remove(0, Infinity, done); // clears fmp4 captions\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearAllMp4Captions'\n      }); // reset the cache in the transmuxer\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n    }\n  }\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n\n  resetLoader() {\n    this.fetchAtBuffer_ = false;\n    this.resyncLoader();\n  }\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n\n  resyncLoader() {\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.mediaIndex = null;\n    this.partIndex = null;\n    this.syncPoint_ = null;\n    this.isPendingTimestampOffset_ = false;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.abort();\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   * @param {Function} [done] - an optional callback to be executed when the remove\n   * @param {boolean} force - force all remove operations to happen\n   * operation is complete\n   */\n\n  remove(start, end, done = () => {}, force = false) {\n    // clamp end to duration if we need to remove everything.\n    // This is due to a browser bug that causes issues if we remove to Infinity.\n    // videojs/videojs-contrib-hls#1225\n    if (end === Infinity) {\n      end = this.duration_();\n    } // skip removes that would throw an error\n    // commonly happens during a rendition switch at the start of a video\n    // from start 0 to end 0\n\n    if (end <= start) {\n      this.logger_('skipping remove because end ${end} is <= start ${start}');\n      return;\n    }\n    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n      this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n      return;\n    } // set it to one to complete this function's removes\n\n    let removesRemaining = 1;\n    const removeFinished = () => {\n      removesRemaining--;\n      if (removesRemaining === 0) {\n        done();\n      }\n    };\n    if (force || !this.audioDisabled_) {\n      removesRemaining++;\n      this.sourceUpdater_.removeAudio(start, end, removeFinished);\n    } // While it would be better to only remove video if the main loader has video, this\n    // should be safe with audio only as removeVideo will call back even if there's no\n    // video buffer.\n    //\n    // In theory we can check to see if there's video before calling the remove, but in\n    // the event that we're switching between renditions and from video to audio only\n    // (when we add support for that), we may need to clear the video contents despite\n    // what the new media will contain.\n\n    if (force || this.loaderType_ === 'main') {\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      removesRemaining++;\n      this.sourceUpdater_.removeVideo(start, end, removeFinished);\n    } // remove any captions and ID3 tags\n\n    for (const track in this.inbandTextTracks_) {\n      removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n    removeFinished();\n  }\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n\n  monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  }\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n\n  monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // TODO since the source buffer maintains a queue, and we shouldn't call this function\n    // except when we're ready for the next segment, this check can most likely be removed\n    if (this.sourceUpdater_.updating()) {\n      return;\n    } // see if we need to begin loading immediately\n\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      this.isPendingTimestampOffset_ = false;\n      this.timelineChangeController_.pendingTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      });\n    }\n    this.loadSegment_(segmentInfo);\n  }\n  /**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {number} [mediaIndex] the media index of segment we last appended\n   * @param {Object} [playlist] a media playlist object\n   * @return {boolean} do we need to call endOfStream on the MediaSource\n   */\n\n  isEndOfStream_(mediaIndex = this.mediaIndex, playlist = this.playlist_, partIndex = this.partIndex) {\n    if (!playlist || !this.mediaSource_) {\n      return false;\n    }\n    const segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n    const appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n    const appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n    // so that MediaSources can trigger the `ended` event when it runs out of\n    // buffered data instead of waiting for me\n\n    return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n  }\n  /**\n   * Determines what request should be made given current segment loader state.\n   *\n   * @return {Object} a request object that describes the segment/part to load\n   */\n\n  chooseNextRequest_() {\n    const buffered = this.buffered_();\n    const bufferedEnd = lastBufferedEnd(buffered) || 0;\n    const bufferedTime = timeAheadOf(buffered, this.currentTime_());\n    const preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n    const haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n    const segments = this.playlist_.segments; // return no segment if:\n    // 1. we don't have segments\n    // 2. The video has not yet played and we already downloaded a segment\n    // 3. we already have enough buffered time\n\n    if (!segments.length || preloaded || haveEnoughBuffer) {\n      return null;\n    }\n    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n    const next = {\n      partIndex: null,\n      mediaIndex: null,\n      startOfSegment: null,\n      playlist: this.playlist_,\n      isSyncRequest: Boolean(!this.syncPoint_)\n    };\n    if (next.isSyncRequest) {\n      next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n    } else if (this.mediaIndex !== null) {\n      const segment = segments[this.mediaIndex];\n      const partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n      next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n      if (segment.parts && segment.parts[partIndex + 1]) {\n        next.mediaIndex = this.mediaIndex;\n        next.partIndex = partIndex + 1;\n      } else {\n        next.mediaIndex = this.mediaIndex + 1;\n      }\n    } else {\n      // Find the segment containing the end of the buffer or current time.\n      const {\n        segmentIndex,\n        startTime,\n        partIndex\n      } = Playlist.getMediaInfoForTime({\n        exactManifestTimings: this.exactManifestTimings,\n        playlist: this.playlist_,\n        currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n        startingPartIndex: this.syncPoint_.partIndex,\n        startingSegmentIndex: this.syncPoint_.segmentIndex,\n        startTime: this.syncPoint_.time\n      });\n      next.getMediaInfoForTime = this.fetchAtBuffer_ ? `bufferedEnd ${bufferedEnd}` : `currentTime ${this.currentTime_()}`;\n      next.mediaIndex = segmentIndex;\n      next.startOfSegment = startTime;\n      next.partIndex = partIndex;\n    }\n    const nextSegment = segments[next.mediaIndex];\n    let nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n    // the next partIndex is invalid do not choose a next segment.\n\n    if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n      return null;\n    } // if the next segment has parts, and we don't have a partIndex.\n    // Set partIndex to 0\n\n    if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n      next.partIndex = 0;\n      nextPart = nextSegment.parts[0];\n    } // if we have no buffered data then we need to make sure\n    // that the next part we append is \"independent\" if possible.\n    // So we check if the previous part is independent, and request\n    // it if it is.\n\n    if (!bufferedTime && nextPart && !nextPart.independent) {\n      if (next.partIndex === 0) {\n        const lastSegment = segments[next.mediaIndex - 1];\n        const lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n        if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n          next.mediaIndex -= 1;\n          next.partIndex = lastSegment.parts.length - 1;\n          next.independent = 'previous segment';\n        }\n      } else if (nextSegment.parts[next.partIndex - 1].independent) {\n        next.partIndex -= 1;\n        next.independent = 'previous part';\n      }\n    }\n    const ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n    // 1. this is the last segment in the playlist\n    // 2. end of stream has been called on the media source already\n    // 3. the player is not seeking\n\n    if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n      return null;\n    }\n    return this.generateSegmentInfo_(next);\n  }\n  generateSegmentInfo_(options) {\n    const {\n      independent,\n      playlist,\n      mediaIndex,\n      startOfSegment,\n      isSyncRequest,\n      partIndex,\n      forceTimestampOffset,\n      getMediaInfoForTime\n    } = options;\n    const segment = playlist.segments[mediaIndex];\n    const part = typeof partIndex === 'number' && segment.parts[partIndex];\n    const segmentInfo = {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: part && part.resolvedUri || segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex,\n      partIndex: part ? partIndex : null,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest,\n      startOfSegment,\n      // the segment's playlist\n      playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: part && part.duration || segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment,\n      part,\n      byteLength: 0,\n      transmuxer: this.transmuxer_,\n      // type of getMediaInfoForTime that was used to get this segment\n      getMediaInfoForTime,\n      independent\n    };\n    const overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n    segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n      segmentTimeline: segment.timeline,\n      currentTimeline: this.currentTimeline_,\n      startOfSegment,\n      buffered: this.buffered_(),\n      overrideCheck\n    });\n    const audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n    if (typeof audioBufferedEnd === 'number') {\n      // since the transmuxer is using the actual timing values, but the buffer is\n      // adjusted by the timestamp offset, we must adjust the value here\n      segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n    }\n    if (this.sourceUpdater_.videoBuffered().length) {\n      segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_,\n      // since the transmuxer is using the actual timing values, but the time is\n      // adjusted by the timestmap offset, we must adjust the value here\n      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n    }\n    return segmentInfo;\n  } // get the timestampoffset for a segment,\n  // added so that vtt segment loader can override and prevent\n  // adding timestamp offsets.\n\n  timestampOffsetForSegment_(options) {\n    return timestampOffsetForSegment(options);\n  }\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @private\n   */\n\n  earlyAbortWhenNeeded_(stats) {\n    if (this.vhs_.tech_.paused() ||\n    // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout ||\n    // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return;\n    } // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return;\n    }\n    const currentTime = this.currentTime_();\n    const measuredBandwidth = stats.bandwidth;\n    const segmentDuration = this.pendingSegment_.duration;\n    const requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n\n    const timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n\n    if (requestTimeRemaining <= timeUntilRebuffer$1) {\n      return;\n    }\n    const switchCandidate = minRebufferMaxBandwidthSelector({\n      main: this.vhs_.playlists.main,\n      currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n    if (!switchCandidate) {\n      return;\n    }\n    const rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n    const timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n    let minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n\n    if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return;\n    } // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.trigger('earlyabort');\n  }\n  handleAbort_(segmentInfo) {\n    this.logger_(`Aborting ${segmentInfoString(segmentInfo)}`);\n    this.mediaRequestsAborted += 1;\n  }\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n\n  handleProgress_(event, simpleSegment) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    this.trigger('progress');\n  }\n  handleTrackInfo_(simpleSegment, trackInfo) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    if (this.checkForIllegalMediaSwitch(trackInfo)) {\n      return;\n    }\n    trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n    // Guard against cases where we're not getting track info at all until we are\n    // certain that all streams will provide it.\n\n    if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.startingMediaInfo_ = trackInfo;\n      this.currentMediaInfo_ = trackInfo;\n      this.logger_('trackinfo update', trackInfo);\n      this.trigger('trackinfo');\n    } // trackinfo may cause an abort if the trackinfo\n    // causes a codec change to an unsupported codec.\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // set trackinfo on the pending segment so that\n    // it can append.\n\n    this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n    segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n    segmentInfo[timingInfoProperty][timeType] = time;\n    this.logger_(`timinginfo: ${mediaType} - ${timeType} - ${time}`); // check if any calls were waiting on the timing info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleCaptions_(simpleSegment, captionData) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // This could only happen with fmp4 segments, but\n    // should still not happen in general\n\n    if (captionData.length === 0) {\n      this.logger_('SegmentLoader received no captions from a caption event');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n    // can be adjusted by the timestamp offset\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    const captionTracks = {}; // get total start/end and captions for each track/stream\n\n    captionData.forEach(caption => {\n      // caption.stream is actually a track name...\n      // set to the existing values in tracks or default values\n      captionTracks[caption.stream] = captionTracks[caption.stream] || {\n        // Infinity, as any other value will be less than this\n        startTime: Infinity,\n        captions: [],\n        // 0 as an other value will be more than this\n        endTime: 0\n      };\n      const captionTrack = captionTracks[caption.stream];\n      captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n      captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n      captionTrack.captions.push(caption);\n    });\n    Object.keys(captionTracks).forEach(trackName => {\n      const {\n        startTime,\n        endTime,\n        captions\n      } = captionTracks[trackName];\n      const inbandTextTracks = this.inbandTextTracks_;\n      this.logger_(`adding cues from ${startTime} -> ${endTime} for ${trackName}`);\n      createCaptionsTrackIfNotExists(inbandTextTracks, this.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n      // We do this because a rendition change that also changes the timescale for captions\n      // will result in captions being re-parsed for certain segments. If we add them again\n      // without clearing we will have two of the same captions visible.\n\n      removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n      addCaptionData({\n        captionArray: captions,\n        inbandTextTracks,\n        timestampOffset\n      });\n    }); // Reset stored captions since we added parsed\n    // captions to a text track at this point\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  handleId3_(simpleSegment, id3Frames, dispatchType) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n    // audio/video source with a metadata track, and an alt audio with a metadata track.\n    // However, this probably won't happen, and if it does it can be handled then.\n\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.vhs_.tech_);\n    addMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      metadataArray: id3Frames,\n      timestampOffset,\n      videoDuration: this.duration_()\n    });\n  }\n  processMetadataQueue_() {\n    this.metadataQueue_.id3.forEach(fn => fn());\n    this.metadataQueue_.caption.forEach(fn => fn());\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n  }\n  processCallQueue_() {\n    const callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.callQueue_ = [];\n    callQueue.forEach(fun => fun());\n  }\n  processLoadQueue_() {\n    const loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.loadQueue_ = [];\n    loadQueue.forEach(fun => fun());\n  }\n  /**\n   * Determines whether the loader has enough info to load the next segment.\n   *\n   * @return {boolean}\n   *         Whether or not the loader has enough info to load the next segment\n   */\n\n  hasEnoughInfoToLoad_() {\n    // Since primary timing goes by video, only the audio loader potentially needs to wait\n    // to load.\n    if (this.loaderType_ !== 'audio') {\n      return true;\n    }\n    const segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n    // enough info to load.\n\n    if (!segmentInfo) {\n      return false;\n    } // The first segment can and should be loaded immediately so that source buffers are\n    // created together (before appending). Source buffer creation uses the presence of\n    // audio and video data to determine whether to create audio/video source buffers, and\n    // uses processed (transmuxed or parsed) media to determine the types required.\n\n    if (!this.getCurrentMediaInfo_()) {\n      return true;\n    }\n    if (\n    // Technically, instead of waiting to load a segment on timeline changes, a segment\n    // can be requested and downloaded and only wait before it is transmuxed or parsed.\n    // But in practice, there are a few reasons why it is better to wait until a loader\n    // is ready to append that segment before requesting and downloading:\n    //\n    // 1. Because audio and main loaders cross discontinuities together, if this loader\n    //    is waiting for the other to catch up, then instead of requesting another\n    //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n    //    allotted to the loader currently behind.\n    // 2. media-segment-request doesn't have to have logic to consider whether a segment\n    // is ready to be processed or not, isolating the queueing behavior to the loader.\n    // 3. The audio loader bases some of its segment properties on timing information\n    //    provided by the main loader, meaning that, if the logic for waiting on\n    //    processing was in media-segment-request, then it would also need to know how\n    //    to re-generate the segment information after the main loader caught up.\n    shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  getCurrentMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n  }\n  getMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n  }\n  hasEnoughInfoToAppend_() {\n    if (!this.sourceUpdater_.ready()) {\n      return false;\n    } // If content needs to be removed or the loader is waiting on an append reattempt,\n    // then no additional content should be appended until the prior append is resolved.\n\n    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n      return false;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n    // we do not have information on this specific\n    // segment yet\n\n    if (!segmentInfo || !trackInfo) {\n      return false;\n    }\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    if (hasVideo && !segmentInfo.videoTimingInfo) {\n      return false;\n    } // muxed content only relies on video timing information for now.\n\n    if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n      return false;\n    }\n    if (shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  handleData_(simpleSegment, result) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // If there's anything in the call queue, then this data came later and should be\n    // executed after the calls currently queued.\n\n    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n      this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n    this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n    this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n    // logic may change behavior depending on the state, and changing state too early may\n    // inflate our estimates of bandwidth. In the future this should be re-examined to\n    // note more granular states.\n    // don't process and append data if the mediaSource is closed\n\n    if (this.mediaSource_.readyState === 'closed') {\n      return;\n    } // if this request included an initialization segment, save that data\n    // to the initSegment cache\n\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n      segmentInfo.segment.map = simpleSegment.map;\n    } // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    segmentInfo.isFmp4 = simpleSegment.isFmp4;\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    if (segmentInfo.isFmp4) {\n      this.trigger('fmp4');\n      segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n    } else {\n      const trackInfo = this.getCurrentMediaInfo_();\n      const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      let firstVideoFrameTimeForData;\n      if (useVideoTimingInfo) {\n        firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n      } // Segment loader knows more about segment timing than the transmuxer (in certain\n      // aspects), so make any changes required for a more accurate start time.\n      // Don't set the end time yet, as the segment may not be finished processing.\n\n      segmentInfo.timingInfo.start = this.trueSegmentStart_({\n        currentStart: segmentInfo.timingInfo.start,\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex,\n        currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n        useVideoTimingInfo,\n        firstVideoFrameTimeForData,\n        videoTimingInfo: segmentInfo.videoTimingInfo,\n        audioTimingInfo: segmentInfo.audioTimingInfo\n      });\n    } // Init segments for audio and video only need to be appended in certain cases. Now\n    // that data is about to be appended, we can check the final cases to determine\n    // whether we should append an init segment.\n\n    this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n    // as we use the start of the segment to offset the best guess (playlist provided)\n    // timestamp offset.\n\n    this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n    // be appended or not.\n\n    if (segmentInfo.isSyncRequest) {\n      // first save/update our timing info for this segment.\n      // this is what allows us to choose an accurate segment\n      // and the main reason we make a sync request.\n      this.updateTimingInfoEnd_(segmentInfo);\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n      const next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n      // after taking into account its timing info, do not append it.\n\n      if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n        this.logger_('sync segment was incorrect, not appending');\n        return;\n      } // otherwise append it like any other segment as our guess was correct.\n\n      this.logger_('sync segment was correct, appending');\n    } // Save some state so that in the future anything waiting on first append (and/or\n    // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n    // we need some notion of whether the timestamp offset or other relevant information\n    // has had a chance to be set.\n\n    segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n    this.processMetadataQueue_();\n    this.appendData_(segmentInfo, result);\n  }\n  updateAppendInitSegmentStatus(segmentInfo, type) {\n    // alt audio doesn't manage timestamp offset\n    if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' &&\n    // in the case that we're handling partial data, we don't want to append an init\n    // segment for each chunk\n    !segmentInfo.changedTimestampOffset) {\n      // if the timestamp offset changed, the timeline may have changed, so we have to re-\n      // append init segments\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n    }\n    if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n      // make sure we append init segment on playlist changes, in case the media config\n      // changed\n      this.appendInitSegment_[type] = true;\n    }\n  }\n  getInitSegmentAndUpdateState_({\n    type,\n    initSegment,\n    map,\n    playlist\n  }) {\n    // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n    // (Section 3) required to parse the applicable Media Segments.  It applies to every\n    // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n    // or until the end of the playlist.\"\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n    if (map) {\n      const id = initSegmentId(map);\n      if (this.activeInitSegmentId_ === id) {\n        // don't need to re-append the init segment if the ID matches\n        return null;\n      } // a map-specified init segment takes priority over any transmuxed (or otherwise\n      // obtained) init segment\n      //\n      // this also caches the init segment for later use\n\n      initSegment = this.initSegmentForMap(map, true).bytes;\n      this.activeInitSegmentId_ = id;\n    } // We used to always prepend init segments for video, however, that shouldn't be\n    // necessary. Instead, we should only append on changes, similar to what we've always\n    // done for audio. This is more important (though may not be that important) for\n    // frame-by-frame appending for LHLS, simply because of the increased quantity of\n    // appends.\n\n    if (initSegment && this.appendInitSegment_[type]) {\n      // Make sure we track the playlist that we last used for the init segment, so that\n      // we can re-append the init segment in the event that we get data from a new\n      // playlist. Discontinuities and track changes are handled in other sections.\n      this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n      this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n      // we are appending the muxer init segment\n\n      this.activeInitSegmentId_ = null;\n      return initSegment;\n    }\n    return null;\n  }\n  handleQuotaExceededError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    const audioBuffered = this.sourceUpdater_.audioBuffered();\n    const videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n    // should be cleared out during the buffer removals. However, log in case it helps\n    // debug.\n\n    if (audioBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n    }\n    if (videoBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n    }\n    const audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n    const audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n    const videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n    const videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n    if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n      // Can't remove enough buffer to make room for new segment (or the browser doesn't\n      // allow for appends of segments this size). In the future, it may be possible to\n      // split up the segment and append in pieces, but for now, error out this playlist\n      // in an attempt to switch to a more manageable rendition.\n      this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + `Appended byte length: ${bytes.byteLength}, ` + `audio buffer: ${timeRangesToArray(audioBuffered).join(', ')}, ` + `video buffer: ${timeRangesToArray(videoBuffered).join(', ')}, `);\n      this.error({\n        message: 'Quota exceeded error with append of a single segment of content',\n        excludeUntil: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n    // that the segment-loader should block on future events until this one is handled, so\n    // that it doesn't keep moving onto further segments. Adding the call to the call\n    // queue will prevent further appends until waitingOnRemove_ and\n    // quotaExceededErrorRetryTimeout_ are cleared.\n    //\n    // Note that this will only block the current loader. In the case of demuxed content,\n    // the other load may keep filling as fast as possible. In practice, this should be\n    // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n    // source buffer, or video fills without enough room for audio to append (and without\n    // the availability of clearing out seconds of back buffer to make room for audio).\n    // But it might still be good to handle this case in the future as a TODO.\n\n    this.waitingOnRemove_ = true;\n    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n    const currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n    // before retrying.\n\n    const timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n    this.logger_(`On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ${timeToRemoveUntil}`);\n    this.remove(0, timeToRemoveUntil, () => {\n      this.logger_(`On QUOTA_EXCEEDED_ERR, retrying append in ${MIN_BACK_BUFFER}s`);\n      this.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n      // attempts (since we can't clear less than the minimum)\n\n      this.quotaExceededErrorRetryTimeout_ = window$1.setTimeout(() => {\n        this.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n        this.quotaExceededErrorRetryTimeout_ = null;\n        this.processCallQueue_();\n      }, MIN_BACK_BUFFER * 1000);\n    }, true);\n  }\n  handleAppendError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    // if there's no error, nothing to do\n    if (!error) {\n      return;\n    }\n    if (error.code === QUOTA_EXCEEDED_ERR) {\n      this.handleQuotaExceededError_({\n        segmentInfo,\n        type,\n        bytes\n      }); // A quota exceeded error should be recoverable with a future re-append, so no need\n      // to trigger an append error.\n\n      return;\n    }\n    this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n    this.error(`${type} append of ${bytes.length}b failed for segment ` + `#${segmentInfo.mediaIndex} in playlist ${segmentInfo.playlist.id}`); // If an append errors, we often can't recover.\n    // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n    //\n    // Trigger a special error so that it can be handled separately from normal,\n    // recoverable errors.\n\n    this.trigger('appenderror');\n  }\n  appendToSourceBuffer_({\n    segmentInfo,\n    type,\n    initSegment,\n    data,\n    bytes\n  }) {\n    // If this is a re-append, bytes were already created and don't need to be recreated\n    if (!bytes) {\n      const segments = [data];\n      let byteLength = data.byteLength;\n      if (initSegment) {\n        // if the media initialization segment is changing, append it before the content\n        // segment\n        segments.unshift(initSegment);\n        byteLength += initSegment.byteLength;\n      } // Technically we should be OK appending the init segment separately, however, we\n      // haven't yet tested that, and prepending is how we have always done things.\n\n      bytes = concatSegments({\n        bytes: byteLength,\n        segments\n      });\n    }\n    this.sourceUpdater_.appendBuffer({\n      segmentInfo,\n      type,\n      bytes\n    }, this.handleAppendError_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n  }\n  handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n    if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n    const segment = this.pendingSegment_.segment;\n    const timingInfoProperty = `${type}TimingInfo`;\n    if (!segment[timingInfoProperty]) {\n      segment[timingInfoProperty] = {};\n    }\n    segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n    segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n    segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n    segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n    segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n    segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n  }\n  appendData_(segmentInfo, result) {\n    const {\n      type,\n      data\n    } = result;\n    if (!data || !data.byteLength) {\n      return;\n    }\n    if (type === 'audio' && this.audioDisabled_) {\n      return;\n    }\n    const initSegment = this.getInitSegmentAndUpdateState_({\n      type,\n      initSegment: result.initSegment,\n      playlist: segmentInfo.playlist,\n      map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n    });\n    this.appendToSourceBuffer_({\n      segmentInfo,\n      type,\n      initSegment,\n      data\n    });\n  }\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n\n  loadSegment_(segmentInfo) {\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        });\n      }\n    }\n    if (!this.hasEnoughInfoToLoad_()) {\n      this.loadQueue_.push(() => {\n        // regenerate the audioAppendStart, timestampOffset, etc as they\n        // may have changed since this function was added to the queue.\n        const options = _extends({}, segmentInfo, {\n          forceTimestampOffset: true\n        });\n        _extends(segmentInfo, this.generateSegmentInfo_(options));\n        this.isPendingTimestampOffset_ = false;\n        this.updateTransmuxerAndRequestSegment_(segmentInfo);\n      });\n      return;\n    }\n    this.updateTransmuxerAndRequestSegment_(segmentInfo);\n  }\n  updateTransmuxerAndRequestSegment_(segmentInfo) {\n    // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n    // the transmuxer still needs to be updated before then.\n    //\n    // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n    // offset must be passed to the transmuxer for stream correcting adjustments.\n    if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n      this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n      segmentInfo.gopsToAlignWith = [];\n      this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n      this.transmuxer_.postMessage({\n        action: 'setTimestampOffset',\n        timestampOffset: segmentInfo.timestampOffset\n      });\n    }\n    const simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n    const isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n    const isWalkingForward = this.mediaIndex !== null;\n    const isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ &&\n    // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n    // the first timeline\n    segmentInfo.timeline > 0;\n    const isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n    this.logger_(`Requesting ${segmentInfoString(segmentInfo)}`); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n    // then this init segment has never been seen before and should be appended.\n    //\n    // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n    // both to true and leave the decision of whether to append the init segment to append time.\n\n    if (simpleSegment.map && !simpleSegment.map.bytes) {\n      this.logger_('going to request init segment.');\n      this.appendInitSegment_ = {\n        video: true,\n        audio: true\n      };\n    }\n    segmentInfo.abortRequests = mediaSegmentRequest({\n      xhr: this.vhs_.xhr,\n      xhrOptions: this.xhrOptions_,\n      decryptionWorker: this.decrypter_,\n      segment: simpleSegment,\n      abortFn: this.handleAbort_.bind(this, segmentInfo),\n      progressFn: this.handleProgress_.bind(this),\n      trackInfoFn: this.handleTrackInfo_.bind(this),\n      timingInfoFn: this.handleTimingInfo_.bind(this),\n      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n      captionsFn: this.handleCaptions_.bind(this),\n      isEndOfTimeline,\n      endedTimelineFn: () => {\n        this.logger_('received endedtimeline callback');\n      },\n      id3Fn: this.handleId3_.bind(this),\n      dataFn: this.handleData_.bind(this),\n      doneFn: this.segmentRequestFinished_.bind(this),\n      onTransmuxerLog: ({\n        message,\n        level,\n        stream\n      }) => {\n        this.logger_(`${segmentInfoString(segmentInfo)} logged from transmuxer stream ${stream} as a ${level}: ${message}`);\n      }\n    });\n  }\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n\n  trimBackBuffer_(segmentInfo) {\n    const removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  }\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @return {Object} a simplified segment object copy\n   */\n\n  createSimplifiedSegmentObj_(segmentInfo) {\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const simpleSegment = {\n      resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n      byterange: part ? part.byterange : segment.byterange,\n      requestId: segmentInfo.requestId,\n      transmuxer: segmentInfo.transmuxer,\n      audioAppendStart: segmentInfo.audioAppendStart,\n      gopsToAlignWith: segmentInfo.gopsToAlignWith,\n      part: segmentInfo.part\n    };\n    const previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n    if (previousSegment && previousSegment.timeline === segment.timeline) {\n      // The baseStartTime of a segment is used to handle rollover when probing the TS\n      // segment to retrieve timing information. Since the probe only looks at the media's\n      // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n      // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n      // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n      // seconds of media time, so should be used here. The previous segment is used since\n      // the end of the previous segment should represent the beginning of the current\n      // segment, so long as they are on the same timeline.\n      if (previousSegment.videoTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n      } else if (previousSegment.audioTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n      }\n    }\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      const iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      simpleSegment.key = this.segmentKey(segment.key);\n      simpleSegment.key.iv = iv;\n    }\n    if (segment.map) {\n      simpleSegment.map = this.initSegmentForMap(segment.map);\n    }\n    return simpleSegment;\n  }\n  saveTransferStats_(stats) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n    if (stats) {\n      this.mediaBytesTransferred += stats.bytesReceived;\n      this.mediaTransferDuration += stats.roundTripTime;\n    }\n  }\n  saveBandwidthRelatedStats_(duration, stats) {\n    // byteLength will be used for throughput, and should be based on bytes receieved,\n    // which we only know at the end of the request and should reflect total bytes\n    // downloaded rather than just bytes processed from components of the segment\n    this.pendingSegment_.byteLength = stats.bytesReceived;\n    if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's bandwidth because its duration of ${duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    this.bandwidth = stats.bandwidth;\n    this.roundTrip = stats.roundTripTime;\n  }\n  handleTimeout_() {\n    // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functinality between segment loaders\n    this.mediaRequestsTimedout += 1;\n    this.bandwidth = 1;\n    this.roundTrip = NaN;\n    this.trigger('bandwidthupdate');\n    this.trigger('timeout');\n  }\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n    // check the call queue directly since this function doesn't need to deal with any\n    // data, and can continue even if the source buffers are not set up and we didn't get\n    // any data from the segment\n    if (this.callQueue_.length) {\n      this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n    if (!this.pendingSegment_) {\n      return;\n    } // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    } // an error occurred from the active pendingSegment_ so reset everything\n\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        return;\n      }\n      this.pause(); // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n        return;\n      } // if control-flow has arrived here, then the error is real\n      // emit an error event to exclude the current playlist\n\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n    if (result.gopInfo) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n    } // Although we may have already started appending on progress, we shouldn't switch the\n    // state away from loading until we are officially done loading the segment data.\n\n    this.state = 'APPENDING'; // used for testing\n\n    this.trigger('appending');\n    this.waitForAppendsToComplete_(segmentInfo);\n  }\n  setTimeMapping_(timeline) {\n    const timelineMapping = this.syncController_.mappingForTimeline(timeline);\n    if (timelineMapping !== null) {\n      this.timeMapping_ = timelineMapping;\n    }\n  }\n  updateMediaSecondsLoaded_(segment) {\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n  }\n  shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n    if (timestampOffset === null) {\n      return false;\n    } // note that we're potentially using the same timestamp offset for both video and\n    // audio\n\n    if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      return true;\n    }\n    if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      return true;\n    }\n    return false;\n  }\n  trueSegmentStart_({\n    currentStart,\n    playlist,\n    mediaIndex,\n    firstVideoFrameTimeForData,\n    currentVideoTimestampOffset,\n    useVideoTimingInfo,\n    videoTimingInfo,\n    audioTimingInfo\n  }) {\n    if (typeof currentStart !== 'undefined') {\n      // if start was set once, keep using it\n      return currentStart;\n    }\n    if (!useVideoTimingInfo) {\n      return audioTimingInfo.start;\n    }\n    const previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n    // within that segment. Since the transmuxer maintains a cache of incomplete data\n    // from and/or the last frame seen, the start time may reflect a frame that starts\n    // in the previous segment. Check for that case and ensure the start time is\n    // accurate for the segment.\n\n    if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n      return firstVideoFrameTimeForData;\n    }\n    return videoTimingInfo.start;\n  }\n  waitForAppendsToComplete_(segmentInfo) {\n    const trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n    if (!trackInfo) {\n      this.error({\n        message: 'No starting media returned, likely due to an unsupported media format.',\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n    // on each queue this loader is responsible for to ensure that the appends are\n    // complete.\n\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    const waitForVideo = this.loaderType_ === 'main' && hasVideo;\n    const waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n    segmentInfo.waitingOnAppends = 0; // segments with no data\n\n    if (!segmentInfo.hasAppendedData_) {\n      if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n        // When there's no audio or video data in the segment, there's no audio or video\n        // timing information.\n        //\n        // If there's no audio or video timing information, then the timestamp offset\n        // can't be adjusted to the appropriate value for the transmuxer and source\n        // buffers.\n        //\n        // Therefore, the next segment should be used to set the timestamp offset.\n        this.isPendingTimestampOffset_ = true;\n      } // override settings for metadata only segments\n\n      segmentInfo.timingInfo = {\n        start: 0\n      };\n      segmentInfo.waitingOnAppends++;\n      if (!this.isPendingTimestampOffset_) {\n        // update the timestampoffset\n        this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n        // no video/audio data.\n\n        this.processMetadataQueue_();\n      } // append is \"done\" instantly with no data.\n\n      this.checkAppendsDone_(segmentInfo);\n      return;\n    } // Since source updater could call back synchronously, do the increments first.\n\n    if (waitForVideo) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForAudio) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForVideo) {\n      this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n    if (waitForAudio) {\n      this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n  }\n  checkAppendsDone_(segmentInfo) {\n    if (this.checkForAbort_(segmentInfo.requestId)) {\n      return;\n    }\n    segmentInfo.waitingOnAppends--;\n    if (segmentInfo.waitingOnAppends === 0) {\n      this.handleAppendsDone_();\n    }\n  }\n  checkForIllegalMediaSwitch(trackInfo) {\n    const illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return true;\n    }\n    return false;\n  }\n  updateSourceBufferTimestampOffset_(segmentInfo) {\n    if (segmentInfo.timestampOffset === null ||\n    // we don't yet have the start for whatever media type (video or audio) has\n    // priority, timing-wise, so we must wait\n    typeof segmentInfo.timingInfo.start !== 'number' ||\n    // already updated the timestamp offset for this segment\n    segmentInfo.changedTimestampOffset ||\n    // the alt audio loader should not be responsible for setting the timestamp offset\n    this.loaderType_ !== 'main') {\n      return;\n    }\n    let didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n    // the timing info here comes from video. In the event that the audio is longer than\n    // the video, this will trim the start of the audio.\n    // This also trims any offset from 0 at the beginning of the media\n\n    segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n      videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n      audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n      timingInfo: segmentInfo.timingInfo\n    }); // In the event that there are part segment downloads, each will try to update the\n    // timestamp offset. Retaining this bit of state prevents us from updating in the\n    // future (within the same segment), however, there may be a better way to handle it.\n\n    segmentInfo.changedTimestampOffset = true;\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (didChange) {\n      this.trigger('timestampoffset');\n    }\n  }\n  getSegmentStartTimeForTimestampOffsetCalculation_({\n    videoTimingInfo,\n    audioTimingInfo,\n    timingInfo\n  }) {\n    if (!this.useDtsForTimestampOffset_) {\n      return timingInfo.start;\n    }\n    if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n      return videoTimingInfo.transmuxedDecodeStart;\n    } // handle audio only\n\n    if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n      return audioTimingInfo.transmuxedDecodeStart;\n    } // handle content not transmuxed (e.g., MP4)\n\n    return timingInfo.start;\n  }\n  updateTimingInfoEnd_(segmentInfo) {\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    const trackInfo = this.getMediaInfo_();\n    const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n    const prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n    if (!prioritizedTimingInfo) {\n      return;\n    }\n    segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ?\n    // End time may not exist in a case where we aren't parsing the full segment (one\n    // current example is the case of fmp4), so use the rough duration to calculate an\n    // end time.\n    prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n  }\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n\n  handleAppendsDone_() {\n    // appendsdone can cause an abort\n    if (this.pendingSegment_) {\n      this.trigger('appendsdone');\n    }\n    if (!this.pendingSegment_) {\n      this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n      // all appending cases?\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n    // best to wait until all appends are done so we're sure that the primary media is\n    // finished (and we have its end time).\n\n    this.updateTimingInfoEnd_(segmentInfo);\n    if (this.shouldSaveSegmentTimingInfo_) {\n      // Timeline mappings should only be saved for the main loader. This is for multiple\n      // reasons:\n      //\n      // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n      //    and the main loader try to save the timeline mapping, whichever comes later\n      //    will overwrite the first. In theory this is OK, as the mappings should be the\n      //    same, however, it breaks for (2)\n      // 2) In the event of a live stream, the initial live point will make for a somewhat\n      //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n      //    the mapping will be off for one of the streams, dependent on which one was\n      //    first saved (see (1)).\n      // 3) Primary timing goes by video in VHS, so the mapping should be video.\n      //\n      // Since the audio loader will wait for the main loader to load the first segment,\n      // the main loader will save the first timeline mapping, and ensure that there won't\n      // be a case where audio loads two segments without saving a mapping (thus leading\n      // to missing segment timing info).\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n    }\n    const segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n    if (segmentDurationMessage) {\n      if (segmentDurationMessage.severity === 'warn') {\n        videojs.log.warn(segmentDurationMessage.message);\n      } else {\n        this.logger_(segmentDurationMessage.message);\n      }\n    }\n    this.recordThroughput_(segmentInfo);\n    this.pendingSegment_ = null;\n    this.state = 'READY';\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate'); // if the sync request was not appended\n      // then it was not the correct segment.\n      // throw it away and use the data it gave us\n      // to get the correct one.\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.logger_(`Throwing away un-appended sync request ${segmentInfoString(segmentInfo)}`);\n        return;\n      }\n    }\n    this.logger_(`Appended ${segmentInfoString(segmentInfo)}`);\n    this.addSegmentMetadataCue_(segmentInfo);\n    this.fetchAtBuffer_ = true;\n    if (this.currentTimeline_ !== segmentInfo.timeline) {\n      this.timelineChangeController_.lastTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      }); // If audio is not disabled, the main segment loader is responsible for updating\n      // the audio timeline as well. If the content is video only, this won't have any\n      // impact.\n\n      if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: 'audio',\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n    }\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n\n    this.trigger('syncinfoupdate');\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n    const badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n\n    if (badSegmentGuess || badPartGuess) {\n      this.logger_(`bad ${badSegmentGuess ? 'segment' : 'part'} ${segmentInfoString(segmentInfo)}`);\n      this.resetEverything();\n      return;\n    }\n    const isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n    this.trigger('progress');\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n\n    if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n      this.endOfStream();\n    } // used for testing\n\n    this.trigger('appended');\n    if (segmentInfo.hasAppendedData_) {\n      this.mediaAppends++;\n    }\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n\n  recordThroughput_(segmentInfo) {\n    if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's throughput because its duration of ${segmentInfo.duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    const rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n\n    const segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n    const segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  }\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n\n  addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n    const segment = segmentInfo.segment;\n    const start = segment.start;\n    const end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    const value = {\n      custom: segment.custom,\n      dateTimeObject: segment.dateTimeObject,\n      dateTimeString: segment.dateTimeString,\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.id,\n      start,\n      end\n    };\n    const data = JSON.stringify(value);\n    const cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n    cue.value = value;\n    this.segmentMetadataTrack_.addCue(cue);\n  }\n}\nfunction noop() {}\nconst toTitleCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * @file source-updater.js\n */\nconst bufferTypes = ['video', 'audio'];\nconst updating = (type, sourceUpdater) => {\n  const sourceBuffer = sourceUpdater[`${type}Buffer`];\n  return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n};\nconst nextQueueIndexOfType = (type, queue) => {\n  for (let i = 0; i < queue.length; i++) {\n    const queueEntry = queue[i];\n    if (queueEntry.type === 'mediaSource') {\n      // If the next entry is a media source entry (uses multiple source buffers), block\n      // processing to allow it to go through first.\n      return null;\n    }\n    if (queueEntry.type === type) {\n      return i;\n    }\n  }\n  return null;\n};\nconst shiftQueue = (type, sourceUpdater) => {\n  if (sourceUpdater.queue.length === 0) {\n    return;\n  }\n  let queueIndex = 0;\n  let queueEntry = sourceUpdater.queue[queueIndex];\n  if (queueEntry.type === 'mediaSource') {\n    if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n      sourceUpdater.queue.shift();\n      queueEntry.action(sourceUpdater);\n      if (queueEntry.doneFn) {\n        queueEntry.doneFn();\n      } // Only specific source buffer actions must wait for async updateend events. Media\n      // Source actions process synchronously. Therefore, both audio and video source\n      // buffers are now clear to process the next queue entries.\n\n      shiftQueue('audio', sourceUpdater);\n      shiftQueue('video', sourceUpdater);\n    } // Media Source actions require both source buffers, so if the media source action\n    // couldn't process yet (because one or both source buffers are busy), block other\n    // queue actions until both are available and the media source action can process.\n\n    return;\n  }\n  if (type === 'mediaSource') {\n    // If the queue was shifted by a media source action (this happens when pushing a\n    // media source action onto the queue), then it wasn't from an updateend event from an\n    // audio or video source buffer, so there's no change from previous state, and no\n    // processing should be done.\n    return;\n  } // Media source queue entries don't need to consider whether the source updater is\n  // started (i.e., source buffers are created) as they don't need the source buffers, but\n  // source buffer queue entries do.\n\n  if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || updating(type, sourceUpdater)) {\n    return;\n  }\n  if (queueEntry.type !== type) {\n    queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n    if (queueIndex === null) {\n      // Either there's no queue entry that uses this source buffer type in the queue, or\n      // there's a media source queue entry before the next entry of this type, in which\n      // case wait for that action to process first.\n      return;\n    }\n    queueEntry = sourceUpdater.queue[queueIndex];\n  }\n  sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n  //\n  // The queue pending operation must be set before the action is performed in the event\n  // that the action results in a synchronous event that is acted upon. For instance, if\n  // an exception is thrown that can be handled, it's possible that new actions will be\n  // appended to an empty queue and immediately executed, but would not have the correct\n  // pending information if this property was set after the action was performed.\n\n  sourceUpdater.queuePending[type] = queueEntry;\n  queueEntry.action(type, sourceUpdater);\n  if (!queueEntry.doneFn) {\n    // synchronous operation, process next entry\n    sourceUpdater.queuePending[type] = null;\n    shiftQueue(type, sourceUpdater);\n    return;\n  }\n};\nconst cleanupBuffer = (type, sourceUpdater) => {\n  const buffer = sourceUpdater[`${type}Buffer`];\n  const titleType = toTitleCase(type);\n  if (!buffer) {\n    return;\n  }\n  buffer.removeEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n  buffer.removeEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n  sourceUpdater.codecs[type] = null;\n  sourceUpdater[`${type}Buffer`] = null;\n};\nconst inSourceBuffers = (mediaSource, sourceBuffer) => mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\nconst actions = {\n  appendBuffer: (bytes, segmentInfo, onError) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Appending segment ${segmentInfo.mediaIndex}'s ${bytes.length} bytes to ${type}Buffer`);\n    try {\n      sourceBuffer.appendBuffer(bytes);\n    } catch (e) {\n      sourceUpdater.logger_(`Error with code ${e.code} ` + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + `when appending segment ${segmentInfo.mediaIndex} to ${type}Buffer`);\n      sourceUpdater.queuePending[type] = null;\n      onError(e);\n    }\n  },\n  remove: (start, end) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${start} to ${end} from ${type}Buffer`);\n    try {\n      sourceBuffer.remove(start, end);\n    } catch (e) {\n      sourceUpdater.logger_(`Remove ${start} to ${end} from ${type}Buffer failed`);\n    }\n  },\n  timestampOffset: offset => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Setting ${type}timestampOffset to ${offset}`);\n    sourceBuffer.timestampOffset = offset;\n  },\n  callback: callback => (type, sourceUpdater) => {\n    callback();\n  },\n  endOfStream: error => sourceUpdater => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    sourceUpdater.logger_(`Calling mediaSource endOfStream(${error || ''})`);\n    try {\n      sourceUpdater.mediaSource.endOfStream(error);\n    } catch (e) {\n      videojs.log.warn('Failed to call media source endOfStream', e);\n    }\n  },\n  duration: duration => sourceUpdater => {\n    sourceUpdater.logger_(`Setting mediaSource duration to ${duration}`);\n    try {\n      sourceUpdater.mediaSource.duration = duration;\n    } catch (e) {\n      videojs.log.warn('Failed to set media source duration', e);\n    }\n  },\n  abort: () => (type, sourceUpdater) => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`calling abort on ${type}Buffer`);\n    try {\n      sourceBuffer.abort();\n    } catch (e) {\n      videojs.log.warn(`Failed to abort on ${type}Buffer`, e);\n    }\n  },\n  addSourceBuffer: (type, codec) => sourceUpdater => {\n    const titleType = toTitleCase(type);\n    const mime = getMimeForCodec(codec);\n    sourceUpdater.logger_(`Adding ${type}Buffer with codec ${codec} to mediaSource`);\n    const sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n    sourceBuffer.addEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n    sourceBuffer.addEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n    sourceUpdater.codecs[type] = codec;\n    sourceUpdater[`${type}Buffer`] = sourceBuffer;\n  },\n  removeSourceBuffer: type => sourceUpdater => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${type}Buffer with codec ${sourceUpdater.codecs[type]} from mediaSource`);\n    try {\n      sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n    } catch (e) {\n      videojs.log.warn(`Failed to removeSourceBuffer ${type}Buffer`, e);\n    }\n  },\n  changeType: codec => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    const mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    } // do not update codec if we don't need to.\n\n    if (sourceUpdater.codecs[type] === codec) {\n      return;\n    }\n    sourceUpdater.logger_(`changing ${type}Buffer codec from ${sourceUpdater.codecs[type]} to ${codec}`);\n    sourceBuffer.changeType(mime);\n    sourceUpdater.codecs[type] = codec;\n  }\n};\nconst pushQueue = ({\n  type,\n  sourceUpdater,\n  action,\n  doneFn,\n  name\n}) => {\n  sourceUpdater.queue.push({\n    type,\n    action,\n    doneFn,\n    name\n  });\n  shiftQueue(type, sourceUpdater);\n};\nconst onUpdateend = (type, sourceUpdater) => e => {\n  // Although there should, in theory, be a pending action for any updateend receieved,\n  // there are some actions that may trigger updateend events without set definitions in\n  // the w3c spec. For instance, setting the duration on the media source may trigger\n  // updateend events on source buffers. This does not appear to be in the spec. As such,\n  // if we encounter an updateend without a corresponding pending action from our queue\n  // for that source buffer type, process the next action.\n  if (sourceUpdater.queuePending[type]) {\n    const doneFn = sourceUpdater.queuePending[type].doneFn;\n    sourceUpdater.queuePending[type] = null;\n    if (doneFn) {\n      // if there's an error, report it\n      doneFn(sourceUpdater[`${type}Error_`]);\n    }\n  }\n  shiftQueue(type, sourceUpdater);\n};\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n */\n\nclass SourceUpdater extends videojs.EventTarget {\n  constructor(mediaSource) {\n    super();\n    this.mediaSource = mediaSource;\n    this.sourceopenListener_ = () => shiftQueue('mediaSource', this);\n    this.mediaSource.addEventListener('sourceopen', this.sourceopenListener_);\n    this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n    this.audioTimestampOffset_ = 0;\n    this.videoTimestampOffset_ = 0;\n    this.queue = [];\n    this.queuePending = {\n      audio: null,\n      video: null\n    };\n    this.delayedAudioAppendQueue_ = [];\n    this.videoAppendQueued_ = false;\n    this.codecs = {};\n    this.onVideoUpdateEnd_ = onUpdateend('video', this);\n    this.onAudioUpdateEnd_ = onUpdateend('audio', this);\n    this.onVideoError_ = e => {\n      // used for debugging\n      this.videoError_ = e;\n    };\n    this.onAudioError_ = e => {\n      // used for debugging\n      this.audioError_ = e;\n    };\n    this.createdSourceBuffers_ = false;\n    this.initializedEme_ = false;\n    this.triggeredReady_ = false;\n  }\n  initializedEme() {\n    this.initializedEme_ = true;\n    this.triggerReady();\n  }\n  hasCreatedSourceBuffers() {\n    // if false, likely waiting on one of the segment loaders to get enough data to create\n    // source buffers\n    return this.createdSourceBuffers_;\n  }\n  hasInitializedAnyEme() {\n    return this.initializedEme_;\n  }\n  ready() {\n    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n  }\n  createSourceBuffers(codecs) {\n    if (this.hasCreatedSourceBuffers()) {\n      // already created them before\n      return;\n    } // the intial addOrChangeSourceBuffers will always be\n    // two add buffers.\n\n    this.addOrChangeSourceBuffers(codecs);\n    this.createdSourceBuffers_ = true;\n    this.trigger('createdsourcebuffers');\n    this.triggerReady();\n  }\n  triggerReady() {\n    // only allow ready to be triggered once, this prevents the case\n    // where:\n    // 1. we trigger createdsourcebuffers\n    // 2. ie 11 synchronously initializates eme\n    // 3. the synchronous initialization causes us to trigger ready\n    // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n    if (this.ready() && !this.triggeredReady_) {\n      this.triggeredReady_ = true;\n      this.trigger('ready');\n    }\n  }\n  /**\n   * Add a type of source buffer to the media source.\n   *\n   * @param {string} type\n   *        The type of source buffer to add.\n   *\n   * @param {string} codec\n   *        The codec to add the source buffer with.\n   */\n\n  addSourceBuffer(type, codec) {\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.addSourceBuffer(type, codec),\n      name: 'addSourceBuffer'\n    });\n  }\n  /**\n   * call abort on a source buffer.\n   *\n   * @param {string} type\n   *        The type of source buffer to call abort on.\n   */\n\n  abort(type) {\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.abort(type),\n      name: 'abort'\n    });\n  }\n  /**\n   * Call removeSourceBuffer and remove a specific type\n   * of source buffer on the mediaSource.\n   *\n   * @param {string} type\n   *        The type of source buffer to remove.\n   */\n\n  removeSourceBuffer(type) {\n    if (!this.canRemoveSourceBuffer()) {\n      videojs.log.error('removeSourceBuffer is not supported!');\n      return;\n    }\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.removeSourceBuffer(type),\n      name: 'removeSourceBuffer'\n    });\n  }\n  /**\n   * Whether or not the removeSourceBuffer function is supported\n   * on the mediaSource.\n   *\n   * @return {boolean}\n   *          if removeSourceBuffer can be called.\n   */\n\n  canRemoveSourceBuffer() {\n    // IE reports that it supports removeSourceBuffer, but often throws\n    // errors when attempting to use the function. So we report that it\n    // does not support removeSourceBuffer. As of Firefox 83 removeSourceBuffer\n    // throws errors, so we report that it does not support this as well.\n    return !videojs.browser.IE_VERSION && !videojs.browser.IS_FIREFOX && window$1.MediaSource && window$1.MediaSource.prototype && typeof window$1.MediaSource.prototype.removeSourceBuffer === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  static canChangeType() {\n    return window$1.SourceBuffer && window$1.SourceBuffer.prototype && typeof window$1.SourceBuffer.prototype.changeType === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  canChangeType() {\n    return this.constructor.canChangeType();\n  }\n  /**\n   * Call the changeType function on a source buffer, given the code and type.\n   *\n   * @param {string} type\n   *        The type of source buffer to call changeType on.\n   *\n   * @param {string} codec\n   *        The codec string to change type with on the source buffer.\n   */\n\n  changeType(type, codec) {\n    if (!this.canChangeType()) {\n      videojs.log.error('changeType is not supported!');\n      return;\n    }\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.changeType(codec),\n      name: 'changeType'\n    });\n  }\n  /**\n   * Add source buffers with a codec or, if they are already created,\n   * call changeType on source buffers using changeType.\n   *\n   * @param {Object} codecs\n   *        Codecs to switch to\n   */\n\n  addOrChangeSourceBuffers(codecs) {\n    if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n      throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n    }\n    Object.keys(codecs).forEach(type => {\n      const codec = codecs[type];\n      if (!this.hasCreatedSourceBuffers()) {\n        return this.addSourceBuffer(type, codec);\n      }\n      if (this.canChangeType()) {\n        this.changeType(type, codec);\n      }\n    });\n  }\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n\n  appendBuffer(options, doneFn) {\n    const {\n      segmentInfo,\n      type,\n      bytes\n    } = options;\n    this.processedAppend_ = true;\n    if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n      this.delayedAudioAppendQueue_.push([options, doneFn]);\n      this.logger_(`delayed audio append of ${bytes.length} until video append`);\n      return;\n    } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n    // not be fired. This means that the queue will be blocked until the next action\n    // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n    // these errors by calling the doneFn with the specific error.\n\n    const onError = doneFn;\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.appendBuffer(bytes, segmentInfo || {\n        mediaIndex: -1\n      }, onError),\n      doneFn,\n      name: 'appendBuffer'\n    });\n    if (type === 'video') {\n      this.videoAppendQueued_ = true;\n      if (!this.delayedAudioAppendQueue_.length) {\n        return;\n      }\n      const queue = this.delayedAudioAppendQueue_.slice();\n      this.logger_(`queuing delayed audio ${queue.length} appendBuffers`);\n      this.delayedAudioAppendQueue_.length = 0;\n      queue.forEach(que => {\n        this.appendBuffer.apply(this, que);\n      });\n    }\n  }\n  /**\n   * Get the audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The audio buffer's buffered time range\n   */\n\n  audioBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n      return createTimeRanges();\n    }\n    return this.audioBuffer.buffered ? this.audioBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get the video buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The video buffer's buffered time range\n   */\n\n  videoBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n      return createTimeRanges();\n    }\n    return this.videoBuffer.buffered ? this.videoBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get a combined video/audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         the combined time range\n   */\n\n  buffered() {\n    const video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n    const audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n    if (audio && !video) {\n      return this.audioBuffered();\n    }\n    if (video && !audio) {\n      return this.videoBuffered();\n    }\n    return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n  }\n  /**\n   * Add a callback to the queue that will set duration on the mediaSource.\n   *\n   * @param {number} duration\n   *        The duration to set\n   *\n   * @param {Function} [doneFn]\n   *        function to run after duration has been set.\n   */\n\n  setDuration(duration, doneFn = noop) {\n    // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.duration(duration),\n      name: 'duration',\n      doneFn\n    });\n  }\n  /**\n   * Add a mediaSource endOfStream call to the queue\n   *\n   * @param {Error} [error]\n   *        Call endOfStream with an error\n   *\n   * @param {Function} [doneFn]\n   *        A function that should be called when the\n   *        endOfStream call has finished.\n   */\n\n  endOfStream(error = null, doneFn = noop) {\n    if (typeof error !== 'string') {\n      error = undefined;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.endOfStream(error),\n      name: 'endOfStream',\n      doneFn\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeAudio(start, end, done = noop) {\n    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeVideo(start, end, done = noop) {\n    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {boolean} the updating status of the SourceBuffer\n   */\n\n  updating() {\n    // the audio/video source buffer is updating\n    if (updating('audio', this) || updating('video', this)) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Set/get the timestampoffset on the audio SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  audioTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.audioBuffer &&\n    // no point in updating if it's the same\n    this.audioTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.audioTimestampOffset_ = offset;\n    }\n    return this.audioTimestampOffset_;\n  }\n  /**\n   * Set/get the timestampoffset on the video SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  videoTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.videoBuffer &&\n    // no point in updating if it's the same\n    this.videoTimestampOffset !== offset) {\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.videoTimestampOffset_ = offset;\n    }\n    return this.videoTimestampOffset_;\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the audio queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  audioQueueCallback(callback) {\n    if (!this.audioBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the video queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  videoQueueCallback(callback) {\n    if (!this.videoBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    bufferTypes.forEach(type => {\n      this.abort(type);\n      if (this.canRemoveSourceBuffer()) {\n        this.removeSourceBuffer(type);\n      } else {\n        this[`${type}QueueCallback`](() => cleanupBuffer(type, this));\n      }\n    });\n    this.videoAppendQueued_ = false;\n    this.delayedAudioAppendQueue_.length = 0;\n    if (this.sourceopenListener_) {\n      this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n    }\n    this.off();\n  }\n}\nconst uint8ToUtf8 = uintArray => decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n\n/**\n * @file vtt-segment-loader.js\n */\nconst VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(char => char.charCodeAt(0)));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass VTTSegmentLoader extends SegmentLoader {\n  constructor(settings, options = {}) {\n    super(settings, options); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    this.mediaSource_ = null;\n    this.subtitlesTrack_ = null;\n    this.loaderType_ = 'subtitle';\n    this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n    // the sync controller leads to improper behavior.\n\n    this.shouldSaveSegmentTimingInfo_ = false;\n  }\n  createTransmuxer_() {\n    // don't need to transmux any subtitles\n    return null;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n      return createTimeRanges();\n    }\n    const cues = this.subtitlesTrack_.cues;\n    const start = cues[0].startTime;\n    const end = cues[cues.length - 1].startTime;\n    return createTimeRanges([[start, end]]);\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      const combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      const combinedSegment = new Uint8Array(combinedByteLength);\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n\n  track(track) {\n    if (typeof track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n    this.subtitlesTrack_ = track; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n    return this.subtitlesTrack_;\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   */\n\n  remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // see if we need to begin loading immediately\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      const checkTimestampOffset = () => {\n        this.state = 'READY';\n        if (!this.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          this.monitorBuffer_();\n        }\n      };\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n    this.loadSegment_(segmentInfo);\n  } // never set a timestamp offset for vtt segments.\n\n  timestampOffsetForSegment_() {\n    return null;\n  }\n  chooseNextRequest_() {\n    return this.skipEmptySegments_(super.chooseNextRequest_());\n  }\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n\n  skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      // stop at the last possible segmentInfo\n      if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n        segmentInfo = null;\n        break;\n      }\n      segmentInfo = this.generateSegmentInfo_({\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex + 1,\n        startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n        isSyncRequest: segmentInfo.isSyncRequest\n      });\n    }\n    return segmentInfo;\n  }\n  stopForError(error) {\n    this.error(error);\n    this.state = 'READY';\n    this.pause();\n    this.trigger('error');\n  }\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    if (!this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n    if (error) {\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n      }\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n      } else {\n        this.mediaRequestsErrored += 1;\n      }\n      this.stopForError(error);\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functionality between segment loaders\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    this.state = 'APPENDING'; // used for tests\n\n    this.trigger('appending');\n    const segment = segmentInfo.segment;\n    if (segment.map) {\n      segment.map.bytes = simpleSegment.map.bytes;\n    }\n    segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n    if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n      let loadHandler;\n      const errorHandler = () => {\n        this.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n        this.stopForError({\n          message: 'Error loading vtt.js'\n        });\n        return;\n      };\n      loadHandler = () => {\n        this.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n        this.segmentRequestFinished_(error, simpleSegment, result);\n      };\n      this.state = 'WAITING_ON_VTTJS';\n      this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n      this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n      return;\n    }\n    segment.requested = true;\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.stopForError({\n        message: e.message\n      });\n      return;\n    }\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n    if (segmentInfo.cues.length) {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.cues[0].startTime,\n        end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n      };\n    } else {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.startOfSegment,\n        end: segmentInfo.startOfSegment + segmentInfo.duration\n      };\n    }\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n    // the subtitle track\n\n    segmentInfo.cues.forEach(cue => {\n      this.subtitlesTrack_.addCue(this.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n    }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n    // cues to have identical time-intervals, but if the text is also identical\n    // we can safely assume it is a duplicate that can be removed (ex. when a cue\n    // \"overlaps\" VTT segments)\n\n    removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n    this.handleAppendsDone_();\n  }\n  handleData_() {// noop as we shouldn't be getting video/audio data captions\n    // that we do not support here.\n  }\n  updateTimingInfoEnd_() {// noop\n  }\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n\n  parseVTTCues_(segmentInfo) {\n    let decoder;\n    let decodeBytesToString = false;\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n    const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = {\n      MPEGTS: 0,\n      LOCAL: 0\n    };\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n    parser.ontimestampmap = map => {\n      segmentInfo.timestampmap = map;\n    };\n    parser.onparsingerror = error => {\n      videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n    if (segmentInfo.segment.map) {\n      let mapData = segmentInfo.segment.map.bytes;\n      if (decodeBytesToString) {\n        mapData = uint8ToUtf8(mapData);\n      }\n      parser.parse(mapData);\n    }\n    let segmentData = segmentInfo.bytes;\n    if (decodeBytesToString) {\n      segmentData = uint8ToUtf8(segmentData);\n    }\n    parser.parse(segmentData);\n    parser.flush();\n  }\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n\n  updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    const segment = segmentInfo.segment;\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n    const timestampmap = segmentInfo.timestampmap;\n    const diff = timestampmap.MPEGTS / ONE_SECOND_IN_TS - timestampmap.LOCAL + mappingObj.mapping;\n    segmentInfo.cues.forEach(cue => {\n      // First convert cue time to TS time using the timestamp-map provided within the vtt\n      cue.startTime += diff;\n      cue.endTime += diff;\n    });\n    if (!playlist.syncInfo) {\n      const firstStart = segmentInfo.cues[0].startTime;\n      const lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  }\n}\n\n/**\n * @file ad-cue-tags.js\n */\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n *\n * @param {Object} track\n *        the track to find the cue for\n *\n * @param {number} mediaTime\n *        the time to find the cue at\n *\n * @return {Object|null}\n *         the found cue or null\n */\n\nconst findAdCue = function (track, mediaTime) {\n  const cues = track.cues;\n  for (let i = 0; i < cues.length; i++) {\n    const cue = cues[i];\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\nconst updateAdCues = function (media, track, offset = 0) {\n  if (!media.segments) {\n    return;\n  }\n  let mediaTime = offset;\n  let cue;\n  for (let i = 0; i < media.segments.length; i++) {\n    const segment = media.segments[i];\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n        const [adOffset, adTotal] = segment.cueOutCont.split('/').map(parseFloat);\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n// synchronize expired playlist segments.\n// the max media sequence diff is 48 hours of live stream\n// content with two second segments. Anything larger than that\n// will likely be invalid.\n\nconst MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\nconst syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (duration !== Infinity) {\n      const syncPoint = {\n        time: 0,\n        segmentIndex: 0,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n      return null;\n    }\n    let syncPoint = null;\n    let lastDistance = null;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    currentTime = currentTime || 0;\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n      if (!datetimeMapping || !segment.dateTimeObject) {\n        continue;\n      }\n      const segmentTime = segment.dateTimeObject.getTime() / 1000;\n      let start = segmentTime + datetimeMapping; // take part duration into account.\n\n      if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n        for (let z = 0; z < partAndSegment.partIndex; z++) {\n          start += segment.parts[z].duration;\n        }\n      }\n      const distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n      // currentTime and can stop looking for better candidates\n\n      if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n        break;\n      }\n      lastDistance = distance;\n      syncPoint = {\n        time: start,\n        segmentIndex: partAndSegment.segmentIndex,\n        partIndex: partAndSegment.partIndex\n      };\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    let lastDistance = null;\n    currentTime = currentTime || 0;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n      if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n        const distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: start,\n            segmentIndex: partAndSegment.segmentIndex,\n            partIndex: partAndSegment.partIndex\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    currentTime = currentTime || 0;\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      let lastDistance = null;\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const discontinuitySync = syncController.discontinuities[discontinuity];\n        if (discontinuitySync) {\n          const distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex,\n              partIndex: null\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (playlist.syncInfo) {\n      const syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n}];\nclass SyncController extends videojs.EventTarget {\n  constructor(options = {}) {\n    super(); // ...for synching across variants\n\n    this.timelines = [];\n    this.discontinuities = [];\n    this.timelineToDatetimeMappings = {};\n    this.logger_ = logger('SyncController');\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Object}\n   *          A sync-point object\n   */\n\n  getSyncPoint(playlist, duration, currentTimeline, currentTime) {\n    const syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    } // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n\n    return this.selectSyncPoint_(syncPoints, {\n      key: 'time',\n      value: currentTime\n    });\n  }\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @return {number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n\n  getExpiredTime(playlist, duration) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n    const syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n    if (!syncPoints.length) {\n      return null;\n    }\n    const syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n    return Math.abs(syncPoint.time + sumDurations({\n      defaultDuration: playlist.targetDuration,\n      durationList: playlist.segments,\n      startIndex: syncPoint.segmentIndex,\n      endIndex: 0\n    }));\n  }\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Array}\n   *          A list of sync-point objects\n   */\n\n  runStrategies_(playlist, duration, currentTimeline, currentTime) {\n    const syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n    for (let i = 0; i < syncPointStrategies.length; i++) {\n      const strategy = syncPointStrategies[i];\n      const syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint\n        });\n      }\n    }\n    return syncPoints;\n  }\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {string} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {number} target.value\n   *        The value to target for the specified key.\n   * @return {Object}\n   *          The sync-point nearest the target\n   */\n\n  selectSyncPoint_(syncPoints, target) {\n    let bestSyncPoint = syncPoints[0].syncPoint;\n    let bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    let bestStrategy = syncPoints[0].strategy;\n    for (let i = 1; i < syncPoints.length; i++) {\n      const newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n    this.logger_(`syncPoint for [${target.key}: ${target.value}] chosen with strategy` + ` [${bestStrategy}]: [time:${bestSyncPoint.time},` + ` segmentIndex:${bestSyncPoint.segmentIndex}` + (typeof bestSyncPoint.partIndex === 'number' ? `,partIndex:${bestSyncPoint.partIndex}` : '') + ']');\n    return bestSyncPoint;\n  }\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n\n  saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n    if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n      videojs.log.warn(`Not saving expired segment info. Media sequence gap ${mediaSequenceDiff} is too large.`);\n      return;\n    } // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n\n    for (let i = mediaSequenceDiff - 1; i >= 0; i--) {\n      const lastRemovedSegment = oldPlaylist.segments[i];\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_(`playlist refresh sync: [time:${newPlaylist.syncInfo.time},` + ` mediaSequence: ${newPlaylist.syncInfo.mediaSequence}]`);\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  }\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n   * before segments start to load.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n\n  setDateTimeMappingForStart(playlist) {\n    // It's possible for the playlist to be updated before playback starts, meaning time\n    // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n    // crossed, then the old time zero mapping (for the prior timeline) would be retained\n    // unless the mappings are cleared.\n    this.timelineToDatetimeMappings = {};\n    if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      const firstSegment = playlist.segments[0];\n      const playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n      this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n    }\n  }\n  /**\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n   * based on the latest timing information.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {SegmentInfo} options.segmentInfo\n   *        The current active request information\n   * @param {boolean} options.shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved for timeline mapping and program date time mappings.\n   */\n\n  saveSegmentTimingInfo({\n    segmentInfo,\n    shouldSaveTimelineMapping\n  }) {\n    const didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n    const segment = segmentInfo.segment;\n    if (didCalculateSegmentTimeMapping) {\n      this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n      // now with segment timing information\n\n      if (!segmentInfo.playlist.syncInfo) {\n        segmentInfo.playlist.syncInfo = {\n          mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: segment.start\n        };\n      }\n    }\n    const dateTime = segment.dateTimeObject;\n    if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n      this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n    }\n  }\n  timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].time;\n  }\n  mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].mapping;\n  }\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {Object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @param {boolean} shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved in timelines.\n   * @return {boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n\n  calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n    // TODO: remove side effects\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    let mappingObj = this.timelines[segmentInfo.timeline];\n    let start;\n    let end;\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n      if (shouldSaveTimelineMapping) {\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_(`time mapping for timeline ${segmentInfo.timeline}: ` + `[time: ${mappingObj.time}] [mapping: ${mappingObj.mapping}]`);\n      }\n      start = segmentInfo.startOfSegment;\n      end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      start = timingInfo.start + mappingObj.mapping;\n      end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n    if (part) {\n      part.start = start;\n      part.end = end;\n    } // If we don't have a segment start yet or the start value we got\n    // is less than our current segment.start value, save a new start value.\n    // We have to do this because parts will have segment timing info saved\n    // multiple times and we want segment start to be the earliest part start\n    // value for that segment.\n\n    if (!segment.start || start < segment.start) {\n      segment.start = start;\n    }\n    segment.end = end;\n    return true;\n  }\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n  saveDiscontinuitySyncInfo_(segmentInfo) {\n    const playlist = segmentInfo.playlist;\n    const segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        const accuracy = Math.abs(mediaIndexDiff);\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          let time;\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex,\n              endIndex: segmentIndex\n            });\n          } else {\n            time = segment.end + sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex + 1,\n              endIndex: segmentIndex\n            });\n          }\n          this.discontinuities[discontinuity] = {\n            time,\n            accuracy\n          };\n        }\n      }\n    }\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.off();\n  }\n}\n\n/**\n * The TimelineChangeController acts as a source for segment loaders to listen for and\n * keep track of latest and pending timeline changes. This is useful to ensure proper\n * sync, as each loader may need to make a consideration for what timeline the other\n * loader is on before making changes which could impact the other loader's media.\n *\n * @class TimelineChangeController\n * @extends videojs.EventTarget\n */\n\nclass TimelineChangeController extends videojs.EventTarget {\n  constructor() {\n    super();\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n  }\n  clearPendingTimelineChange(type) {\n    this.pendingTimelineChanges_[type] = null;\n    this.trigger('pendingtimelinechange');\n  }\n  pendingTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.pendingTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      this.trigger('pendingtimelinechange');\n    }\n    return this.pendingTimelineChanges_[type];\n  }\n  lastTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.lastTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      delete this.pendingTimelineChanges_[type];\n      this.trigger('timelinechange');\n    }\n    return this.lastTimelineChanges_[type];\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n    this.off();\n  }\n}\n\n/* rollup-plugin-worker-factory start for worker!/Users/poneill/dev/http-streaming/src/decrypter-worker.js */\nconst workerCode = transform(getWorkerString(function () {\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    var _proto = Stream.prototype;\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n    return Stream;\n  }();\n  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n\n  function unpad(padded) {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n  }\n  /*! @name aes-decrypter @version 4.0.1 @license Apache-2.0 */\n\n  /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */\n\n  /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */\n\n  const precompute = function () {\n    const tables = [[[], [], [], [], []], [[], [], [], [], []]];\n    const encTable = tables[0];\n    const decTable = tables[1];\n    const sbox = encTable[4];\n    const sboxInv = decTable[4];\n    let i;\n    let x;\n    let xInv;\n    const d = [];\n    const th = [];\n    let x2;\n    let x4;\n    let x8;\n    let s;\n    let tEnc;\n    let tDec; // Compute double and third tables\n\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n    }\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x; // Compute MixColumns\n\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n      }\n    } // Compactify. Considerable speedup on Firefox.\n\n    for (i = 0; i < 5; i++) {\n      encTable[i] = encTable[i].slice(0);\n      decTable[i] = decTable[i].slice(0);\n    }\n    return tables;\n  };\n  let aesTables = null;\n  /**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */\n\n  class AES {\n    constructor(key) {\n      /**\n      * The expanded S-box and inverse S-box tables. These will be computed\n      * on the client so that we don't have to send them down the wire.\n      *\n      * There are two tables, _tables[0] is for encryption and\n      * _tables[1] is for decryption.\n      *\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\n      * last (_tables[01][4]) is the S-box itself.\n      *\n      * @private\n      */\n      // if we have yet to precompute the S-box tables\n      // do so now\n      if (!aesTables) {\n        aesTables = precompute();\n      } // then make a copy of that object for use\n\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n      let i;\n      let j;\n      let tmp;\n      const sbox = this._tables[0][4];\n      const decTable = this._tables[1];\n      const keyLen = key.length;\n      let rcon = 1;\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n        throw new Error('Invalid aes key size');\n      }\n      const encKey = key.slice(0);\n      const decKey = [];\n      this._key = [encKey, decKey]; // schedule encryption keys\n\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\n        tmp = encKey[i - 1]; // apply sbox\n\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n          if (i % keyLen === 0) {\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\n          }\n        }\n        encKey[i] = encKey[i - keyLen] ^ tmp;\n      } // schedule decryption keys\n\n      for (j = 0; i; j++, i--) {\n        tmp = encKey[j & 3 ? i : i - 4];\n        if (i <= 4 || j < 4) {\n          decKey[j] = tmp;\n        } else {\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n        }\n      }\n    }\n    /**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {number} encrypted0 the first word to decrypt\n     * @param {number} encrypted1 the second word to decrypt\n     * @param {number} encrypted2 the third word to decrypt\n     * @param {number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */\n\n    decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      const key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n      let a = encrypted0 ^ key[0];\n      let b = encrypted3 ^ key[1];\n      let c = encrypted2 ^ key[2];\n      let d = encrypted1 ^ key[3];\n      let a2;\n      let b2;\n      let c2; // key.length === 2 ?\n\n      const nInnerRounds = key.length / 4 - 2;\n      let i;\n      let kIndex = 4;\n      const table = this._tables[1]; // load up the tables\n\n      const table0 = table[0];\n      const table1 = table[1];\n      const table2 = table[2];\n      const table3 = table[3];\n      const sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;\n        b = b2;\n        c = c2;\n      } // Last round.\n\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;\n        a = b;\n        b = c;\n        c = d;\n        d = a2;\n      }\n    }\n  }\n  /**\n   * @file async-stream.js\n   */\n\n  /**\n   * A wrapper around the Stream class to use setTimeout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */\n\n  class AsyncStream extends Stream {\n    constructor() {\n      super(Stream);\n      this.jobs = [];\n      this.delay = 1;\n      this.timeout_ = null;\n    }\n    /**\n     * process an async job\n     *\n     * @private\n     */\n\n    processJob_() {\n      this.jobs.shift()();\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n\n    push(job) {\n      this.jobs.push(job);\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    }\n  }\n  /**\n   * @file decrypter.js\n   *\n   * An asynchronous implementation of AES-128 CBC decryption with\n   * PKCS#7 padding.\n   */\n\n  /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */\n\n  const ntoh = function (word) {\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n  };\n  /**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */\n\n  const decrypt = function (encrypted, key, initVector) {\n    // word-level access to the encrypted bytes\n    const encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n    const decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n    const decrypted = new Uint8Array(encrypted.byteLength);\n    const decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n    // decrypted data\n\n    let init0;\n    let init1;\n    let init2;\n    let init3;\n    let encrypted0;\n    let encrypted1;\n    let encrypted2;\n    let encrypted3; // iteration variable\n\n    let wordIx; // pull out the words of the IV to ensure we don't modify the\n    // passed-in reference and easier access\n\n    init0 = initVector[0];\n    init1 = initVector[1];\n    init2 = initVector[2];\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n    // to each decrypted block\n\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n      // convert big-endian (network order) words into little-endian\n      // (javascript order)\n      encrypted0 = ntoh(encrypted32[wordIx]);\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n      // plaintext\n\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n      init0 = encrypted0;\n      init1 = encrypted1;\n      init2 = encrypted2;\n      init3 = encrypted3;\n    }\n    return decrypted;\n  };\n  /**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */\n\n  class Decrypter {\n    constructor(encrypted, key, initVector, done) {\n      const step = Decrypter.STEP;\n      const encrypted32 = new Int32Array(encrypted.buffer);\n      const decrypted = new Uint8Array(encrypted.byteLength);\n      let i = 0;\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      for (i = step; i < encrypted32.length; i += step) {\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      } // invoke the done() callback when everything is finished\n\n      this.asyncStream_.push(function () {\n        // remove pkcs#7 padding from the decrypted bytes\n        done(null, unpad(decrypted));\n      });\n    }\n    /**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {number} the value of step 32000\n     */\n\n    static get STEP() {\n      // 4 * 8000;\n      return 32000;\n    }\n    /**\n     * @private\n     */\n\n    decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        const bytes = decrypt(encrypted, key, initVector);\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    }\n  }\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var BigInt = window_1.BigInt || Number;\n  [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  (function () {\n    var a = new Uint16Array([0xFFCC]);\n    var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    if (b[0] === 0xFF) {\n      return 'big';\n    }\n    if (b[0] === 0xCC) {\n      return 'little';\n    }\n    return 'unknown';\n  })();\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n  const createTransferableMessage = function (message) {\n    const transferable = {};\n    Object.keys(message).forEach(key => {\n      const value = message[key];\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /* global self */\n\n  /**\n   * Our web worker interface so that things can talk to aes-decrypter\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   */\n\n  self.onmessage = function (event) {\n    const data = event.data;\n    const encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n    const key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n    const iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n    /* eslint-disable no-new, handle-callback-err */\n\n    new Decrypter(encrypted, key, iv, function (err, bytes) {\n      self.postMessage(createTransferableMessage({\n        source: data.source,\n        decrypted: bytes\n      }), [bytes.buffer]);\n    });\n    /* eslint-enable */\n  };\n}));\n\nvar Decrypter = factory(workerCode);\n/* rollup-plugin-worker-factory end for worker!/Users/poneill/dev/http-streaming/src/decrypter-worker.js */\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nconst audioTrackKind_ = properties => {\n  let kind = properties.default ? 'main' : 'alternative';\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\nconst stopLoaders = (segmentLoader, mediaType) => {\n  segmentLoader.abort();\n  segmentLoader.pause();\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\nconst startLoaders = (playlistLoader, mediaType) => {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\nconst onGroupChanged = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n  if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup || activeGroup.isMainPlaylist) {\n    // there is no group active or active group is a main playlist and won't change\n    return;\n  }\n  if (!activeGroup.playlistLoader) {\n    if (previousActiveLoader) {\n      // The previous group had a playlist loader but the new active group does not\n      // this means we are switching from demuxed to muxed audio. In this case we want to\n      // do a destructive reset of the main segment loader and not restart the audio\n      // loaders.\n      mainSegmentLoader.resetEverything();\n    }\n    return;\n  } // Non-destructive resync\n\n  segmentLoader.resyncLoader();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onGroupChanging = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  mediaType.lastGroup_ = null;\n  segmentLoader.abort();\n  segmentLoader.pause();\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\nconst onTrackChanged = (type, settings) => () => {\n  const {\n    mainPlaylistLoader,\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n  if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup) {\n    // there is no group active so we do not want to restart loaders\n    return;\n  }\n  if (activeGroup.isMainPlaylist) {\n    // track did not change, do nothing\n    if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n      return;\n    }\n    const pc = settings.vhs.playlistController_;\n    const newPlaylist = pc.selectPlaylist(); // media will not change do nothing\n\n    if (pc.media() === newPlaylist) {\n      return;\n    }\n    mediaType.logger_(`track change. Switching main audio from ${lastTrack.id} to ${activeTrack.id}`);\n    mainPlaylistLoader.pause();\n    mainSegmentLoader.resetEverything();\n    pc.fastQualityChange_(newPlaylist);\n    return;\n  }\n  if (type === 'AUDIO') {\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no\n      // playlist loader for the audio group), we want to do a destructive reset of the\n      // main segment loader and not restart the audio loaders\n      mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n      // it should be stopped\n\n      mainSegmentLoader.resetEverything();\n      return;\n    } // although the segment loader is an audio segment loader, call the setAudio\n    // function to ensure it is prepared to re-append the init segment (or handle other\n    // config changes)\n\n    segmentLoader.setAudio(true);\n    mainSegmentLoader.setAudio(false);\n  }\n  if (previousActiveLoader === activeGroup.playlistLoader) {\n    // Nothing has actually changed. This can happen because track change events can fire\n    // multiple times for a \"single\" change. One for enabling the new active track, and\n    // one for disabling the track that was active\n    startLoaders(activeGroup.playlistLoader, mediaType);\n    return;\n  }\n  if (segmentLoader.track) {\n    // For WebVTT, set the new text track in the segmentloader\n    segmentLoader.track(activeTrack);\n  } // destructive reset\n\n  segmentLoader.resetEverything();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is excluded) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      },\n      excludePlaylist\n    } = settings;\n    stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n    const activeTrack = mediaType.activeTrack();\n    const activeGroup = mediaType.activeGroup();\n    const id = (activeGroup.filter(group => group.default)[0] || activeGroup[0]).id;\n    const defaultTrack = mediaType.tracks[id];\n    if (activeTrack === defaultTrack) {\n      // Default track encountered an error. All we can do now is exclude the current\n      // rendition and hope another will switch audio groups\n      excludePlaylist({\n        error: {\n          message: 'Problem encountered loading the default audio track.'\n        }\n      });\n      return;\n    }\n    videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n    for (const trackId in mediaType.tracks) {\n      mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n    }\n    mediaType.onTrackChanged();\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n    stopLoaders(segmentLoader, mediaType);\n    const track = mediaType.activeTrack();\n    if (track) {\n      track.mode = 'disabled';\n    }\n    mediaType.onTrackChanged();\n  }\n};\nconst setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: (type, playlistLoader, settings) => {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: (type, playlistLoader, settings) => {\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nconst initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': (type, settings) => {\n    const {\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks,\n          logger_\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    const audioOnlyMain = isAudioOnly(mainPlaylistLoader.main); // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n      if (audioOnlyMain) {\n        mediaGroups[type].main.default.playlists = mainPlaylistLoader.main.playlists;\n      }\n    }\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (audioOnlyMain) {\n          logger_(`AUDIO group '${groupId}' label '${variantLabel}' is a main playlist`);\n          properties.isMainPlaylist = true;\n          playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n          // use the resolved media playlist object\n        } else if (sourceType === 'vhs-json' && properties.playlists) {\n          playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n        } else if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n          // should we even have properties.playlists in this check.\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = new videojs.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': (type, settings) => {\n    const {\n      tech,\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n        } else if (sourceType === 'dash') {\n          const playlists = properties.playlists.filter(p => p.excludeUntil !== Infinity);\n          if (!playlists.length) {\n            return;\n          }\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else if (sourceType === 'vhs-json') {\n          playlistLoader = new PlaylistLoader(\n          // if the vhs-json object included the media playlist, use the media playlist\n          // as provided, otherwise use the resolved URI to load the playlist\n          properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': (type, settings) => {\n    const {\n      tech,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      }\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        const properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n        if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n          continue;\n        }\n        const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        let newProps = {\n          label: variantLabel,\n          language: properties.language,\n          instreamId: properties.instreamId,\n          default: properties.default && properties.autoselect\n        };\n        if (captionServices[newProps.instreamId]) {\n          newProps = merge(newProps, captionServices[newProps.instreamId]);\n        }\n        if (newProps.default === undefined) {\n          delete newProps.default;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n        groups[groupId].push(merge({\n          id: variantLabel\n        }, properties));\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: newProps.instreamId,\n            kind: 'captions',\n            default: newProps.default,\n            language: newProps.language,\n            label: newProps.label\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\nconst groupMatch = (list, media) => {\n  for (let i = 0; i < list.length; i++) {\n    if (playlistMatch(media, list[i])) {\n      return true;\n    }\n    if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nconst activeGroup = (type, settings) => track => {\n  const {\n    mainPlaylistLoader,\n    mediaTypes: {\n      [type]: {\n        groups\n      }\n    }\n  } = settings;\n  const media = mainPlaylistLoader.media();\n  if (!media) {\n    return null;\n  }\n  let variants = null; // set to variants to main media active group\n\n  if (media.attributes[type]) {\n    variants = groups[media.attributes[type]];\n  }\n  const groupKeys = Object.keys(groups);\n  if (!variants) {\n    // find the mainPlaylistLoader media\n    // that is in a media group if we are dealing\n    // with audio only\n    if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.main)) {\n      for (let i = 0; i < groupKeys.length; i++) {\n        const groupPropertyList = groups[groupKeys[i]];\n        if (groupMatch(groupPropertyList, media)) {\n          variants = groupPropertyList;\n          break;\n        }\n      } // use the main group if it exists\n    } else if (groups.main) {\n      variants = groups.main; // only one group, use that one\n    } else if (groupKeys.length === 1) {\n      variants = groups[groupKeys[0]];\n    }\n  }\n  if (typeof track === 'undefined') {\n    return variants;\n  }\n  if (track === null || !variants) {\n    // An active track was specified so a corresponding group is expected. track === null\n    // means no track is currently active so there is no corresponding group\n    return null;\n  }\n  return variants.filter(props => props.id === track.id)[0] || null;\n};\nconst activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].enabled) {\n        return tracks[id];\n      }\n    }\n    return null;\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n        return tracks[id];\n      }\n    }\n    return null;\n  }\n};\nconst getActiveGroup = (type, {\n  mediaTypes\n}) => () => {\n  const activeTrack_ = mediaTypes[type].activeTrack();\n  if (!activeTrack_) {\n    return null;\n  }\n  return mediaTypes[type].activeGroup(activeTrack_);\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the main manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.mainPlaylistLoader\n *        PlaylistLoader for the main source\n * @param {VhsHandler} settings.vhs\n *        VHS SourceHandler\n * @param {Object} settings.main\n *        The parsed main manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.excludePlaylist\n *        Excludes the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nconst setupMediaGroups = settings => {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    initialize[type](type, settings);\n  });\n  const {\n    mediaTypes,\n    mainPlaylistLoader,\n    tech,\n    vhs,\n    segmentLoaders: {\n      ['AUDIO']: audioSegmentLoader,\n      main: mainSegmentLoader\n    }\n  } = settings; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(type => {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n    mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  const audioGroup = mediaTypes.AUDIO.activeGroup();\n  if (audioGroup) {\n    const groupId = (audioGroup.filter(group => group.default)[0] || audioGroup[0]).id;\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\n    mediaTypes.AUDIO.onGroupChanged();\n    mediaTypes.AUDIO.onTrackChanged();\n    const activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n    // track is changed, but needs to be handled here since the track may not be considered\n    // changed on the first call to onTrackChanged\n\n    if (!activeAudioGroup.playlistLoader) {\n      // either audio is muxed with video or the stream is audio only\n      mainSegmentLoader.setAudio(true);\n    } else {\n      // audio is demuxed\n      mainSegmentLoader.setAudio(false);\n      audioSegmentLoader.setAudio(true);\n    }\n  }\n  mainPlaylistLoader.on('mediachange', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanged());\n  });\n  mainPlaylistLoader.on('mediachanging', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanging());\n  }); // custom audio track change event handler for usage event\n\n  const onAudioTrackChanged = () => {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-audio-change'\n    });\n  };\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  vhs.on('dispose', () => {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n  for (const id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\nconst createMediaTypes = () => {\n  const mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      getActiveGroup: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop,\n      lastTrack_: null,\n      logger_: logger(`MediaGroups[${type}]`)\n    };\n  });\n  return mediaTypes;\n};\n\n/**\n * @file playlist-controller.js\n */\nconst ABORT_EARLY_EXCLUSION_SECONDS = 60 * 2;\nlet Vhs$1; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nconst loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\nconst sumLoaderStat = function (stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\nconst shouldSwitchToMedia = function ({\n  currentPlaylist,\n  buffered,\n  currentTime,\n  nextPlaylist,\n  bufferLowWaterLine,\n  bufferHighWaterLine,\n  duration,\n  bufferBasedABR,\n  log\n}) {\n  // we have no other playlist to switch to\n  if (!nextPlaylist) {\n    videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  }\n  const sharedLogLine = `allowing switch ${currentPlaylist && currentPlaylist.id || 'null'} -> ${nextPlaylist.id}`;\n  if (!currentPlaylist) {\n    log(`${sharedLogLine} as current playlist is not set`);\n    return true;\n  } // no need to switch if playlist is the same\n\n  if (nextPlaylist.id === currentPlaylist.id) {\n    return false;\n  } // determine if current time is in a buffered range.\n\n  const isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n  if (!currentPlaylist.endList) {\n    // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n    // doubles the time to first playback.\n    if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n      log(`not ${sharedLogLine} as current playlist is live llhls, but currentTime isn't in buffered.`);\n      return false;\n    }\n    log(`${sharedLogLine} as current playlist is live`);\n    return true;\n  }\n  const forwardBuffer = timeAheadOf(buffered, currentTime);\n  const maxBufferLowWaterLine = bufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n  if (duration < maxBufferLowWaterLine) {\n    log(`${sharedLogLine} as duration < max low water line (${duration} < ${maxBufferLowWaterLine})`);\n    return true;\n  }\n  const nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n  const currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n  // we can switch down\n\n  if (nextBandwidth < currBandwidth && (!bufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n    let logLine = `${sharedLogLine} as next bandwidth < current bandwidth (${nextBandwidth} < ${currBandwidth})`;\n    if (bufferBasedABR) {\n      logLine += ` and forwardBuffer < bufferHighWaterLine (${forwardBuffer} < ${bufferHighWaterLine})`;\n    }\n    log(logLine);\n    return true;\n  } // and if our buffer is higher than the low water line,\n  // we can switch up\n\n  if ((!bufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n    let logLine = `${sharedLogLine} as forwardBuffer >= bufferLowWaterLine (${forwardBuffer} >= ${bufferLowWaterLine})`;\n    if (bufferBasedABR) {\n      logLine += ` and next bandwidth > current bandwidth (${nextBandwidth} > ${currBandwidth})`;\n    }\n    log(logLine);\n    return true;\n  }\n  log(`not ${sharedLogLine} as no switching criteria met`);\n  return false;\n};\n/**\n * the main playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a main playlist and a series of audio playlists\n * if they are available\n *\n * @class PlaylistController\n * @extends videojs.EventTarget\n */\n\nclass PlaylistController extends videojs.EventTarget {\n  constructor(options) {\n    super();\n    const {\n      src,\n      withCredentials,\n      tech,\n      bandwidth,\n      externVhs,\n      useCueTags,\n      playlistExclusionDuration,\n      enableLowInitialPlaylist,\n      sourceType,\n      cacheEncryptionKeys,\n      bufferBasedABR,\n      leastPixelDiffSelector,\n      captionServices\n    } = options;\n    if (!src) {\n      throw new Error('A non-empty playlist URL or JSON manifest string is required');\n    }\n    let {\n      maxPlaylistRetries\n    } = options;\n    if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n      maxPlaylistRetries = Infinity;\n    }\n    Vhs$1 = externVhs;\n    this.bufferBasedABR = Boolean(bufferBasedABR);\n    this.leastPixelDiffSelector = Boolean(leastPixelDiffSelector);\n    this.withCredentials = withCredentials;\n    this.tech_ = tech;\n    this.vhs_ = tech.vhs;\n    this.sourceType_ = sourceType;\n    this.useCueTags_ = useCueTags;\n    this.playlistExclusionDuration = playlistExclusionDuration;\n    this.maxPlaylistRetries = maxPlaylistRetries;\n    this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (this.useCueTags_) {\n      this.cueTagsTrack_ = this.tech_.addTextTrack('metadata', 'ad-cues');\n      this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n    this.requestOptions_ = {\n      withCredentials,\n      maxPlaylistRetries,\n      timeout: null\n    };\n    this.on('error', this.pauseLoading);\n    this.mediaTypes_ = createMediaTypes();\n    this.mediaSource = new window$1.MediaSource();\n    this.handleDurationChange_ = this.handleDurationChange_.bind(this);\n    this.handleSourceOpen_ = this.handleSourceOpen_.bind(this);\n    this.handleSourceEnded_ = this.handleSourceEnded_.bind(this);\n    this.mediaSource.addEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.addEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.addEventListener('sourceended', this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n    // everything, and the MediaSource should not be detached without a proper disposal\n\n    this.seekable_ = createTimeRanges();\n    this.hasPlayed_ = false;\n    this.syncController_ = new SyncController(options);\n    this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    this.decrypter_ = new Decrypter();\n    this.sourceUpdater_ = new SourceUpdater(this.mediaSource);\n    this.inbandTextTracks_ = {};\n    this.timelineChangeController_ = new TimelineChangeController();\n    const segmentLoaderSettings = {\n      vhs: this.vhs_,\n      parse708captions: options.parse708captions,\n      useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n      captionServices,\n      mediaSource: this.mediaSource,\n      currentTime: this.tech_.currentTime.bind(this.tech_),\n      seekable: () => this.seekable(),\n      seeking: () => this.tech_.seeking(),\n      duration: () => this.duration(),\n      hasPlayed: () => this.hasPlayed_,\n      goalBufferLength: () => this.goalBufferLength(),\n      bandwidth,\n      syncController: this.syncController_,\n      decrypter: this.decrypter_,\n      sourceType: this.sourceType_,\n      inbandTextTracks: this.inbandTextTracks_,\n      cacheEncryptionKeys,\n      sourceUpdater: this.sourceUpdater_,\n      timelineChangeController: this.timelineChangeController_,\n      exactManifestTimings: options.exactManifestTimings\n    }; // The source type check not only determines whether a special DASH playlist loader\n    // should be used, but also covers the case where the provided src is a vhs-json\n    // manifest object (instead of a URL). In the case of vhs-json, the default\n    // PlaylistLoader should be used.\n\n    this.mainPlaylistLoader_ = this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, this.vhs_, this.requestOptions_) : new PlaylistLoader(src, this.vhs_, this.requestOptions_);\n    this.setupMainPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n    this.mainSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      segmentMetadataTrack: this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    this.audioSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    this.subtitleSegmentLoader_ = new VTTSegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: this.tech_.featuresNativeTextTracks\n    }), options);\n    this.setupSegmentLoaderListeners_();\n    if (this.bufferBasedABR) {\n      this.mainPlaylistLoader_.one('loadedplaylist', () => this.startABRTimer_());\n      this.tech_.on('pause', () => this.stopABRTimer_());\n      this.tech_.on('play', () => this.startABRTimer_());\n    } // Create SegmentLoader stat-getters\n    // mediaRequests_\n    // mediaRequestsAborted_\n    // mediaRequestsTimedout_\n    // mediaRequestsErrored_\n    // mediaTransferDuration_\n    // mediaBytesTransferred_\n    // mediaAppends_\n\n    loaderStats.forEach(stat => {\n      this[stat + '_'] = sumLoaderStat.bind(this, stat);\n    });\n    this.logger_ = logger('pc');\n    this.triggeredFmp4Usage = false;\n    if (this.tech_.preload() === 'none') {\n      this.loadOnPlay_ = () => {\n        this.loadOnPlay_ = null;\n        this.mainPlaylistLoader_.load();\n      };\n      this.tech_.one('play', this.loadOnPlay_);\n    } else {\n      this.mainPlaylistLoader_.load();\n    }\n    this.timeToLoadedData__ = -1;\n    this.mainAppendsToLoadedData__ = -1;\n    this.audioAppendsToLoadedData__ = -1;\n    const event = this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n    this.tech_.one(event, () => {\n      const timeToLoadedDataStart = Date.now();\n      this.tech_.one('loadeddata', () => {\n        this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n        this.mainAppendsToLoadedData__ = this.mainSegmentLoader_.mediaAppends;\n        this.audioAppendsToLoadedData__ = this.audioSegmentLoader_.mediaAppends;\n      });\n    });\n  }\n  mainAppendsToLoadedData_() {\n    return this.mainAppendsToLoadedData__;\n  }\n  audioAppendsToLoadedData_() {\n    return this.audioAppendsToLoadedData__;\n  }\n  appendsToLoadedData_() {\n    const main = this.mainAppendsToLoadedData_();\n    const audio = this.audioAppendsToLoadedData_();\n    if (main === -1 || audio === -1) {\n      return -1;\n    }\n    return main + audio;\n  }\n  timeToLoadedData_() {\n    return this.timeToLoadedData__;\n  }\n  /**\n   * Run selectPlaylist and switch to the new playlist if we should\n   *\n   * @param {string} [reason=abr] a reason for why the ABR check is made\n   * @private\n   */\n\n  checkABR_(reason = 'abr') {\n    const nextPlaylist = this.selectPlaylist();\n    if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n      this.switchMedia_(nextPlaylist, reason);\n    }\n  }\n  switchMedia_(playlist, cause, delay) {\n    const oldMedia = this.media();\n    const oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n    const newId = playlist.id || playlist.uri;\n    if (oldId && oldId !== newId) {\n      this.logger_(`switch media ${oldId} -> ${newId} from ${cause}`);\n      this.tech_.trigger({\n        type: 'usage',\n        name: `vhs-rendition-change-${cause}`\n      });\n    }\n    this.mainPlaylistLoader_.media(playlist, delay);\n  }\n  /**\n   * Start a timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  startABRTimer_() {\n    this.stopABRTimer_();\n    this.abrTimer_ = window$1.setInterval(() => this.checkABR_(), 250);\n  }\n  /**\n   * Stop the timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  stopABRTimer_() {\n    // if we're scrubbing, we don't need to pause.\n    // This getter will be added to Video.js in version 7.11.\n    if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n      return;\n    }\n    window$1.clearInterval(this.abrTimer_);\n    this.abrTimer_ = null;\n  }\n  /**\n   * Get a list of playlists for the currently selected audio playlist\n   *\n   * @return {Array} the array of audio playlists\n   */\n\n  getAudioTrackPlaylists_() {\n    const main = this.main();\n    const defaultPlaylists = main && main.playlists || []; // if we don't have any audio groups then we can only\n    // assume that the audio tracks are contained in main\n    // playlist array, use that or an empty array.\n\n    if (!main || !main.mediaGroups || !main.mediaGroups.AUDIO) {\n      return defaultPlaylists;\n    }\n    const AUDIO = main.mediaGroups.AUDIO;\n    const groupKeys = Object.keys(AUDIO);\n    let track; // get the current active track\n\n    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n      track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from main if mediaTypes_ isn't setup yet\n    } else {\n      // default group is `main` or just the first group.\n      const defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n      for (const label in defaultGroup) {\n        if (defaultGroup[label].default) {\n          track = {\n            label\n          };\n          break;\n        }\n      }\n    } // no active track no playlists.\n\n    if (!track) {\n      return defaultPlaylists;\n    }\n    const playlists = []; // get all of the playlists that are possible for the\n    // active track.\n\n    for (const group in AUDIO) {\n      if (AUDIO[group][track.label]) {\n        const properties = AUDIO[group][track.label];\n        if (properties.playlists && properties.playlists.length) {\n          playlists.push.apply(playlists, properties.playlists);\n        } else if (properties.uri) {\n          playlists.push(properties);\n        } else if (main.playlists.length) {\n          // if an audio group does not have a uri\n          // see if we have main playlists that use it as a group.\n          // if we do then add those to the playlists list.\n          for (let i = 0; i < main.playlists.length; i++) {\n            const playlist = main.playlists[i];\n            if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n              playlists.push(playlist);\n            }\n          }\n        }\n      }\n    }\n    if (!playlists.length) {\n      return defaultPlaylists;\n    }\n    return playlists;\n  }\n  /**\n   * Register event handlers on the main playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  setupMainPlaylistLoaderListeners_() {\n    this.mainPlaylistLoader_.on('loadedmetadata', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      } // if this isn't a live video and preload permits, start\n      // downloading segments\n\n      if (media.endList && this.tech_.preload() !== 'none') {\n        this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n        this.mainSegmentLoader_.load();\n      }\n      setupMediaGroups({\n        sourceType: this.sourceType_,\n        segmentLoaders: {\n          AUDIO: this.audioSegmentLoader_,\n          SUBTITLES: this.subtitleSegmentLoader_,\n          main: this.mainSegmentLoader_\n        },\n        tech: this.tech_,\n        requestOptions: this.requestOptions_,\n        mainPlaylistLoader: this.mainPlaylistLoader_,\n        vhs: this.vhs_,\n        main: this.main(),\n        mediaTypes: this.mediaTypes_,\n        excludePlaylist: this.excludePlaylist.bind(this)\n      });\n      this.triggerPresenceUsage_(this.main(), media);\n      this.setupFirstPlay();\n      if (!this.mediaTypes_.AUDIO.activePlaylistLoader || this.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n        this.trigger('selectedinitialmedia');\n      } else {\n        // We must wait for the active audio playlist loader to\n        // finish setting up before triggering this event so the\n        // representations API and EME setup is correct\n        this.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', () => {\n          this.trigger('selectedinitialmedia');\n        });\n      }\n    });\n    this.mainPlaylistLoader_.on('loadedplaylist', () => {\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n      let updatedPlaylist = this.mainPlaylistLoader_.media();\n      if (!updatedPlaylist) {\n        // exclude any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n        this.excludeUnsupportedVariants_();\n        let selectedMedia;\n        if (this.enableLowInitialPlaylist) {\n          selectedMedia = this.selectInitialPlaylist();\n        }\n        if (!selectedMedia) {\n          selectedMedia = this.selectPlaylist();\n        }\n        if (!selectedMedia || !this.shouldSwitchToMedia_(selectedMedia)) {\n          return;\n        }\n        this.initialMedia_ = selectedMedia;\n        this.switchMedia_(this.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n        // fire again since the playlist will be requested. In the case of vhs-json\n        // (where the manifest object is provided as the source), when the media\n        // playlist's `segments` list is already available, a media playlist won't be\n        // requested, and loadedplaylist won't fire again, so the playlist handler must be\n        // called on its own here.\n\n        const haveJsonSource = this.sourceType_ === 'vhs-json' && this.initialMedia_.segments;\n        if (!haveJsonSource) {\n          return;\n        }\n        updatedPlaylist = this.initialMedia_;\n      }\n      this.handleUpdatedMediaPlaylist(updatedPlaylist);\n    });\n    this.mainPlaylistLoader_.on('error', () => {\n      const error = this.mainPlaylistLoader_.error;\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainPlaylistLoader_.on('mediachanging', () => {\n      this.mainSegmentLoader_.abort();\n      this.mainSegmentLoader_.pause();\n    });\n    this.mainPlaylistLoader_.on('mediachange', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      }\n      this.mainPlaylistLoader_.load(); // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n\n      this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n      this.mainSegmentLoader_.load();\n      this.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n    this.mainPlaylistLoader_.on('playlistunchanged', () => {\n      const updatedPlaylist = this.mainPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n      // excluded for not-changing. We likely just have a really slowly updating\n      // playlist.\n\n      if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n        return;\n      }\n      const playlistOutdated = this.stuckAtPlaylistEnd_(updatedPlaylist);\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // exclude it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        this.excludePlaylist({\n          error: {\n            message: 'Playlist no longer updating.',\n            reason: 'playlist-unchanged'\n          }\n        }); // useful for monitoring QoS\n\n        this.tech_.trigger('playliststuck');\n      }\n    });\n    this.mainPlaylistLoader_.on('renditiondisabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-disabled'\n      });\n    });\n    this.mainPlaylistLoader_.on('renditionenabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-enabled'\n      });\n    });\n  }\n  /**\n   * Given an updated media playlist (whether it was loaded for the first time, or\n   * refreshed for live playlists), update any relevant properties and state to reflect\n   * changes in the media that should be accounted for (e.g., cues and duration).\n   *\n   * @param {Object} updatedPlaylist the updated media playlist object\n   *\n   * @private\n   */\n\n  handleUpdatedMediaPlaylist(updatedPlaylist) {\n    if (this.useCueTags_) {\n      this.updateAdCues_(updatedPlaylist);\n    } // TODO: Create a new event on the PlaylistLoader that signals\n    // that the segments have changed in some way and use that to\n    // update the SegmentLoader instead of doing it twice here and\n    // on `mediachange`\n\n    this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n    this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n    // as it is possible that it was temporarily stopped while waiting for\n    // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n    if (!this.tech_.paused()) {\n      this.mainSegmentLoader_.load();\n      if (this.audioSegmentLoader_) {\n        this.audioSegmentLoader_.load();\n      }\n    }\n  }\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n\n  triggerPresenceUsage_(main, media) {\n    const mediaGroups = main.mediaGroups || {};\n    let defaultDemuxed = true;\n    const audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n    for (const mediaGroup in mediaGroups.AUDIO) {\n      for (const label in mediaGroups.AUDIO[mediaGroup]) {\n        const properties = mediaGroups.AUDIO[mediaGroup][label];\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n    if (defaultDemuxed) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-demuxed'\n      });\n    }\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-webvtt'\n      });\n    }\n    if (Vhs$1.Playlist.isAes(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-aes'\n      });\n    }\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-alternate-audio'\n      });\n    }\n    if (this.useCueTags_) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-playlist-cue-tags'\n      });\n    }\n  }\n  shouldSwitchToMedia_(nextPlaylist) {\n    const currentPlaylist = this.mainPlaylistLoader_.media() || this.mainPlaylistLoader_.pendingMedia_;\n    const currentTime = this.tech_.currentTime();\n    const bufferLowWaterLine = this.bufferLowWaterLine();\n    const bufferHighWaterLine = this.bufferHighWaterLine();\n    const buffered = this.tech_.buffered();\n    return shouldSwitchToMedia({\n      buffered,\n      currentTime,\n      currentPlaylist,\n      nextPlaylist,\n      bufferLowWaterLine,\n      bufferHighWaterLine,\n      duration: this.duration(),\n      bufferBasedABR: this.bufferBasedABR,\n      log: this.logger_\n    });\n  }\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n\n  setupSegmentLoaderListeners_() {\n    this.mainSegmentLoader_.on('bandwidthupdate', () => {\n      // Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's\n      // useful to check to see if a rendition switch should be made.\n      this.checkABR_('bandwidthupdate');\n      this.tech_.trigger('bandwidthupdate');\n    });\n    this.mainSegmentLoader_.on('timeout', () => {\n      if (this.bufferBasedABR) {\n        // If a rendition change is needed, then it would've be done on `bandwidthupdate`.\n        // Here the only consideration is that for buffer based ABR there's no guarantee\n        // of an immediate switch (since the bandwidth is averaged with a timeout\n        // bandwidth value of 1), so force a load on the segment loader to keep it going.\n        this.mainSegmentLoader_.load();\n      }\n    }); // `progress` events are not reliable enough of a bandwidth measure to trigger buffer\n    // based ABR.\n\n    if (!this.bufferBasedABR) {\n      this.mainSegmentLoader_.on('progress', () => {\n        this.trigger('progress');\n      });\n    }\n    this.mainSegmentLoader_.on('error', () => {\n      const error = this.mainSegmentLoader_.error();\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainSegmentLoader_.on('appenderror', () => {\n      this.error = this.mainSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('timestampoffset', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-timestamp-offset'\n      });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.audioSegmentLoader_.on('appenderror', () => {\n      this.error = this.audioSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('ended', () => {\n      this.logger_('main segment loader ended');\n      this.onEndOfStream();\n    });\n    this.mainSegmentLoader_.on('earlyabort', event => {\n      // never try to early abort with the new ABR algorithm\n      if (this.bufferBasedABR) {\n        return;\n      }\n      this.delegateLoaders_('all', ['abort']);\n      this.excludePlaylist({\n        error: {\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete ' + 'the request without rebuffering.'\n        },\n        playlistExclusionDuration: ABORT_EARLY_EXCLUSION_SECONDS\n      });\n    });\n    const updateCodecs = () => {\n      if (!this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return this.tryToCreateSourceBuffers_();\n      }\n      const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n      this.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n    };\n    this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n    this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n    this.mainSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('ended', () => {\n      this.logger_('audioSegmentLoader ended');\n      this.onEndOfStream();\n    });\n  }\n  mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  }\n  /**\n   * Call load on our SegmentLoaders\n   */\n\n  load() {\n    this.mainSegmentLoader_.load();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method will perform destructive actions like removing\n   * already buffered content in order to readjust the currently active\n   * playlist quickly. This is good for manual quality changes\n   *\n   * @private\n   */\n\n  fastQualityChange_(media = this.selectPlaylist()) {\n    if (media === this.mainPlaylistLoader_.media()) {\n      this.logger_('skipping fastQualityChange because new media is same as old');\n      return;\n    }\n    this.switchMedia_(media, 'fast-quality'); // Delete all buffered data to allow an immediate quality switch, then seek to give\n    // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n    // ahead is roughly the minimum that will accomplish this across a variety of content\n    // in IE and Edge, but seeking in place is sufficient on all other browsers)\n    // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n    // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n    this.mainSegmentLoader_.resetEverything(() => {\n      // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n      // from the previously enabled rendition to load before the new playlist has finished loading\n      if (videojs.browser.IE_VERSION || videojs.browser.IS_EDGE) {\n        this.tech_.setCurrentTime(this.tech_.currentTime() + 0.04);\n      } else {\n        this.tech_.setCurrentTime(this.tech_.currentTime());\n      }\n    }); // don't need to reset audio as it is reset when media changes\n  }\n  /**\n   * Begin playback.\n   */\n\n  play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n    if (this.hasPlayed_) {\n      this.load();\n    }\n    const seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable.start(0)) {\n        return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n      }\n    }\n  }\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n\n  setupFirstPlay() {\n    const media = this.mainPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n\n    if (!media || this.tech_.paused() || this.hasPlayed_) {\n      return false;\n    } // when the video is a live stream\n\n    if (!media.endList) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the live\n        // point\n        return false;\n      }\n      if (videojs.browser.IE_VERSION && this.tech_.readyState() === 0) {\n        // IE11 throws an InvalidStateError if you try to set currentTime while the\n        // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n        this.tech_.one('loadedmetadata', () => {\n          this.trigger('firstplay');\n          this.tech_.setCurrentTime(seekable.end(0));\n          this.hasPlayed_ = true;\n        });\n        return false;\n      } // trigger firstplay to inform the source handler to ignore the next seek event\n\n      this.trigger('firstplay'); // seek to the live point\n\n      this.tech_.setCurrentTime(seekable.end(0));\n    }\n    this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n    this.load();\n    return true;\n  }\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n\n    if (this.tech_.autoplay()) {\n      const playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, e => {});\n      }\n    }\n    this.trigger('sourceopen');\n  }\n  /**\n   * handle the sourceended event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceEnded_() {\n    if (!this.inbandTextTracks_.metadataTrack_) {\n      return;\n    }\n    const cues = this.inbandTextTracks_.metadataTrack_.cues;\n    if (!cues || !cues.length) {\n      return;\n    }\n    const duration = this.duration();\n    cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n  }\n  /**\n   * handle the durationchange event on the MediaSource\n   *\n   * @private\n   */\n\n  handleDurationChange_() {\n    this.tech_.trigger('durationchange');\n  }\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n\n  onEndOfStream() {\n    let isEndOfStream = this.mainSegmentLoader_.ended_;\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      const mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n      if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n    if (!isEndOfStream) {\n      return;\n    }\n    this.stopABRTimer_();\n    this.sourceUpdater_.endOfStream();\n  }\n  /**\n   * Check if a playlist has stopped being updated\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n\n  stuckAtPlaylistEnd_(playlist) {\n    const seekable = this.seekable();\n    if (!seekable.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n    const expired = this.syncController_.getExpiredTime(playlist, this.duration());\n    if (expired === null) {\n      return false;\n    } // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n\n    const absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n    const bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  }\n  /**\n   * Exclude a playlist for a set amount of time, making it unavailable for selection by\n   * the rendition selection algorithm, then force a new playlist (rendition) selection.\n   *\n   * @param {Object=} playlistToExclude\n   *                  the playlist to exclude, defaults to the currently selected playlist\n   * @param {Object=} error\n   *                  an optional error\n   * @param {number=} playlistExclusionDuration\n   *                  an optional number of seconds to exclude the playlist\n   */\n\n  excludePlaylist({\n    playlistToExclude = this.mainPlaylistLoader_.media(),\n    error = {},\n    playlistExclusionDuration\n  }) {\n    // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // excluded instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n    playlistToExclude = playlistToExclude || this.mainPlaylistLoader_.media();\n    playlistExclusionDuration = playlistExclusionDuration || error.playlistExclusionDuration || this.playlistExclusionDuration; // If there is no current playlist, then an error occurred while we were\n    // trying to load the main OR while we were disposing of the tech\n\n    if (!playlistToExclude) {\n      this.error = error;\n      if (this.mediaSource.readyState !== 'open') {\n        this.trigger('error');\n      } else {\n        this.sourceUpdater_.endOfStream('network');\n      }\n      return;\n    }\n    playlistToExclude.playlistErrors_++;\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const enabledPlaylists = playlists.filter(isEnabled);\n    const isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === playlistToExclude; // Don't exclude the only playlist unless it was excluded\n    // forever\n\n    if (playlists.length === 1 && playlistExclusionDuration !== Infinity) {\n      videojs.log.warn(`Problem encountered with playlist ${playlistToExclude.id}. ` + 'Trying again since it is the only playlist.');\n      this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n      return this.mainPlaylistLoader_.load(isFinalRendition);\n    }\n    if (isFinalRendition) {\n      // Since we're on the final non-excluded playlist, and we're about to exclude\n      // it, instead of erring the player or retrying this playlist, clear out the current\n      // exclusion list. This allows other playlists to be attempted in case any have been\n      // fixed.\n      let reincluded = false;\n      playlists.forEach(playlist => {\n        // skip current playlist which is about to be excluded\n        if (playlist === playlistToExclude) {\n          return;\n        }\n        const excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n        if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n          reincluded = true;\n          delete playlist.excludeUntil;\n        }\n      });\n      if (reincluded) {\n        videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      }\n    } // Exclude this playlist\n\n    let excludeUntil;\n    if (playlistToExclude.playlistErrors_ > this.maxPlaylistRetries) {\n      excludeUntil = Infinity;\n    } else {\n      excludeUntil = Date.now() + playlistExclusionDuration * 1000;\n    }\n    playlistToExclude.excludeUntil = excludeUntil;\n    if (error.reason) {\n      playlistToExclude.lastExcludeReason_ = error.reason;\n    }\n    this.tech_.trigger('excludeplaylist');\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-rendition-excluded'\n    }); // TODO: only load a new playlist if we're excluding the current playlist\n    // If this function was called with a playlist that's not the current active playlist\n    // (e.g., media().id !== playlistToExclude.id),\n    // then a new playlist should not be selected and loaded, as there's nothing wrong with the current playlist.\n\n    const nextPlaylist = this.selectPlaylist();\n    if (!nextPlaylist) {\n      this.error = 'Playback cannot continue. No available working or supported playlists.';\n      this.trigger('error');\n      return;\n    }\n    const logFn = error.internal ? this.logger_ : videojs.log.warn;\n    const errorMessage = error.message ? ' ' + error.message : '';\n    logFn(`${error.internal ? 'Internal problem' : 'Problem'} encountered with playlist ${playlistToExclude.id}.` + `${errorMessage} Switching to playlist ${nextPlaylist.id}.`); // if audio group changed reset audio loaders\n\n    if (nextPlaylist.attributes.AUDIO !== playlistToExclude.attributes.AUDIO) {\n      this.delegateLoaders_('audio', ['abort', 'pause']);\n    } // if subtitle group changed reset subtitle loaders\n\n    if (nextPlaylist.attributes.SUBTITLES !== playlistToExclude.attributes.SUBTITLES) {\n      this.delegateLoaders_('subtitle', ['abort', 'pause']);\n    }\n    this.delegateLoaders_('main', ['abort', 'pause']);\n    const delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n    const shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n    return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n  }\n  /**\n   * Pause all segment/playlist loaders\n   */\n\n  pauseLoading() {\n    this.delegateLoaders_('all', ['abort', 'pause']);\n    this.stopABRTimer_();\n  }\n  /**\n   * Call a set of functions in order on playlist loaders, segment loaders,\n   * or both types of loaders.\n   *\n   * @param {string} filter\n   *        Filter loaders that should call fnNames using a string. Can be:\n   *        * all - run on all loaders\n   *        * audio - run on all audio loaders\n   *        * subtitle - run on all subtitle loaders\n   *        * main - run on the main loaders\n   *\n   * @param {Array|string} fnNames\n   *        A string or array of function names to call.\n   */\n\n  delegateLoaders_(filter, fnNames) {\n    const loaders = [];\n    const dontFilterPlaylist = filter === 'all';\n    if (dontFilterPlaylist || filter === 'main') {\n      loaders.push(this.mainPlaylistLoader_);\n    }\n    const mediaTypes = [];\n    if (dontFilterPlaylist || filter === 'audio') {\n      mediaTypes.push('AUDIO');\n    }\n    if (dontFilterPlaylist || filter === 'subtitle') {\n      mediaTypes.push('CLOSED-CAPTIONS');\n      mediaTypes.push('SUBTITLES');\n    }\n    mediaTypes.forEach(mediaType => {\n      const loader = this.mediaTypes_[mediaType] && this.mediaTypes_[mediaType].activePlaylistLoader;\n      if (loader) {\n        loaders.push(loader);\n      }\n    });\n    ['main', 'audio', 'subtitle'].forEach(name => {\n      const loader = this[`${name}SegmentLoader_`];\n      if (loader && (filter === name || filter === 'all')) {\n        loaders.push(loader);\n      }\n    });\n    loaders.forEach(loader => fnNames.forEach(fnName => {\n      if (typeof loader[fnName] === 'function') {\n        loader[fnName]();\n      }\n    }));\n  }\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n\n  setCurrentTime(currentTime) {\n    const buffered = findRange(this.tech_.buffered(), currentTime);\n    if (!(this.mainPlaylistLoader_ && this.mainPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    } // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n\n    if (!this.mainPlaylistLoader_.media().segments) {\n      return 0;\n    } // if the seek location is already buffered, continue buffering as usual\n\n    if (buffered && buffered.length) {\n      return currentTime;\n    } // cancel outstanding requests so we begin buffering at the new\n    // location\n\n    this.mainSegmentLoader_.resetEverything();\n    this.mainSegmentLoader_.abort();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.resetEverything();\n      this.audioSegmentLoader_.abort();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.resetEverything();\n      this.subtitleSegmentLoader_.abort();\n    } // start segment loader loading in case they are paused\n\n    this.load();\n  }\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n\n  duration() {\n    if (!this.mainPlaylistLoader_) {\n      return 0;\n    }\n    const media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      // no playlists loaded yet, so can't determine a duration\n      return 0;\n    } // Don't rely on the media source for duration in the case of a live playlist since\n    // setting the native MediaSource's duration to infinity ends up with consequences to\n    // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n    //\n    // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n    // however, few browsers have support for setLiveSeekableRange()\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n    //\n    // Until a time when the duration of the media source can be set to infinity, and a\n    // seekable range specified across browsers, just return Infinity.\n\n    if (!media.endList) {\n      return Infinity;\n    } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n    // available). If it's not available, fall back to a playlist-calculated estimate.\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n    return Vhs$1.Playlist.duration(media);\n  }\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n\n  seekable() {\n    return this.seekable_;\n  }\n  onSyncInfoUpdate_() {\n    let audioSeekable; // TODO check for creation of both source buffers before updating seekable\n    //\n    // A fix was made to this function where a check for\n    // this.sourceUpdater_.hasCreatedSourceBuffers\n    // was added to ensure that both source buffers were created before seekable was\n    // updated. However, it originally had a bug where it was checking for a true and\n    // returning early instead of checking for false. Setting it to check for false to\n    // return early though created other issues. A call to play() would check for seekable\n    // end without verifying that a seekable range was present. In addition, even checking\n    // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n    // due to a media update calling load on the segment loaders, skipping a seek to live,\n    // thereby starting live streams at the beginning of the stream rather than at the end.\n    //\n    // This conditional should be fixed to wait for the creation of two source buffers at\n    // the same time as the other sections of code are fixed to properly seek to live and\n    // not throw an error due to checking for a seekable end when no seekable range exists.\n    //\n    // For now, fall back to the older behavior, with the understanding that the seekable\n    // range may not be completely correct, leading to a suboptimal initial live point.\n\n    if (!this.mainPlaylistLoader_) {\n      return;\n    }\n    let media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      return;\n    }\n    let expired = this.syncController_.getExpiredTime(media, this.duration());\n    if (expired === null) {\n      // not enough information to update seekable\n      return;\n    }\n    const main = this.mainPlaylistLoader_.main;\n    const mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n    if (mainSeekable.length === 0) {\n      return;\n    }\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n      expired = this.syncController_.getExpiredTime(media, this.duration());\n      if (expired === null) {\n        return;\n      }\n      audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n      if (audioSeekable.length === 0) {\n        return;\n      }\n    }\n    let oldEnd;\n    let oldStart;\n    if (this.seekable_ && this.seekable_.length) {\n      oldEnd = this.seekable_.end(0);\n      oldStart = this.seekable_.start(0);\n    }\n    if (!audioSeekable) {\n      // seekable has been calculated based on buffering video data so it\n      // can be returned directly\n      this.seekable_ = mainSeekable;\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n      // seekables are pretty far off, rely on main\n      this.seekable_ = mainSeekable;\n    } else {\n      this.seekable_ = createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    } // seekable is the same as last time\n\n    if (this.seekable_ && this.seekable_.length) {\n      if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n        return;\n      }\n    }\n    this.logger_(`seekable updated [${printableRange(this.seekable_)}]`);\n    this.tech_.trigger('seekablechanged');\n  }\n  /**\n   * Update the player duration\n   */\n\n  updateDuration(isLive) {\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      this.updateDuration_ = null;\n    }\n    if (this.mediaSource.readyState !== 'open') {\n      this.updateDuration_ = this.updateDuration.bind(this, isLive);\n      this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n      return;\n    }\n    if (isLive) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        return;\n      } // Even in the case of a live playlist, the native MediaSource's duration should not\n      // be set to Infinity (even though this would be expected for a live playlist), since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, the duration should be greater than or\n      // equal to the last possible seekable value.\n      // MediaSource duration starts as NaN\n      // It is possible (and probable) that this case will never be reached for many\n      // sources, since the MediaSource reports duration as the highest value without\n      // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n      // we buffered times 0 to 100 with real times of 100 to 200, even though current\n      // time will be between 0 and 100, the native media source may report the duration\n      // as 200. However, since we report duration separate from the media source (as\n      // Infinity), and as long as the native media source duration value is greater than\n      // our reported seekable range, seeks will work as expected. The large number as\n      // duration for live is actually a strategy used by some players to work around the\n      // issue of live seekable ranges cited above.\n\n      if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n        this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n      }\n      return;\n    }\n    const buffered = this.tech_.buffered();\n    let duration = Vhs$1.Playlist.duration(this.mainPlaylistLoader_.media());\n    if (buffered.length > 0) {\n      duration = Math.max(duration, buffered.end(buffered.length - 1));\n    }\n    if (this.mediaSource.duration !== duration) {\n      this.sourceUpdater_.setDuration(duration);\n    }\n  }\n  /**\n   * dispose of the PlaylistController and everything\n   * that it controls\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.decrypter_.terminate();\n    this.mainPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n    if (this.loadOnPlay_) {\n      this.tech_.off('play', this.loadOnPlay_);\n    }\n    ['AUDIO', 'SUBTITLES'].forEach(type => {\n      const groups = this.mediaTypes_[type].groups;\n      for (const id in groups) {\n        groups[id].forEach(group => {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n    this.sourceUpdater_.dispose();\n    this.timelineChangeController_.dispose();\n    this.stopABRTimer_();\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n    }\n    this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n    this.off();\n  }\n  /**\n   * return the main playlist object if we have one\n   *\n   * @return {Object} the main playlist object that we parsed\n   */\n\n  main() {\n    return this.mainPlaylistLoader_.main;\n  }\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n\n  media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.mainPlaylistLoader_.media() || this.initialMedia_;\n  }\n  areMediaTypesKnown_() {\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    const hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n    // otherwise check on the segment loader.\n\n    const hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n    if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n      return false;\n    }\n    return true;\n  }\n  getCodecsOrExclude_() {\n    const media = {\n      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n    }; // set \"main\" media equal to video\n\n    media.video = media.main;\n    const playlistCodecs = codecsForPlaylist(this.main(), this.media());\n    const codecs = {};\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    if (media.main.hasVideo) {\n      codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n    }\n    if (media.main.isMuxed) {\n      codecs.video += `,${playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC}`;\n    }\n    if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n      codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n      media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n    } // no codecs, no playback.\n\n    if (!codecs.audio && !codecs.video) {\n      this.excludePlaylist({\n        playlistToExclude: this.media(),\n        error: {\n          message: 'Could not determine codecs for playlist.'\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // fmp4 relies on browser support, while ts relies on muxer support\n\n    const supportFunction = (isFmp4, codec) => isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n    const unsupportedCodecs = {};\n    let unsupportedAudio;\n    ['video', 'audio'].forEach(function (type) {\n      if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n        const supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n        unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n        unsupportedCodecs[supporter].push(codecs[type]);\n        if (type === 'audio') {\n          unsupportedAudio = supporter;\n        }\n      }\n    });\n    if (usingAudioLoader && unsupportedAudio && this.media().attributes.AUDIO) {\n      const audioGroup = this.media().attributes.AUDIO;\n      this.main().playlists.forEach(variant => {\n        const variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n        if (variantAudioGroup === audioGroup && variant !== this.media()) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n      this.logger_(`excluding audio group ${audioGroup} as ${unsupportedAudio} does not support codec(s): \"${codecs.audio}\"`);\n    } // if we have any unsupported codecs exclude this playlist.\n\n    if (Object.keys(unsupportedCodecs).length) {\n      const message = Object.keys(unsupportedCodecs).reduce((acc, supporter) => {\n        if (acc) {\n          acc += ', ';\n        }\n        acc += `${supporter} does not support codec(s): \"${unsupportedCodecs[supporter].join(',')}\"`;\n        return acc;\n      }, '') + '.';\n      this.excludePlaylist({\n        playlistToExclude: this.media(),\n        error: {\n          internal: true,\n          message\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // check if codec switching is happening\n\n    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n      const switchMessages = [];\n      ['video', 'audio'].forEach(type => {\n        const newCodec = (parseCodecs(this.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n        const oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n        if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n          switchMessages.push(`\"${this.sourceUpdater_.codecs[type]}\" -> \"${codecs[type]}\"`);\n        }\n      });\n      if (switchMessages.length) {\n        this.excludePlaylist({\n          playlistToExclude: this.media(),\n          error: {\n            message: `Codec switching not supported: ${switchMessages.join(', ')}.`,\n            internal: true\n          },\n          playlistExclusionDuration: Infinity\n        });\n        return;\n      }\n    } // TODO: when using the muxer shouldn't we just return\n    // the codecs that the muxer outputs?\n\n    return codecs;\n  }\n  /**\n   * Create source buffers and exlude any incompatible renditions.\n   *\n   * @private\n   */\n\n  tryToCreateSourceBuffers_() {\n    // media source is not ready yet or sourceBuffers are already\n    // created.\n    if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n      return;\n    }\n    if (!this.areMediaTypesKnown_()) {\n      return;\n    }\n    const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n    if (!codecs) {\n      return;\n    }\n    this.sourceUpdater_.createSourceBuffers(codecs);\n    const codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n    this.excludeIncompatibleVariants_(codecString);\n  }\n  /**\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\n   */\n\n  excludeUnsupportedVariants_() {\n    const playlists = this.main().playlists;\n    const ids = []; // TODO: why don't we have a property to loop through all\n    // playlist? Why did we ever mix indexes and keys?\n\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n\n      if (ids.indexOf(variant.id) !== -1) {\n        return;\n      }\n      ids.push(variant.id);\n      const codecs = codecsForPlaylist(this.main, variant);\n      const unsupported = [];\n      if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n        unsupported.push(`audio codec ${codecs.audio}`);\n      }\n      if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n        unsupported.push(`video codec ${codecs.video}`);\n      }\n      if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n        unsupported.push(`text codec ${codecs.text}`);\n      }\n      if (unsupported.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id} for unsupported: ${unsupported.join(', ')}`);\n      }\n    });\n  }\n  /**\n   * Exclude playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current main playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n\n  excludeIncompatibleVariants_(codecString) {\n    const ids = [];\n    const playlists = this.main().playlists;\n    const codecs = unwrapCodecList(parseCodecs(codecString));\n    const codecCount_ = codecCount(codecs);\n    const videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n    const audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n      // or it if it is already excluded forever.\n\n      if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n        return;\n      }\n      ids.push(variant.id);\n      const exclusionReasons = []; // get codecs from the playlist for this variant\n\n      const variantCodecs = codecsForPlaylist(this.mainPlaylistLoader_.main, variant);\n      const variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n      // variant is incompatible. Wait for mux.js to probe\n\n      if (!variantCodecs.audio && !variantCodecs.video) {\n        return;\n      } // TODO: we can support this by removing the\n      // old media source and creating a new one, but it will take some work.\n      // The number of streams cannot change\n\n      if (variantCodecCount !== codecCount_) {\n        exclusionReasons.push(`codec count \"${variantCodecCount}\" !== \"${codecCount_}\"`);\n      } // only exclude playlists by codec change, if codecs cannot switch\n      // during playback.\n\n      if (!this.sourceUpdater_.canChangeType()) {\n        const variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n        const variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n        if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n          exclusionReasons.push(`video codec \"${variantVideoDetails.type}\" !== \"${videoDetails.type}\"`);\n        } // the audio codec cannot change\n\n        if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n          exclusionReasons.push(`audio codec \"${variantAudioDetails.type}\" !== \"${audioDetails.type}\"`);\n        }\n      }\n      if (exclusionReasons.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id}: ${exclusionReasons.join(' && ')}`);\n      }\n    });\n  }\n  updateAdCues_(media) {\n    let offset = 0;\n    const seekable = this.seekable();\n    if (seekable.length) {\n      offset = seekable.start(0);\n    }\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  }\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {number} Desired forward buffer length in seconds\n   */\n\n  goalBufferLength() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.GOAL_BUFFER_LENGTH;\n    const rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    const max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n    return Math.min(initial + currentTime * rate, max);\n  }\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {number} Desired buffer low water line in seconds\n   */\n\n  bufferLowWaterLine() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.BUFFER_LOW_WATER_LINE;\n    const rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    const max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n    const newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n    return Math.min(initial + currentTime * rate, this.bufferBasedABR ? newMax : max);\n  }\n  bufferHighWaterLine() {\n    return Config.BUFFER_HIGH_WATER_LINE;\n  }\n}\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The main playlist loader\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\nconst enableFunction = (loader, playlistID, changePlaylistFn) => enable => {\n  const playlist = loader.main.playlists[playlistID];\n  const incompatible = isIncompatible(playlist);\n  const currentlyEnabled = isEnabled(playlist);\n  if (typeof enable === 'undefined') {\n    return currentlyEnabled;\n  }\n  if (enable) {\n    delete playlist.disabled;\n  } else {\n    playlist.disabled = true;\n  }\n  if (enable !== currentlyEnabled && !incompatible) {\n    // Ensure the outside world knows about our changes\n    changePlaylistFn();\n    if (enable) {\n      loader.trigger('renditionenabled');\n    } else {\n      loader.trigger('renditiondisabled');\n    }\n  }\n  return enable;\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nclass Representation {\n  constructor(vhsHandler, playlist, id) {\n    const {\n      playlistController_: pc\n    } = vhsHandler;\n    const qualityChangeFunction = pc.fastQualityChange_.bind(pc); // some playlist attributes are optional\n\n    if (playlist.attributes) {\n      const resolution = playlist.attributes.RESOLUTION;\n      this.width = resolution && resolution.width;\n      this.height = resolution && resolution.height;\n      this.bandwidth = playlist.attributes.BANDWIDTH;\n      this.frameRate = playlist.attributes['FRAME-RATE'];\n    }\n    this.codecs = codecsForPlaylist(pc.main(), playlist);\n    this.playlist = playlist; // The id is simply the ordinality of the media playlist\n    // within the main playlist\n\n    this.id = id; // Partially-apply the enableFunction to create a playlist-\n    // specific variant\n\n    this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n  }\n}\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the VhsHandler class\n *\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n * representation API into\n */\n\nconst renditionSelectionMixin = function (vhsHandler) {\n  // Add a single API-specific function to the VhsHandler instance\n  vhsHandler.representations = () => {\n    const main = vhsHandler.playlistController_.main();\n    const playlists = isAudioOnly(main) ? vhsHandler.playlistController_.getAudioTrackPlaylists_() : main.playlists;\n    if (!playlists) {\n      return [];\n    }\n    return playlists.filter(media => !isIncompatible(media)).map((e, i) => new Representation(vhsHandler, e, e.id));\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\nconst timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nclass PlaybackWatcher {\n  /**\n   * Represents an PlaybackWatcher object.\n   *\n   * @class\n   * @param {Object} options an object that includes the tech and settings\n   */\n  constructor(options) {\n    this.playlistController_ = options.playlistController;\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n    const playHandler = () => this.monitorCurrentTime_();\n    const canPlayHandler = () => this.monitorCurrentTime_();\n    const waitingHandler = () => this.techWaiting_();\n    const cancelTimerHandler = () => this.resetTimeUpdate_();\n    const pc = this.playlistController_;\n    const loaderTypes = ['main', 'subtitle', 'audio'];\n    const loaderChecks = {};\n    loaderTypes.forEach(type => {\n      loaderChecks[type] = {\n        reset: () => this.resetSegmentDownloads_(type),\n        updateend: () => this.checkSegmentDownloads_(type)\n      };\n      pc[`${type}SegmentLoader_`].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n      // isn't changing we want to reset. We cannot assume that the new rendition\n      // will also be stalled, until after new appends.\n\n      pc[`${type}SegmentLoader_`].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n      // This prevents one segment playlists (single vtt or single segment content)\n      // from being detected as stalling. As the buffer will not change in those cases, since\n      // the buffer is the entire video duration.\n\n      this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n    });\n    /**\n     * We check if a seek was into a gap through the following steps:\n     * 1. We get a seeking event and we do not get a seeked event. This means that\n     *    a seek was attempted but not completed.\n     * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n     *    removed everything from our buffer and appended a segment, and should be ready\n     *    to check for gaps.\n     */\n\n    const setSeekingHandlers = fn => {\n      ['main', 'audio'].forEach(type => {\n        pc[`${type}SegmentLoader_`][fn]('appended', this.seekingAppendCheck_);\n      });\n    };\n    this.seekingAppendCheck_ = () => {\n      if (this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        setSeekingHandlers('off');\n      }\n    };\n    this.clearSeekingAppendCheck_ = () => setSeekingHandlers('off');\n    this.watchForBadSeeking_ = () => {\n      this.clearSeekingAppendCheck_();\n      setSeekingHandlers('on');\n    };\n    this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n    this.tech_.on('seeking', this.watchForBadSeeking_);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n    /*\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n      is surfaced in one of two ways:\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\n          even if the player is in a playing state\n    */\n\n    this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n    this.dispose = () => {\n      this.clearSeekingAppendCheck_();\n      this.logger_('dispose');\n      this.tech_.off('waiting', waitingHandler);\n      this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      this.tech_.off('canplay', canPlayHandler);\n      this.tech_.off('play', playHandler);\n      this.tech_.off('seeking', this.watchForBadSeeking_);\n      this.tech_.off('seeked', this.clearSeekingAppendCheck_);\n      loaderTypes.forEach(type => {\n        pc[`${type}SegmentLoader_`].off('appendsdone', loaderChecks[type].updateend);\n        pc[`${type}SegmentLoader_`].off('playlistupdate', loaderChecks[type].reset);\n        this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n      this.resetTimeUpdate_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  monitorCurrentTime_() {\n    this.checkCurrentTime_();\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  }\n  /**\n   * Reset stalled download stats for a specific type of loader\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#playlistupdate\n   * @listens Tech#seeking\n   * @listens Tech#seeked\n   */\n\n  resetSegmentDownloads_(type) {\n    const loader = this.playlistController_[`${type}SegmentLoader_`];\n    if (this[`${type}StalledDownloads_`] > 0) {\n      this.logger_(`resetting possible stalled download count for ${type} loader`);\n    }\n    this[`${type}StalledDownloads_`] = 0;\n    this[`${type}Buffered_`] = loader.buffered_();\n  }\n  /**\n   * Checks on every segment `appendsdone` to see\n   * if segment appends are making progress. If they are not\n   * and we are still downloading bytes. We exclude the playlist.\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#appendsdone\n   */\n\n  checkSegmentDownloads_(type) {\n    const pc = this.playlistController_;\n    const loader = pc[`${type}SegmentLoader_`];\n    const buffered = loader.buffered_();\n    const isBufferedDifferent = isRangeDifferent(this[`${type}Buffered_`], buffered);\n    this[`${type}Buffered_`] = buffered; // if another watcher is going to fix the issue or\n    // the buffered value for this loader changed\n    // appends are working\n\n    if (isBufferedDifferent) {\n      this.resetSegmentDownloads_(type);\n      return;\n    }\n    this[`${type}StalledDownloads_`]++;\n    this.logger_(`found #${this[`${type}StalledDownloads_`]} ${type} appends that did not increase buffer (possible stalled download)`, {\n      playlistId: loader.playlist_ && loader.playlist_.id,\n      buffered: timeRangesToArray(buffered)\n    }); // after 10 possibly stalled appends with no reset, exclude\n\n    if (this[`${type}StalledDownloads_`] < 10) {\n      return;\n    }\n    this.logger_(`${type} loader stalled download exclusion`);\n    this.resetSegmentDownloads_(type);\n    this.tech_.trigger({\n      type: 'usage',\n      name: `vhs-${type}-download-exclusion`\n    });\n    if (type === 'subtitle') {\n      return;\n    } // TODO: should we exclude audio tracks rather than main tracks\n    // when type is audio?\n\n    pc.excludePlaylist({\n      error: {\n        message: `Excessive ${type} segment downloading detected.`\n      },\n      playlistExclusionDuration: Infinity\n    });\n  }\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n\n  checkCurrentTime_() {\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  }\n  /**\n   * Resets the 'timeupdate' mechanism designed to detect that we are stalled\n   *\n   * @private\n   */\n\n  resetTimeUpdate_() {\n    this.consecutiveUpdates = 0;\n  }\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {boolean} whether an action was taken to fix the seek\n   * @private\n   */\n\n  fixesBadSeeks_() {\n    const seeking = this.tech_.seeking();\n    if (!seeking) {\n      return false;\n    } // TODO: It's possible that these seekable checks should be moved out of this function\n    // and into a function that runs on seekablechange. It's also possible that we only need\n    // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n    // seekable range.\n\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    const isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n    let seekTo;\n    if (isAfterSeekableRange) {\n      const seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n      seekTo = seekableEnd;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const seekableStart = seekable.start(0); // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n      seekTo = seekableStart + (\n      // if the playlist is too short and the seekable range is an exact time (can\n      // happen in live with a 3 segment playlist), then don't use a time delta\n      seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n    }\n    if (typeof seekTo !== 'undefined') {\n      this.logger_(`Trying to seek outside of seekable at time ${currentTime} with ` + `seekable range ${printableRange(seekable)}. Seeking to ` + `${seekTo}.`);\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    const sourceUpdater = this.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n    const videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n    const media = this.media(); // verify that at least two segment durations or one part duration have been\n    // appended before checking for a gap.\n\n    const minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n    // appended before checking for a gap.\n\n    const bufferedToCheck = [audioBuffered, videoBuffered];\n    for (let i = 0; i < bufferedToCheck.length; i++) {\n      // skip null buffered\n      if (!bufferedToCheck[i]) {\n        continue;\n      }\n      const timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n      // duration behind we haven't appended enough to call this a bad seek.\n\n      if (timeAhead < minAppendedDuration) {\n        return false;\n      }\n    }\n    const nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n    // to seek over the gap\n\n    if (nextRange.length === 0) {\n      return false;\n    }\n    seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n    this.logger_(`Buffered region starts (${nextRange.start(0)}) ` + ` just beyond seek point (${currentTime}). Seeking to ${seekTo}.`);\n    this.tech_.setCurrentTime(seekTo);\n    return true;\n  }\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n\n  waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    } // All tech waiting checks failed. Use last resort correction\n\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    const currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime);\n      this.logger_(`Stopped at ${currentTime} while inside a buffered region ` + `[${currentRange.start(0)} -> ${currentRange.end(0)}]. Attempting to resume ` + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-unknown-waiting'\n      });\n      return;\n    }\n  }\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n\n  techWaiting_() {\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    if (this.tech_.seeking()) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const livePoint = seekable.end(seekable.length - 1);\n      this.logger_(`Fell out of live window at time ${currentTime}. Seeking to ` + `live point (seekable end) ${livePoint}`);\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-live-resync'\n      });\n      return true;\n    }\n    const sourceUpdater = this.tech_.vhs.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const videoUnderflow = this.videoUnderflow_({\n      audioBuffered: sourceUpdater.audioBuffered(),\n      videoBuffered: sourceUpdater.videoBuffered(),\n      currentTime\n    });\n    if (videoUnderflow) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-video-underflow'\n      });\n      return true;\n    }\n    const nextRange = findNextRange(buffered, currentTime); // check for gap\n\n    if (nextRange.length > 0) {\n      this.logger_(`Stopped at ${currentTime} and seeking to ${nextRange.start(0)}`);\n      this.resetTimeUpdate_();\n      this.skipTheGap_(currentTime);\n      return true;\n    } // All checks failed. Returning false to indicate failure to correct waiting\n\n    return false;\n  }\n  afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow = false) {\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n    let allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n    const isLive = !playlist.endList;\n    if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n      allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n    }\n    if (currentTime > allowedEnd) {\n      return true;\n    }\n    return false;\n  }\n  beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length &&\n    // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n      return true;\n    }\n    return false;\n  }\n  videoUnderflow_({\n    videoBuffered,\n    audioBuffered,\n    currentTime\n  }) {\n    // audio only content will not have video underflow :)\n    if (!videoBuffered) {\n      return;\n    }\n    let gap; // find a gap in demuxed content.\n\n    if (videoBuffered.length && audioBuffered.length) {\n      // in Chrome audio will continue to play for ~3s when we run out of video\n      // so we have to check that the video buffer did have some buffer in the\n      // past.\n      const lastVideoRange = findRange(videoBuffered, currentTime - 3);\n      const videoRange = findRange(videoBuffered, currentTime);\n      const audioRange = findRange(audioBuffered, currentTime);\n      if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n        gap = {\n          start: lastVideoRange.end(0),\n          end: audioRange.end(0)\n        };\n      } // find a gap in muxed content.\n    } else {\n      const nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n\n      if (!nextRange.length) {\n        gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n      }\n    }\n    if (gap) {\n      this.logger_(`Encountered a gap in video from ${gap.start} to ${gap.end}. ` + `Seeking to current time ${currentTime}`);\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n\n  skipTheGap_(scheduledCurrentTime) {\n    const buffered = this.tech_.buffered();\n    const currentTime = this.tech_.currentTime();\n    const nextRange = findNextRange(buffered, currentTime);\n    this.resetTimeUpdate_();\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-gap-skip'\n    });\n  }\n  gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    const gaps = findGaps(buffered);\n    for (let i = 0; i < gaps.length; i++) {\n      const start = gaps.start(i);\n      const end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start,\n          end\n        };\n      }\n    }\n    return null;\n  }\n}\nconst defaultOptions = {\n  errorInterval: 30,\n  getSource(next) {\n    const tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    const sourceObj = tech.currentSource_ || this.currentSource();\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nconst initPlugin = function (player, options) {\n  let lastCalled = 0;\n  let seekTo = 0;\n  const localOptions = merge(defaultOptions, options);\n  player.ready(() => {\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  const loadedMetadataHandler = function () {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n  const setSource = function (sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n  const errorHandler = function () {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-canceled'\n      });\n      return;\n    }\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n  const cleanupEvents = function () {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n  const reinitPlugin = function (newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\nconst reloadSourceOnError = function (options) {\n  initPlugin(this, options);\n};\nvar version$4 = \"3.0.0\";\nvar version$3 = \"6.2.0\";\nvar version$2 = \"1.0.1\";\nvar version$1 = \"6.0.0\";\nvar version = \"4.0.1\";\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the VHS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/main/LICENSE\n */\nconst Vhs = {\n  PlaylistLoader,\n  Playlist,\n  utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  lastBandwidthSelector,\n  movingAverageBandwidthSelector,\n  comparePlaylistBandwidth,\n  comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properties\n\nObject.keys(Config).forEach(prop => {\n  Object.defineProperty(Vhs, prop, {\n    get() {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      return Config[prop];\n    },\n    set(value) {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      if (typeof value !== 'number' || value < 0) {\n        videojs.log.warn(`value of Vhs.${prop} must be greater than or equal to 0`);\n        return;\n      }\n      Config[prop] = value;\n    }\n  });\n});\nconst LOCAL_STORAGE_KEY = 'videojs-vhs';\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleVhsMediaChange\n */\n\nconst handleVhsMediaChange = function (qualityLevels, playlistLoader) {\n  const newPlaylist = playlistLoader.media();\n  let selectedIndex = -1;\n  for (let i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} vhs Vhs object to listen to for media events.\n * @function handleVhsLoadedMetadata\n */\n\nconst handleVhsLoadedMetadata = function (qualityLevels, vhs) {\n  vhs.representations().forEach(rep => {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleVhsMediaChange(qualityLevels, vhs.playlists);\n}; // VHS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\nVhs.canPlaySource = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst emeKeySystems = (keySystemOptions, mainPlaylist, audioPlaylist) => {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n  let codecs = {};\n  if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n    codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n  }\n  if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n    codecs.audio = audioPlaylist.attributes.CODECS;\n  }\n  const videoContentType = getMimeForCodec(codecs.video);\n  const audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n  const keySystemContentTypes = {};\n  for (const keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {};\n    if (audioContentType) {\n      keySystemContentTypes[keySystem].audioContentType = audioContentType;\n    }\n    if (videoContentType) {\n      keySystemContentTypes[keySystem].videoContentType = videoContentType;\n    } // Default to using the video playlist's PSSH even though they may be different, as\n    // videojs-contrib-eme will only accept one in the options.\n    //\n    // This shouldn't be an issue for most cases as early intialization will handle all\n    // unique PSSH values, and if they aren't, then encrypted events should have the\n    // specific information needed for the unique license.\n\n    if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n  return merge(keySystemOptions, keySystemContentTypes);\n};\n/**\n * @typedef {Object} KeySystems\n *\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n * Note: not all options are listed here.\n *\n * @property {Uint8Array} [pssh]\n *           Protection System Specific Header\n */\n\n/**\n * Goes through all the playlists and collects an array of KeySystems options objects\n * containing each playlist's keySystems and their pssh values, if available.\n *\n * @param {Object[]} playlists\n *        The playlists to look through\n * @param {string[]} keySystems\n *        The keySystems to collect pssh values for\n *\n * @return {KeySystems[]}\n *         An array of KeySystems objects containing available key systems and their\n *         pssh values\n */\n\nconst getAllPsshKeySystemsOptions = (playlists, keySystems) => {\n  return playlists.reduce((keySystemsArr, playlist) => {\n    if (!playlist.contentProtection) {\n      return keySystemsArr;\n    }\n    const keySystemsOptions = keySystems.reduce((keySystemsObj, keySystem) => {\n      const keySystemOptions = playlist.contentProtection[keySystem];\n      if (keySystemOptions && keySystemOptions.pssh) {\n        keySystemsObj[keySystem] = {\n          pssh: keySystemOptions.pssh\n        };\n      }\n      return keySystemsObj;\n    }, {});\n    if (Object.keys(keySystemsOptions).length) {\n      keySystemsArr.push(keySystemsOptions);\n    }\n    return keySystemsArr;\n  }, []);\n};\n/**\n * Returns a promise that waits for the\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n *\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n * browsers.\n *\n * As per the above ticket, this is particularly important for Chrome, where, if\n * unencrypted content is appended before encrypted content and the key session has not\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n * during playback.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n * @param {Object[]} mainPlaylists\n *        The playlists found on the main playlist object\n *\n * @return {Object}\n *         Promise that resolves when the key session has been created\n */\n\nconst waitForKeySessionCreation = ({\n  player,\n  sourceKeySystems,\n  audioMedia,\n  mainPlaylists\n}) => {\n  if (!player.eme.initializeMediaKeys) {\n    return Promise.resolve();\n  } // TODO should all audio PSSH values be initialized for DRM?\n  //\n  // All unique video rendition pssh values are initialized for DRM, but here only\n  // the initial audio playlist license is initialized. In theory, an encrypted\n  // event should be fired if the user switches to an alternative audio playlist\n  // where a license is required, but this case hasn't yet been tested. In addition, there\n  // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n  // languages).\n\n  const playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n  const keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n  const initializationFinishedPromises = [];\n  const keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n  // only place where it should not be deduped is for ms-prefixed APIs, but the early\n  // return for IE11 above, and the existence of modern EME APIs in addition to\n  // ms-prefixed APIs on Edge should prevent this from being a concern.\n  // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n  keySystemsOptionsArr.forEach(keySystemsOptions => {\n    keySessionCreatedPromises.push(new Promise((resolve, reject) => {\n      player.tech_.one('keysessioncreated', resolve);\n    }));\n    initializationFinishedPromises.push(new Promise((resolve, reject) => {\n      player.eme.initializeMediaKeys({\n        keySystems: keySystemsOptions\n      }, err => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      });\n    }));\n  }); // The reasons Promise.race is chosen over Promise.any:\n  //\n  // * Promise.any is only available in Safari 14+.\n  // * None of these promises are expected to reject. If they do reject, it might be\n  //   better here for the race to surface the rejection, rather than mask it by using\n  //   Promise.any.\n\n  return Promise.race([\n  // If a session was previously created, these will all finish resolving without\n  // creating a new session, otherwise it will take until the end of all license\n  // requests, which is why the key session check is used (to make setup much faster).\n  Promise.all(initializationFinishedPromises),\n  // Once a single session is created, the browser knows DRM will be used.\n  Promise.race(keySessionCreatedPromises)]);\n};\n/**\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n * there are keySystems on the source, sets up source options to prepare the source for\n * eme.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} media\n *        The active media playlist\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n *\n * @return {boolean}\n *         Whether or not options were configured and EME is available\n */\n\nconst setupEmeOptions = ({\n  player,\n  sourceKeySystems,\n  media,\n  audioMedia\n}) => {\n  const sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n  if (!sourceOptions) {\n    return false;\n  }\n  player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n  // do nothing.\n\n  if (sourceOptions && !player.eme) {\n    videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n    return false;\n  }\n  return true;\n};\nconst getVhsLocalStorage = () => {\n  if (!window$1.localStorage) {\n    return null;\n  }\n  const storedObject = window$1.localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (!storedObject) {\n    return null;\n  }\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\nconst updateVhsLocalStorage = options => {\n  if (!window$1.localStorage) {\n    return false;\n  }\n  let objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? merge(objectToStore, options) : options;\n  try {\n    window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n  return objectToStore;\n};\n/**\n * Parses VHS-supported media types from data URIs. See\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n * for information on data URIs.\n *\n * @param {string} dataUri\n *        The data URI\n *\n * @return {string|Object}\n *         The parsed object/string, or the original string if no supported media type\n *         was found\n */\n\nconst expandDataUri = dataUri => {\n  if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n    return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n  } // no known case for this data URI, return the string as-is\n\n  return dataUri;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\nVhs.supportsNativeHls = function () {\n  if (!document || !document.createElement) {\n    return false;\n  }\n  const video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n  const canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\nVhs.supportsNativeDash = function () {\n  if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n    return false;\n  }\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\nVhs.supportsTypeNatively = type => {\n  if (type === 'hls') {\n    return Vhs.supportsNativeHls;\n  }\n  if (type === 'dash') {\n    return Vhs.supportsNativeDash;\n  }\n  return false;\n};\n/**\n * VHS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\nVhs.isSupported = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst Component = videojs.getComponent('Component');\n/**\n * The Vhs Handler object, where we orchestrate all of the parts\n * of VHS to interact with video.js\n *\n * @class VhsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nclass VhsHandler extends Component {\n  constructor(source, tech, options) {\n    super(tech, options.vhs); // if a tech level `initialBandwidth` option was passed\n    // use that over the VHS level `bandwidth` option\n\n    if (typeof options.initialBandwidth === 'number') {\n      this.options_.bandwidth = options.initialBandwidth;\n    }\n    this.logger_ = logger('VhsHandler'); // we need access to the player in some cases,\n    // so, get it from Video.js via the `playerId`\n\n    if (tech.options_ && tech.options_.playerId) {\n      const _player = videojs.getPlayer(tech.options_.playerId);\n      this.player_ = _player;\n    }\n    this.tech_ = tech;\n    this.source_ = source;\n    this.stats = {};\n    this.ignoreNextSeekingEvent_ = false;\n    this.setOptions_();\n    if (this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native VHS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native VHS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n    this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], event => {\n      const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n      if (fullscreenElement && fullscreenElement.contains(this.tech_.el())) {\n        this.playlistController_.fastQualityChange_();\n      } else {\n        // When leaving fullscreen, since the in page pixel dimensions should be smaller\n        // than full screen, see if there should be a rendition switch down to preserve\n        // bandwidth.\n        this.playlistController_.checkABR_();\n      }\n    });\n    this.on(this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    this.on(this.tech_, 'error', function () {\n      // verify that the error was real and we are loaded\n      // enough to have pc loaded.\n      if (this.tech_.error() && this.playlistController_) {\n        this.playlistController_.pauseLoading();\n      }\n    });\n    this.on(this.tech_, 'play', this.play);\n  }\n  setOptions_() {\n    // defaults\n    this.options_.withCredentials = this.options_.withCredentials || false;\n    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n    this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n    this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n    this.options_.customTagParsers = this.options_.customTagParsers || [];\n    this.options_.customTagMappers = this.options_.customTagMappers || [];\n    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n    this.options_.llhls = this.options_.llhls === false ? false : true;\n    this.options_.bufferBasedABR = this.options_.bufferBasedABR || false;\n    if (typeof this.options_.playlistExclusionDuration !== 'number') {\n      this.options_.playlistExclusionDuration = 5 * 60;\n    }\n    if (typeof this.options_.bandwidth !== 'number') {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        const storedObject = getVhsLocalStorage();\n        if (storedObject && storedObject.bandwidth) {\n          this.options_.bandwidth = storedObject.bandwidth;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-bandwidth-from-local-storage'\n          });\n        }\n        if (storedObject && storedObject.throughput) {\n          this.options_.throughput = storedObject.throughput;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-throughput-from-local-storage'\n          });\n        }\n      }\n    } // if bandwidth was not set by options or pulled from local storage, start playlist\n    // selection at a reasonable bandwidth\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n    } // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n    ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'customTagParsers', 'customTagMappers', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'bufferBasedABR', 'liveRangeSafeTimeDelta', 'llhls', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'exactManifestTimings', 'leastPixelDiffSelector'].forEach(option => {\n      if (typeof this.source_[option] !== 'undefined') {\n        this.options_[option] = this.source_[option];\n      }\n    });\n    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n  }\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n\n  src(src, type) {\n    // do nothing if the src is falsey\n    if (!src) {\n      return;\n    }\n    this.setOptions_(); // add main playlist controller options\n\n    this.options_.src = expandDataUri(this.source_.src);\n    this.options_.tech = this.tech_;\n    this.options_.externVhs = Vhs;\n    this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n    this.options_.seekTo = time => {\n      this.tech_.setCurrentTime(time);\n    };\n    this.playlistController_ = new PlaylistController(this.options_);\n    const playbackWatcherOptions = merge({\n      liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n    }, this.options_, {\n      seekable: () => this.seekable(),\n      media: () => this.playlistController_.media(),\n      playlistController: this.playlistController_\n    });\n    this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n    this.playlistController_.on('error', () => {\n      const player = videojs.players[this.tech_.options_.playerId];\n      let error = this.playlistController_.error;\n      if (typeof error === 'object' && !error.code) {\n        error.code = 3;\n      } else if (typeof error === 'string') {\n        error = {\n          message: error,\n          code: 3\n        };\n      }\n      player.error(error);\n    });\n    const defaultSelector = this.options_.bufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n    // compatibility with < v2\n\n    this.playlistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n    this.playlistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n    this.playlists = this.playlistController_.mainPlaylistLoader_;\n    this.mediaSource = this.playlistController_.mediaSource; // Proxy assignment of some properties to the main playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get() {\n          return this.playlistController_.selectPlaylist;\n        },\n        set(selectPlaylist) {\n          this.playlistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get() {\n          return this.playlistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set(throughput) {\n          this.playlistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get() {\n          let playerBandwidthEst = this.playlistController_.mainSegmentLoader_.bandwidth;\n          const networkInformation = window$1.navigator.connection || window$1.navigator.mozConnection || window$1.navigator.webkitConnection;\n          const tenMbpsAsBitsPerSecond = 10e6;\n          if (this.options_.useNetworkInformationApi && networkInformation) {\n            // downlink returns Mbps\n            // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n            const networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n            // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n            // high quality streams are not filtered out.\n\n            if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n              playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n            } else {\n              playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n            }\n          }\n          return playerBandwidthEst;\n        },\n        set(bandwidth) {\n          this.playlistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get() {\n          const invBandwidth = 1 / (this.bandwidth || 1);\n          let invThroughput;\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n          const systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n          return systemBitrate;\n        },\n        set() {\n          videojs.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n    if (this.options_.bandwidth) {\n      this.bandwidth = this.options_.bandwidth;\n    }\n    if (this.options_.throughput) {\n      this.throughput = this.options_.throughput;\n    }\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: () => this.bandwidth || 0,\n        enumerable: true\n      },\n      mediaRequests: {\n        get: () => this.playlistController_.mediaRequests_() || 0,\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: () => this.playlistController_.mediaRequestsAborted_() || 0,\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: () => this.playlistController_.mediaRequestsTimedout_() || 0,\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: () => this.playlistController_.mediaRequestsErrored_() || 0,\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: () => this.playlistController_.mediaTransferDuration_() || 0,\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: () => this.playlistController_.mediaBytesTransferred_() || 0,\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: () => this.playlistController_.mediaSecondsLoaded_() || 0,\n        enumerable: true\n      },\n      mediaAppends: {\n        get: () => this.playlistController_.mediaAppends_() || 0,\n        enumerable: true\n      },\n      mainAppendsToLoadedData: {\n        get: () => this.playlistController_.mainAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      audioAppendsToLoadedData: {\n        get: () => this.playlistController_.audioAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      appendsToLoadedData: {\n        get: () => this.playlistController_.appendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      timeToLoadedData: {\n        get: () => this.playlistController_.timeToLoadedData_() || 0,\n        enumerable: true\n      },\n      buffered: {\n        get: () => timeRangesToArray(this.tech_.buffered()),\n        enumerable: true\n      },\n      currentTime: {\n        get: () => this.tech_.currentTime(),\n        enumerable: true\n      },\n      currentSource: {\n        get: () => this.tech_.currentSource_,\n        enumerable: true\n      },\n      currentTech: {\n        get: () => this.tech_.name_,\n        enumerable: true\n      },\n      duration: {\n        get: () => this.tech_.duration(),\n        enumerable: true\n      },\n      main: {\n        get: () => this.playlists.main,\n        enumerable: true\n      },\n      playerDimensions: {\n        get: () => this.tech_.currentDimensions(),\n        enumerable: true\n      },\n      seekable: {\n        get: () => timeRangesToArray(this.tech_.seekable()),\n        enumerable: true\n      },\n      timestamp: {\n        get: () => Date.now(),\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: () => this.tech_.getVideoPlaybackQuality(),\n        enumerable: true\n      }\n    });\n    this.tech_.one('canplay', this.playlistController_.setupFirstPlay.bind(this.playlistController_));\n    this.tech_.on('bandwidthupdate', () => {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        updateVhsLocalStorage({\n          bandwidth: this.bandwidth,\n          throughput: Math.round(this.throughput)\n        });\n      }\n    });\n    this.playlistController_.on('selectedinitialmedia', () => {\n      // Add the manual rendition mix-in to VhsHandler\n      renditionSelectionMixin(this);\n    });\n    this.playlistController_.sourceUpdater_.on('createdsourcebuffers', () => {\n      this.setupEme_();\n    }); // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n\n    this.on(this.playlistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    }); // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n\n    this.on(this.playlistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n    this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n\n    if (!this.tech_.el()) {\n      return;\n    }\n    this.mediaSourceUrl_ = window$1.URL.createObjectURL(this.playlistController_.mediaSource);\n    this.tech_.src(this.mediaSourceUrl_);\n  }\n  createKeySessions_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    this.logger_('waiting for EME key session creation');\n    waitForKeySessionCreation({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n      mainPlaylists: this.playlists.main.playlists\n    }).then(() => {\n      this.logger_('created EME key session');\n      this.playlistController_.sourceUpdater_.initializedEme();\n    }).catch(err => {\n      this.logger_('error while creating EME key session', err);\n      this.player_.error({\n        message: 'Failed to initialize media keys for EME',\n        code: 3\n      });\n    });\n  }\n  handleWaitingForKey_() {\n    // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n    // the key is in the manifest. While this should've happened on initial source load, it\n    // may happen again in live streams where the keys change, and the manifest info\n    // reflects the update.\n    //\n    // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n    // already requested keys for, we don't have to worry about this generating extraneous\n    // requests.\n    this.logger_('waitingforkey fired, attempting to create any new key sessions');\n    this.createKeySessions_();\n  }\n  /**\n   * If necessary and EME is available, sets up EME options and waits for key session\n   * creation.\n   *\n   * This function also updates the source updater so taht it can be used, as for some\n   * browsers, EME must be configured before content is appended (if appending unencrypted\n   * content before encrypted content).\n   */\n\n  setupEme_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    const didSetupEmeOptions = setupEmeOptions({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      media: this.playlists.media(),\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n    });\n    this.player_.tech_.on('keystatuschange', e => {\n      if (e.status !== 'output-restricted') {\n        return;\n      }\n      const mainPlaylist = this.playlistController_.main();\n      if (!mainPlaylist || !mainPlaylist.playlists) {\n        return;\n      }\n      const excludedHDPlaylists = []; // Assume all HD streams are unplayable and exclude them from ABR selection\n\n      mainPlaylist.playlists.forEach(playlist => {\n        if (playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height >= 720) {\n          if (!playlist.excludeUntil || playlist.excludeUntil < Infinity) {\n            playlist.excludeUntil = Infinity;\n            excludedHDPlaylists.push(playlist);\n          }\n        }\n      });\n      if (excludedHDPlaylists.length) {\n        videojs.log.warn('DRM keystatus changed to \"output-restricted.\" Removing the following HD playlists ' + 'that will most likely fail to play and clearing the buffer. ' + 'This may be due to HDCP restrictions on the stream and the capabilities of the current device.', ...excludedHDPlaylists); // Clear the buffer before switching playlists, since it may already contain unplayable segments\n\n        this.playlistController_.fastQualityChange_();\n      }\n    });\n    this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n    this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_); // In IE11 this is too early to initialize media keys, and IE11 does not support\n    // promises.\n\n    if (videojs.browser.IE_VERSION === 11 || !didSetupEmeOptions) {\n      // If EME options were not set up, we've done all we could to initialize EME.\n      this.playlistController_.sourceUpdater_.initializedEme();\n      return;\n    }\n    this.createKeySessions_();\n  }\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n\n  setupQualityLevels_() {\n    const player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n    // or qualityLevels_ listeners have already been setup, do nothing.\n\n    if (!player || !player.qualityLevels || this.qualityLevels_) {\n      return;\n    }\n    this.qualityLevels_ = player.qualityLevels();\n    this.playlistController_.on('selectedinitialmedia', () => {\n      handleVhsLoadedMetadata(this.qualityLevels_, this);\n    });\n    this.playlists.on('mediachange', () => {\n      handleVhsMediaChange(this.qualityLevels_, this.playlists);\n    });\n  }\n  /**\n   * return the version\n   */\n\n  static version() {\n    return {\n      '@videojs/http-streaming': version$4,\n      'mux.js': version$3,\n      'mpd-parser': version$2,\n      'm3u8-parser': version$1,\n      'aes-decrypter': version\n    };\n  }\n  /**\n   * return the version\n   */\n\n  version() {\n    return this.constructor.version();\n  }\n  canChangeType() {\n    return SourceUpdater.canChangeType();\n  }\n  /**\n   * Begin playing the video.\n   */\n\n  play() {\n    this.playlistController_.play();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  setCurrentTime(currentTime) {\n    this.playlistController_.setCurrentTime(currentTime);\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  duration() {\n    return this.playlistController_.duration();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  seekable() {\n    return this.playlistController_.seekable();\n  }\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n\n  dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n    if (this.playlistController_) {\n      this.playlistController_.dispose();\n    }\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n    if (this.tech_ && this.tech_.vhs) {\n      delete this.tech_.vhs;\n    }\n    if (this.mediaSourceUrl_ && window$1.URL.revokeObjectURL) {\n      window$1.URL.revokeObjectURL(this.mediaSourceUrl_);\n      this.mediaSourceUrl_ = null;\n    }\n    if (this.tech_) {\n      this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n    }\n    super.dispose();\n  }\n  convertToProgramTime(time, callback) {\n    return getProgramTime({\n      playlist: this.playlistController_.media(),\n      time,\n      callback\n    });\n  } // the player must be playing before calling this\n\n  seekToProgramTime(programTime, callback, pauseAfterSeek = true, retryCount = 2) {\n    return seekToProgramTime({\n      programTime,\n      playlist: this.playlistController_.media(),\n      retryCount,\n      pauseAfterSeek,\n      seekTo: this.options_.seekTo,\n      tech: this.options_.tech,\n      callback\n    });\n  }\n}\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nconst VhsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$4,\n  canHandleSource(srcObj, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource(source, tech, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    tech.vhs = new VhsHandler(source, tech, localOptions);\n    tech.vhs.xhr = xhrFactory();\n    tech.vhs.src(source.src, source.type);\n    return tech.vhs;\n  },\n  canPlayType(type, options = {}) {\n    const {\n      vhs: {\n        overrideNative = !videojs.browser.IS_ANY_SAFARI\n      } = {}\n    } = merge(videojs.options, options);\n    const supportedType = simpleTypeFromSourceType(type);\n    const canUseMsePlayback = supportedType && (!Vhs.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {boolean} if  native media sources are supported\n */\n\nconst supportsNativeMediaSources = () => {\n  return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n}; // register source handlers with the appropriate techs\n\nif (supportsNativeMediaSources()) {\n  videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n}\nvideojs.VhsHandler = VhsHandler;\nvideojs.VhsSourceHandler = VhsSourceHandler;\nvideojs.Vhs = Vhs;\nif (!videojs.use) {\n  videojs.registerComponent('Vhs', Vhs);\n}\nvideojs.options.vhs = videojs.options.vhs || {};\nif (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n  videojs.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport { videojs as default };\n"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KACEE,WAAW,CAACC,aAAa,CAAEC,SAAS,CAAE,CACpCF,WAAW,CAAC,IAAI,CAACiO,GAAG,CAAEhO,aAAa,CAAEC,SAAS,CAAC,CACjD,CAEA;AACF;AACA;AACA,KACE0T,IAAI,EAAG,CACL,IAAI,CAAC/T,WAAW,CAAC,YAAY,CAAC,CAChC,CAEA;AACF;AACA;AACA,KACEgU,IAAI,EAAG,CACL,IAAI,CAACtU,QAAQ,CAAC,YAAY,CAAC,CAC7B,CAEA;AACF;AACA;AACA;AACA;AACA,KACEuU,WAAW,EAAG,CACZ,IAAI,CAACvU,QAAQ,CAAC,kBAAkB,CAAC,CACnC,CAEA;AACF;AACA;AACA;AACA;AACA,KACEwU,aAAa,EAAG,CACd,IAAI,CAAClU,WAAW,CAAC,kBAAkB,CAAC,CACtC,CAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KACEiB,YAAY,CAACC,SAAS,CAAE,CACtB,MAAOD,aAAY,CAAC,IAAI,CAACmN,GAAG,CAAElN,SAAS,CAAC,CAC1C,CAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KACEtC,YAAY,CAACsC,SAAS,CAAEhI,KAAK,CAAE,CAC7B0F,YAAY,CAAC,IAAI,CAACwP,GAAG,CAAElN,SAAS,CAAEhI,KAAK,CAAC,CAC1C,CAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA,KACEyH,eAAe,CAACO,SAAS,CAAE,CACzBP,eAAe,CAAC,IAAI,CAACyN,GAAG,CAAElN,SAAS,CAAC,CACtC,CAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KACEY,KAAK,CAACqS,GAAG,CAAEC,aAAa,CAAE,CACxB,MAAO,KAAI,CAACC,SAAS,CAAC,OAAO,CAAEF,GAAG,CAAEC,aAAa,CAAC,CACpD,CAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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AG,CAAC,CAET;AACF;AACA;AACA;AACA;AACA;AACA,KACEjH,WAAW,EAAG,CAAC,CAEf;AACF;AACA;AACA;AACA;AACA;AACA;AACA,KACEkH,cAAc,EAAG,CAAC,CAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KACE9zB,KAAK,CAACguB,GAAG,CAAE,CACT,GAAIA,GAAG,GAAKrlB,SAAS,CAAE,CACrB,IAAI,CAACorB,MAAM,CAAG,GAAI5R,WAAU,CAAC6L,GAAG,CAAC,CACjC,IAAI,CAACvb,OAAO,CAAC,OAAO,CAAC,CACvB,CACA,MAAO,KAAI,CAACshB,MAAM,CACpB,CAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KACEC,MAAM,EAAG,CACP,GAAI,IAAI,CAAC9B,WAAW,CAAE,CACpB,MAAOrR,mBAAkB,CAAC,CAAC,CAAE,CAAC,CAAC,CACjC,CACA,MAAOA,mBAAkB,EAAE,CAC7B,CAEA;AACF;AACA;AACA;AACA;AACA;AACA,KACE9I,IAAI,EAAG,CAAC,CAER;AACF;AACA;AACA;AACA;AACA;AACA,KACEkc,YAAY,EAAG,CAAC,CAEhB;AACF;AACA;AACA;AACA;AACA;AACA,KACEC,SAAS,EAAG,CAAC,CAEb;AACF;AACA;AACA;AACA;AACA,KACEC,cAAc,EAAG,CACf;AACA,GAAI,IAAI,CAACb,iBAAiB,CAAE,CAC1B;AACN;AACA;AACA;AACA;AACA,SACM,IAAI,CAAC7gB,OAAO,CAAC,CACXvV,IAAI,CAAE,YAAY,CAClBuO,MAAM,CAAE,IAAI,CACZgoB,iBAAiB,CAAE,IACrB,CAAC,CAAC,CACJ,CACF,CAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KACEb,kBAAkB,EAAG,CACnB;AACJ;AACA;AACA;AACA;AACA,QALI,CAOA;AACJ;AACA;AACA;AACA;AACA,QALI,CAOA;AACJ;AACA;AACA;AACA;AACA,QACIlC,MAAM,CAACjW,KAAK,CAACvZ,OAAO,CAACzC,IAAI,EAAI,CAC3B,KAAMktB,MAAK,CA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ACA;AACA,GANA,CAQA;AACA;AACA;AACA;AACA;AACA;AACA,GANA,CAQA;AACA;AACA;AACA;AACA;AACA,GACAtV,IAAI,CAAC9a,SAAS,CAAC21B,qBAAqB,CAAG,IAAI,CAE3C;AACA;AACA;AACA;AACA;AACA,GACA7a,IAAI,CAAC9a,SAAS,CAAC41B,mBAAmB,CAAG,IAAI,CAEzC;AACA;AACA;AACA;AACA;AACA;AACA,GACA9a,IAAI,CAAC9a,SAAS,CAAC61B,wBAAwB,CAAG,KAAK,CAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA/a,IAAI,CAAC9a,SAAS,CAAC81B,oBAAoB,CAAG,KAAK,CAE3C;AACA;AACA;AACA;AACA;AACA;AACA,GACAhb,IAAI,CAAC9a,SAAS,CAACsxB,sBAAsB,CAAG,KAAK,CAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACAxW,IAAI,CAAC9a,SAAS,CAAC+1B,iBAAiB,CAAG,KAAK,CAExC;AACA;AACA;AACA;AACA;AACA;AACA,GACAjb,IAAI,CAAC9a,SAAS,CAACwxB,wBAAwB,CAAG,KAAK,CAE/C;AACA;AACA;AACA;AACA;AACA;AACA,GACA1W,IAAI,CAAC9a,SAAS,CAAC4xB,wBAAwB,CAAG,KAAK,CAE/C;AACA;AACA;AACA;AACA;AACA,GACA9W,IAAI,CAAC9a,SAAS,CAACg2B,0BAA0B,CAAG,KAAK,CAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACAlb,IAAI,CAACmb,kBAAkB,CAAG,SAAUC,KAAK,CAAE,CACzC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KACEA,KAAK,CAACC,qBAAqB,CAAG,SAAUC,OAAO,CAAE15B,KAAK,CAAE,CACtD,GAAIgS,SAAQ,CAAGwnB,KAAK,CAACG,cAAc,CACnC,GAAI,CAAC3nB,QAAQ,CAAE,CACbA,QAAQ,CAAGwnB,KAAK,CAACG,cAAc,CAAG,EAAE,CACtC,CACA,GAAI35B,KAAK,GAAKoL,SAAS,CAAE,CAC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EAAE,CACX,CAAE,MAAOnjB,CAAC,CAAE,CACV;AAAA,CAEJ,CAAC,GAAG,CACN,CACF,CAAC,CACDmvC,KAAK,CAACgE,iBAAiB,CAAG,SAAU75C,EAAE,CAAE,CACtC,GAAI,CAACA,EAAE,CAAE,CACP,OACF,CACA,KAAM9E,QAAO,CAAG8E,EAAE,CAACsgB,gBAAgB,CAAC,QAAQ,CAAC,CAC7C,GAAI3oB,EAAC,CAAGuD,OAAO,CAACtD,MAAM,CACtB,MAAOD,CAAC,EAAE,CAAE,CACVqI,EAAE,CAAC6F,WAAW,CAAC3K,OAAO,CAACvD,CAAC,CAAC,CAAC,CAC5B,CAEA;AACA;AACAqI,EAAE,CAACsC,eAAe,CAAC,KAAK,CAAC,CACzB,GAAI,MAAOtC,GAAE,CAAC6pB,IAAI,GAAK,UAAU,CAAE,CACjC;AACA,CAAC,UAAY,CACX,GAAI,CACF7pB,EAAE,CAAC6pB,IAAI,EAAE,CACX,CAAE,MAAOnjB,CAAC,CAAE,CACV;AAAA,CAEJ,CAAC,GAAG,CACN,CACF,CAAC,CAED,iFACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,OAAO,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAc,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,UAAU,CACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,UAAU,CACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAM,CACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,aAAa,CAAC,CAAClM,OAAO,CAAC,SAAU+L,IAAI,CAAE,CACrCsvC,KAAK,CAAC17C,SAAS,CAACoM,IAAI,CAAC,CAAG,UAAY,CAClC,MAAO,KAAI,CAACwJ,GAAG,CAACxJ,IAAI,CAAC,EAAI,IAAI,CAACwJ,GAAG,CAAC0Q,YAAY,CAACla,IAAI,CAAC,CACtD,CAAC,CACH,CAAC,CAAC,CAEF;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,OAAO,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAc,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,UAAU,CACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAM,CACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,aAAa,CAAC,CAAC/L,OAAO,CAAC,SAAU+L,IAAI,CAAE,CACrCsvC,KAAK,CAAC17C,SAAS,CAAC,KAAK,CAAG0W,aAAa,CAACtK,IAAI,CAAC,CAAC,CAAG,SAAU8nC,CAAC,CAAE,CAC1D,IAAI,CAACt+B,GAAG,CAACxJ,IAAI,CAAC,CAAG8nC,CAAC,CAClB,GAAIA,CAAC,CAAE,CACL,IAAI,CAACt+B,GAAG,CAACxP,YAAY,CAACgG,IAAI,CAAEA,IAAI,CAAC,CACnC,CAAC,IAAM,CACL,IAAI,CAACwJ,GAAG,CAACzN,eAAe,CAACiE,IAAI,CAAC,CAChC,CACF,CAAC,CACH,CAAC,CAAC,CAEF;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAQ,CACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,aAAa,CACbcAAc,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,qBAAqB,CACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,yBAAyB,CACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAQ,CACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAc,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,YAAY,CACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,YAAY,CACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,aAAa,CACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,aAAa,CAAC,CAAC/L,OAAO,CAAC,SAAU+L,IAAI,CAAE,CACrCsvC,KAAK,CAAC17C,SAAS,CAACoM,IAAI,CAAC,CAAG,UAAY,CAClC,MAAO,KAAI,CAACwJ,GAAG,CAACxJ,IAAI,CAAC,CACvB,CAAC,CACH,CAAC,CAAC,CAEF;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAQ,CACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAK,CACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAQ,CACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,SAAS,CACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAc,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,qBAAqB,CACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,yBAAyB,CACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,aAAa,CAAC,CAAC/L,OAAO,CAAC,SAAU+L,IAAI,CAAE,CACrCsvC,KAAK,CAAC17C,SAAS,CAAC,KAAK,CAAG0W,aAAa,CAACtK,IAAI,CAAC,CAAC,CAAG,SAAU8nC,CAAC,CAAE,CAC1D,IAAI,CAACt+B,GAAG,CAACxJ,IAAI,CAAC,CAAG8nC,CAAC,CACpB,CAAC,CACH,CAAC,CAAC,CAEF;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,OAAO,CACP;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAM,CACN;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAM,CAAC,CAAC7zC,OAAO,CAAC,SAAU+L,IAAI,CAAE,CAC9BsvC,KAAK,CAAC17C,SAAS,CAACoM,IAAI,CAAC,CAAG,UAAY,CAClC,MAAO,KAAI,CAACwJ,GAAG,CAACxJ,IAAI,CAAC,EAAE,CACzB,CAAC,CACH,CAAC,CAAC,CACF0O,IAAI,CAACmb,kBAAkB,CAACylB,KAAK,CAAC,CAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACAA,KAAK,CAAC5kB,mBAAmB,CAAG,CAAC,CAAC,CAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA4kB,KAAK,CAAC5kB,mBAAmB,CAAC3B,WAAW,CAAG,SAAU94B,IAAI,CAAE,CACtD;AACA,GAAI,CACF,MAAOq/C,MAAK,CAACuE,QAAQ,CAAC9qB,WAAW,CAAC94B,IAAI,CAAC,CACzC,CAAE,MAAOkQ,CAAC,CAAE,CACV,MAAO,EAAE,CACX,CACF,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACAmvC,KAAK,CAAC5kB,mBAAmB,CAACN,eAAe,CAAG,SAAUv1B,MAAM,CAAES,OAAO,CAAE,CACrE;AACA,GAAIT,MAAM,CAAC5E,IAAI,CAAE,CACf,MAAOq/C,MAAK,CAAC5kB,mBAAmB,CAAC3B,WAAW,CAACl0B,MAAM,CAAC5E,IAAI,CAAC,CAEzD;AACF,CAAC,IAAM,IAAI4E,MAAM,CAAC2hB,GAAG,CAAE,CACrB,KAAM+X,IAAG,CAAGrP,gBAAgB,CAACrqB,MAAM,CAAC2hB,GAAG,CAAC,CACxC,MAAO84B,MAAK,CAAC5kB,mBAAmB,CAAC3B,WAAW,CAAE,SAAQwF,GAAI,EAAC,CAAC,CAC9D,CACA,MAAO,EAAE,CACX,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA+gB,KAAK,CAAC5kB,mBAAmB,CAACE,YAAY,CAAG,SAAU/1B,MAAM,CAAEqhB,IAAI,CAAE5gB,OAAO,CAAE,CACxE4gB,IAAI,CAAC2a,MAAM,CAACh8B,MAAM,CAAC2hB,GAAG,CAAC,CACzB,CAAC,CAED;AACA;AACA,GACA84B,KAAK,CAAC5kB,mBAAmB,CAACve,OAAO,CAAG,UAAY,CAAC,CAAC,CAElD;AACAmjC,KAAK,CAACvlB,qBAAqB,CAACulB,KAAK,CAAC5kB,mBAAmB,CAAC,CACtDhc,IAAI,CAACwa,YAAY,CAAC,OAAO,CAAEomB,KAAK,CAAC,CAEjC;AACA;AACA,GAFA,CAIA;AACA;AACA,KAAMkF,sBAAqgBAAgB,CAChB;AACA;AACA;AACA;AACA;AACA,GALA,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,YAAY,CACZ;AACA;AACA;AACA;AACA;AACA,GALA,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,YAAY,CACZ;AACA;AACA;AACA;AACA;AACA,GALA,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAQ,CACR;AACA;AACA;AACA;AACA;AACA,GALA,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAc,CACd;AACA;AACA;AACA;AACA;AACA,GALA,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,iBAAiB,CAAC,CAElB;AACA;AACA;AACA,KAAMC,kBAAiB,CAAG,CACxBC,OAAO,CAAE,SAAS,CAClBC,cAAc,CAAE,gBAAgB,CAChCC,OAAO,CAAE,SAAS,CAClBC,MAAM,CAAE,QACV,CAAC,CACD,KAAMC,iBAAgB,CAAG,CAAC,MA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pC;AACJ;AACA;AACA;AACA;AACA,MACI,IAAI,CAACjhD,OAAO,CAAC,qBAAqB,CAAC,CACrC,CACF,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GATA,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GATA,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GATA,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAPA,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA4e,GAAG,CAAC5W,KAAK,CAACvZ,OAAO,CAAC,SAAUzC,IAAI,CAAE,CAChC,KAAMktB,MAAK,CAAG0F,GAAG,CAAC5yB,IAAI,CAAC,CACvBohB,MAAM,CAAChf,SAAS,CAAC8qB,KAAK,CAACqF,UAAU,CAAC,CAAG,UAAY,CAC/C,GAAI,IAAI,CAACjD,KAAK,CAAE,CACd,MAAO,KAAI,CAACA,KAAK,CAACpC,KAAK,CAACqF,UAAU,CAAC,EAAE,CACvC,CAEA;AACA;AACA,IAAI,CAACrF,KAAK,CAACsF,WAAW,CAAC,CAAG,IAAI,CAACtF,KAAK,CAACsF,WAAW,CAAC,EAAI,GAAItF,MAAK,CAACiF,SAAS,EAAE,CAC1E,MAAO,KAAI,CAACjF,KAAK,CAACsF,WAAW,CAAC,CAChC,CAAC,CACH,CAAC,CAAC,CAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACApR,MAAM,CAAChf,SAAS,CAAC+8B,WAAW,CAAG/d,MAAM,CAAChf,SAAS,CAAC+rB,WAAW,CAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA/M,MAAM,CAACC,OAAO,CAAG,CAAC,CAAC,CACnB,KAAM9b,UAAS,CAAGjJ,QAAQ,CAACiJ,SAAS,CAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA6b,MAAM,CAAChf,SAAS,CAACsX,QAAQ,CAAG,CAC1B;AACAgkB,SAAS,CAAExgB,IAAI,CAAC0a,iBAAiB,CACjCs9B,KAAK,CAAE,CAAC,CAAC,CACT;AACAhX,eAAe,CAAE,IAAI,CACrB;AACA0P,iBAAiB,CAAE,IAAI,CACvB;AACAzY,aAAa,CAAE,EAAE,CACjB;AACA;AACA6F,MAAM,CAAE,KAAK,CACb;AACAp/B,QAAQ,CAAE,CAAC,aAAa,CAAE,aAAa,CAAE,UAAU,CAAE,kBAAkB,CAAE,gBAAgB,CAAE,eAAe,CAAE,aAAa,CAAE,YAAY,CAAE,cAAc,CAAE,mBAAmB,CAAE,eAAe,CAAC,CAC9LR,QAAQ,CAAE7V,SAAS,GAAKA,SAAS,CAAC8V,SAAS,EAAI9V,SAAS,CAAC8V,SAAS,CAAC,CAAC,CAAC,EAAI9V,SAAS,CAAC4vD,YAAY,EAAI5vD,SAAS,CAAC6V,QAAQ,CAAC,EAAI,IAAI,CAC9H;AACAC,SAAS,CAAE,CAAC,CAAC,CACb;AACA+1C,mBAAmB,CAAE,gDAAgD,CACrE/H,iBAAiB,CAAE,KAAK,CACxBmE,UAAU,CAAE,CACV1pD,OAAO,CAAE,CACPsxD,YAAY,CAAE,MAChB,CACF,CAAC,CACD/N,WAAW,CAAE,CAAC,CAAC,CACfC,UAAU,CAAE,KAAK,CACjB1b,aAAa,CAAE,KAAK,CACpBD,eAAe,CAAE,KACnB,CAAC,CACD,CACA;AACA;AACA;AACA;AACA;AACA,GACA,OAAO,CACP;AACA;AACA;AACA;AACA;AACA,GACA,SAAS,CACT;AACA;AACA;AACA;AACA;AACA;AACA,GACA,UAAU,CACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAc,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,YAAY,CAAC,CAAClpC,OAAO,CAAC,SAAU/D,EAAE,CAAE,CAClC0iB,MAAM,CAAChf,SAAS,CAAC1D,EAAE,CAAC,CAAG,UAAY,CACjC,MAAO,KAAI,CAACypD,QAAQ,CAACzpD,EAAE,CAAC,CAC1B,CAAC,CACH,CAAC,CAAC,CACFskD,qBAAqB,CAACvgD,OAAO,CAAC,SAAU4J,KAAK,CAAE,CAC7C+U,MAAM,CAAChf,SAAS,CAAE,aAAY0W,aAAa,CAACzM,KAAK,CAAE,GAAE,CAAC,CAAG,UAAY,CACnE,MAAO,KAAI,CAAC2H,OAAO,CAAC3H,KAAK,CAAC,CAC5B,CAAC,CACH,CAAC,CAAC,CAEF;AACA;AACA;AACA;AACA;AACA,GALA,CAOA;AACA;AACA;AACA;AACA;AACA,GALA,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAPA,CASA;AACA;AACA;AACA;AACA;AACA,GALA,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAZA,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA+M,WAAW,CAAC0H,iBAAiB,CAAC,QAAQ,CAAEM,MAAM,CAAC,CAE/C;AACA;AACA,GAFA,CAIA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAMi0C,iBAAgB,CAAG,QAAQ,CAEjC;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAMC,iBAAgB,CAAG,gBAAgB,CAEzC;AACA;AACA;AACA;AACA;AACA,GACA,KAAMC,cAAa,CAAG,CAAC,CAAC,CAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAMC,aAAY,CAAGx1D,IAAI,EAAIu1D,aAAa,CAAC9zD,cAAc,CAACzB,IAAI,CAAC,CAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAMy1D,UAAS,CAAGz1D,IAAI,EAAIw1D,YAAY,CAACx1D,IAAI,CAAC,CAAGu1D,aAAa,CAACv1D,IAAI,CAAC,CAAGkK,SAAS,CAE9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAMwrD,mBAAkB,CAAG,CAACnmD,MAAM,CAAEvP,IAAI,GAAK,CAC3CuP,MAAM,CAAC+lD,gBAAgB,CAA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A;AACA;AACA;AACA;AACA,GACA,KAAMy4D,YAAW,CAAGv9C,EAAE,EAAIA,EAAE,CAAC7a,OAAO,CAAC,GAAG,CAAC,GAAK,CAAC,CAAG6a,EAAE,CAAC5a,KAAK,CAAC,CAAC,CAAC,CAAG4a,EAAE,CAElE;AACA;AACA;AACA;AACA;AACA,GALA,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASke,QAAO,CAACle,EAAE,CAAE9V,OAAO,CAAEuV,KAAK,CAAE,CACnC,GAAI9J,OAAM,CAAGuoB,OAAO,CAACs/B,SAAS,CAACx9C,EAAE,CAAC,CAClC,GAAIrK,MAAM,CAAE,CACV,GAAIzL,OAAO,CAAE,CACX7B,KAAK,CAACX,IAAI,CAAE,WAAUsY,EAAG,wDAAuD,CAAC,CACnF,CACA,GAAIP,KAAK,CAAE,CACT9J,MAAM,CAAC8J,KAAK,CAACA,KAAK,CAAC,CACrB,CACA,MAAO9J,OAAM,CACf,CACA,KAAMtH,GAAE,CAAG,MAAO2R,GAAE,GAAK,QAAQ,CAAGtL,CAAC,CAAC,GAAG,CAAG6oD,WAAW,CAACv9C,EAAE,CAAC,CAAC,CAAGA,EAAE,CACjE,GAAI,CAAC5S,IAAI,CAACiB,EAAE,CAAC,CAAE,CACb,KAAM,IAAIovD,UAAS,CAAC,oDAAoD,CAAC,CAC3E,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAI,CAACpvD,EAAE,CAACiM,aAAa,CAACojD,WAAW,EAAI,CAACrvD,EAAE,CAACiM,aAAa,CAAClJ,IAAI,CAAC3B,QAAQ,CAACpB,EAAE,CAAC,CAAE,CA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Aa,CAAG,IAAI,CACnC,CACF,CAAC,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,KAAMC,eAAc,CAAG,CAAC,CACtBr4C,OAAO,CACPs4C,UAAU,CACV3C,WAAW,CACXC,YAAY,CACZC,wBAAwB,CACxBC,wBAAwB,CACxBC,KAAK,CACLC,UAAU,CACV9C,eAAe,CACf+C,eAAe,CACfC,MACF,CAAC,GAAKjlG,KAAK,EAAI,CACb,KAAMggD,QAAO,CAAGhgD,KAAK,CAACW,MAAM,CAC5B,GAAIq/C,OAAO,CAACqa,OAAO,CAAE,CACnB,OACF,CACAtL,OAAO,CAAC40C,KAAK,CAAG5rG,KAAK,CAACg3D,OAAO,CAAC40C,KAAK,CAAEF,gBAAgB,CAACzjG,KAAK,CAAC,CAAC,CAAE;AAE/D,GAAI,CAAC+uD,OAAO,CAAC40C,KAAK,CAAC2D,oBAAoB,EAAIv4C,OAAO,CAAC40C,KAAK,CAAChxC,aAAa,CAAE,CACtE5D,OAAO,CAAC40C,KAAK,CAAC2D,oBAAoB,CAAGn1C,IAAI,CAACrpD,GAAG,EAAE,CACjD,CACA,MAAOu+F,WAAU,CAACrnG,KAAK,CAAE+uD,OAAO,CAAC,CACnC,CAAC,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,KAAMw4C,oBAAmB,CAAG,CAAC,CAC3B57C,GAAG,CACH67C,UAAU,CACVrB,gBAAgB,CAChBp3C,OAAO,CACPm4C,OAA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pE,cAAc,CAC7E,CAAC,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,KAAMw0C,4BAA2B,CAAG,CAAC,CACnCC,wBAAwB,CACxBlF,eAAe,CACf+E,eAAe,CACff,UAAU,CACVmB,aACF,CAAC,GAAK,CACJ,GAAInF,eAAe,GAAK+E,eAAe,CAAE,CACvC,MAAO,MAAK,CACd,CACA,GAAIf,UAAU,GAAK,OAAO,CAAE,CAC1B,KAAMoB,uBAAsB,CAAGF,wBAAwB,CAACG,kBAAkB,CAAC,CACzEv/G,IAAI,CAAE,MACR,CAAC,CAAC,CAAE;AACJ;AACA;AACA;AAEA,MAAO,CAACs/G,sBAAsB,EAAIA,sBAAsB,CAACxlG,EAAE,GAAKmlG,eAAe,CACjF,CAAE;AACF;AACA;AACA;AAEA,GAAIf,UAAU,GAAK,MAAM,EAAImB,aAAa,CAAE,CAC1C,KAAMG,2BAA0B,CAAGJ,wBAAwB,CAACK,qBAAqB,CAAC,CAChFz/G,IAAI,CAAE,OACR,CAAC,CAAC,CAAE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAIw/G,0BAA0B,EAAIA,0BAA0B,CAAC1lG,EAAE,GAAKmlG,eAAe,CAAE,CACnF,MAAO,MAAK,CACd,CACA,MAAO,KAAI,CACb,C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"},"metadata":{},"sourceType":"module","externalDependencies":[]}