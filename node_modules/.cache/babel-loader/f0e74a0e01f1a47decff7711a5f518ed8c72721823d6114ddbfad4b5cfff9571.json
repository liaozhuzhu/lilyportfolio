{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6e342372\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"carousel\"\n};\nconst _hoisted_2 = {\n  class: \"carousel-inner\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_carousel_indicators = _resolveComponent(\"carousel-indicators\");\n  const _component_carousel_item = _resolveComponent(\"carousel-item\");\n  const _component_carousel_controls = _resolveComponent(\"carousel-controls\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$props.indicators ? (_openBlock(), _createBlock(_component_carousel_indicators, {\n    key: 0,\n    total: $props.slides.length,\n    \"current-index\": _ctx.currentSlide,\n    onSwitch: _cache[0] || (_cache[0] = $event => $options.switchSlide($event))\n  }, null, 8 /* PROPS */, [\"total\", \"current-index\"])) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.slides, (slide, index) => {\n    return _openBlock(), _createBlock(_component_carousel_item, {\n      slide: slide,\n      key: `item-${index}`,\n      \"current-slide\": _ctx.currentSlide,\n      index: index,\n      direction: _ctx.direction,\n      onMouseenter: $options.stopSlideTimer,\n      onMouseout: $options.startSlideTimer\n    }, null, 8 /* PROPS */, [\"slide\", \"current-slide\", \"index\", \"direction\", \"onMouseenter\", \"onMouseout\"]);\n  }), 128 /* KEYED_FRAGMENT */)), $props.controls ? (_openBlock(), _createBlock(_component_carousel_controls, {\n    key: 1,\n    onPrev: $options.prev,\n    onNext: $options.next\n  }, null, 8 /* PROPS */, [\"onPrev\", \"onNext\"])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC;AAAU;;EACZA,KAAK,EAAC;AAAgB;;;;;uBAD/BC,oBASM,OATNC,UASM,GARFC,oBAOM,OAPNC,UAOM,GANyBC,iBAAU,kBAArCC,aACwDC;;IADhBC,KAAK,EAAEH,aAAM,CAACI,MAAM;IAAG,eAAa,EAAEC,iBAAY;IACrFC,QAAM,sCAAEC,oBAAW,CAACC,MAAM;+GAC/BZ,oBAEgDa,6BAFRT,aAAM,GAAvBU,KAAK,EAAEC,KAAK;yBAAnCV,aAEgDW;MAFCF,KAAK,EAAEA,KAAK;MAAGG,GAAG,UAAUF,KAAK;MAC7E,eAAa,EAAEN,iBAAY;MAAGM,KAAK,EAAEA,KAAK;MAAGG,SAAS,EAAET,cAAS;MAAGU,YAAU,EAAER,uBAAc;MAC9FS,UAAQ,EAAET;;kCACUP,eAAQ,kBAAjCC,aAAiFgB;;IAA7CC,MAAI,EAAEX,aAAI;IAAGY,MAAI,EAAEZ","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$props","_createBlock","_component_carousel_indicators","total","length","_ctx","onSwitch","$options","$event","_Fragment","slide","index","_component_carousel_item","key","direction","onMouseenter","onMouseout","_component_carousel_controls","onPrev","onNext"],"sourceRoot":"","sources":["/Users/liaozhu/cs-projects/lilyportfolio/src/components/carousel/CarouselVue.vue"],"sourcesContent":["<template>\n    <div class=\"carousel\">\n        <div class=\"carousel-inner\">\n            <carousel-indicators v-if=\"indicators\" :total=\"slides.length\" :current-index=\"currentSlide\"\n                @switch=\"switchSlide($event)\"></carousel-indicators>\n            <carousel-item v-for=\"(slide, index) in slides\" :slide=\"slide\" :key=\"`item-${index}`\"\n                :current-slide=\"currentSlide\" :index=\"index\" :direction=\"direction\" @mouseenter=\"stopSlideTimer\"\n                @mouseout=\"startSlideTimer\"></carousel-item>\n            <carousel-controls v-if=\"controls\" @prev=\"prev\" @next=\"next\"></carousel-controls>\n        </div>\n    </div>\n</template>\n\n<script>\nimport CarouselItem from \"./CarouselItem.vue\";\nimport CarouselControls from \"./CarouselControls.vue\";\nimport CarouselIndicators from \"./CarouselIndicators.vue\";\n\nexport default {\n    name: \"CarouselVue\",\n    props: {\n        slides: {\n            type: Array,\n            required: true,\n        },\n        controls: {\n            type: Boolean,\n            default: false,\n        },\n        indicators: {\n            type: Boolean,\n            default: false,\n        },\n        interval: {\n            type: Number,\n            default: 5000,\n        },\n    },\n    components: { CarouselItem, CarouselControls, CarouselIndicators },\n    data: () => ({\n        currentSlide: 0,\n        slideInterval: null,\n        direction: \"right\",\n    }),\n    methods: {\n        setCurrentSlide(index) {\n            this.currentSlide = index;\n        },\n        prev(step = -1) {\n            const index =\n                this.currentSlide > 0\n                    ? this.currentSlide + step\n                    : this.slides.length - 1;\n            this.setCurrentSlide(index);\n            this.direction = \"left\";\n            this.startSlideTimer();\n        },\n        _next(step = 1) {\n            const index =\n                this.currentSlide < this.slides.length - 1\n                    ? this.currentSlide + step\n                    : 0;\n            this.setCurrentSlide(index);\n            this.direction = \"right\";\n        },\n        next(step = 1) {\n            this._next(step);\n            this.startSlideTimer();\n        },\n        startSlideTimer() {\n            this.stopSlideTimer();\n            this.slideInterval = setInterval(() => {\n                this._next();\n            }, this.interval);\n        },\n        stopSlideTimer() {\n            clearInterval(this.slideInterval);\n        },\n        switchSlide(index) {\n            const step = index - this.currentSlide;\n            if (step > 0) {\n                this.next(step);\n            } else {\n                this.prev(step);\n            }\n        },\n    },\n    mounted() {\n        this.startSlideTimer();\n    },\n    beforeUnmount() {\n        this.stopSlideTimer();\n    },\n};\n</script>\n\n<style scoped>\n.carousel {\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    height: auto;\n}\n\n.carousel-inner {\n    position: relative;\n    width: 550px;\n    height: 650px;\n    overflow: hidden;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}